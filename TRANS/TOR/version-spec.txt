Переклад українською - Арсеній Чеботарьов - ac2epsilon@gmail.com - Ніжин 2015 

                        ЯК РОБЛЯТЬ ВЕРСІЇ TOR

1. Старий спосіб

 До 0.1.0, версії були в форматі:
     MAJOR.MINOR.MICRO(status(PATCHLEVEL))?(-cvs)?
 де MAJOR, MINOR, MICRO, та PATCHLEVEL є числами, статус є одним з "pre" (для альфа релізів), "rc" (для реліз кандидатів), або "." для релізу.  Як спеціальний випадок, "a.b.c" було еквівалентно до "a.b.c.0".  Ми порівнюємо елементи в порядку (major, minor, micro, status, patchlevel, cvs), де "cvs" передує не-cvs.

 Ми будемо починати кожний бренч розробки з фінальною версією на думці: скажімо, "0.0.8". Наш перший пре-реліз буде "0.0.8pre1", за яким послідує (наприклад) "0.0.8pre2-cvs", "0.0.8pre2", "0.0.8pre3-cvs", "0.0.8rc1", "0.0.8rc2-cvs", та "0.0.8rc2".  Нарешті, ми випустимо 0.0.8.  Стабільний бренч CVS буде після цього мати версію "0.0.8.1-cvs", та якійсь випадковий багфікс буде "0.0.8.1".

2. Новий спосіб

 Після 0.1.0, версії versions є в форматі:
    MAJOR.MINOR.MICRO[.PATCHLEVEL][-STATUS_TAG][ (EXTRA_INFO)]
 Речі в прямокутних дужках є необов’зковими. Як і раніше, MAJOR, MINOR, MICRO,
 та PATCHLEVEL є числами, з відсутностю числового єквіваленту до 0. Всі версії мають повністю відрізнятися за тими чотирма числами.

 Значення STATUS_TAG є повністю інформативним, та дозволяє вам знати, як наскільки стабільним за нашаю думкою є реліз: "alpha" є досить нестабільною, "rc" є кандидатом в реліз; та якщо нема ніякої мітки, то це означає що це фінальний реліз. Якщо мітка завершується "-cvs" або "-dev", то ви дивитесь на миттєвий знімок розробника, що йде за даним релізом. Якщо ми *колись* натрапимо на дві версії, що відрізняються лише статусною поміткою, ми порівнюємо їх лексиграфічно. STATUS_TAG не може містити проміжків.

 EXTRA_INFO також є цілком інформативним, часто містить інформацію щодо SCM комміту, з якого походить це версія. Він оточується дужками, та не може містити проміжки. На відміну від STATUS_TAG, цей ніколи не впливає на спосіб, як версії мають бути порівняні.

 Тепер, ми починаємо кожний бренч розробки з (скажімо) 0.1.1.1-alpha. Рівень версії патчу постійно зростає, по мірі зміни статусної мітки, наприклад, як тут: 0.1.1.2-alpha, 0.1.1.3-alpha, 0.1.1.4-rc, 0.1.1.5-rc. Одного часу ми випустимо 0.1.1.6. Наступний патч виходить як 0.1.1.7.

 Між цими релізами CVS має версії з тегом -cvs: після 0.1.1.1-alpha слідує 0.1.1.1-alpha-cvs, і так далі. Але починаючи з 0.1.2.1-alpha-dev, ми перейшли на SVN та почали використовувати суфікс "-dev", замість суфіксу "-cvs".
