<!DOCTYPE html>
<!--[if IE 8]><html class="no-js lt-ie9" lang="en" > <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js" lang="en">
  <!--<![endif]-->
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ethereum Homestead 0.1 documentation</title>
    <link rel="stylesheet" href="theme.css" type="text/css">
    <link rel="author" title="About these documents" href="index.html#document-about">
    <link rel="top" title="None" href="index.html#document-index">
    <script src="static/js/modernizr.min.js"></script>
    <!-- RTD Extra Head -->
    <!-- 
Always link to the latest version, as canonical.http://docs.readthedocs.org/en/latest/canonical.html-->
    <link rel="canonical" href="http://ethdocs.org/en/latest/">
    <link rel="stylesheet" href="https://media.readthedocs.org/css/readthedocs-doc-embed.css"
      type="text/css">
    <script type="text/javascript" src="static/readthedocs-data.js"></script>
    <!-- Add page-specific data, which must exist in the page js, not global -->
    <script type="text/javascript">
READTHEDOCS_DATA['page'] = 'index'
</script> <script type="text/javascript" src="static/readthedocs-dynamic-include.js"></script>
    <!-- end RTD <extrahead> -->
  </head>
  <body class="wy-body-for-nav" role="document">
    <div class="wy-grid-for-nav">
      <nav data-toggle="wy-nav-shift" class="wy-nav-side">
        <div class="wy-side-scroll">
          <div class="wy-side-nav-search"> <a href="index.html#document-index"
              class="icon icon-home"> Ethereum Homestead </a>
            <div class="version"> latest </div>
            <div role="search">
              <form id="rtd-search-form" class="wy-form" action="search.html" method="get">
                <input name="q" placeholder="Search docs" type="text"> <input name="check_keywords"
                  value="yes" type="hidden"> <input name="area" value="default"
                  type="hidden"> </form>
            </div>
          </div>
          <div class="wy-menu wy-menu-vertical" data-spy="affix" role="navigation"
            aria-label="main navigation">
            <ul>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-introduction/index">Вступ</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-ethereum-clients/index">Клієнти
                  Ethereum</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-connecting-to-clients/index">Під'єднання
                  до клієнтів Ethereum</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-account-management">Керування
                  рахунками</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-ether">Ether</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-network/index">Мережа
                  Ethereum</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-mining">Майнінг</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-contracts-and-transactions/index">Контракти
                  та транзакції</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-frequently-asked-questions/frequently-asked-questions">Часто
                  згадувані запитання</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-glossary">Глосарій</a></li>
              <li class="toctree-l1"><a class="reference internal" href="index.html#document-about">Ініціатива
                  Homestead Documentation</a></li>
            </ul>
          </div>
        </div>
      </nav>
      <section data-toggle="wy-nav-shift" class="wy-nav-content-wrap">
        <nav class="wy-nav-top" role="navigation" aria-label="top navigation"> <i
            data-toggle="wy-nav-top" class="fa fa-bars"></i> <a href="index.html#document-index">Ethereum
            Homestead</a> </nav>
        <sub style="padding-left: 1cm;"> Переклад українською - <a href="mailto:ac2epsilon@gmail.com">Арсеній
            Чеботарьов</a> - Ніжин 2017</sub>
        <div class="wy-nav-content">
          <div class="rst-content">
            <div role="navigation" aria-label="breadcrumbs navigation">
              <ul class="wy-breadcrumbs">
                <li><a href="index.html#document-index">Docs</a> »</li>
                документація
                <li>Ethereum Homestead 0.1</li>
                <li class="wy-breadcrumbs-aside"> <a href="https://github.com/ethereum/homestead-guide/blob/master/source/index.rst"
                    class="fa fa-github"> Edit on GitHub</a> </li>
              </ul>
              <hr> </div>
            <div role="main" class="document" itemscope="itemscope" itemtype="http://schema.org/Article">
              <div itemprop="articleBody">
                <div class="section" id="ethereum-homestead-documentation">
                  <h1>Документація Ethereum Homestead<a class="headerlink" href="#ethereum-homestead-documentation"
                      title="Permalink to this headline">¶</a></h1>
                  <img alt="images/ethereum-homestead-documentation-logo.png" src="images/ethereum-homestead-documentation-logo.png">
                  <p>Ця документація є результатом постійних сумісних зусиль
                    добровольців з Ethereum <a class="reference internal" href="index.html#community"><span>Спільноти</span></a>.
                    Хоча вона не була затвержена <a class="reference internal"
                      href="index.html#foundation"><span>The Ethereum Foundation</span></a>,
                    ми маємо нідію, що ви найдете її корисною. Ми вітаємо нових
                    <a class="reference internal" href="index.html#contributors"><span>Докладачів</span></a>.</p>
                </div>
                <div class="section" id="contents">
                  <h1>Зміст<a class="headerlink" href="#contents" title="Permalink to this headline">¶</a></h1>
                  <div class="toctree-wrapper compound"> <span id="document-introduction/index"></span>
                    <div class="section" id="introduction">
                      <h2>Вступ<a class="headerlink" href="#introduction" title="Permalink to this headline">¶</a></h2>
                      <div class="toctree-wrapper compound"> <span id="document-introduction/what-is-ethereum"></span>
                        <div class="section" id="what-is-ethereum"> <span id="id1"></span>
                          <h3>Що таке Ethereum?<a class="headerlink" href="#what-is-ethereum"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Ethereum є відкритою блокчейн платформою, що
                            дозволяє будь-кому будувати та використовувати
                            децентралізовані застосування, що роблять на
                            технології блокчейн. Подібно до Bitcoin, ніхто не
                            контролює або володіє Ethereum – це проект з
                            відкритим кодом, побудований багатьма людьми по
                            всьому світу. Але на відміні від протоколу Bitcoin,
                            Ethereum був розроблений бути адаптивним та гнучким.
                            Є простим створити нові застосування на платформі
                            Ethereum, та з вихідом Homestead, тепер також
                            безпечно для кожного виконувати ці застосування.</p>
                          <div class="section" id="a-next-generation-blockchain">
                            <h4>Блокчейн наступного покоління<a class="headerlink"
                                href="#a-next-generation-blockchain" title="Permalink to this headline">¶</a></h4>
                            <p>Технологія блокчейну є технологічним базисом
                              Bitcoin, зпершу описаного вигаданим автором
                              Satoshi Nakamoto в його роботі “Bitcoin: A
                              Peer-to-Peer Electronic Cash System”,
                              опублікованій в&nbsp; 2008. Тоді як використання
                              блокчейнів для більш загальних застосувань було
                              дискутоване в оригінальному документі, цього не
                              відбувалось доки не пройшли декілька років, коли
                              технологія блокчейн перетворилась на загальний
                              термін. Блокчейн є розподіленою обчислювальною
                              архитектурою, де кожний мережевий вузол виконує та
                              записує ті самі транзакції, що згруповані в блоки.
                              За раз може додаватись тільки один блок, та кожний
                              блок містить математичний доказ, який
                              доводить,&nbsp; що блок слідує в послідовності за
                              попереднім блоком. Таким чином, “розподілена база
                              даних” блокчейну утримується в консенсусі по всій
                              мережі. Індивідуальні взаємодії користувача з
                              журналом (транзакціями) захищені суворою
                              криптографією. Вузли, що підтримують і перевіряють
                              мережу, заохочуються через математично
                              обгрунтовані економічні бонуси, закодовані в
                              протоколі. </p>
                            <p>В випадку Bitcoin розподілена база даних задумана
                              як таблиця розрахункових балансів, журнал, та
                              транзакції є трансферами токенів біткоіну, щоб
                              спростити недовірені фінансові розразунки між
                              особистостями. Але по мірі того, як біткоін почав
                              привертати більшу увагу від&nbsp; розробників та
                              технологістів, новітні проекти почали
                              використовувати мережу біткоін для цілей,
                              відмінних від трансеру цінних токенів. Багато з
                              них прийняли форму&nbsp; “альт коінів” -
                              відокремлених блокчейнів, з власною криптовалютою,
                              що покращували оригінальний протокол біткоіну для
                              додавання нових можливостей та здібностей.
                              Наприкінці 2013го року, винахідник Ethereum
                              Vitalik Buterin запропонував, щоб єдиний блокчейн
                              міг об'єднати всі ці інші проекти, надавши
                              можливості перепрограмування для виконання
                              довільних складних обчислень. </p>
                            <p>В 2014-му році, засновники Ethereum: Vitalik
                              Buterin, Gavin Wood та Jeffrey Wilcke почали
                              роботу над блокчейном наступного покоління, що мав
                              амбіції реалізувати загальну, повністю недовірену,
                              платформу розумних контрактів. </p>
                          </div>
                          <div class="section" id="ethereum-virtual-machine">
                            <h4>Віртуальна машина Ethereum<a class="headerlink"
                                href="#ethereum-virtual-machine" title="Permalink to this headline">¶</a></h4>
                            <p>Ethereum є програмований блокчейн. Скоріше, ніж
                              надавати користувачам набір перед-визначених
                              операцій (як транзакції біткоін), Ethereum
                              дозволяє користувачам створювати свої власні
                              операції любої складності, якої вони побажають.
                              Таким чином, він виступає як платформа для
                              багатьох різних типів децентралізованих
                              застосувань блокчейну, включаючи, але не
                              обмежуючись крипто валютами.</p>
                            <p>Ethereum в вузькому сенсі посилається на сюїту
                              протоколів, що визначають платформу для
                              децентралізованих застосувань. Серцем всього цього
                              є <a class="reference internal" href="index.html#the-evm"><span>Ethereum
                                  Virtual Machine (“EVM”)</span></a>, що може
                              виконувати код довільної алгоритмічної складності.
                              В термінах комп'ютерних наук, віртуальна машина
                              Ethereum є “повною за Тьюрінгом”. Розробники
                              можуть створювати застосування, що роблять на EVM,
                              з використанням дружніх мов програмування,
                              змодельованих на існуючих мовах, як JavaScript та
                              Python.</p>
                            <p>Як кожний блокчейн, Ethereum також включає
                              двосторонній мережевий протокол. База даних
                              блокчейну Ethereum підтримується та оновлюється
                              багатьма вузлами, під'єднаними до мережі. Кожний
                              вузол мережі виконує EVM, та виконує ті самі
                              інструкцїі. З цієї причини&nbsp; Ethereum іноді
                              виразно описують як&nbsp; “світовий комп'ютер”.</p>
                            <p>Ця масивна паралелізація обчислень по всій мережі
                              Ethereum не виконується, щоб зробити обчислення
                              більш ефективними. Фактично, цей процес робить
                              обчислення на Ethereum значно повільнішим, та
                              більш коштовним, ніж традиційний “комп'ютер”.
                              Скоріше, кожний вузол Ethereum виконує EVM, щоб
                              підтримувати консенсус по всьому блокчейну.
                              Децентралізований консенсус надає Ethereum
                              екстремальні рівні стійкості до відмови, гарантує
                              нульові простої, та робить збережені на блокчейні
                              дані назавжди незмінними та стійкими до цензури.</p>
                            <p>Платформа Ethereum сама по собі не має ніяких
                              можливостей або щось знає про вартсть. Подібно до
                              мов програмування, це справа підприємців та
                              розробників, визначатись, для чого її можна
                              застосувати. Однак, зрозуміло, що певні типи
                              застосувань будуть більше вигравати від
                              можливостей Ethereum, ніж інші. Більш точно,
                              ethereum <strong>підходить для застосувань, що
                                автоматизують пряму взаємодію між сторонами, або
                                спрощують координовану дію групи в мережі. </strong>Наприклад,
                              застосування для координації двосторонніх ринків,
                              або автоматизація складних фінансових
                              контрактів.&nbsp; Bitcoin дозволяє особам
                              обмінюватись грошима без запрошення будь-якого
                              посередника, такого як фінансовий інститут, банк
                              або уряд. Вплив&nbsp; Ethereum може бути більш
                              далеко осяжним. В теорії, фінансові взаємодії або
                              обмінники любої складності можуть
                              робити&nbsp;автоматично та надійно, використовуючи
                              код, що виконуєтсья на Ethereum. За межами
                              фінансових застосувань, любі оточення, де довіра,
                              безпека та незворотність важливі, наприклад,
                              реєстрація активів, голосування, управління та
                              інтернет речей – можуть отримати потужний вплив
                              від платформи Ethereum.</p>
                          </div>
                          <div class="section" id="how-does-ethereum-work">
                            <h4>Як робить Ethereum?<a class="headerlink" href="#how-does-ethereum-work"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Ethereum включає багато можливостей та
                              технологій, що будуть знайомі користувачам&nbsp;
                              Bitcoin, при цьому вводячи багато власних
                              модифікацій та інновацій.</p>
                            <p>Тоді як блокчейн Bitcoin був чистим списком
                              транзакцій, <a class="reference internal" href="index.html#accounts"><span>базова
                                  одиниця Ethereum є рахунок</span></a>.
                              Блокчейн Ethereum відсліджує стан кожного рахунку,
                              та всі переходи стану блокчейну Ethereum є
                              трансферами вартості та інформації між рахунками.
                              Є два типи рахунків:</p>
                            <ul class="simple">
                              <li>Externally Owned Accounts (EOA), - зовнішньо
                                контрольовані рахунки, що контрольовані
                                приватними ключами</li>
                              <li>Contract Accounts, - контрактні рахунки, що
                                контролюються кодом своїх контрактів, та можуть
                                бути&nbsp; “активовані” тільки з EOA</li>
                            </ul>
                            <p>Для більшості користувачів головна різниця між
                              ними в тому, що люди контролюють EOA - оскільки
                              вони можуть контролювати приватні ключі, що
                              надають контроль над EOA. Контрактні рахунки, з
                              іншого боку, керуютсья своїм внутрішнім кодом.
                              Якщо вони “контролюються” користувачем-людиною, це
                              тому, що вони <em>запрограмовані бути
                                контрольовані </em>з EOA з певною адресою, що,
                              в свою чергу, контролюється тим,&nbsp; хто
                              зберігає приватні ключі, що контролюють той EOA.
                              Популярний термін “смарт контракти” (або Розумні
                              контракти) посилаються на код в контрактних
                              рахунках – програми,&nbsp; що виконуються, коли на
                              цей рахунок надсилається транзакція. Користувачі
                              можуть створювати нові контракти, через
                              розгортання коду в блокчейні. </p>
                            <p>Контрактні рахунки виконують операцію, тільки
                              коли інструктовані так вчинити від EOA. Таким
                              чином, для контрактного рахунку неможливо виконати
                              природні операції, такі, як генерація випадкових
                              чисел, або виклики API – вони можуть робити такі
                              речі, тільки якщо отримають підказку EOA. Це так
                              тому, що Ethereum потребує від вузлів, щоб вони
                              були в змозі домовитись про результат обчислень,
                              що потребує гарантії суворо детермінованого
                              виконання.</p>
                            <p>Так само, як в Bitcoin, користувачі мають платити
                              мережі невеликі комісійні за транзакцію. Це
                              захищає блокчейн Ethereum від фривольних або
                              зловмисних обчислювальних задач, як DDoS атаки або
                              незкінчені цикли.&nbsp; Надсилач транзакції має
                              платити за кожний крок в “програмі”, яку вони
                              активують, включаючи обчислення та сховище
                              пам'яті. Ці комісійні сплачуються сумами в
                              природних для Ethereum токенах вартості, ефір
                              (ether).</p>
                            <p>Ці комісійні за транзакцію збираються вузлами, що
                              перевіряють мережу. Ці майнери є вузлами в мережі
                              Ethereum, що отримують, просувають, перевіряють та
                              виконують транзакції. Потім майнери групіюють
                              транзакцї – що включає багато оновлень до “стану”
                              рахунків в блокчейні Ethereum – в так звані
                              “блоки”, та майнери потім змагаються один з іншим,
                              щоб <em>їхній </em>блок став наступним, що буде
                              доданий в блокчейн. Майнери винагороджуються за
                              допомогою ether за кожний успішний блок, що вони
                              змайнали. Це провадить економічне заохочення для
                              людей, що виділяють обладнання та електрику для
                              мережі Ethereum.</p>
                            <p>Так само, як в мережі Bitcoin, майнери займаються
                              рішенням складної математичної проблеми, щоб
                              успішно “видобути” (<em>змайнати</em>) блок.&nbsp;
                              Це відоме як “Proof of Work” або підтвердження
                              виконаної роботи. Люба обчислювальна проблема, що
                              потребує на багато порядків більше ресурсів для
                              вирішення алгоритмічно, ніж займає перевірка
                              рішення, є гарним кандидатом для доказу виконанної
                              роботи. Щоб не заохочувати централізацію через
                              використання спеціального обладнання (так званих
                              ASIC), як це відбувається в мережі Bitcoin,
                              Ethereum обрав складну для пам'яті проблему. Якщо
                              проблема потребує пам'ять, так само, як процесор,
                              ідеальним обладнанням буде фактично звичайний
                              комп'ютер. Це робить доказ виконаної роботи
                              Ethereum стійкою до ASIC, дозволяючи більш
                              децентралізоване&nbsp; розподілення безпеки, ніж
                              блокчейни, чий майнинг домінований спеціальним
                              обладнанням, як Bitcoin.</p>
                            <div class="section" id="learn-about-ethereum">
                              <h5>Де вивчати Ethereum<a class="headerlink" href="#learn-about-ethereum"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>[весь час додається]</p>
                              <div class="section" id="pr-videos-with-some-pathos">
                                <h6>PR відео з деякими пасами:<a class="headerlink"
                                    href="#pr-videos-with-some-pathos" title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <ul>
                                    <li><a class="reference external" href="https://www.youtube.com/watch?v=j23HnORQXvs">Ethereum:
                                        Світовий комп'ютер<br>
                                      </a></li>
                                  </ul>
                                  <li><a class="reference external" href="https://vimeo.com/88959651">Ethereum
                                      – ваш хід</a></li>
                                </ul>
                              </div>
                              <div class="section" id="blockchain-and-ethereum-101">
                                <h6>Blockchain та Ethereum 101 <a class="headerlink"
                                    href="#blockchain-and-ethereum-101" title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <li><a class="reference external" href="https://medium.com/@nik5ter/explain-bitcoin-like-im-five-73b4257ac833">Поясніть
                                      bitcoin, якби мені було п'ять</a> -
                                    чудовий вступ до технології блокчейну та
                                    bitcoin для помірковано підготовлених людей.</li>
                                  <li><a class="reference external" href="https://medium.com/@creole/7-a-simple-view-of-ethereum-e276f76c980b">https://medium.com/@creole/7-a-simple-view-of-ethereum-e276f76c980b</a></li>
                                  <li><a class="reference external" href="http://blog.chain.com/post/92660909216/explaining-ethereum">http://blog.chain.com/post/92660909216/explaining-ethereum</a></li>
                                  <li><a class="reference external" href="http://ethereum.stackexchange.com/questions/45/how-would-i-explain-ethereum-to-a-non-technical-friend">Поясніть
                                      Ethereum для нетехнічного загалу Q&amp;A
                                      on stackexchange</a></li>
                                  <li>Reddit нитки ELI5-ing Ethereum:</li>
                                </ul>
                                <p><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/43brik/explaining_ethereum_to_friends/">[1]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3c132d/eli5_what_you_guys_do_here/">[2]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/1vvz13/eli5_ethereum/">[3]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/1vb1gc/is_ethereum_an_alt_coin_can_anyone_eli5/">[4]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/4279dh/eli5_what_exactly_is_ethereum/">[5]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/2hl10p/eli5_ethereum/">[6]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/41y8by/the_best_way_i_can_eli5_ethereum_to_someone/">[7]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/44b69e/i_dont_understand_the_technology/">[8]</a>
                                  <a class="reference external" href="https://medium.com/@nik5ter/explain-bitcoin-like-im-five-73b4257ac833">[9]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/1vb1gc/is_ethereum_an_alt_coin_can_anyone_eli5/">[10]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/2dpgwy/eli5_ethereum/">[11]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/47u5y9/explain_what_ethereum_is_to_a_bitcoin_trader/">[12]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/27wsgq/eli5_ethereum_its_uses_its_features_its_future/">[13]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/4936d3/are_you_new_to_ethereum_here_are_many/">[14]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/4279dh/eli5_what_exactly_is_ethereum/">[15]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3n37dp/explaining_ethereum_ecosystem_for_normal/">[16]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/271qdz/can_someone_explain_the_concept_of_gas_in_ethereum/">[17]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3hg7id/why_should_the_average_person_care_about_ethereum/">[18]</a>
                                  <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/43exre/what_are_the_advantages_of_ethereum_over_other/">[19]</a></p>
                              </div>
                              <div class="section" id="videos">
                                <h6>Відео<a class="headerlink" href="#videos" title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <li><a class="reference external" href="http://change.is/video/ethereum-the-world-computer-featuring-dr-gavin-wood">http://change.is/video/ethereum-the-world-computer-featuring-dr-gavin-wood</a></li>
                                </ul>
                              </div>
                              <div class="section" id="infographics">
                                <h6>Інфографіка<a class="headerlink" href="#infographics"
                                    title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <li><a class="reference external" href="https://blog.ethereum.org/wp-content/uploads/2015/06/Ethereum-image-infographic-beginners-guide.png">Ethereum
                                      пояснений... [для вашої матусі]</a></li>
                                  <li><a class="reference external" href="http://decentral.ca/wp-content/uploads/2016/03/infographic.jpg">http://decentral.ca/wp-content/uploads/2016/03/infographic.jpg</a></li>
                                  <li><a class="reference external" href="https://medium.com/@angelomilan/ethereum-explained-to-my-mom-infographic-673e32054c1c#.n9kzhme6v">https://medium.com/@angelomilan/ethereum-explained-to-my-mom-infographic-673e32054c1c#.n9kzhme6v</a></li>
                                </ul>
                              </div>
                              <div class="section" id="comparison-to-alternatives">
                                <h6>Порівняння з альтернативами<a class="headerlink"
                                    href="#comparison-to-alternatives" title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/23aejv/eli5_what_is_the_qnce_between_ethereum_and/">NXT</a></li>
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/22r49u/how_is_maidsafe_different_then_etherium/">MaidSafe</a></li>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span id="document-introduction/how-to-use-this-guide"></span>
                        <div class="section" id="how-to-use-this-guide"> <span
                            id="id1"></span>
                          <h3>Як використовувати цю інструкцію?<a class="headerlink"
                              href="#how-to-use-this-guide" title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="using-ethereum-the-basics">
                            <h4>Використання Ethereum: основи<a class="headerlink"
                                href="#using-ethereum-the-basics" title="Permalink to this headline">¶</a></h4>
                            <p>Цей розділ охоплює базові способи, як користувач
                              може за бажанням прийняти участь в проекті
                              Ethereum. Зпершу всього, щоб стати вузлом мережі,
                              вам треба запустити клієнт&nbsp; Ethereum.
                              Декілька реалізацій перелічені в розділі <a class="reference internal"
                                href="index.html#sec-clients"><span>Обираємо
                                  клієнт</span></a>, що також дає вам пораду,
                              який клієнт обирати в різних випадках. <a class="reference internal"
                                href="index.html#sec-connecting-to-the-network"><span>Підключення
                                  до мережі</span></a> надає вам базову
                              інформацію про мережі, проблеми з'єднання та
                              синхронізацію блокчейна. Просунуті мережеві теми,
                              як налаштування приватних блокчейнів, можна знайти
                              в розділі <a class="reference internal" href="index.html#test-networks"><span>Тестові
                                  мережі</span></a>.</p>
                          </div>
                        </div>
                        <span id="document-introduction/the-homestead-release"></span>
                        <div class="section" id="the-homestead-release">
                          <h3>Реліз Homestead</h3>
                          <p>Homestead є другою головною версією платформи
                            Ethereum, та є першим виробничим релізом Ethereum.
                            Вона включає деякі зміни протоколу, та зміну мережі,
                            що провадить здатність робити подальші мережеві
                            оновлення. Перша версія Ethereum, з назвою релізу
                            Frontier, була в основному бета релізом, що
                            дозволила розробникам вивчати, експерементувати, та
                            почати будувати розподілені застосування та
                            інструменти Ethereum. </p>
                          <div class="section" id="milestones-of-the-ethereum-development-roadmap">
                            <h4>Орієнтири дорожньої карти розробки Ethereum<a class="headerlink"
                                href="#milestones-of-the-ethereum-development-roadmap"
                                title="Permalink to this headline">¶</a></h4>
                            <p><a class="reference external" href="https://blog.ethereum.org/2015/03/03/ethereum-launch-process/">Оригінальна
                                дорожня карта розробки</a> була прокладена перед
                              тим, як Ethereum дійшов життя, та вказувала на
                              такі орієнтири:</p>
                            <ul class="simple">
                              <li>Пре-реліз Крок 0: Olympic testnet - запущений
                                May 2015</li>
                              <li>Реліз Крок 1: Frontier - запущений 30 July
                                2015</li>
                              <li>Реліз Крок 2: Homestead - запущений 14 March
                                2016 (Pi Day)</li>
                              <li>Реліз Крок 3: Metropolis - TBA</li>
                              <li>Реліз Крок 4: Serenity - TBA</li>
                            </ul>
                            <p>Хоча і досі валідна, частково вона була дещо
                              змінена. Фаза <a class="reference external" href="olympic-testnet">Olympic
                                testnet</a> (перед релізом <a class="reference external"
                                href="history-of-ethereum.html#the-ethereum-frontier-launch">Frontier</a>)
                              показала багато головних покращень, що послідували
                              за Frontier, який був запущений безпосередньо
                              після цього. Homestead відзначає вихід з бета
                              продукції на стабільний реліз. Homestead ввійшов в
                              дію автоматично, на блоці номер 1,150,000, що
                              повинно було відбутись десь близько 14 березня
                              2016, Pi Day.</p>
                            <p>Якщо ви виконуєте вузол, під'єднаний до живої
                              мережі, важливо оновити свій клієнт до стану
                              Homestead-сумісності. Такі клієнти, зі свома
                              версіями, перелічені в списку <a class="reference internal"
                                href="index.html#ethereum-clients"><span>Клієнти
                                  Ethereum</span></a>. Інакше ви скінчите на
                              невірній гілці, та більше не будете
                              синхронизованим з рештою мережі. </p>
                            <p>Коли блокчейн Ethereum досяг блоку 1,150,000,
                              мережа Ethereum зазнала жорсткого відгалуження, що
                              дозволило зробити деякі важливі зміни, як буде
                              пояснене в наступному розділі. </p>
                          </div>
                          <div class="section" id="homestead-hard-fork-changes">
                            <span id="id1"></span>
                            <h4>Зміни жорсткого відгалуження Homestead<a class="headerlink"
                                href="#homestead-hard-fork-changes" title="Permalink to this headline">¶</a></h4>
                            <p>Ethereum, в вузькому формальному сенсі, є
                              добіркою протоколів. Homestead іде з декількома
                              зворотньо-несумісними змінами протоколу, і, таким
                              чином, вимагає жосткого відгалуження. Ці зміни
                              проклали свій шлях через систему узгодження <a class="reference internal"
                                href="index.html#ethereum-improvement-proposals"><span>Ethereum
                                  Improvement Proposals</span></a>, та&nbsp;
                              ввключають наступне:</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">EIP
                                  2:</a>
                                <ul>
                                  <li>ціна створення контракту через транзакцію
                                    збільшилась з 21000 до 53000. Створення
                                    контракту з контракту, використовуючи код
                                    операції <code class="docutils literal"><span
                                        class="pre">CREATE</span></code>,
                                    залишилось незмінним.</li>
                                  <li>сігнатури транзакції, чиє s-значення
                                    більше ніж <code class="docutils literal"><span
                                        class="pre">secp256k1n/2</span></code>,
                                    тепер вважаються невалідними.</li>
                                  <li>якщо створення контракту не має досить
                                    гасу для оплати за фінальні комісійні, для
                                    додавання коду контракту до стану, створення
                                    контракту не відбувається (тобто,
                                    відбуваеться не-досить-гасу), скоріше, ніж
                                    контракт залишиться порожній. </li>
                                  <li>Змінений алгоритм підлаштування
                                    складності.</li>
                                </ul>
                              </li>
                              <li><a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7.md">EIP
                                  7: DELEGATECALL</a>: Доданий новий код
                                операції, <code class="docutils literal"><span
                                    class="pre">DELEGATECALL</span></code> зі
                                значенням <code class="docutils literal"><span
                                    class="pre">0xf4</span></code>, що подібне
                                по ідеї до <code class="docutils literal"><span
                                    class="pre">CALLCODE</span></code>, за тим
                                винятком, що він просуває надсилача та значення
                                з батьківського поля дії до дочірнього поля дії,
                                тобто, створений&nbsp; виклик має того ж
                                надсилача та значення, що і оригінальний виклик.
                                Це означає, що контракти можуть зберігати
                                прохідну інформацію, докі слідує <code class="docutils literal"><span
                                    class="pre">msg.sender</span></code> та <code
                                  class="docutils literal"><span class="pre">msg.value</span></code>
                                з батьківського контракту. Гарно для контрактів,
                                що створюють контракти, але не повторюють
                                додаткову інформацію, що зберігає гас. Дивіться
                                <a class="reference external" href="https://github.com/ethereum/EIPs/issues/23">коментарі
                                  до EIP 7</a></li>
                              <li><a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-8.md">EIP
                                  8: devp2p Відповідність до сумісності вперед з
                                  принципом стійкості</a> Зміни до RLPx
                                Discovery Protocol та протокола передачі RLPx
                                TCP, щоб переконатись, що все клієнтське
                                програмне забезпечення, що використовується в
                                мережі Ethereum, вміє впоратись з майбутніми
                                оновленнями мережевого протоколу. Для старіших
                                версій клієнта Ethereum оновлення до мережевого
                                протоколу не будуть сприйматись, та в
                                комунікації буде відхилено, якщо
                                пакети-привітання не будуть відповідати
                                очікуванням. Це оновлення означає, що всі
                                майбутні версії клієнтів будуть сприймати
                                надходячі мережеві оновлення та привітання. </li>
                            </ul>
                            <p>Зміни мають наступні переваги:</p>
                            <ul class="simple">
                              <li>EIP-2/1 уникає додаткових заохочень для
                                створення контрактів через транзакції, де ціна
                                є&nbsp; 21000, скоріше ніж контрактів, де ціна є
                                32000.</li>
                              <li>EIP-2/1 також виправляє “баг” в протоколі,
                                тепер за допомогою рефондів-самовбивць можливо
                                робити прості трансфери значень ether,
                                використовуючи лише 11664 гасу.</li>
                              <li>EIP-2/2 виправляє стурбованість щодо
                                схильності транзакцій до помилок (не є проріхою
                                безпеки, але лише незручністю UI).</li>
                              <li>EIP-2/3 створює більш інтуітивну розбіжність
                                “успіх або невдача” в результаті процеса
                                створення контракта, замість поточної трихотомії
                                “успіх, невдача або пустий контракт”.</li>
                              <li>EIP-2/4 уникає додаткових заохочень для
                                встановлення різниці часових відтисків в рівно
                                1, щоб створити блок, що має трохи вищу
                                складність, та що буде, таким чином, гарантовано
                                перемагати любі можливі відгалуження. Це
                                гарантує утримання часу блоку в межах 10-20, та
                                відповідно до симуляцій, відновлює 15 секундний
                                блок-тайм (замість поточного ефективного 17
                                сек).</li>
                              <li>EIP-7 значно спрощує для контракту зберігання
                                іншої адреси як змінного джерела коду, та "на
                                прохід" визвати його, бо дочірній код буде
                                виконуватись в основному в тому ж оточенні (за
                                винятком скорочення гасу та збільшеної глибини
                                стеку викликів), що і батько.</li>
                              <li>EIP-8 дає впевненість, що всі клієнтські
                                програми, що використовуються в мережі Ethereum,
                                буть вміти робити майбутні мережеві оновлення.</li>
                            </ul>
                            <p>Додаткові ресурси: - <a class="reference external"
                                href="https://www.reddit.com/r/ethereum/comments/48arax/homestead_release_faq/">Дискусія
                                Reddit по релізу Homestead</a> - <a class="reference internal"
                                href="index.html#ethereum-improvement-proposals"><span>Ethereum
                                  Improvement Proposals (EIPs)</span></a></p>
                          </div>
                        </div>
                        <span id="document-introduction/web3"></span>
                        <div class="section" id="web-3-a-platform-for-decentralized-apps">
                          <h3>Web 3: платформа для децентралізованих застосувань</h3>
                          <p>Багато хто дійшов віри, що відкрита, недовірена
                            платформа блокчейну, як Ethereum, є чудово
                            прилаштована, щоб прислуговуватись як розподілений
                            “бекенд” для децентралізованого, безпечного
                            інтернету - Web 3.0. Інтернет, де головні послуги,
                            як DNS та цифрова ідентифікація&nbsp; є
                            децентралізованими, та де особи можуть налаштовувати
                            економічні взаємодії один з одним.</p>
                          <p>Як було призначено розробниками Ethereum, Ethereum
                            є чистою сторінкою, та маєте свободу будувати будь
                            що ви побажаєте. Протокол Ethereum був узагальнений
                            таким чином, щоб головні можливості могли бути
                            скомбіновані в будь-який спосіб. В ідеалі, dapp
                            проекти на Ethereum будуть задіяти блокчейн Ethereum
                            для побудови рішень, що покладаються&nbsp; на
                            децентралізований консенсус, для впровадження нових
                            продуктів та послуг, що раніше не були можливі. </p>
                          <p>Ethereum, можливо, краще описувати як екосистему:
                            головний протокол, що підримується різними частинами
                            інфраструктури, код, та спільнота, що разом складає
                            проект Ethereum. Ethereum також можна зрозуміти,
                            дивлячись на проекти, що використовують Ethereum.
                            Вже є декілька високоякісних проектів, побудованих
                            на Ethereum, таких як Augur, Digix, Maker, та багато
                            інших (дивіться <a class="reference internal" href="index.html#dapps"><span>Dapps</span></a>).
                            На додаток, існують команди розробників, що будують
                            відкриті компоненти, які кожний може
                            використовувати. Хоча кожна з ціх організацій діє
                            окремо від Ethereum Foundation, та має власні цілі,
                            від цього, безсумнівно, виграє вся екосистема
                            Ethereum.</p>
                          <p>Подальший перегляд/читання:</p>
                          <ul class="simple">
                            <li>Vitalik Buterin - TNABC 2015: <a class="reference external"
                                href="https://www.youtube.com/watch?v=Fjhe0MVRHO4">https://www.youtube.com/watch?v=Fjhe0MVRHO4</a></li>
                            <li>Gavin Wood - DEVCON 1 - Ethereum для чайників: <a
                                class="reference external" href="https://www.youtube.com/watch?v=U_LK0t_qaPo">https://www.youtube.com/watch?v=U_LK0t_qaPo</a></li>
                            <li>Ethereum зустріч в Лондоні (більш детально тут):
                              <a class="reference external" href="https://www.youtube.com/watch?v=GJGIeSCgskc">https://www.youtube.com/watch?v=GJGIeSCgskc</a></li>
                          </ul>
                          <div class="section" id="smart-contracts">
                            <h4>Розумні контракти<a class="headerlink" href="#smart-contracts"
                                title="Permalink to this headline">¶</a></h4>
                            <p>by Alex:</p>
                            <p>Чи укладете ви контракт з кимось, кого ніколи не
                              зустрічали? Чи погодитесь ви позичити гроші
                              якомусь фермеру в Ефіопії? Чи ви станете
                              інвестором в газеті меншин в зоні воєнних дій? Чи
                              підете ви на підписання офіційного контракту на
                              п'ятидоларову покупку по інтернету? </p>
                            <p>Відповідь є "ні" для більшості з ціх запитань, та
                              причиною буде те, що контракт потребує великої
                              інфраструктури: іноді вам треба реальні довірчі
                              відносини між двома сторонами, іноді ви
                              покладаєтесь на робочу систему легалізації, сили
                              поліції та витрати на юристів.&nbsp; </p>
                            <p>В Ethereum вам не треба жодного з цього: якщо всі
                              ваші вимоги до контракту можуть бути покладені в
                              блокчеін,&nbsp; тоді навіть в недовіреному
                              середовищі вони будуть там майже бескоштовно. </p>
                            <p>Замість щоб думати про переміщення ваших поточних
                              контрактів до блокчейну, думайте про всі тисячі
                              маленьких контрактів, на які в б ніколи не
                              погодились, просто тому, що це було економічно
                              недоцільно, або тому що вам не вистачало юридичної
                              захищеності. </p>
                          </div>
                          <div class="section" id="dao">
                            <h4>DAO<a class="headerlink" href="#dao" title="Permalink to this headline">¶</a></h4>
                            <p>Ось простий приклад: уявіть, що ви володієте
                              малим бізнесом з вашими друзями. Юристи та
                              бухгалтери коштовні, та довіряти одному партнеру
                              доглядати за документами може бути джерелом
                              напруженості (та навіть приводом для зловживання).
                              Складно суворо слідувати системі, де документами
                              займається більше ніж один партнер, та це також
                              привід для зловживання, якщо протоколу не
                              слідувати в точності. </p>
                            <p>Використовуючи смарт контракт, власність в вашій
                              компанії та умови для розподілу коштів можуть буть
                              задані з самого початку. Смарт контракти можуть
                              бути записані таким чином, так щоб зміни
                              відбувались лише за участі більшості власників.
                              Смарт контракти, як ці, будуть доступні так само,
                              як програми з відкритим кодом, так що вам навіть
                              не знадобиться винаймати власного програміста
                              замість бухгалтера або юриста.</p>
                            <p>Смарт контракт як цей маштабується безпосередньо.
                              Пара тінейджерів можуть поділити виручку від
                              продажу лимонаду так само прозоро, як фонд
                              суверенного капіталу може розподіляти фонди між
                              ста мільйонами громадянами, які мають на це право.
                              В обох випадках, ціна цієї прозорості буде,
                              вірогідно, часткою цента на долар.</p>
                          </div>
                        </div>
                        <span id="document-introduction/history-of-ethereum"></span>
                        <div class="section" id="history-of-ethereum">
                          <h3>Історія Ethereum<a class="headerlink" href="#history-of-ethereum"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Для останніх історичних досліджень дивіться
                            блог-пост <a class="reference external" href="https://blog.ethereum.org/2016/02/09/cut-and-try-building-a-dream/">Taylor
                              Gerring</a></p>
                          <div class="section" id="inception">
                            <h4>Початок<a class="headerlink" href="#inception" title="Permalink to this headline">¶</a></h4>
                            <p>З початку Ethereum описаний Vitalik Buterin в
                              кінці 2013, як результат його дослідів та роботи в
                              спільноті Bitcoin. Скоро після цього Vitalik
                              публікує <a class="reference external" href="https://github.com/ethereum/wiki/wiki/White-Paper">Білі
                                сторінки Ethereum</a>, де він описав в деталях
                              технічні деталі та обгрунтування протоколу
                              Ethereum та архитектури розумних
                              смарт-контрактів.&nbsp; В січні 2014 Vitalik
                              формально анонсовав Ethereum на конференції The
                              North American Bitcoin Conference в Маямі,
                              Флорида, USA. </p>
                            <p>&nbsp;Близько цього часу Vitalik також почав
                              робити з Dr. Gavin Wood, та разом з ним спільно
                              заснували Ethereum. В квітні 2014 Gavin
                              опубліковав <a class="reference external" href="https://github.com/ethereum/yellowpaper">Жовті
                                сторінки Ethereum</a>, що може прислуговуватись
                              як технічна специфікація для Ethereum Virtual
                              Machine (EVM). Через слідування детальній
                              специфікації Жовтих сторінок, був реалізований
                              клієнт Ethereum на сьома мовах програмування (C++,
                              Go, Python, Java, JavaScript, Haskell, Rust), що
                              призвело до загального покращення програми.</p>
                            <ul class="simple">
                              <li><a class="reference external" href="http://www.coindesk.com/ethererum-launches-cryptocurrency-2-0-network/">Ethereum
                                  запускає мережу Cryptocurrency 2.0</a> -
                                стаття Coindesk за січень 2014 Jan щодо початків</li>
                              <li><a class="reference external" href="https://bitcointalk.org/index.php?topic=428589.0">Анонс
                                  Ethereum на bitcointalk</a> оригінальний анонс
                                Vitalik до спільноти bitcoin. Потік&nbsp; форума
                                з&nbsp; 5000 відповідями.</li>
                            </ul>
                          </div>
                          <div class="section" id="the-ethereum-foundation-and-the-ether-presale">
                            <h4>Ethereum Foundation і попередній продаж ефіру<a
                                class="headerlink" href="#the-ethereum-foundation-and-the-ether-presale"
                                title="Permalink to this headline">¶</a></h4>
                            <p>На додаток до розробки програмного забезпечення
                              для Ethereum, спроможність запустити нову крипто
                              валюту та блокчейн потребує потужних зусиль по
                              розкрутці, щоб зібрати ресурси, потріні для того,
                              щоб все працювало. Для швидкого запуску великої
                              мережі розробників, майнерів, інвесторів, та інших
                              пайщиків, Ethereum анонсували свій план виконати
                              попередній продаж токенів ether, одиниць валюти
                              Ethereum. Юридичні та фінансові складності
                              збирання фундації через попередній продаж призвело
                              до створення декількох юридичних сутностей,
                              включаючи&nbsp; <a class="reference internal" href="index.html#foundation"><span>Ethereum
                                  Foundation (Stiftung Ethereum)</span></a>,
                              засновану в липні 2014 в місті Zug, Швейцарія.</p>
                            <p>Починаючи з липня 2014, Ethereum розподілили
                              початкове розміщення ether шляхом 42-денного
                              публічного попереднього продажу ефіру, нетто 31591
                              біткоінів, вартістю $18,439,086 на той час, в
                              обмін на&nbsp; 60 102 216 ether. Результати
                              продажу були первинно використані для виплати
                              встановчих юридичних боргів, та також на перші
                              місяці зусиль розробки, що досі не були
                              компенсовані, та також на фінансування майбутньої
                              розробки Ethereum.</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://blog.ethereum.org/2014/07/22/launching-the-ether-sale/">Запуск
                                  продажів ether</a> - оригінальний офіційний
                                анонс в блозі Ethereum</li>
                              <li><a class="reference external" href="http://ether.fund/market">Стисла
                                  інформативна сторінка статистики щодо
                                  попереднього продажу</a> згідно (з тих пір
                                неактивний) <a class="reference external" href="http://ether.fund/">Ether.Fund</a></li>
                              <li><a class="reference external" href="https://medium.com/@slacknation/overview-ethereum-s-initial-public-sale-563c05e95501">Огляд:
                                  попередній публічний продаж Ethereum</a> -
                                Блогпост на slacknation - вся статистика щодо
                                попереднього продажу ether</li>
                              <li><a class="reference external" href="https://www.ethereum.org/pdfs/TermsAndConditionsOfTheEthereumGenesisSale.pdf">Терміни
                                  та умови попереднього продажу</a></li>
                            </ul>
                          </div>
                          <div class="section" id="eth-dev-and-ethereum-development">
                            <h4>ETH/DEV та розробка Ethereum</h4>
                            <p>Слідуя з успіхом попереднього продажу ether,
                              розробка Ethereum була формалізована під
                              неприбутковою організацією з назвою ETH DEV, що
                              керує розробкою Ethereum під контрактом від
                              Ethereum Suisse – з Vitalik Buterin, Gavin Wood,
                              та Jeffrey Wilcke в якості трьох директорів
                              організації. Зацікавленість розробників в Ethereum
                              постійно зростала протягом 2014-го року, та
                              команда ETH DEV видала послідовність
                              proof-of-concept (PoC) релізів для спільноти
                              розробників для оцінювання. Часті пости команди
                              ETH DEV в <a class="reference external" href="https://blog.ethereum.org">блозі
                                Ethereum</a> також підтримували захоплення та
                              імпульс коло просування Ethereum. Збільшення
                              трафіку та зростаюча база користувачів, обоє, на
                              форумі Ethereum та платформі ethereum subreddit
                              testified, захоплювали швидко зростаючу та віддану
                              спільноту розробників. Цей тренд так само
                              продовжується до цього дня. </p>
                            <div class="section" id="devcon-0">
                              <h5>DEVCON-0<a class="headerlink" href="#devcon-0"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>В листопаді 2014, ETH DEV організують подію <a
                                  class="reference external" href="https://blog.ethereum.org/2014/12/05/d%CE%BEvcon-0-recap/">DEVCON-0</a>,
                                що зібрав разом розробників Ethereum з усього
                                світу в Берлині, щоб зустрітись та обсудити
                                широкий спектр технологічних тем коло Ethereum.
                                Декілька презентацій та сессій на DEVcon-0
                                пізніше стали рушієм важливих ініціатив, що
                                зроблять Ethereum більш надійним, більш
                                безпечним та більш маштабованим. Загалом, подія
                                наелектризувала розробників на продовження
                                роботи по запуску&nbsp; Ethereum.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://www.youtube.com/watch?v=_BvvUlKDqp0&amp;list=PLJqWcTqh_zKEjpSej3ddtDOKPRGl_7MhS">промови
                                    DEVCON-0, плейлист на youtube</a></li>
                                <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/2nle7m/community_update_whats_going_on_devcon0/">DEVCON-0
                                    пост reddit</a></li>
                                <li><a class="reference external" href="https://blog.ethereum.org/2014/11/18/gavs-d%CE%BEv-update-iii/">Gav’s
                                    DEV оновлення з приводу DEVCON-0</a></li>
                                <li><a class="reference external" href="https://blog.ethereum.org/2014/12/05/d%CE%BEvcon-0-recap/">DEVcon-0
                                    підсумковий блокпост</a></li>
                              </ul>
                            </div>
                            <div class="section" id="devgrants-program">
                              <h5>програма DEVgrants<a class="headerlink" href="#devgrants-program"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>В липні 2015 була анонсована <a class="reference external"
                                  href="https://blog.ethereum.org/2015/04/07/devgrants-help/">програма
                                  DEVgrants</a>, що надає фундацію для
                                контрибуцій, обоє, до платформи Ethereum, та до
                                проектів, побудованих на Ethereum. Сотні
                                розробників впродовж певного періоду докладали
                                свій час та міркування до проектів Ethereum, та
                                до проектів з відкритим кодом.&nbsp; Ця програма
                                служить для винагороди та підтримки ціх
                                розробників за їх доклад. Програма DEVgrants
                                продовжує оперувати і сьогодні, та фінансування
                                програми було нещодавно поновлене в січні 2016.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://blog.ethereum.org/2015/04/07/devgrants-help/">первинний
                                    анонс DEVgrants</a></li>
                                <li><a class="reference external" href="https://blog.ethereum.org/2016/01/08/d%CE%BEvgrants-update-new-funding/">Анонс
                                    нової фундації на DEVCON-1</a></li>
                                <li><a class="reference external" href="https://gitter.im/devgrants/public">DEVgrants
                                    кімната публічного gitter</a></li>
                                <li><a class="reference external" href="https://www.youtube.com/watch?v=4jGqmlA4KEY">DEVgrants
промова
                                    на DEVCON-1 від Wendell Davis на YouTube</a></li>
                              </ul>
                            </div>
                            <div class="section" id="olympic-testnet-bug-bounty-and-security-audit">
                              <span id="olympic-testnet"></span>
                              <h5>Тестова мереж Olympic testnet, Винагорода за
                                баги та Аудит безпеки<a class="headerlink" href="#olympic-testnet-bug-bounty-and-security-audit"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>Протягом 2014 та 2015 років розробка прошла
                                через серії релізів перевірки концепції, що
                                призвело до відкритої дев'ятої POC testnet, на
                                ім'я Olympic. Спільнота розробників була <a class="reference external"
                                  href="https://blog.ethereum.org/2015/05/09/olympic-frontier-pre-release/">запрошена
                                  протестувати обмеження мережі</a>, та був
                                призначений значний призовий фонд, щоб
                                винагороджувати тих, хто вів різноманітні
                                записи, або мали успіх в зламі системи в той чи
                                інший спосіб. <a class="reference external" href="https://blog.ethereum.org/2015/08/26/olympic-rewards-announced/">Винагорода
                                  була анонсована</a> офіційно, через місяць
                                після живого релізу.</p>
                              <p>Ранішнього 2015, була запущена програма <a class="reference external"
                                  href="http://bounty.ethereum.org/">Ethereum
                                  Винагорода за Баг</a>, пропонуючи BTC
                                винагороду за знайдені вразливості в любій
                                частині програмного стеку Ethereum. Це, без
                                сумніву, додало до надійності та безпеки
                                Ethereum, та довіру до спільноти Ethereum в
                                сфері технології. Програма винагороди наразі все
                                ще активна, та не планується ніякої кінцевої
                                дати.</p>
                              <p>Аудит безпеки Ethereum почався в кінці 2014, та
                                продовжувався в першій половині 2015. Ethereum
                                виняйнав декілька незалежних фірм з безпеки
                                програмного забезпечення, щоб виконати від-та-до
                                аудит всіх протокол-критичних компонент
                                (Ethereum VM, мережа, Proof of Work). Аудитори
                                викрили проблеми в безпеці, що були вирішені та
                                знову протестовані, так що в результаті
                                остаточно привів до більш безпечної платформи. </p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://blog.ethereum.org/2015/05/09/olympic-frontier-pre-release/">Olympic
                                    testnet prerelease</a> - блогпост Vitalik,
                                  щодо деталей винагород</li>
                                <li><a class="reference external" href="https://blog.ethereum.org/2015/08/26/olympic-rewards-announced/">Анонсовані
                                    винагороди Olympic</a> - блогпост Vitalik,
                                  щодо переможців та призів</li>
                                <li><a class="reference external" href="https://blog.ethereum.org/2015/03/20/juttas-update-bug-bounty-program-security-audit/">Запуск
                                    програми винагороди за баг</a></li>
                                <li><a class="reference external" href="http://bounty.ethereum.org/">Веб
                                    сайт Ethereum Bounty Program</a></li>
                                <li><a class="reference external" href="https://blog.ethereum.org/2015/07/07/know-ethereum-secure/">Least
                                    Authority audit blogpost</a> - з посиланнями
                                  на результати аудиту</li>
                                <li><a class="reference external" href="http://www.dejavusecurity.com/blog/2015/7/23/deja-vu-security-assists-in-ethereum-release">Deja
                                    Vu audit blogpost</a></li>
                              </ul>
                            </div>
                          </div>
                          <div class="section" id="the-ethereum-frontier-launch">
                            <span id="frontier-launch"></span>
                            <h4>Запуск Ethereum Frontier<a class="headerlink" href="#the-ethereum-frontier-launch"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Мережа Ethereum Frontier була запущена 30го липня
                              2015-го року, та розробники почали писати смарт
                              контракти та децентралізовані застосування, шоб
                              розгортати в живій мережі Ethereum. На додаток,
                              майнери почали під'єднуватись до мережі Ethereum,
                              щоб допомогти захистити блокчейн Ethereum та
                              заробити ефір від майнингу блоків. Навіть якщо
                              реліз Frontier є першим вказівником в проекті
                              Ethereum, та був призначений для використання
                              розробниками як бета версія, з'ясувалось, що він
                              більш вправний та надійний, ніж будь-хто очікував,
                              та розробники кинулися будувати рішення, та
                              покращувати екосистему Ethereum.</p>
                            <p>Дивіться також:</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://blog.ethereum.org/2015/03/03/ethereum-launch-process">Оригінальний
                                  анонс схеми релізу</a> від Vinay Gupta</li>
                              <li><a class="reference external" href="https://blog.ethereum.org/2015/07/22/frontier-is-coming-what-to-expect-and-how-to-prepare">Frontier
                                  прийшов</a> - Анонс запуску Frontier від
                                Stephan Tual</li>
                              <li><a class="reference external" href="https://blog.ethereum.org/2015/07/27/final-steps/">Останні
                                  кроки запуску Frontier</a> - Пости follow-up
                                до анонса</li>
                              <li><a class="reference external" href="https://blog.ethereum.org/2015/07/30/ethereum-launches">Ethereum
стає
                                  живим з запуском Frontier</a></li>
                              <li><a class="reference external" href="https://web.archive.org/web/20160207033817/https://ethereum.org/">Веб
                                  сайт frontier</a></li>
                            </ul>
                            <div class="section" id="devcon-1">
                              <h5>DEVCON-1<a class="headerlink" href="#devcon-1"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>Друга конференція розробників <a class="reference external"
                                  href="https://devcon.ethereum.org/">DEVCON-1</a>
                                відбулась в місті Лондон на початку листопада
                                2015. П'ятиденна подія мала більше ніж 100
                                презентацій, панельні дискуссії та промови,
                                залучила більше ніж 400 учасників, суміш з
                                розробників, підприємців, мислителів та
                                керівників бізнесу. Всі промови були записані та
                                <a class="reference external" href="https://www.youtube.com/playlist?list=PLJqWcTqh_zKHQUFX4IaVjWjfT2tbS4NVk">вільно
                                  доступні.</a></p>
                              <p>Присутність великих компаній, таких, як UBS,
                                IBM та Microsoft, ясно вказувало на
                                зацікавленість великих компаній в технології.
                                Microsoft анонсувала, що вона буде пропонувати <a
                                  class="reference external" href="https://azure.microsoft.com/en-us/blog/ethereum-blockchain-as-a-service-now-on-azure/">Ethereum
на
                                  власній платформі Blockchain as a Service</a>,
                                що пропонуєтсья на хмарній платформі Microsoft
                                Azure. В поєднанні з DEVCON-1, цей анонс
                                запам'ятався як момент, коли технологія блокчейн
                                перетворилась на мейнстрим, з Ethereum в його
                                центрі.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://www.youtube.com/playlist?list=PLJqWcTqh_zKHQUFX4IaVjWjfT2tbS4NVk">Плейлист
                                    промов DEVCON-1 в Youtube</a></li>
                                <li><a class="reference external" href="https://devcon.ethereum.org/">Веб
                                    сайт DEVCON-1</a> з повним переліком
                                  презентацій, з посиланням на слайди, якщо вони
                                  доступні.</li>
                              </ul>
                            </div>
                            <div class="section" id="history-resources">
                              <h5>Історичні ресурси<a class="headerlink" href="#history-resources"
                                  title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><a class="reference external" href="http://ethereumtimeline.org/">проста
                                    графічна лінія часу</a></li>
                              </ul>
                            </div>
                          </div>
                        </div>
                        <span id="document-introduction/community"></span>
                        <div class="section" id="community"> <span id="id1"></span>
                          <h3>Спільнота<a class="headerlink" href="#community" title="Permalink to this headline">¶</a></h3>
                          <p>Будь ласка, коли починаєте дискусію або задаєте
                            запитання, обирайте ваш форум розумно, що допоможе
                            утримувати багато форумів чистими та охайними.</p>
                          <div class="section" id="reddit">
                            <h4>Reddit<a class="headerlink" href="#reddit" title="Permalink to this headline">¶</a></h4>
                            <p><a class="reference external" href="https://www.reddit.com/r/ethereum/">Ethereum
                                subreddit</a> є найбільш докладним форумом
                              Ethereum, де відбуваєтсья більшість з дискусій
                              спільноти, та де головні розробники також активні.
                              Це ваш обраний форум для загальної дискуссії в
                              новинах, оглядів преси, анонсів, розумових
                              штормів. Загалом для всіх речей щодо Ethereum, що
                              стосуються ширшої спільноти. </p>
                            <p>Явно немає дискусії щодо ціни.</p>
                            <p>Також це не ідеальне місце для запиту практичної
                              допомоги, або посту запитань, на які ви бажаєте
                              отримати чітку безпосередню відповідь (для цього
                              використовуйте <a class="reference internal" href="#gitter-rooms"><span>Gitter
                                  Rooms</span></a> та <a class="reference internal"
                                href="#stack-exchange"><span>Stack Exchange</span></a>,
                              відповідно).</p>
                            <p>Читайте <a class="reference external" href="http://www.reddit.com/r/ethereum/comments/3auc97/ethereum_subreddit_rules/">правила
                                Ethereum subreddit</a> перед постами.</p>
                            <p>Більш спеціалізовані підканали subreddit:</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://www.reddit.com/r/EthTrader/">/r/EthTrader</a>
                                - Торгівля, ціна та ринок ефіру</li>
                              <li><a class="reference external" href="https://www.reddit.com/r/EtherMining/">/r/EtherMining</a>
                                - Дискусія з майнингу ефіра</li>
                              <li><a class="reference external" href="https://www.reddit.com/r/ethmarket/">/r/Ethmarket</a>
                                - Ринок для особ, що бажать обмінювати речі та
                                послуги на ефір</li>
                              <li><a class="reference external" href="https://www.reddit.com/r/Ethinvestor/">/r/Ethinvestor</a>
                                - Новини та прогнози для інвестороів Ethereum.
                                Слідкує за довготривалими тенденціями на ринку
                                Ethereum.</li>
                              <li><a class="reference external" href="https://www.reddit.com/r/ethereumism/">/r/ethereumism/</a>
                                - Трохи більш ism, ostic, ical, ist та tinfoil
                                голови, погляди в вигляді пірамід та кришталевих
                                шарів - ефірна сторона Ethereum</li>
                            </ul>
                          </div>
                          <div class="section" id="stack-exchange"> <span id="id2"></span>
                            <h4>Stack Exchange<a class="headerlink" href="#stack-exchange"
                                title="Permalink to this headline">¶</a></h4>
                            <p><a class="reference external" href="http://ethereum.stackexchange.com/">Ethereum
                                Stack Exchange</a> є частиною мережі
                              StackExchange спільнот Q&amp;A. StackExchange є
                              вільним сайтом Q&amp;A, де всі запитання та
                              відповіді зберігаються для нащадків.</p>
                            <p>Це найкраще місце для запитань на технічні теми.
                              Допомагайте вашим друзям, відповідаючи на
                              запитання та збираючи бали репутації.</p>
                          </div>
                          <div class="section" id="gitter-rooms"> <span id="id3"></span>
                            <h4>Кімнати Gitter<a class="headerlink" href="#gitter-rooms"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Gitter є нашим форумом для щоденної балаканини.
                              Це є віртуальним простором, де підвисають
                              розробники, так що тут ви можете отримати швидку
                              допомогу,&nbsp; та трохи підтримки, якщо буде
                              потреба. </p>
                            <p>Gitter використовує рахунки Github, надає Github
                              інтеграцію (сповіщення про pull запити, тощо),
                              приватні канали, провадить форматування markdown,
                              та ще багато чого.</p>
                            <p>Більшість каналів Gitter організовані коло
                              окремих репозиторієв або загальних тем, як
                              дослідження або керівництво. Будь ласка, обирайте
                              відповідну кімнату, та притримуйтесь теми
                              дискусії.</p>
                            <p>Дивіться <a class="reference external" href="https://gitter.im/orgs/ethereum/rooms">повний
                                список кімнат gitter для організації Ethereum</a>.
                              Нижче наданий список активних публічних каналів:</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://gitter.im/ethereum/go-ethereum">go-ethereum</a>
                                - щодо geth (та інструментів, пов'язаних з
                                реалізацією на go)</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/cpp-ethereum">cpp-ethereum</a>
                                - щодо eth (та інструментів, пов'язаних з
                                реалізацією на C++)</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/web3.js">web3.js</a>
                                - щодо web3.js, бібліотека Ethereum JavaScript
                                API</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/Solidity">Solidity</a>
                                - Контакт-орієнтована мова програмування
                                Solidity</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/serpent">serpent</a>
                                - Мова Serpent для розробки контрактів</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/mist">mist</a>
                                - GUI переглядач dapp, офіційне застосування
                                гаманця</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/light-client">light-client</a>
                                - щодо легкого клієнта та протокола LES</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/research">research</a>
                                - Дослідження Ethereum</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/governance">governance</a>
                                - щодо керування розробкою</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/whisper">whisper</a>
                                - анонімна публікація датаграм</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/swarm">swarm</a>
                                - децентралізована мережа зберігання та
                                розгортання вмісту</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/EIPs">EIPs</a>
                                - дискусія щодо <span class="target" id="ethereum-improvement-proposals-eips">Ethereum
                                  Improvement Proposals (EIPs)</span></li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/ethereumjs-lib">ethereumjs-lib</a>
                                - бібліотека JavaScript по головним функціям
                                Ethereum</li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/devp2p">devp2p</a>
                                - ÐΞV’s p2p мережевий протокол &amp; фреймворк</li>
                            </ul>
                          </div>
                          <div class="section" id="ethereum-improvement-proposals">
                            <span id="id4"></span>
                            <h4>Ethereum Improvement Proposals (EIPs)<a class="headerlink"
                                href="#ethereum-improvement-proposals" title="Permalink to this headline">¶</a></h4>
                            <p>Схема EIP націлена бути фреймворком та, значною
                              мірою, неформальним бізнес процесом, що координує
                              покращення для протоколів. Люди повинні спочатку
                              запропонувати свою ідею як проблему або запит pull
                              до репозитарію EIP. Після основної фільтрації
                              пропозиція оторимає номер, та опублікована в формі
                              чернетки. Щоб EIP став Active, йому треба отримати
                              взаємну згоду спільноти. Ці запропоновані зміни
                              повинні визнавати, що остаточна згода може
                              покладатись на консенсус користувачів Ethereum.
                              Для обговорення EIPs використовуйте цей <a class="reference external"
                                href="https://gitter.im/ethereum/EIPs">канал
                                gitter для дискусій щодо EIP</a>.</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1.mediawiki">EIP
                                  настанови та простий EIP</a></li>
                              <li><a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/eip-X.mediawiki">EIP
                                  шаблон</a></li>
                              <li><a class="reference external" href="https://github.com/ethereum/EIPs">EIP
репозитарій
                                  та README</a></li>
                              <li><a class="reference external" href="https://gitter.im/ethereum/EIPs">gitter
канал
                                  для дискусії щодо EIP</a></li>
                            </ul>
                          </div>
                          <div class="section" id="meetups">
                            <h4>Meetups<a class="headerlink" href="#meetups" title="Permalink to this headline">¶</a></h4>
                            <ul class="simple">
                              <li><a class="reference external" href="http://www.meetup.com/topics/ethereum/">Директорія
                                  на хостингу Meetup</a></li>
                              <li><a class="reference external" href="http://forum.ethereum.org/categories/meetups/">Канал
                                  Meetup на Ethereum Forum</a></li>
                            </ul>
                          </div>
                          <div class="section" id="obsolete">
                            <h4>Застаріле<a class="headerlink" href="#obsolete"
                                title="Permalink to this headline">¶</a></h4>
                            <div class="section" id="skype">
                              <h5>Skype<a class="headerlink" href="#skype" title="Permalink to this headline">¶</a></h5>
                              <p>Деякі обговорення спільноти все ще
                                використовують кімнати skype, але нам треб
                                відходити від цього, та заохочувати людей
                                використовувати <a class="reference external" href="http://gitter.im">gitter</a>
                                або <a class="reference external" href="http://slack.com">slack</a>.</p>
                            </div>
                            <div class="section" id="ethereum-forum">
                              <h5>Форум Ethereum<a class="headerlink" href="#ethereum-forum"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>Легендарний форум від Stephan Tual, <a class="reference external"
                                  href="https://forum.ethereum.org/">Ethereum
                                  Forum</a>, більше не підтримується, та,
                                здається, скоро буде знятий з ужитку. Ми
                                заохочуємо людей використовувати одну з
                                рекомендованих, перелічених вище, альтернатив.</p>
                            </div>
                          </div>
                        </div>
                        <span id="document-introduction/foundation"></span>
                        <div class="section" id="the-ethereum-foundation"> <span
                            id="foundation"></span>
                          <h3>Ethereum Foundation<a class="headerlink" href="#the-ethereum-foundation"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Ethereum Foundation є неприбутковою організацією,
                            зареєстрованою в Швейцарії, та має призначенням
                            керування фондами, що надходять від продажу ether,
                            щоб краще обслуговувати Ethereum та екосистему
                            децентралізованої технології.</p>
                          <p>Заснована в липні 2014 в Швейцарії, місія Stiftung
                            Ethereum є просування розробок нових технологій та
                            застосувань, особливо в сфері нових відкритих та
                            децентралізованих програмних архитектур.</p>
                          <p>Це є ціллю, щоб децентралізовані та відкриті
                            технології були розроблені, вигодовані, просунуті та
                            підтримані. Домінуючий, але не єдиний фокус,
                            встановлений на просуванні розробки Ethereum
                            Protocol, та пов'язаної з ним технологій, так само,
                            як і просування та підтримка застосувань з
                            використанням технології або протоколу Ethereum.
                            Stiftung Ethereum додатково буде підтримувати та
                            захищати децентралізований інтернет в різних формах.</p>
                          <p>Знайдіть більше щодо <a class="reference external"
                              href="https://ethereum.org/foundation">Foundation
                              Management Team не веб сайті</a></p>
                          <div class="section" id="ethereum-foundation-s-faces-to-the-community">
                            <h4>Ethereum Foundation, зв'язок зі спільнотою<a class="headerlink"
                                href="#ethereum-foundation-s-faces-to-the-community"
                                title="Permalink to this headline">¶</a></h4>
                            <ul class="simple">
                              <li><a class="reference external" href="https://ethereum.org">Офіційна
                                  сторінка Homestead</a> - головна точка входу</li>
                              <li><a class="reference external" href="http://www.reddit.com/r/ethereum">Reddit</a>
                                - дивіться <a class="reference internal" href="index.html#community"><span>Спільнота</span></a></li>
                              <li><a class="reference external" href="https://blog.ethereum.org/">Blog</a></li>
                              <li><a class="reference external" href="http://twitter.com/ethereumproject">Twitter</a></li>
                              <li><a class="reference external" href="https://www.youtube.com/user/ethereumproject">Youtube</a></li>
                              <li><a class="reference external" href="https://www.facebook.com/ethereumproject">Facebook</a>
                                - загалом не використовується</li>
                              <li><a class="reference external" href="mailto:info%40ethereum.org">Email</a>
                                - використовуйте, якщо ви змушені до цього</li>
                            </ul>
                            <p>Офіційні комунікації з фундацією Ethereum
                              найбільш часто надходять в формі вичерпних блог
                              постів в <a class="reference external" href="https://blog.ethereum.org/">блозі
                                Ethereum</a>. Деякі з постів є технічними, деякі
                              організаційними, деякі персональними. Всі блог
                              пости анонсуються на <a class="reference external"
                                href="http://twitter.com/ethereumproject">Twitter</a>
                              та <a class="reference external" href="http://www.reddit.com/r/ethereum">Reddit</a>.</p>
                            <p><a class="reference external" href="https://www.youtube.com/user/ethereumproject">Канал
                                Youtube</a> фундації зберігає наші відео,
                              включаючи всі промови на конференціях розробників
                              DEVCON0 та DEVCON1.</p>
                            <p>Щодо форумів з дискусіями спільноти, дивіться <a
                                class="reference internal" href="index.html#community"><span>Спільнота</span></a>.</p>
                          </div>
                        </div>
                        <span id="document-introduction/contributors"></span>
                        <div class="section" id="contributors"> <span id="id1"></span>
                          <h3>Контриб'ютори<a class="headerlink" href="#contributors"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Ця документація була побудована колективно,
                            спільнотою Ethereum, як частина проекта з назвою <a
                              class="reference external" href="https://www.reddit.com/r/ethereum/comments/45116k/call_to_action_homestead_documentation_initiative/">Homestead
                              Documentation Initiative</a>, що координується
                            наступними особами:</p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/zelig">Viktor
                                Trón (“zelig”)</a></li>
                            <li><a class="reference external" href="https://github.com/Souptacular">Hudson
                                Jameson (“Souptacular”)</a></li>
                          </ul>
                          <p>Нам приємно подякувати кожного, хто допоміг в цій
                            спробі, за <a class="reference external" href="https://github.com/ethereum/homestead-guide/graphs/contributors">їхній
                              внесок</a>:</p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/programonauta">Ricardo
                                de Azevedo Brandao</a></li>
                            <li><a class="reference external" href="https://github.com/0mkara">Santanu
                                Barai</a></li>
                            <li><a class="reference external" href="https://onename.com/midnight">Brooks
                                Boyd</a></li>
                            <li><a class="reference external" href="https://onename.com/VoR0220">RJ
                                Catalano</a></li>
                            <li><a class="reference external" href="https://github.com/ethers">Joseph
                                Chow</a></li>
                            <li><a class="reference external" href="http://github.com/kclowes">Keri
                                Clowes</a></li>
                            <li><a class="reference external" href="https://github.com/ctrlaltdel">François
                                Deppierraz</a></li>
                            <li><a class="reference external" href="https://github.com/bdinn1">Bertie
                                Dinneen</a></li>
                            <li><a class="reference external" href="https://github.com/greggdourgarian">Gregg
                                Dourgarian</a></li>
                            <li><a class="reference external" href="https://github.com/duaraghav8">Raghav
                                Dua</a></li>
                            <li><a class="reference external" href="https://github.com/OrangeShark">Erik
                                Edrosa</a></li>
                            <li><a class="reference external" href="https://github.com/anfedorov">Andrey
                                Fedorov</a></li>
                            <li><a class="reference external" href="https://github.com/rfikki">Rocky
                                Fikki</a></li>
                            <li><a class="reference external" href="https://github.com/alexfisher">Alex
                                Fisher</a></li>
                            <li><a class="reference external" href="https://github.com/enriquefynn">Enrique
                                Fynn</a></li>
                            <li><a class="reference external" href="http://github.com/gabx">Arno
                                Gaboury</a></li>
                            <li><a class="reference external" href="https://github.com/tgerring">Taylor
                                Gerring</a></li>
                            <li><a class="reference external" href="https://github.com/redsquirrel">Dave
                                Hoover</a></li>
                            <li><a class="reference external" href="https://github.com/jmahhh">Joël
                                Hubert</a></li>
                            <li><a class="reference external" href="https://github.com/makoto">Makoto
                                Inoue</a></li>
                            <li><a class="reference external" href="https://github.com/keith24">Keith
                                Irwin</a></li>
                            <li><a class="reference external" href="https://github.com/mttkay">Matthias
                                Käppler</a></li>
                            <li><a class="reference external" href="https://github.com/bas-vk">Bas
                                van Kervel</a></li>
                            <li><a class="reference external" href="https://github.com/taoteh1221">Michael
                                Kilday</a></li>
                            <li><a class="reference external" href="https://github.com/klmoney">Chandra
                                Kumar</a></li>
                            <li><a class="reference external" href="https://github.com/gmkung">Guangmian
                                Kung</a></li>
                            <li><a class="reference external" href="https://github.com/hughlang">Hugh
                                Lang</a></li>
                            <li><a class="reference external" href="https://github.com/yann300">Yann
                                Levreau</a></li>
                            <li><a class="reference external" href="https://github.com/romanman">Roman
                                Mandeleil</a></li>
                            <li><a class="reference external" href="https://github.com/Kmaschta">Kévin
                                Maschtaler</a></li>
                            <li><a class="reference external" href="https://github.com/admazzola">Andrew
                                Mazzola</a></li>
                            <li><a class="reference external" href="https://github.com/dmiszkiewicz">Dominik
                                Miszkiewicz</a></li>
                            <li><a class="reference external" href="https://github.com/mooneyj">John
                                Mooney</a></li>
                            <li><a class="reference external" href="https://github.com/nodox">Steven
                                Natera</a></li>
                            <li><a class="reference external" href="https://github.com/christianpeel">Chris
                                Peel</a></li>
                            <li><a class="reference external" href="https://github.com/polleykc">Craig
                                Polley</a></li>
                            <li><a class="reference external" href="https://github.com/colm">Colm
                                Ragu</a></li>
                            <li><a class="reference external" href="https://github.com/lra">Laurent
                                Raufaste</a></li>
                            <li><a class="reference external" href="https://github.com/chriseth">Christian
                                Reitwiessner</a></li>
                            <li><a class="reference external" href="https://github.com/jjmstark">Josh
                                Stark</a></li>
                            <li><a class="reference external" href="https://github.com/ScottStevenson">Scott
                                Stevenson</a></li>
                            <li><a class="reference external" href="https://github.com/bobsummerwill">Bob
                                Summerwill</a></li>
                            <li><a class="reference external" href="https://github.com/alexvandesande">Alex
                                van de Sande</a></li>
                            <li><a class="reference external" href="https://github.com/LiteBit">Paul
                                Schmitzer</a></li>
                            <li><a class="reference external" href="https://github.com/5chdn">Afri
                                Schoedon</a></li>
                            <li><a class="reference external" href="https://github.com/c0d3inj3cT">Sudeep
                                Singh</a></li>
                            <li><a class="reference external" href="https://github.com/conor10">Conor
                                Svensson</a></li>
                            <li><a class="reference external" href="http://github.com/giact">Giacomo
                                Tazzari</a></li>
                            <li><a class="reference external" href="https://github.com/BenUsername">Ben
                                Tannenbaum</a></li>
                            <li><a class="reference external" href="https://github.com/azulmarino">Dean
                                Alain Vernon</a></li>
                            <li><a class="reference external" href="https://github.com/danielweinmann">Daniel
                                Weinmann</a></li>
                            <li><a class="reference external" href="https://github.com/pjworrall">Paul
                                Worrall</a></li>
                            <li><a class="reference external" href="https://github.com/FrankMN">Haoyu
                                Yang</a></li>
                            <li><a class="reference external" href="https://github.com/luclu">Luca
                                Zeug</a></li>
                            <li><a class="reference external" href="https://github.com/ZhuWeiyang">Weiyang
                                Zhu</a></li>
                            <li><a class="reference external" href="https://github.com/willzeng">Will
                                Zeng</a></li>
                          </ul>
                          <p>А також ціх докладачів під псевдонимами:</p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/12v">12v</a></li>
                            <li><a class="reference external" href="https://github.com/ana0">ana0</a></li>
                            <li><a class="reference external" href="http://github.com/c0d3inj3cT">c0d3inj3cT</a></li>
                            <li><a class="reference external" href="https://github.com/ijcoe6ru">ijcoe6ru</a></li>
                            <li><a class="reference external" href="https://github.com/LucaTony">LucaTony</a></li>
                            <li><a class="reference external" href="https://github.com/madhancr">madhancr</a></li>
                            <li><a class="reference external" href="https://github.com/mista66">mista66</a></li>
                            <li><a class="reference external" href="https://github.com/moneroexamples">mWo</a></li>
                            <li><a class="reference external" href="https://github.com/0mkara">Omkara</a></li>
                            <li><a class="reference external" href="https://github.com/tflux99">tflux99</a></li>
                            <li><a class="reference external" href="https://github.com/hobti01">Tim
                                H</a></li>
                            <li><a class="reference external" href="https://github.com/xyzether">xyzether</a></li>
                          </ul>
                        </div>
                      </div>
                    </div>
                    <span id="document-ethereum-clients/index"></span>
                    <div class="section" id="ethereum-clients"> <span id="id1"></span>
                      <h2>Клієнти Ethereum<a class="headerlink" href="#ethereum-clients"
                          title="Permalink to this headline">¶</a></h2>
                      <div class="toctree-wrapper compound"> <span id="document-ethereum-clients/choosing-a-client"></span>
                        <div class="section" id="choosing-a-client"> <span id="sec-clients"></span>
                          <h3>Обираємо клієнта<a class="headerlink" href="#choosing-a-client"
                              title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="why-are-there-multiple-ethereum-clients">
                            <h4>Чому існує декілька клієнтів Ethereum?<a class="headerlink"
                                href="#why-are-there-multiple-ethereum-clients"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Від ранішніх днів проекту завжди було декілька
                              реалізацій клієнта зразу на різних операційних
                              системах.&nbsp; Різноманіття клієнтів є
                              гигантською перемогою для екосистеми взагалі.
                              Такій підхід дозволяє нам перевірити, що протокол
                              (специфікований в <a class="reference external" href="https://github.com/ethereum/yellowpaper">Жовтих
                                сторінках</a>) є однозначний. Це тримає двері
                              відкритими для подальших іновацій. Це тримає нас
                              всіх чесними. Однак те саме може бути дуже
                              спантеличливо для кінцевих користувачів, бо немає
                              універсального “інсталятора Ethereum”, який вони
                              могли б використовувать.</p>
                            <p>Станом на вересень 2016, лідерами серед
                              реалізацій є <a class="reference internal" href="index.html#go-ethereum"><span>go-ethereum</span></a>
                              та <a class="reference internal" href="index.html#parity"><span>Parity</span></a>.</p>
                            <table class="docutils" border="1">
                              <colgroup> <col width="25%"> <col width="12%"> <col
                                  width="25%"> <col width="38%"> </colgroup>
                              <thead valign="bottom">
                                <tr class="row-odd">
                                  <th class="head">Клієнт</th>
                                  <th class="head">Мова</th>
                                  <th class="head">Розробники</th>
                                  <th class="head">Остання версія</th>
                                </tr>
                              </thead>
                              <tbody valign="top">
                                <tr class="row-even">
                                  <td><a class="reference internal" href="index.html#go-ethereum"><span>go-ethereum</span></a></td>
                                  <td>Go</td>
                                  <td><a class="reference external" href="https://ethereum.org/foundation">Ethereum
                                      Foundation</a></td>
                                  <td><a class="reference external" href="https://github.com/ethereum/go-ethereum/releases/tag/v1.4.18">go-ethereum-v1.4.18</a></td>
                                </tr>
                                <tr class="row-odd">
                                  <td><a class="reference internal" href="index.html#parity"><span>Parity</span></a></td>
                                  <td>Rust</td>
                                  <td><a class="reference external" href="https://ethcore.io/">Ethcore</a></td>
                                  <td><a class="reference external" href="https://github.com/ethcore/parity/releases/tag/v1.4.0">Parity-v1.4.0</a></td>
                                </tr>
                                <tr class="row-even">
                                  <td><a class="reference internal" href="index.html#cpp-ethereum"><span>cpp-ethereum</span></a></td>
                                  <td>C++</td>
                                  <td><a class="reference external" href="https://ethereum.org/foundation">Ethereum
                                      Foundation</a></td>
                                  <td><a class="reference external" href="https://github.com/bobsummerwill/cpp-ethereum/releases/tag/v1.3.0">cpp-ethereum-v1.3.0</a></td>
                                </tr>
                                <tr class="row-odd">
                                  <td><a class="reference internal" href="index.html#pyethapp"><span>pyethapp</span></a></td>
                                  <td>Python</td>
                                  <td><a class="reference external" href="https://ethereum.org/foundation">Ethereum
                                      Foundation</a></td>
                                  <td><a class="reference external" href="https://github.com/ethereum/pyethapp/releases/tag/v1.5.0">pyethapp-v1.5.0</a></td>
                                </tr>
                                <tr class="row-even">
                                  <td><a class="reference internal" href="index.html#ethereumjs-lib"><span>ethereumjs-lib</span></a></td>
                                  <td>Javascript</td>
                                  <td><a class="reference external" href="https://ethereum.org/foundation">Ethereum
                                      Foundation</a></td>
                                  <td><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-lib/releases/tag/v3.0.0">ethereumjs-lib-v3.0.0</a></td>
                                </tr>
                                <tr class="row-odd">
                                  <td><a class="reference internal" href="index.html#ethereum-j"><span>Ethereum(J)</span></a></td>
                                  <td>Java</td>
                                  <td><a class="reference external" href="http://www.ether.camp">&lt;ether.camp&gt;</a></td>
                                  <td><a class="reference external" href="https://github.com/ethereum/ethereumj/releases/tag/1.3.1">ethereumJ-v1.3.1</a></td>
                                </tr>
                                <tr class="row-even">
                                  <td><a class="reference internal" href="index.html#ruby-ethereum"><span>ruby-ethereum</span></a></td>
                                  <td>Ruby</td>
                                  <td><a class="reference external" href="https://github.com/janx/">Jan
                                      Xie</a></td>
                                  <td><a class="reference external" href="https://rubygems.org/gems/ruby-ethereum/versions/0.9.6">ruby-ethereum-v0.9.6</a></td>
                                </tr>
                                <tr class="row-odd">
                                  <td><a class="reference internal" href="index.html#ethereumh"><span>ethereumH</span></a></td>
                                  <td>Haskell</td>
                                  <td><a class="reference external" href="http://www.blockapps.net/">BlockApps</a></td>
                                  <td>no Homestead release yet</td>
                                </tr>
                              </tbody>
                            </table>
                          </div>
                          <div class="section" id="what-should-i-install-on-my-desktop-laptop">
                            <h4>Що я маю встановлювати на мій десктоп/лептоп?<a
                                class="headerlink" href="#what-should-i-install-on-my-desktop-laptop"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Більшість користувачів, вірогідно, можуть
                              встановити тільки Most users will likely just
                              install <a class="reference external" href="https://github.com/ethereum/mist">Mist
                                / Ethereum Wallet</a>, та цього буде достатньо
                              для їх потреб.</p>
                            <p>Ethereum Wallet є розгортанням “єдиного dapp” <strong>Mist
                                Browser</strong>, що буде центральною частиною
                              фази розробки Metropolis, що прийде після
                              Homestead.</p>
                            <p>Mist іде разом з бінаріями <a class="reference internal"
                                href="index.html#go-ethereum"><span>go-ethereum</span></a>
                              та <a class="reference internal" href="index.html#cpp-ethereum"><span>cpp-ethereum</span></a>,
                              та якщо ви не виконуєте клієнт&nbsp; Ethereum
                              командного рядка, тоді Mist запустить його,
                              синхронизуючи блокчейн, використовуючи один з
                              включених клієнтів (по замовчанню <strong>geth</strong>).
                              Якщо ви бажаєте використовувати Parity з Mist, або
                              виконувати Mist в локальній мережі, просто
                              запустіть ваш вузол перед Mist, і Mist буде
                              з'єднуватись до вашого вузла, скоріше, ніж
                              стартувати власний. </p>
                            <p><strong>Триває робота по додаванню Parity та
                                інших клієнтів як “першокласних сутностей” до
                                Mist.</strong></p>
                            <p>Якщо ви бажаєте взаємодіяти з Ethereum з
                              командного рядка, та щоб отримати переваги консолі
                              Javascript, тоді ви маєте бажати встановити один з
                              клієнтських застосувань напряму, так само, як
                              і&nbsp; Mist. Слідуйте за посиланнями в таблиці
                              вище для подальших інструкцій.</p>
                            <p>Якщо ви бажаєте зайнятись майнингом, тоді самого
                              Mist не буде достатнім. Перевірте розділ <a class="reference internal"
                                href="index.html#mining"><span>Mining</span></a>.</p>
                          </div>
                          <div class="section" id="what-should-i-install-on-my-mobile-tablet">
                            <h4>Що я маю встановити на моєму
                              мобільному/планшеті?<a class="headerlink" href="#what-should-i-install-on-my-mobile-tablet"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Ми знаходимось в самому початку нашої підтримки
                              мобільних пристроїв. Команда Go опубліковала
                              експериментальні бібліотеки для iOS та Android,
                              які використовуються деякими розробниками для
                              розкрутки мобільних застосувань, але досі немає
                              жодних доступних мобільних клієнтів Ethereum.</p>
                            <p>Головна перешкода для використання Ethereum на
                              мобальних пристроях в тому, що підтримка
                              облегшеного клієнта Light Client все ще неповна.
                              Робота, що була зроблена, знаходиться в приватній
                              гілці, та доступна тільки для клієнта Go.
                              doublethinkco буде починати розробку Light Client
                              для клієнта C++ в наступні місяці, коли прийде
                              фінансування гранта.</p>
                            <p>Перевірте <a class="reference external" href="http://status.im">Status.im</a>,
                              що з початку використовує <a class="reference external"
                                href="https://github.com/status-im/ethereumj-personal">ethereumj-personal</a>
                              на основі <a class="reference internal" href="index.html#ethereum-j"><span>Ethereum(J)</span></a>,
                              але наразі перейшов на кросс-побудови Geth з Light
                              Client.</p>
                          </div>
                          <div class="section" id="what-should-i-install-on-my-sbc">
                            <h4>Що я маю встановити на моєму SBC?<a class="headerlink"
                                href="#what-should-i-install-on-my-sbc" title="Permalink to this headline">¶</a></h4>
                            <p>Ви маєте тут деякий вибір, в залежності від
                              вашого рівня навичок, та що ви збираєтесь робити.</p>
                            <ul class="simple">
                              <li>Download a fully prepared image(link to page
                                with detailed download &amp; install
                                instructions)
                                <ul>
                                  <li>If you are new to Ethereum AND SBC boards
                                    such as the Raspberry Pi then this is for
                                    you! Simply download the image specific to
                                    the dev board you are working with, burn it
                                    to an SD card, boot your device, and run
                                    Ethereum!</li>
                                </ul>
                              </li>
                              <li>Download a pre-compiled application(link to
                                page with detailed download &amp; install
                                instructions)
                                <ul>
                                  <li>If you already have an SBC running and
                                    have a specific, preferred OS or setup that
                                    you want to keep, then this is your best
                                    option! Depending on the platform, you can
                                    simply download the apropriate executable,
                                    and with minimal linking of libraries and
                                    setting of PATH you can have Ethereum
                                    running in your existing environment!</li>
                                </ul>
                              </li>
                              <li>Build from source using customizable
                                scripts(link to page with more detail and
                                individual SBC links to <a class="reference external"
                                  href="https://github.com/ethembedded">https://github.com/ethembedded</a>)
                                <ul>
                                  <li>Looking to perform a custom install? We
                                    have scripts available to compile from
                                    source “on device”. Our scripts contain
                                    auto-install of dependencies as well as the
                                    client itself. This will allow you to
                                    install a specific version of the Ethereum
                                    client(i.e.-“develop”, “master”, etc.),
                                    compile your own forked version of a client,
                                    and generally play around with the
                                    intracacies of the build process.</li>
                                </ul>
                              </li>
                            </ul>
                          </div>
                        </div>
                        <div class="section" id="interacting-with-clients">
                          <h3>Взаємодія з клієнтами<a class="headerlink" href="#interacting-with-clients"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Щоб взаємодіяти з клієнтами Ethereum програмно,
                            будь ласка посилайтесь на розділ&nbsp; <a class="reference internal"
                              href="index.html#connecting-to-clients"><span>Під'єднання
                                до клієнтів Ethereum</span></a>.</p>
                        </div>
                        <span id="document-ethereum-clients/cpp-ethereum/index"></span>
                        <div class="section" id="cpp-ethereum"> <span id="id1"></span>
                          <h3>cpp-ethereum<a class="headerlink" href="#cpp-ethereum"
                              title="Permalink to this headline">¶</a></h3>
                          <a class="reference internal image-reference" href="images/cpp_35k9.png"><img
                              alt="images/cpp_35k9.png" src="images/cpp_35k9.png"
                              style="width: 200px; height: 200px;"></a> <a class="reference internal image-reference"
                            href="images/ETHEREUM-ICON_Black.png"><img alt="images/ETHEREUM-ICON_Black.png"
                              src="images/ETHEREUM-ICON_Black.png" style="width: 200px; height: 200px;"></a>
                          <div class="section" id="quick-start">
                            <h4>Швидкий початок</h4>
                            <ul class="simple">
                              <li>Welcome to the Ethereum C++ project :-)</li>
                              <li>The GitHub repository for this project is <a
                                  class="reference external" href="https://github.com/ethereum/cpp-ethereum/">ethereum/cpp-ethereum</a></li>
                              <li>Automation runs on <a class="reference external"
                                  href="https://ci.appveyor.com/project/ethereum/cpp-ethereum">Appveyor</a>
                                and <a class="reference external" href="https://travis-ci.org/ethereum/cpp-ethereum/branches">TravisCI</a>.</li>
                              <li>We have instructions for <a class="reference internal"
                                  href="index.html#installing-binaries"><span>Installing
                                    binaries</span></a> and <a class="reference internal"
                                  href="index.html#building-from-source"><span>Building
                                    from source</span></a>.</li>
                              <li>Most project communication happens in our <a
                                  class="reference external" href="https://gitter.im/ethereum/cpp-ethereum">User</a>
                                and <a class="reference external" href="https://gitter.im/ethereum/cpp-ethereum-development">Developer</a>
                                Gitter channels.</li>
                              <li>Issues are tracked in our <a class="reference external"
                                  href="http://github.com/ethereum/cpp-ethereum/issues">Github
                                  issue tracker</a>.</li>
                              <li>cpp-ethereum is extremely portable and is used
                                on a <a class="reference internal" href="index.html#cpp-ethereum-portability"><span>very
                                    broad range of platforms</span></a>.</li>
                            </ul>
                          </div>
                          <div class="section" id="details">
                            <h4>Details<a class="headerlink" href="#details" title="Permalink to this headline">¶</a></h4>
                            <div class="toctree-wrapper compound"> <span id="document-ethereum-clients/cpp-ethereum/current-status"></span>
                              <div class="section" id="current-status">
                                <h5>Current status<a class="headerlink" href="#current-status"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>We blog about the codebase periodically on
                                  the <a class="reference external" href="https://blog.ethereum.org">Official
                                    Ethereum blog</a> and elsewhere. Here are
                                  some recent articles from the development
                                  team:</p>
                                <ul class="simple">
                                  <li><a class="reference external" href="https://blog.ethereum.org/2016/02/12/ethereum-dev-update-c-roadmap/">Ethereum
                                      DEV Update: C++ Roadmap</a> (February
                                    2016)</li>
                                  <li><a class="reference external" href="https://blog.ethereum.org/2016/05/04/c-dev-update-announcing-remix/">C++
                                      DEV Update: Announcing Remix</a> (May
                                    2016)</li>
                                  <li><a class="reference external" href="https://blog.ethereum.org/2016/07/08/c-dev-update-summer-edition/">C++
                                      DEV Update – July edition</a> (July 2016)</li>
                                  <li><a class="reference external" href="https://bobsummerwill.com/2016/07/12/ethereum-everywhere/">Ethereum
                                      Everywhere</a> (July 2016)</li>
                                  <li><a class="reference external" href="https://bobsummerwill.com/2016/07/12/c-re-licensing-plan/">C++
                                      re-licensing plan</a> (July 2016)</li>
                                </ul>
                                <p>We <a class="reference external" href="https://github.com/ethereum/webthree-umbrella/issues/250">simplified
                                    the project naming</a> at Homestead (March
                                  2016), although some naming shadows of the
                                  past still linger. With the homecoming we have
                                  another name to retire - <strong>webthree-umbrella</strong>.</p>
                                <p>At the time of writing (August 2016), we are
                                  just completing our “Homecoming”, where the
                                  code has been reconsolidated into the <a class="reference external"
                                    href="https://github.com/ethereum/cpp-ethereum">ethereum/cpp-ethereum</a>
                                  repository. From October 2015 until August
                                  2016 it was split across multiple repositories
                                  under <a class="reference external" href="https://github.com/ethereum/webthree-umbrella">ethereum/webthree-umbrella</a></p>
                                <p>The re-licensing plan is the culmination of a
                                  very long-term plan to <a class="reference external"
                                    href="https://github.com/ethereum/wiki/wiki/Licensing">liberalize
                                    the core</a>. An effort was begun in 2015 to
                                  re-license the cpp-ethereum core as MIT, but
                                  it was never completed.</p>
                                <p>This is a revival of that effort, especially
                                  with a view towards the potential for
                                  collaboration with the <a class="reference external"
                                    href="http://linuxfoundation.org">Linux
                                    Foundation</a>‘s <a class="reference external"
                                    href="https://www.hyperledger.org">Hyperledger</a>
                                  project, and with other corporations outside
                                  of Hyperledger who wish to build Ethereum
                                  private/consortium chain solutions similar to
                                  <a class="reference external" href="https://github.com/HydraChain/hydrachain">HydraChain</a>.
                                  The <a class="reference external" href="http://rubixbydeloitte.com/">Rubix
                                    by Deloitte</a> project is an example of
                                  that approach.</p>
                              </div>
                              <span id="document-ethereum-clients/cpp-ethereum/building-from-source/index"></span>
                              <div class="section" id="building-from-source"> <span
                                  id="id1"></span>
                                <h5>Побудова з джерела<a class="headerlink" href="#building-from-source"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="section" id="overview">
                                  <h6>Overview<a class="headerlink" href="#overview"
                                      title="Permalink to this headline">¶</a></h6>
                                  <p>The <strong>cpp-ethereum</strong> codebase
                                    lives on Github.com in the <a class="reference external"
                                      href="http://github.com/ethereum/cpp-ethereum">cpp-ethereum</a>
                                    repository.</p>
                                  <p>Between October 2015 and August 2016 it was
                                    split into various repositories which were
                                    grouped as sub-modules under the <a class="reference external"
                                      href="http://github.com/ethereum/webthree-umbrella">webthree-umbrella</a>
                                    repository, and you will likely see many
                                    references to <strong>webthree-umbrella</strong>
                                    online. Those all refer to the <strong>cpp-ethereum</strong>
                                    codebase during that period of its
                                    development.</p>
                                  <p>We use a common <a class="reference external"
                                      href="https://cmake.org/">CMake</a> build
                                    system to generate platform-specific build
                                    files, meaning that the workflow is very
                                    similar whatever operating system you use:</p>
                                  <ul class="simple">
                                    <li>Install build tools and external
                                      packages (these are platform dependent)</li>
                                    <li>Clone the source code from the <strong>webthree-umbrella</strong>
                                      git repository</li>
                                    <li>Run CMake to generate a build file
                                      (makefile, Visual Studio solution, etc)</li>
                                    <li>Build it</li>
                                  </ul>
                                </div>
                                <div class="section" id="platform-specific-instructions">
                                  <h6>Platform-specific instructions<a class="headerlink"
                                      href="#platform-specific-instructions" title="Permalink to this headline">¶</a></h6>
                                  <div class="toctree-wrapper compound"> <span
                                      id="document-ethereum-clients/cpp-ethereum/building-from-source/linux"></span>
                                    <div class="section" id="building-for-linux">
                                      <span id="building-linux-from-source"></span><h7>Building
                                        for Linux<a class="headerlink" href="#building-for-linux"
                                          title="Permalink to this headline">¶</a></h7>
                                      <div class="section" id="getting-the-source-code">
                                        <h8>Getting the source code<a class="headerlink"
                                            href="#getting-the-source-code" title="Permalink to this headline">¶</a></h8>
                                        <p>We use git and GitHub to maintain the
                                          source code. Clone the repository by:</p>
                                        <div class="code bash highlight-python">
                                          <div class="highlight">
                                            <pre>git clone --recursive https://github.com/ethereum/cpp-ethereum.git
cd cpp-ethereum
</pre></div>
                                        </div>
                                        <p>The <code class="docutils literal"><span
                                              class="pre">--recursive</span></code>
                                          option is important. It orders git to
                                          clone additional submodules which are
                                          required to build the project. If you
                                          missed it you can correct your mistake
                                          with command <code class="docutils literal"><span
                                              class="pre">git</span> <span class="pre">submodule</span>
                                            <span class="pre">update</span> <span
                                              class="pre">--init</span></code>.</p>
                                      </div>
                                      <div class="section" id="cmake"> <h8>CMake<a
                                            class="headerlink" href="#cmake" title="Permalink to this headline">¶</a></h8>
                                        <p>We use CMake to control the build
                                          configuration of the project. Quite
                                          recent version of CMake is required
                                          (at the time of writing 3.4 is the
                                          minimum). We recommend installing
                                          CMake by downloading and unpacking the
                                          binary distribution of the latest
                                          version available on the download
                                          page:</p>
                                        <p><a class="reference external" href="https://cmake.org/download/">https://cmake.org/download/</a></p>
                                        <blockquote>
                                          <div>
                                            <p><strong>Alternative method</strong></p>
                                            <p>The repository contains the
                                              script <a class="reference external"
                                                href="https://github.com/ethereum/cpp-ethereum/blob/develop/scripts/install_cmake.sh">install_cmake.sh</a>
                                              that downloads a fixed version of
                                              CMake and unpacks it to the given
                                              directory prefix. Example usage <code
                                                class="docutils literal"><span class="pre">scripts/install_cmake.sh</span>
                                                <span class="pre">--prefix</span>
                                                <span class="pre">/usr/local</span></code>.</p>
                                          </div>
                                        </blockquote>
                                      </div>
                                      <div class="section" id="installing-dependencies">
                                        <h8>Installing dependencies<a class="headerlink"
                                            href="#installing-dependencies" title="Permalink to this headline">¶</a></h8>
                                        <p>The following <em>libraries</em> are
                                          required to be installed in the
                                          system:</p>
                                        <ul class="simple">
                                          <li>boost</li>
                                          <li>leveldb</li>
                                          <li>curl</li>
                                          <li>microhttpd</li>
                                          <li>miniupnp</li>
                                          <li>gmp</li>
                                        </ul>
                                        <p>They usually can be installed using
                                          distribution-specific package manager.
                                          For example on Debian-based systems:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>sudo apt-get install libboost-all-dev libleveldb-dev libcurl4-openssl-dev libmicrohttpd-dev libminiupnpc-dev libgmp-dev
</pre></div>
                                        </div>
                                        <p>or on RedHat-based systems:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>dnf install boost-devel leveldb-devel curl-devel libmicrohttpd-devel miniupnpc-devel gmp-devel
</pre></div>
                                        </div>
                                        <p>Linux has a horror-show of
                                          fragmentation when it comes to
                                          packaging systems.</p>
                                        <p>We support a <a class="reference external"
                                            href="https://github.com/ethereum/cpp-ethereum/blob/develop/scripts/install_deps.sh">“one-button”
                                            bash script</a> which attempts to
                                          make this minefield more navigable for
                                          users of common distros. It identifies
                                          your distro and installs the external
                                          packages which you will need, using
                                          whatever combination of package
                                          servers and build-from-source is
                                          required for your specific distro
                                          version. This is a non-trivial task,
                                          but by that token is also something
                                          which we don’t want anybody to have to
                                          replicate themselves.</p>
                                        <div class="code bash highlight-python">
                                          <div class="highlight">
                                            <pre><span class="n">scripts</span><span
class="o">/</span><span class="n">install_deps</span><span class="o">.</span><span
class="n">sh</span>
</pre></div>
                                        </div>
                                        <p>We use the same script for automated
                                          builds and continuous integration, so
                                          it is continuously tested, which is
                                          especially important on MacOS, where
                                          Homebrew is a constantly moving
                                          target.</p>
                                        <p>If you try it, and it doesn’t work
                                          for you, please <a class="reference external"
                                            href="https://github.com/ethereum/cpp-ethereum/issues/new">report
                                            the problem</a> with details of your
                                          distro, your version number and any
                                          other important details and we can
                                          work together to get it working for
                                          your use-case.</p>
                                        <p>We have manual instructions for
                                          Fedora, openSUSE and Arch Linux (see
                                          below). If you using some other distro
                                          then please contact us and we’ll see
                                          if we can get you going.</p>
                                        <div class="toctree-wrapper compound"> <span
                                            id="document-ethereum-clients/cpp-ethereum/building-from-source/linux-fedora"></span>
                                          <div class="section" id="installing-dependencies-for-fedora">
                                            <h9>Installing dependencies for
                                              Fedora<a class="headerlink" href="#installing-dependencies-for-fedora"
                                                title="Permalink to this headline">¶</a></h9>
                                            <div class="section" id="fedora-24">
                                              <h10>Fedora 24<a class="headerlink"
                                                  href="#fedora-24" title="Permalink to this headline">¶</a></h10>
                                              <p>Steps:</p>
                                              <div class="highlight-python">
                                                <div class="highlight">
                                                  <pre>dnf install git automake autoconf libtool cmake gcc gcc-c++ xkeyboard-config \
        leveldb-devel boost-devel gmp-devel cryptopp-devel miniupnpc-devel \
        qt5-qtbase-devel qt5-qtdeclarative-devel qt5-qtquick1-devel qt5-qtwebkit-devel \
        mesa-dri-drivers snappy-devel ncurses-devel readline-devel curl-devel \
        python-devel jsoncpp-devel argtable-devel libmicrohttpd-devel
</pre></div>
                                              </div>
                                              <p>Make sure you have cloned the
                                                repository recursively. If not
                                                please clone the submodules of
                                                the respository as well. It may
                                                happen that after <cite># make
                                                  install</cite>, you might not
                                                be able to run eth because of
                                                linking errors. In that case you
                                                have to add the shared objects
                                                of eth into your load path for
                                                shared objects.</p>
                                            </div>
                                          </div>
                                          <span id="document-ethereum-clients/cpp-ethereum/building-from-source/linux-opensuse"></span>
                                          <div class="section" id="installing-dependencies-for-opensuse">
                                            <h9>Installing dependencies for
                                              openSUSE<a class="headerlink" href="#installing-dependencies-for-opensuse"
                                                title="Permalink to this headline">¶</a></h9>
                                            <p>Here is how to get the
                                              dependencies needed to build the
                                              latest webthree-umbrella on
                                              OpenSUSE. This was done on Leap
                                              42.1 and 42.2, but there should be
                                              equivalent packages available for
                                              Tumbleweed and 13.x.</p>
                                            <p>First install dependencies
                                              provided by the main repos:</p>
                                            <div class="highlight-python">
                                              <div class="highlight">
                                                <pre>zypper in git automake autoconf libtool cmake gcc gcc-c++ \
    xkeyboard-config leveldb-devel boost-devel gmp-devel \
    libcryptopp-devel libminiupnpc-devel libqt5-qtbase-common-devel \
    libqt5-qtdeclarative-devel libQtWebKit-devel libqt5-qtwebengine-devel \
    libQt5Concurrent-devel Mesa ncurses-devel readline-devel libcurl-devel \
    llvm llvm-clang llvm-clang-devel llvm-devel libLLVM binutils \
    libmicrohttpd-devel jsoncpp-devel opencl-headers-1.2 zlib-devel
</pre></div>
                                            </div>
                                            <dl class="docutils">
                                              <dt>If Opencl-headers-1.2 is not
                                                found, you can install it
                                                manually from the CLI:</dt>
                                              <dd>zypper addrepo <a class="reference external"
                                                  href="http://download.opensuse.org/repositories/home:valmar73:crystfel-releases/openSUSE_13.1/home:valmar73:crystfel-releases.repo">http://download.opensuse.org/repositories/home:valmar73:crystfel-releases/openSUSE_13.1/home:valmar73:crystfel-releases.repo</a>
                                                zypper refresh zypper install
                                                opencl-headers-1.2</dd>
                                            </dl>
                                            <p>It may be possible to use the
                                              generic <cite>libOpenCL1</cite>,
                                              but I have only tested with the
                                              AMD proprietary package from the
                                              AMD drivers repo <cite>fglrx64_opencl_SUSE421</cite></p>
                                            <p>These packages are not in the
                                              standard repos but can be found
                                              using the OpenSUSE build service
                                              package search and YaST 1-Click
                                              Install:</p>
                                            <ul class="simple">
                                              <li>libargtable2-devel</li>
                                              <li>libv8-3</li>
                                              <li>v8-devel</li>
                                            </ul>
                                            <p>If you also have v8 from the
                                              chromium repo installed the devel
                                              package will default to the 4.x
                                              branch which will not work. Use
                                              YaST or zypper to downgrade this
                                              package to 3.x</p>
                                            <p>Note that Opencl-headers is used
                                              to mine the chain with GPU. If
                                              this is not a requirement, you can
                                              bypass it when creating the
                                              makefile (cmake -DETHASHCL=0 .. )
                                              instead of (cmake ..)</p>
                                          </div>
                                          <span id="document-ethereum-clients/cpp-ethereum/building-from-source/linux-arch"></span>
                                          <div class="section" id="installing-dependencies-for-arch-linux">
                                            <h9>Installing dependencies for Arch
                                              Linux<a class="headerlink" href="#installing-dependencies-for-arch-linux"
                                                title="Permalink to this headline">¶</a></h9>
                                            <p>Compiling webthree-umbrella on
                                              Arch Linux requires dependencies
                                              from both the <a class="reference external"
                                                href="https://wiki.archlinux.org/index.php/Official_repositories">official
                                                repositories</a> and the <a class="reference external"
                                                href="https://wiki.archlinux.org/index.php/Arch_User_Repository">Arch
                                                User Repository (AUR)</a>. To
                                              install packages from the official
                                              repositories <a class="reference external"
                                                href="https://wiki.archlinux.org/index.php/Pacman">pacman</a>
                                              is used. For installation of
                                              packages from the AUR, a number of
                                              AUR helpers is <a class="reference external"
                                                href="https://wiki.archlinux.org/index.php/AUR_helpers">available</a>.
                                              For this guide, <a class="reference external"
                                                href="http://archlinux.fr/yaourt-en">yaourt</a>
                                              AUR helper is used.</p>
                                            <div class="section" id="installing-dependencies">
                                              <h10>Installing dependencies<a class="headerlink"
                                                  href="#installing-dependencies"
                                                  title="Permalink to this headline">¶</a></h10>
                                              <blockquote>
                                                <div>
                                                  <p># from official
                                                    repositories sudo pacman -Sy
                                                    git base-devel cmake boost
                                                    crypto++ leveldb llvm
                                                    miniupnpc libcl
                                                    opencl-headers libmicrohttpd
                                                    qt5-base qt5-webengine</p>
                                                  <p># from AUR yaourt -Sy
                                                    libjson-rpc-cpp</p>
                                                </div>
                                              </blockquote>
                                            </div>
                                            <div class="section" id="compiling-the-source-code">
                                              <h10>Compiling the source code<a class="headerlink"
                                                  href="#compiling-the-source-code"
                                                  title="Permalink to this headline">¶</a></h10>
                                              <p>During this step, an
                                                installation folder for the
                                                Ethereum can be specified.
                                                Specification of the folder is
                                                optional though. If not given,
                                                the binary files will be located
                                                in the build folder. However,
                                                for this guide, it is assumed
                                                that the Ethereum files will be
                                                installed under <cite>/opt/eth</cite>.
                                                The reason for using <cite>/opt</cite>
                                                is that it makes much easier to
                                                delete the Ethereum files later
                                                on, as compared to having them
                                                installed under, e.g., <cite>/usr</cite>.
                                                Also <cite>/opt</cite> is
                                                commonly used to install
                                                software that is not managed by
                                                packaging systems, such as
                                                manually compiled programs.</p>
                                              <div class="highlight-python">
                                                <div class="highlight">
                                                  <pre># enter webthree-umbrella folder after cloning its github repository
cd webthree-umbrella

# make a build folder and enter into it
mkdir -p build &amp;&amp; cd build

# create build files and specify Ethereum installation folder
cmake .. -DCMAKE_INSTALL_PREFIX=/opt/eth

# compile the source code
make

# alternatively it is possible to specify number of compilation threads
# for example to use 4 threads execute make as follows:
# make -j 4

# install the resulting binaries, shared libraries and header files into /opt
sudo make install
</pre></div>
                                              </div>
                                              <p>After successful compilation
                                                and installation, Ethereum
                                                binaries can be found in <cite>/opt/eth/bin</cite>,
                                                shared libraries in <cite>/opt/eth/lib</cite>,
                                                and header files in <cite>/opt/eth/include</cite>.</p>
                                            </div>
                                            <div class="section" id="specifying-ethereum-libraries-path">
                                              <h10>Specifying Ethereum libraries
                                                path<a class="headerlink" href="#specifying-ethereum-libraries-path"
                                                  title="Permalink to this headline">¶</a></h10>
                                              <p>Since Ethereum was installed in
                                                <cite>/opt/eth</cite>, executing
                                                its binaries can result in
                                                linker error due to not being
                                                able to find the Ethereum shared
                                                libraries. To rectify this
                                                issue, it is needed to add the
                                                folder containing Ethereum
                                                shared libraries into <cite>LD_LIBRARY_PATH</cite>
                                                environmental variable:</p>
                                              <div class="highlight-python">
                                                <div class="highlight">
                                                  <pre># update ~/.bashrc
echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/eth/lib" &gt;&gt; ~/.bashrc

# reload ~/.bashrc
source ~/.bashrc
</pre></div>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                      <div class="section" id="build-on-the-command-line">
                                        <h8>Build on the command-line<a class="headerlink"
                                            href="#build-on-the-command-line" title="Permalink to this headline">¶</a></h8>
                                        <p>When you have installed your
                                          dependencies you can build.</p>
                                        <div class="code bash highlight-python">
                                          <div class="highlight">
                                            <pre>mkdir build                                              Make a directory for the build output
cd build                                                 Switch into that directory

cmake ..                                                 To generate a makefile.
make                                                     To build that makefile on the command-line
make -j&lt;number&gt;                                          (or) Execute makefile with multiple cores in parallel
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="bit-linux-builds">
                                        <h8>32-bit Linux builds<a class="headerlink"
                                            href="#bit-linux-builds" title="Permalink to this headline">¶</a></h8>
                                        <p>We have cpp-ethereum building and
                                          running successfully on many 32-bit
                                          Linux distros, with the main
                                          constraint being the availability of
                                          external dependencies in 32-bit
                                          variants. Probably the most active
                                          demand here is for single-board
                                          computers like the Raspberry Pi
                                          family.</p>
                                        <p>You will need to disable the JIT and
                                          the heavy-weight LLVM dependency which
                                          comes with that. EVMJIT only supports
                                          x86_64. Other than that, cpp-ethereum
                                          should “just work” on 32-bit
                                          platforms. To disable JIT, you will
                                          need to use the following command for
                                          the Makefile generation phase:</p>
                                        <div class="code bash highlight-python">
                                          <div class="highlight">
                                            <pre>cmake .. -DEVMJIT=Off
</pre></div>
                                        </div>
                                      </div>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/windows"></span>
                                    <div class="section" id="building-for-windows">
                                      <h7>Building for Windows<a class="headerlink"
                                          href="#building-for-windows" title="Permalink to this headline">¶</a></h7>
                                      <p>We support <strong>only 64-bit</strong>
                                        builds and only for the following
                                        versions of Windows:</p>
                                      <ul class="simple">
                                        <li><a class="reference external" href="https://en.wikipedia.org/wiki/Windows_7">Windows
                                            7</a></li>
                                        <li><a class="reference external" href="https://en.wikipedia.org/wiki/Windows_8">Windows
                                            8/8.1</a></li>
                                        <li><a class="reference external" href="https://en.wikipedia.org/wiki/Windows_10">Windows
                                            10</a></li>
                                        <li><a class="reference external" href="https://en.wikipedia.org/wiki/Windows_Server_2012_R2">Windows
                                            Server 2012 R2</a></li>
                                      </ul>
                                      <p>It may be possible to get the client
                                        working for Windows 32-bit, by disabling
                                        EVMJIT and maybe other features too. We
                                        might accept pull-requests to add such
                                        support, but we will not put any of our
                                        own development time into supporting
                                        Windows 32-bit builds.</p>
                                      <div class="section" id="pre-requisites">
                                        <h8>Pre-requisites<a class="headerlink"
                                            href="#pre-requisites" title="Permalink to this headline">¶</a></h8>
                                        <p>You will need to install the
                                          following dependencies</p>
                                        <table class="docutils" border="1">
                                          <colgroup> <col width="35%"> <col width="65%">
                                          </colgroup>
                                          <thead valign="bottom">
                                            <tr class="row-odd">
                                              <th class="head">Software</th>
                                              <th class="head">Notes</th>
                                            </tr>
                                          </thead>
                                          <tbody valign="top">
                                            <tr class="row-even">
                                              <td><a class="reference external"
                                                  href="https://git-scm.com/download/win">Git
                                                  for Windows</a></td>
                                              <td>Command-line tool for
                                                retrieving source from Github.</td>
                                            </tr>
                                            <tr class="row-odd">
                                              <td><a class="reference external"
                                                  href="https://cmake.org/download/">CMake</a></td>
                                              <td>Cross-platform build file
                                                generator.</td>
                                            </tr>
                                            <tr class="row-even">
                                              <td><a class="reference external"
                                                  href="https://www.visualstudio.com/products/vs-2015-product-editions">Visual
                                                  Studio 2015</a></td>
                                              <td>C++ compiler and dev
                                                environment.</td>
                                            </tr>
                                          </tbody>
                                        </table>
                                      </div>
                                      <div class="section" id="get-the-source">
                                        <h8>Get the source<a class="headerlink"
                                            href="#get-the-source" title="Permalink to this headline">¶</a></h8>
                                        <p>Clone the git repository containing
                                          all the source code by executing the
                                          following command:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>git clone --recursive https://github.com/ethereum/cpp-ethereum.git
cd cpp-ethereum
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="get-the-external-dependencies">
                                        <h8>Get the external dependencies<a class="headerlink"
                                            href="#get-the-external-dependencies"
                                            title="Permalink to this headline">¶</a></h8>
                                        <p>Execute the CMake script that
                                          downloads and unpacks pre-built
                                          external libraries needed to build the
                                          project:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>scripts\install_deps.bat
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="generate-visual-studio-project-files">
                                        <h8>Generate Visual Studio project files<a
                                            class="headerlink" href="#generate-visual-studio-project-files"
                                            title="Permalink to this headline">¶</a></h8>
                                        <p>Then execute the following commands,
                                          which will generate a Visual Studio
                                          solution file using CMake:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>mkdir build
cd build
cmake -G "Visual Studio 14 2015 Win64" ..
</pre></div>
                                        </div>
                                        <p>Which should result in the creation
                                          of <strong>cpp-ethereum.sln</strong>
                                          in that build directory.</p>
                                        <p><strong>NOTE: We only support Visual
                                            Studio 2015 as of
                                            cpp-ethereum-v.1.3.0.</strong></p>
                                        <p>Double-clicking on that file should
                                          result in Visual Studio firing up. We
                                          suggest building <strong>RelWithDebugInfo</strong>
                                          configuration, but all others work.</p>
                                      </div>
                                      <div class="section" id="build-on-the-command-line">
                                        <h8>Build on the command-line<a class="headerlink"
                                            href="#build-on-the-command-line" title="Permalink to this headline">¶</a></h8>
                                        <p>Alternatively, you can build the
                                          project on the command-line, like so:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>cmake --build . --config RelWithDebInfo
</pre></div>
                                        </div>
                                      </div>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/macos"></span>
                                    <div class="section" id="building-for-os-x">
                                      <h7>Building for OS X<a class="headerlink"
                                          href="#building-for-os-x" title="Permalink to this headline">¶</a></h7>
                                      <div class="section" id="overview-here-be-dragons">
                                        <h8>Overview - Here be dragons!<a class="headerlink"
                                            href="#overview-here-be-dragons" title="Permalink to this headline">¶</a></h8>
                                        <p>It is impossible for us to avoid OS X
                                          build breaks because <a class="reference external"
                                            href="https://github.com/ethereum/webthree-umbrella/issues/118">Homebrew
                                            is a “rolling release” package
                                            manager</a> which means that the
                                          ground will forever be moving
                                          underneath us unless we add all
                                          external dependencies to our <a class="reference external"
                                            href="http://github.com/ethereum/homebrew-ethereum">Homebrew
                                            tap</a>, or add them as git
                                          sub-modules. End-user results vary
                                          depending on when they are build the
                                          project. Building yesterday may have
                                          worked for you, but that doesn’t
                                          guarantee that your friend will have
                                          the same result today on their
                                          machine. Needless to say, this isn’t a
                                          happy situation.</p>
                                        <p>If you hit build breaks for OS X
                                          please look through the <a class="reference external"
                                            href="https://github.com/ethereum/cpp-ethereum/issues">Github
                                            issues</a> to see whether the issue
                                          you are experiencing has already been
                                          reported. If so, please comment on
                                          that existing issue. If you don’t see
                                          anything which looks similar, please
                                          create a new issue, detailing your OS
                                          X version, cpp-ethereum version,
                                          hardware and any other details you
                                          think might be relevant. Please add
                                          verbose log files via <a class="reference external"
                                            href="http://gist.github.com">gist.github.com</a>
                                          or a similar service.</p>
                                        <p>The <a class="reference external" href="https://gitter.im/ethereum/cpp-ethereum-development">cpp-ethereum-development</a>
                                          gitter channel is where we hang out,
                                          and try to work together to get known
                                          issues resolved.</p>
                                        <p>We only support the following OS X
                                          versions:</p>
                                        <ul class="simple">
                                          <li><a class="reference external" href="https://en.wikipedia.org/wiki/OS_X_Mavericks">OS
                                              X Mavericks (10.9)</a></li>
                                          <li><a class="reference external" href="https://en.wikipedia.org/wiki/OS_X_Yosemite">OS
                                              X Yosemite (10.10)</a></li>
                                          <li><a class="reference external" href="https://en.wikipedia.org/wiki/OS_X_El_Capitan">OS
                                              X El Capitan (10.11)</a></li>
                                        </ul>
                                        <p>The cpp-ethereum code base does not
                                          build on older OS X versions and this
                                          is not something which we will ever
                                          support. If you are using an older OS
                                          X version, we recommend that you
                                          update to the latest release, not just
                                          so that you can build cpp-ethereum,
                                          but for your own security.</p>
                                      </div>
                                      <div class="section" id="clone-the-repository">
                                        <h8>Clone the repository<a class="headerlink"
                                            href="#clone-the-repository" title="Permalink to this headline">¶</a></h8>
                                        <p>To clone the source code, execute the
                                          following command:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>git clone --recursive https://github.com/ethereum/cpp-ethereum.git
cd cpp-ethereum
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="pre-requisites-and-external-dependencies">
                                        <h8>Pre-requisites and external
                                          dependencies<a class="headerlink" href="#pre-requisites-and-external-dependencies"
                                            title="Permalink to this headline">¶</a></h8>
                                        <p>Ensure that you have the latest
                                          version of <a class="reference external"
                                            href="https://developer.apple.com/xcode/download/">xcode
                                            installed</a>. This contains the <a
                                            class="reference external" href="https://en.wikipedia.org/wiki/Clang">Clang
                                            C++ compiler</a>, the <a class="reference external"
                                            href="https://en.wikipedia.org/wiki/Xcode">xcode
                                            IDE</a> and other Apple development
                                          tools which are required for building
                                          C++ applications on OS X. If you are
                                          installing xcode for the first time,
                                          or have just installed a new version
                                          then you will need to agree to the
                                          license before you can do command-line
                                          builds:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>sudo xcodebuild -license accept
</pre></div>
                                        </div>
                                        <p>Our OS X builds require you to <a class="reference external"
                                            href="http://brew.sh">install the
                                            Homebrew</a> package manager for
                                          installing external dependencies.
                                          Here’s how to <a class="reference external"
                                            href="https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/FAQ.md#how-do-i-uninstall-homebrew">uninstall
                                            Homebrew</a>, if you ever want to
                                          start again from scratch.</p>
                                        <p>We now have a “one button” script
                                          which installs all required external
                                          dependencies on macOS and on numerous
                                          Linux distros. This used to a
                                          multi-step manual process:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>./scripts/install_deps.sh
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="command-line-build">
                                        <h8>Command-line build<a class="headerlink"
                                            href="#command-line-build" title="Permalink to this headline">¶</a></h8>
                                        <p>From the project root:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>mkdir build
cd build
cmake ..
make -j4             (or different value, depending on your number of CPU cores)
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="install-your-own-build">
                                        <h8>Install your own build<a class="headerlink"
                                            href="#install-your-own-build" title="Permalink to this headline">¶</a></h8>
                                        <p>You can also use the same Makefile to
                                          install your own build globally on
                                          your machine:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>make install
</pre></div>
                                        </div>
                                        <p>This will install binaries into <strong>/usr/local/</strong>
                                          and <strong>/usr/bin/</strong>.</p>
                                      </div>
                                      <div class="section" id="generate-xcode-project">
                                        <h8>Generate xcode project<a class="headerlink"
                                            href="#generate-xcode-project" title="Permalink to this headline">¶</a></h8>
                                        <p>From the project root:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>mkdir build_xc
cd build_xc
cmake -G Xcode ..
</pre></div>
                                        </div>
                                        <p>This will generate an Xcode project
                                          file called <strong>cpp-ethereum.xcodeproj</strong>,
                                          which you can then open with xcode and
                                          build/debug/run.</p>
                                      </div>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/freebsd"></span>
                                    <div class="section" id="building-for-freebsd">
                                      <h7>Building for FreeBSD<a class="headerlink"
                                          href="#building-for-freebsd" title="Permalink to this headline">¶</a></h7>
                                      <p>NOTE - Once the packages are in the
                                        FreeBSD main ports this guide should be
                                        changed to something much more simple</p>
                                      <div class="section" id="install-the-ports-manually">
                                        <h8>Install the ports manually<a class="headerlink"
                                            href="#install-the-ports-manually" title="Permalink to this headline">¶</a></h8>
                                        <p>For some of this steps you must
                                          require a root access to modify the
                                          ports directory.</p>
                                        <p>The webthree-umbrella depends on
                                          [libjson-rpc-cpp.shar](<a class="reference external"
                                            href="https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/libjson-rpc-cpp.shar">https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/libjson-rpc-cpp.shar</a>)
                                          that is also not in the ports system.</p>
                                        <p>First you need to download the shar
                                          file and place it on your ports
                                          directory under the “devel” session,
                                          usually /usr/ports/devel</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>curl https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/libjson-rpc-cpp.shar &gt; /usr/ports/devel/libjson-rpc-cpp.shar
</pre></div>
                                        </div>
                                        <p>Now we execute the script with:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>cd /usr/ports/devel
sh libjson-rpc-cpp.shar
</pre></div>
                                        </div>
                                        <p>This will create the libjson-rpc-cpp
                                          port. Now you should do the same for
                                          the webthree-umbrella port, we should
                                          get the [webthree-umbrella](<a class="reference external"
                                            href="https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/webthree-umbrella.shar">https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/webthree-umbrella.shar</a>)
                                          file and create the port under
                                          “net-p2p” directory.</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>curl https://raw.githubusercontent.com/enriquefynn/webthree-umbrella-port/master/webthree-umbrella.shar&gt; /usr/ports/net-p2p/webthree-umbrella.shar
cd /usr/ports/net-p2p
sh webthree-umbrella.shar
</pre></div>
                                        </div>
                                      </div>
                                      <div class="section" id="build-and-install">
                                        <h8>Build and Install<a class="headerlink"
                                            href="#build-and-install" title="Permalink to this headline">¶</a></h8>
                                        <p>Now you can navigate to the
                                          webthree-umbrella directory and
                                          install the port:</p>
                                        <div class="highlight-python">
                                          <div class="highlight">
                                            <pre>cd /usr/ports/net-p2p/webthree-umbrella
make install clean
</pre></div>
                                        </div>
                                      </div>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/android"></span>
                                    <div class="section" id="building-for-android">
                                      <h7>Building for Android<a class="headerlink"
                                          href="#building-for-android" title="Permalink to this headline">¶</a></h7>
                                      <p>We don’t currently have a working
                                        Android build, though that is <a class="reference external"
                                          href="https://github.com/doublethinkco/webthree-umbrella-cross/issues/35">on
                                          the roadmap</a> for <a class="reference external"
                                          href="http://doublethink.co">doublethinkco</a>.
                                        Android uses the Linux kernel, but has a
                                        <a class="reference external" href="http://doublethink.co/2015/12/31/a-tale-of-two-abis/">different
                                          API</a> than the ARM Linux
                                        cross-builds, meaning that specific
                                        binaries will be required.</p>
                                      <p>ARM Linux distros use the GLIBC runtime
                                        library, where Android uses bionic.</p>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/ios"></span>
                                    <div class="section" id="building-for-ios">
                                      <h7>Building for iOS<a class="headerlink"
                                          href="#building-for-ios" title="Permalink to this headline">¶</a></h7>
                                      <p>We don’t currently have a working iOS
                                        build, though that is <a class="reference external"
                                          href="https://github.com/doublethinkco/webthree-umbrella-cross/issues/36">on
                                          the roadmap</a> for <a class="reference external"
                                          href="http://doublethink.co">doublethinkco</a>.
                                        iOS is a UNIX-like operating system
                                        based on Darwin (BSD) using ARM chips.
                                        This is a <a class="reference external"
                                          href="http://doublethink.co/2015/12/31/a-tale-of-two-abis/">different
                                          API</a> than the ARM Linux
                                        cross-builds, meaning that specific
                                        binaries will be required.</p>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/rpi"></span>
                                    <div class="section" id="building-for-raspberry-pi-model-a-b-zero-2-and-3">
                                      <h7>Building for Raspberry Pi Model A, B+,
                                        Zero, 2 and 3<a class="headerlink" href="#building-for-raspberry-pi-model-a-b-zero-2-and-3"
                                          title="Permalink to this headline">¶</a></h7>
                                      <p><a class="reference external" href="http://EthEmbedded.com">EthEmbedded</a>
                                        maintain build scripts for all Raspberry
                                        Mi models. They are on Github in the <a
                                          class="reference external" href="https://github.com/EthEmbedded/Raspi-Eth-Install">Raspi-Eth-Install</a>
                                        repository. It is also possible to
                                        cross-build for these platforms.</p>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/odroid"></span>
                                    <div class="section" id="building-for-odroid-xu3-xu4">
                                      <h7>Building for Odroid XU3/XU4<a class="headerlink"
                                          href="#building-for-odroid-xu3-xu4" title="Permalink to this headline">¶</a></h7>
                                      <p><a class="reference external" href="http://EthEmbedded.com">EthEmbedded</a>
                                        maintain build scripts for both of these
                                        Odroid models. Support for a broader
                                        range of Odroid devices is likely in the
                                        future. They are on Github in the <a class="reference external"
                                          href="https://github.com/EthEmbedded/OdroidXU3-Eth-Install">OdroidXU3-Eth-Install</a>
                                        repository. It is also possible to
                                        cross-build for these platforms.</p>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/beaglebone"></span>
                                    <div class="section" id="building-for-beaglebone-black">
                                      <h7>Building for BeagleBone Black<a class="headerlink"
                                          href="#building-for-beaglebone-black"
                                          title="Permalink to this headline">¶</a></h7>
                                      <p><a class="reference external" href="http://EthEmbedded.com">EthEmbedded</a>
                                        maintain build scripts for BBB on Github
                                        in the <a class="reference external" href="https://github.com/EthEmbedded/BBB-Eth-Install">BBB-Eth-Install</a>
                                        repository. It is also possible to
                                        cross-build for this platform.</p>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/wandboard"></span>
                                    <div class="section" id="building-for-wandboard">
                                      <h7>Building for WandBoard<a class="headerlink"
                                          href="#building-for-wandboard" title="Permalink to this headline">¶</a></h7>
                                      <p><a class="reference external" href="http://EthEmbedded.com">EthEmbedded</a>
                                        maintain build scripts for the WandBoard
                                        on Github in the <a class="reference external"
                                          href="https://github.com/EthEmbedded/WandBoard-Eth-Install">WandBoard-Eth-Install</a>
                                        repository. It is also possible to
                                        cross-build for this platform.</p>
                                    </div>
                                    <span id="document-ethereum-clients/cpp-ethereum/building-from-source/linux-arm"></span>
                                    <div class="section" id="building-for-linux-for-arm-cross-builds">
                                      <h7>Building for Linux for ARM (cross
                                        builds)<a class="headerlink" href="#building-for-linux-for-arm-cross-builds"
                                          title="Permalink to this headline">¶</a></h7>
                                      <p><a class="reference external" href="http://doublethink.co">doublethinkco</a>
                                        maintain a Docker-based cross-build
                                        infrastructure which is hosted on Github
                                        in the <a class="reference external" href="http://github.com/doublethinkco/cpp-ethereum-cross">cpp-ethereum-cross</a>
                                        repository.</p>
                                      <p>At the time of writing, these
                                        cross-built binaries have been
                                        successfully used on the following
                                        devices:</p>
                                      <ul class="simple">
                                        <li>Jolla Phone (Sailfish OS)</li>
                                        <li>Nexus 5 (Sailfish OS)</li>
                                        <li>Meizu MX4 Ubuntu Edition (Ubuntu
                                          Phone)</li>
                                        <li>Raspberry Pi Model B+, Rpi2
                                          (Raspbian)</li>
                                        <li>Odroid XU3 (Ubuntu MATE)</li>
                                        <li>BeagleBone Black (Debian)</li>
                                        <li>Wandboard Quad (Debian)</li>
                                        <li>C.H.I.P. (Debian)</li>
                                      </ul>
                                      <p>Still TODO:</p>
                                      <ul class="simple">
                                        <li>Tizen</li>
                                        <li>Android</li>
                                        <li>iOS</li>
                                      </ul>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/index"></span>
                              <div class="section" id="installing-binaries"> <span
                                  id="id1"></span>
                                <h5>Installing binaries<a class="headerlink" href="#installing-binaries"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>The cpp-ethereum development team and the
                                  broader Ethereum community publish binary
                                  releases in many different forms for a variety
                                  of platforms. This aims to be a complete list
                                  of those releases.</p>
                                <p>If you are aware of other third-party
                                  packaging efforts, please let us know on the <a
                                    class="reference external" href="http://gitter.im/ethereum/cpp-ethereum">cpp-ethereum
                                    gitter channel</a>, and we will add them to
                                  this list.</p>
                                <div class="toctree-wrapper compound"> <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/docker"></span>
                                  <div class="section" id="docker">
                                    <h6>Docker<a class="headerlink" href="#docker"
                                        title="Permalink to this headline">¶</a></h6>
                                    <p>We are hosting latest development
                                      snapshots (and in the future also
                                      releases) at docker hub. You can run these
                                      images as follows:</p>
                                    <div class="section" id="preparation"> <h7>Preparation<a
                                          class="headerlink" href="#preparation"
                                          title="Permalink to this headline">¶</a></h7>
                                      <p>Before running the image, you should
                                        pull the latest version and prepare the
                                        data directories:</p>
                                      <div class="highlight-python">
                                        <div class="highlight">
                                          <pre># get the lastest version from dockerhub (redo for updates).
docker pull ethereum/client-cpp
# create mountable datadirs; blockchain/account data will be stored there
mkdir -p ~/.ethereum ~/.web3
</pre></div>
                                      </div>
                                      <p>These steps need to be done only once.
                                        For upgrading to a new version do the <code
                                          class="docutils literal"><span class="pre">docker</span>
                                          <span class="pre">pull</span> <span class="pre">...</span></code>
                                        again.</p>
                                    </div>
                                    <div class="section" id="execution"> <h7>Execution<a
                                          class="headerlink" href="#execution" title="Permalink to this headline">¶</a></h7>
                                      <p>The simplest version is to run:</p>
                                      <div class="highlight-python">
                                        <div class="highlight">
                                          <pre>docker run --rm -it \
    -p 127.0.0.1:8545:8545 \
    -p 0.0.0.0:30303:30303 \
    -v ~/.ethereum:/.ethereum \
    -v ~/.web3:/.web3 \
    -e HOME=/ \
    --user $(id -u):$(id -g) \
    ethereum/client-cpp
</pre></div>
                                      </div>
                                      <p>This will write data to <code class="docutils literal"><span
                                            class="pre">~/.ethereum</span></code>
                                        and <code class="docutils literal"><span
                                            class="pre">~/.web3/</span></code>
                                        on your host and run the client with
                                        your user’s permissions. For most cases
                                        this should be sufficient and the client
                                        should behave exactly as if run from a
                                        local build.</p>
                                      <p>If you want the rpc port reachable from
                                        the network (not recommended, never do
                                        this if you have valuable data or
                                        private keys on your machine), replace <code
                                          class="docutils literal"><span class="pre">-p</span>
                                          <span class="pre">127.0.0.1:8545:8545</span></code>
                                        by <code class="docutils literal"><span
                                            class="pre">-p</span> <span class="pre">0.0.0.0:8545:8545</span></code>.</p>
                                      <p>For convenience, you can create the
                                        file <code class="docutils literal"><span
                                            class="pre">/usr/local/bin/docker-eth</span></code>
                                        with the following content:</p>
                                      <div class="highlight-python">
                                        <div class="highlight">
                                          <pre>#!/usr/bin/env sh
mkdir -p ~/.ethereum ~/.web3
if ! id -nG $(whoami)|grep -qw "docker"; then SUDO='sudo'; else SUDO=''; fi
$SUDO docker run --rm -it \
    -p 127.0.0.1:8545:8545 \
    -p 0.0.0.0:30303:30303 \
    -v ~/.ethereum:/.ethereum \
    -v ~/.web3:/.web3 \
    -e HOME=/ \
    --user $(id -u):$(id -g) \
    ethereum/client-cpp $@
</pre></div>
                                      </div>
                                      <p>And make it executable with <code class="docutils literal"><span
                                            class="pre">chmod</span> <span class="pre">+x</span>
                                          <span class="pre">/usr/local/bin/docker-eth</span></code>.
                                        Now you can start the client with:</p>
                                      <div class="highlight-python">
                                        <div class="highlight">
                                          <pre><span class="n">docker</span><span
class="o">-</span><span class="n">eth</span>
</pre></div>
                                      </div>
                                      <p><strong>Note:</strong> The <code class="docutils literal"><span
                                            class="pre">docker-eth</span></code>
                                        command will accept the same flags as
                                        the raw <code class="docutils literal"><span
                                            class="pre">eth</span></code>
                                        command.</p>
                                      <p>If you want to attach to the node, you
                                        can either just use mist (it will detect
                                        the node automatically), use <code class="docutils literal"><span
                                            class="pre">geth</span> <span class="pre">attach</span>
                                          <span class="pre">ipc:/$HOME/.ethereum/geth.ipc</span></code>
                                        or ethereum-console as described in <span
                                          class="xref std std-ref">Running
                                          cpp-ethereum</span>.</p>
                                    </div>
                                    <div class="section" id="advanced-usage"> <h7>Advanced
                                        usage:<a class="headerlink" href="#advanced-usage"
                                          title="Permalink to this headline">¶</a></h7>
                                      <p>Due to <a class="reference external" href="https://github.com/docker/libnetwork/issues/552">https://github.com/docker/libnetwork/issues/552</a>
                                        multicast is not working yet without <code
                                          class="docutils literal"><span class="pre">--net=host</span></code>.
                                        You can still run the client with
                                        network isolation and use <code class="docutils literal"><span
                                            class="pre">-p</span> <span class="pre">127.0.0.1:8545:8545</span>
                                          <span class="pre">-p</span> <span class="pre">30303:30303</span>
                                          <span class="pre">-p</span> <span class="pre">30303:30303/udp</span></code>
                                        for publishing the rpc, discovery and
                                        p2p ports. If you want to be
                                        discoverable from the outside, you will
                                        need to</p>
                                      <ul class="simple">
                                        <li>add your public ip address with the
                                          <code class="docutils literal"><span class="pre">--public-ip</span></code>
                                          flag,</li>
                                        <li>create a port forwarding with your
                                          NAT</li>
                                      </ul>
                                      <p>(syncing will still work without it).</p>
                                    </div>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/linux-ubuntu-ppa"></span>
                                  <div class="section" id="ubuntu-ppa-personal-package-archive">
                                    <h6>Ubuntu PPA (Personal Package Archive)<a
                                        class="headerlink" href="#ubuntu-ppa-personal-package-archive"
                                        title="Permalink to this headline">¶</a></h6>
                                    <p><strong>ЗАУВАЖЕННЯ - На час написання (31
                                        серпня 2016), PPAs були зруйновані, за
                                        чим послідувала значна реорганізація
                                        репозиторію та зміна процеса
                                        автоматизації. Ми не відслідковували
                                        кроки генерації PPA з тих пір, хоча це
                                        буде знов в найближчому майбутньому.
                                        Поки що, будь ласка, слідуйте
                                        інструкціям<span style="color: #2980b9;">
                                        </span></strong><a class="reference internal"
                                        href="index.html#building-linux-from-source"><span>Побудова
                                          для Linux</span></a><strong>.</strong></p>
                                    <p>We have set up PPA instances for the
                                      following Ubuntu versions:</p>
                                    <ul class="simple">
                                      <li><a class="reference external" href="https://wiki.ubuntu.com/TrustyTahr">Ubuntu
                                          Trusty Tahr (14.04)</a></li>
                                      <li><a class="reference external" href="https://wiki.ubuntu.com/UtopicUnicorn">Ubuntu
                                          Utopic Unicorn (14.10)</a></li>
                                      <li><a class="reference external" href="https://wiki.ubuntu.com/VividVervet">Ubuntu
                                          Vivid Vervet (15.04)</a></li>
                                      <li><a class="reference external" href="https://wiki.ubuntu.com/WilyWerewolf">Ubuntu
                                          Wily Werewolf (15.10)</a></li>
                                      <li><a class="reference external" href="https://wiki.ubuntu.com/XenialXerus">Ubuntu
                                          Xenial Xerus (16.04)</a></li>
                                    </ul>
                                    <p><strong>We only support 64-bit builds.</strong>
                                      It may be possible to get the client
                                      working for Ubuntu 32-bit, by building
                                      from source and disabling EVMJIT and maybe
                                      other features too. We might accept
                                      pull-requests to add such support, but we
                                      will not put any of our development time
                                      into supporting Ubuntu 32-bit builds.</p>
                                    <p>For the latest stable version:</p>
                                    <div class="highlight-python">
                                      <div class="highlight">
                                        <pre>sudo apt-get install software-properties-common
sudo add-apt-repository ppa:ethereum/ethereum
sudo apt-get update
sudo apt-get install cpp-ethereum
</pre></div>
                                    </div>
                                    <p>If you want to use the cutting edge
                                      developer version:</p>
                                    <div class="highlight-python">
                                      <div class="highlight">
                                        <pre>sudo apt-get install software-properties-common
sudo add-apt-repository ppa:ethereum/ethereum
sudo add-apt-repository ppa:ethereum/ethereum-dev
sudo apt-get update
sudo apt-get install cpp-ethereum
</pre></div>
                                    </div>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/windows-chocolatey"></span>
                                  <div class="section" id="windows-chocolatey-nuget-packages">
                                    <h6>Windows Chocolatey NuGet packages<a class="headerlink"
                                        href="#windows-chocolatey-nuget-packages"
                                        title="Permalink to this headline">¶</a></h6>
                                    <p>We aren’t generating <a class="reference external"
                                        href="https://chocolatey.org/">Chocolatey</a>
                                      packages at the time of writing, though we
                                      have done so in the past.</p>
                                    <p>For anybody who isn’t already familiar
                                      with the technology, this is essentially <cite>apt-get
                                        for Windows</cite> - a global silent
                                      installer for tools.</p>
                                    <p>We would like to <a class="reference external"
                                        href="https://github.com/ethereum/webthree-umbrella/issues/345">support
                                        Chocolatey</a> again in the near future
                                      for all the same reasons we support
                                      Homebrew on OS X and have PPAs for Ubuntu.
                                      For technically competent users, doing
                                      command-line operations like so would be
                                      very convenient:</p>
                                    <div class="highlight-python">
                                      <div class="highlight">
                                        <pre>choco install cpp-ethereum
choco update cpp-ethereum
</pre></div>
                                    </div>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/osx-homebrew"></span>
                                  <div class="section" id="os-x-homebrew-packages">
                                    <h6>OS X Homebrew packages<a class="headerlink"
                                        href="#os-x-homebrew-packages" title="Permalink to this headline">¶</a></h6>
                                    <p>We generate Homebrew packages within our
                                      automated build system for the following
                                      OS X / Mac versions:</p>
                                    <ul class="simple">
                                      <li><a class="reference external" href="https://en.wikipedia.org/wiki/OS_X_Mavericks">OS
                                          X Mavericks (10.9)</a></li>
                                      <li><a class="reference external" href="https://en.wikipedia.org/wiki/OS_X_Yosemite">OS
                                          X Yosemite (10.10)</a></li>
                                      <li><a class="reference external" href="https://en.wikipedia.org/wiki/OS_X_El_Capitan">OS
                                          X El Capitan (10.11)</a></li>
                                    </ul>
                                    <p><strong>We only support 64-bit builds.</strong></p>
                                    <p>If your system does not support these OS
                                      X versions then you are out of luck.
                                      Sorry!</p>
                                    <p>All OS X builds require you to <a class="reference external"
                                        href="http://brew.sh">install the
                                        Homebrew</a> package manager before doin</p>
                                    <h4>tashe</h4>
                                    <p>g anything else. Here’s how to <a class="reference external"
                                        href="https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/FAQ.md#how-do-i-uninstall-homebrew">uninstall
                                        Homebrew</a>, if you ever want to start
                                      again from scratch.</p>
                                    <p>To install the Ethereum C++ components
                                      from Homebrew, execute these commands:</p>
                                    <div class="highlight-python">
                                      <div class="highlight">
                                        <pre>brew update
brew upgrade
brew tap ethereum/ethereum
brew install cpp-ethereum
brew linkapps cpp-ethereum
</pre></div>
                                    </div>
                                    <p>Here is the <a class="reference external"
                                        href="https://github.com/ethereum/homebrew-ethereum/blob/master/cpp-ethereum.rb">Homebrew
                                        Formula</a> which details all the
                                      supported command-line options.</p>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/linux-sbcs"></span>
                                  <div class="section" id="raspberry-pi-odroid-beaglebone-black-wandboard">
                                    <h6>Raspberry Pi, Odroid, BeagleBone Black,
                                      Wandboard<a class="headerlink" href="#raspberry-pi-odroid-beaglebone-black-wandboard"
                                        title="Permalink to this headline">¶</a></h6>
                                    <p><a class="reference external" href="https://twitter.com/phonikg">John
                                        Gerryts</a> of <a class="reference external"
                                        href="http://ethembedded.com">EthEmbedded</a>
                                      builds binary images for a variety of SBCs
                                      at major milestones, in addition to
                                      testing and maintaining build scripts for
                                      these devices. EthEmbedded was a <a class="reference external"
                                        href="https://twitter.com/EthEmbedded/status/601072825584103424">devgrant
                                        recipient</a> in May 2015. He builds
                                      binaries for both eth and geth.</p>
                                    <p>Here are the <a class="reference external"
                                        href="http://ethembedded.com/?page_id=102">Homestead
                                        binaries</a> from <a class="reference external"
                                        href="http://ethembedded.com">EthEmbedded</a></p>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/linux-cross-builds"></span>
                                  <div class="section" id="linux-arm-cross-builds-for-mobile-wearables-sbcs">
                                    <h6>Linux ARM cross-builds for mobile,
                                      wearables, SBCs<a class="headerlink" href="#linux-arm-cross-builds-for-mobile-wearables-sbcs"
                                        title="Permalink to this headline">¶</a></h6>
                                    <p><a class="reference external" href="http://bobsummerwill.com">Bob
                                        Summerwill</a>, of <a class="reference external"
                                        href="http://doublethink.co">doublethinkco</a>
                                      cross-builds <a class="reference external"
                                        href="https://github.com/doublethinkco/webthree-umbrella-cross/releases">ARM
                                        binaries</a> which work on a very broad
                                      variety of hardware, from mobile and
                                      wearables Linux distros (Sailfish OS,
                                      Tizen OS, Ubuntu Touch) to the same SBCs
                                      which <a class="reference external" href="http://ethembedded.com">EthEmbedded</a>
                                      target - and more. doublethinkco was a <a
                                        class="reference external" href="http://doublethink.co/2016/02/23/we-have-blockgrantx-funding/">BlockGrantX
                                        recipient</a> in Feb 2016.</p>
                                    <p>See the <a class="reference external" href="https://github.com/doublethinkco/cpp-ethereum-cross">cpp-ethereum-cross
                                        README</a> for a full matrix of
                                      platforms and known status.</p>
                                    <p>Here are the cross-build binaries from
                                      doublethinkco: <a class="reference external"
                                        href="http://doublethink.co/2016/03/07/released-cross-build-eth-binaries-for-homestead/">RELEASED
                                        – Cross-build eth binaries for Homestead</a>.</p>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/linux-arch-aur"></span>
                                  <div class="section" id="archlinux-user-repository-aur">
                                    <h6>ArchLinux User Repository (AUR)<a class="headerlink"
                                        href="#archlinux-user-repository-aur" title="Permalink to this headline">¶</a></h6>
                                    <p>Arch Linux packages are community
                                      maintained by <a class="reference external"
                                        href="https://github.com/5chdn">Afri
                                        Schoedon</a>.</p>
                                    <p>Check out the following packages on <a class="reference external"
                                        href="https://aur.archlinux.org/packages/?O=0&amp;K=ethereum">aur.archlinux.org</a>.</p>
                                    <ul class="simple">
                                      <li><a class="reference external" href="https://aur.archlinux.org/packages/ethereum/">ethereum</a>
                                        (stable, latest release)</li>
                                      <li><a class="reference external" href="https://aur.archlinux.org/packages/ethereum-git/">ethereum-git</a>
                                        (unstable, latest develop)</li>
                                    </ul>
                                    <p>To build and install the package, follow
                                      the <a class="reference external" href="https://wiki.archlinux.org/index.php/Arch_User_Repository#Installing_packages">AUR
                                        installing package</a> instructions:</p>
                                    <ul class="simple">
                                      <li>Acquire the tarball which contains the
                                        PKGBUILD</li>
                                      <li>Extract the tarball</li>
                                      <li>Run <code class="code docutils literal"><span
                                            class="pre">makepkg</span> <span class="pre">-sri</span></code>
                                        as simple user in the directory where
                                        the files are saved</li>
                                      <li>Install the resulting package with <code
                                          class="code docutils literal"><span class="pre">pacman</span>
                                          <span class="pre">-U</span></code> as
                                        superuser</li>
                                    </ul>
                                    <p>You can also use <a class="reference external"
                                        href="https://wiki.archlinux.org/index.php/AUR_helpers">AUR
                                        helpers</a> like <code class="code docutils literal"><span
                                          class="pre">yaourt</span></code> or <code
                                        class="code docutils literal"><span class="pre">pacaur</span></code>
                                      to install the packages directly on your
                                      system.</p>
                                  </div>
                                  <span id="document-ethereum-clients/cpp-ethereum/installing-binaries/linux-mageia"></span>
                                  <div class="section" id="mageia-cauldron-6-rpms">
                                    <h6>Mageia Cauldron (6) RPMs<a class="headerlink"
                                        href="#mageia-cauldron-6-rpms" title="Permalink to this headline">¶</a></h6>
                                    <p><a class="reference external" href="https://github.com/daniel-lucio">Luis
                                        Daniel Lucio Quiroz</a> has created <a
                                        class="reference external" href="http://inside-out.xyz/technology/cpp-ethereum-1-3-0-rpm-for-mageia-6.html">RPMs
                                        for Mageia Cauldron (6)</a>.</p>
                                    <p>cpp-ethereum is available in the non-free
                                      repository of Mageia 6. You will need to
                                      enable it. Once this is done, to install
                                      you just need to run the URPMI command (or
                                      RPMDRAKE if you are using GUI):</p>
                                    <div class="highlight-python">
                                      <div class="highlight">
                                        <pre>urpmi cpp-ethereum
</pre></div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                              <span id="document-ethereum-clients/cpp-ethereum/contributing"></span>
                              <div class="section" id="contributing">
                                <h5>Контриб'юція<a class="headerlink" href="#contributing"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>Допомога в будь-якій можливій формі більше
                                  ніж вітається.</p>
                                <p>Ви можете почати з <a class="reference internal"
                                    href="index.html#building-from-source"><span>Побудови
                                      з джерел</span></a>, та ознайомити себе
                                  з&nbsp; <a class="reference internal" href="index.html#architecture"><span>Архзитектурою</span></a>.
                                  Якщо трапляється дещо дивне, будь ласка
                                  повідомляйте про проблему (дивіться нижче).</p>
                                <p>Коли ви ознайомитесь з технологією, ви можете
                                  спробувати відповідати на запитання від інших
                                  користувачів (ми не завжди маємо час робити
                                  це), або на <a class="reference external" href="https://gitter.im/ethereum/cpp-ethereum">cpp-ethereum
                                    gitter</a>, <a class="reference external" href="http://ethereum.stackexchange.com/">stackexchange</a>,
                                  або просто коментуючи проблеми.</p>
                                <p>Якщо ви розробник C++, ви можете допомогти
                                  через надсилання пулл запитів (дивіться
                                  нижче).</p>
                                <p>We try to keep a list of <a class="reference external"
                                    href="https://github.com/ethereum/cpp-ethereum/labels/good%20first%20task">good
                                    tasks to start with</a>. Please get in
                                  contact on gitter if you have any questions or
                                  suggestions.</p>
                                <p>The backlog is kept in github issues with an
                                  overview in our <a class="reference external"
                                    href="https://waffle.io/ethereum/webthree-umbrella">waffle
                                    board</a>.</p>
                                <p>The waffle board is also useful to keep track
                                  of pull requests pending reviews (if you
                                  switch the filter on the top right to “pull
                                  requests only”).</p>
                                <div class="section" id="how-to-report-issues">
                                  <h6>How to Report Issues<a class="headerlink"
                                      href="#how-to-report-issues" title="Permalink to this headline">¶</a></h6>
                                  <p>Please report issues against the specific
                                    projects using GitHub Issues:</p>
                                  <ul class="simple">
                                    <li><a class="reference external" href="https://github.com/ethereum/cpp-ethereum/issues">cpp-ethereum
                                        issues</a></li>
                                    <li><a class="reference external" href="https://github.com/ethereum/cpp-dependencies/issues">cpp-dependencies
                                        issues</a></li>
                                    <li><a class="reference external" href="https://github.com/ethereum/evmjit/issues">evmjit
                                        issues</a></li>
                                  </ul>
                                  <p>Try to mention which version of the
                                    software you used and on which platform
                                    (Windows, MacOS, Linux, ...), how you got
                                    into the situation (what did you do), what
                                    did you expect to happen and what actually
                                    happened.</p>
                                </div>
                                <div class="section" id="how-to-submit-pull-requests-workflow">
                                  <h6>How to Submit Pull Requests / Workflow<a class="headerlink"
                                      href="#how-to-submit-pull-requests-workflow"
                                      title="Permalink to this headline">¶</a></h6>
                                  <p>Set up your workspace using the <a class="reference internal"
                                      href="index.html#building-from-source"><span>Building
                                        from source</span></a> instructions. To
                                    contribute you will need to fork/clone the
                                    repositories.</p>
                                  <p>Please also respect the <a class="reference external"
                                      href="https://raw.githubusercontent.com/ethereum/cpp-ethereum/develop/CodingStandards.txt">Coding
                                      Standards</a>.</p>
                                  <p>If you encounter any problems, please ask
                                    on gitter.</p>
                                  <p>Create pull requests against the <cite>develop</cite>
                                    branch of the repository you made changes
                                    in. Try not to include any merges with the
                                    pull request and rebase if necessary. If you
                                    can set labels on a pull request, set it to
                                    <cite>please review</cite> and also ask for
                                    a review in <a class="reference external" href="http://gitter.im/ethereum/cpp-ethereum-development">gitter</a>.</p>
                                  <p>You can also do reviews on others’ pull
                                    requests. In this case either comment with
                                    “looks good” or set the label if you can. If
                                    at least one core developer apart from the
                                    author is confident about the change, it can
                                    be merged. If the reviewer thinks that
                                    corrections are necessary, they put he label
                                    <cite>got issues</cite>. If the author
                                    addressed all comments, they again put <cite>please
                                      review</cite> or comment appropriately.</p>
                                  <p>Automation runs on <a class="reference external"
                                      href="https://ci.appveyor.com/project/ethereum/cpp-ethereum">Appveyor</a>
                                    and <a class="reference external" href="https://travis-ci.org/ethereum/cpp-ethereum/branches">TravisCI</a>.</p>
                                  <p>Thanks for helping and have fun!</p>
                                </div>
                              </div>
                              <span id="document-ethereum-clients/cpp-ethereum/architecture"></span>
                              <div class="section" id="architecture"> <span id="id1"></span>
                                <h5>Architecture<a class="headerlink" href="#architecture"
                                    title="Permalink to this headline">¶</a></h5>
                                <img src="images/dependency_graph.svg">
                                <ul class="simple">
                                  <li>bench: trie benchmarking</li>
                                  <li>cmake: cmake files for build system,
                                    contains specification of inter-dependencies</li>
                                  <li>eth A command-line Ethereum full-node that
                                    can be controlled via RPC.</li>
                                  <li>ethkey: stand-alone key management</li>
                                  <li>ethminer: stand-alone ethash miner</li>
                                  <li>ethvm: stand-alone EVM execution utility</li>
                                  <li>evmjit: library for the EVM just-in-time
                                    compiler</li>
                                  <li>libdevcore: data structures, utilities,
                                    rlp, trie, memory db</li>
                                  <li>libdevcrypto: crypto primitives. Depends
                                    on libsecp256k1 and libcrypto++.</li>
                                  <li>libp2p: core peer to peer networking
                                    implementation (excluding specific
                                    sub-protocols)</li>
                                  <li>libethash: ethash mining POW algorithm
                                    implementation</li>
                                  <li>libethash-cl: ethash mining code for GPU
                                    mining (OpenCL)</li>
                                  <li>libethashseal: generic wrapper around the
                                    POW block seal engine. Also contains the
                                    genesis states for all ethash-based chains.</li>
                                  <li>libethcore: collection of core data
                                    structures and concepts</li>
                                  <li>libethereum: main consensus engine (minus
                                    EVM). Includes the State and BlockChain
                                    classes.</li>
                                  <li>libevm: Ethereum Virtual Machine
                                    implementation (interpreter).</li>
                                  <li>libevmasm: EVM assembly tools, also
                                    contains the optimizer.</li>
                                  <li>libevmcore: elementary data structures of
                                    the EVM, opcodes, gas costs, ...</li>
                                  <li>libweb3jsonrpc: json-rpc server-side
                                    endpoint, provides http and IPC (unix
                                    socket, windows pipe) connectors</li>
                                  <li>libwebthree: service connectors for
                                    ethereum, swarm/ipfs and whisper.</li>
                                  <li>libwhisper: whisper implementation</li>
                                  <li>rlp: stand-alone rlp en-/decoder</li>
                                  <li>testeth: tests for the modules formerly
                                    within the <strong>libethereum</strong>
                                    repo</li>
                                  <li>testweb3core: tests for the modules
                                    formerly within the <strong>libweb3core</strong>
                                    repo</li>
                                  <li>testweb3: tests for the modules formerly
                                    within the <strong>webthree</strong> repo</li>
                                  <li>utils/json_spirit: JSON parser written for
                                    Boost’s Spirit library.</li>
                                  <li>utils/libscrypt: scrypt implementation</li>
                                  <li>utils/secp256k1: implementation of the
                                    SECP 256k1 ECDSA signing algorithm.</li>
                                </ul>
                              </div>
                              <span id="document-ethereum-clients/cpp-ethereum/portability"></span>
                              <div class="section" id="portability"> <span id="cpp-ethereum-portability"></span>
                                <h5>Portability<a class="headerlink" href="#portability"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>The Ethereum C++ client code is exceedingly
                                  portable, and is being successfully used on a
                                  huge range of different operating systems and
                                  devices.</p>
                                <p>We continue to expand our range and are very
                                  open to pull-requests which add support for
                                  additional operating systems, compilers or
                                  devices.</p>
                                <div class="section" id="operating-systems-verified-as-working">
                                  <h6>Operating systems verified as working<a class="headerlink"
                                      href="#operating-systems-verified-as-working"
                                      title="Permalink to this headline">¶</a></h6>
                                  <ul>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Linux</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>Alpine Linux</li>
                                            <li>Arch Linux</li>
                                            <li>Debian 8 (Jessie and Stretch)</li>
                                            <li>Fedora 20</li>
                                            <li>Fedora 21</li>
                                            <li>Fedora 22</li>
                                            <li>openSUSE Leap 42.1</li>
                                            <li>PureOS 2.1</li>
                                            <li>Raspbian</li>
                                            <li>Sailfish OS 2.0</li>
                                            <li>Ubuntu 14.04 (Trusty)</li>
                                            <li>Ubuntu 14.10 (Utopic)</li>
                                            <li>Ubuntu 15.04 (Vivid)</li>
                                            <li>Ubuntu 15.10 (Wily)</li>
                                            <li>Ubuntu 16.04 (Xenial)</li>
                                            <li>Ubuntu Touch</li>
                                            <li>Ubuntu 15.04 MATE</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>BSD</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>FreeBSD</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>OS X</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>OS X Yosemite (10.10)</li>
                                            <li>OS X El Capitan (10.11)</li>
                                            <li>OS X 10.10 (Yosemite Server 4.0)</li>
                                            <li>OS X 10.11 (Yosemite Server 5.0)</li>
                                            <li>OS X 10.11 (Yosemite Server 5.1)</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Windows</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>Windows 7</li>
                                            <li>Windows 8</li>
                                            <li>Windows 8.1</li>
                                            <li>Windows 10</li>
                                            <li>Windows Server 2012 R2</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                  </ul>
                                </div>
                                <div class="section" id="operating-systems-work-in-progress">
                                  <h6>Operating systems - work in progress<a class="headerlink"
                                      href="#operating-systems-work-in-progress"
                                      title="Permalink to this headline">¶</a></h6>
                                  <ul>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Linux</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>Maemo</li>
                                            <li>MeeGo</li>
                                            <li>Tizen</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>BSD</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>iOS</li>
                                            <li>tvOS</li>
                                            <li>WatchOS</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <p class="first">Android</p>
                                    </li>
                                  </ul>
                                </div>
                                <div class="section" id="devices-verified-as-working">
                                  <h6>Devices verified as working<a class="headerlink"
                                      href="#devices-verified-as-working" title="Permalink to this headline">¶</a></h6>
                                  <ul>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>All varieties of desktop and laptop
                                          devices (Windows, OS X, Desktop Linux)</dt>
                                        <dd>
                                          <ul class="first last simple">
                                            <li>64-bit (with rebuilt binaries)</li>
                                            <li>32-bit (not official supported,
                                              but they work)</li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Smartphones</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Linux</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Jolla Phone</li>
                                                    <li>Meizu MX4 Ubuntu Edition</li>
                                                    <li>Nexus 5 (SailfishOS 2.0)</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>SBCs</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Linux</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>BeagleBone Black</li>
                                                    <li>Odroid XU3</li>
                                                    <li>Project C.H.I.P.</li>
                                                    <li>Raspberry Pi Model A</li>
                                                    <li>Raspberry Pi Model B+</li>
                                                    <li>Raspberry Pi Zero</li>
                                                    <li>Raspberry Pi 2</li>
                                                    <li>Raspberry Pi 3</li>
                                                    <li>Wandboard Quad</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                  </ul>
                                </div>
                                <div class="section" id="devices-work-in-progress">
                                  <h6>Devices - work in progress<a class="headerlink"
                                      href="#devices-work-in-progress" title="Permalink to this headline">¶</a></h6>
                                  <ul>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Smartwatches</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Linux</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Samsung Gear S2</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                            <li>
                                              <dl class="first docutils">
                                                <dt>BSD</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Apple Watch</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Smartphones</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Linux</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Nokia N9 (MeeGo)</li>
                                                    <li>Nokia N900 (Meemo)</li>
                                                    <li>Samsung Z1</li>
                                                    <li>Samsung Z3</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Android</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Samsung Galaxy S3</li>
                                                    <li>Samsung Galaxy S4</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                            <li>
                                              <dl class="first docutils">
                                                <dt>BSD</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>iPhone 3GS</li>
                                                    <li>iPhone 5</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Developer phones</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Linux</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Samsung RD-210</li>
                                                    <li>Samsung RD-PQ</li>
                                                    <li>Samsung TM1</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>Tablets</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Android</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>Samsung Galaxy Tab S
                                                      10.5</li>
                                                    <li>Nexus 7</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                            <li>
                                              <dl class="first docutils">
                                                <dt>BSD</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>iPad Air 2</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                    <li>
                                      <dl class="first docutils">
                                        <dt>SBCs</dt>
                                        <dd>
                                          <ul class="first last">
                                            <li>
                                              <dl class="first docutils">
                                                <dt>Linux</dt>
                                                <dd>
                                                  <ul class="first last simple">
                                                    <li>DragonBoard 410c</li>
                                                    <li>Intel Curie</li>
                                                    <li>Intel Edison</li>
                                                    <li>Intel NUC</li>
                                                    <li>Minnowboard Max</li>
                                                    <li>Odroid XU4</li>
                                                  </ul>
                                                </dd>
                                              </dl>
                                            </li>
                                          </ul>
                                        </dd>
                                      </dl>
                                    </li>
                                  </ul>
                                </div>
                              </div>
                              <span id="document-ethereum-clients/cpp-ethereum/running"></span>
                              <div class="section" id="running"> <span id="runnig-cpp-ethereum"></span>
                                <h5>Running<a class="headerlink" href="#running"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>Running eth without any argument will
                                  synchronise your node to the public
                                  blockchain. It is also possible to create or
                                  synchronise to another blockchain (see <a class="reference internal"
                                    href="index.html#custom-networks-eth"><span>custom
                                      blockchain using eth</span></a>).</p>
                                <p>Interacting with your node can be done using
                                  either geth or the ethereum console:</p>
                                <p><strong>Using geth</strong></p>
                                <p><strong>Using the ethereum console</strong></p>
                                <p>The ethereum console is a node.js application
                                  which connect to a running eth/geth node and
                                  provide access to the web3 object.</p>
                                <div class="admonition note">
                                  <p class="first admonition-title">Note</p>
                                  <p class="last"><a class="reference external"
                                      href="https://github.com/ethereum/ethereum-console">https://github.com/ethereum/ethereum-console</a></p>
                                </div>
                                <p>It can be installed using npm:</p>
                                <div class="admonition note">
                                  <p class="first admonition-title">Note</p>
                                  <div class="last line-block">
                                    <div class="line">&gt; npm install -g
                                      ethereum-console</div>
                                    <div class="line">&gt; ethconsole</div>
                                  </div>
                                </div>
                                <div class="admonition note">
                                  <p class="first admonition-title">Note</p>
                                  <div class="last line-block">
                                    <div class="line"><strong>Usage:</strong></div>
                                    <div class="line">ethconsole [javascript
                                      file] [ipc socket]</div>
                                    <div class="line">Connects to an ethereum
                                      node via ipc in order to control it
                                      remotely</div>
                                    <div class="line">through global variable
                                      web3 (web3.admin is also present).</div>
                                    <div class="line">If no arguments are given,
                                      connects to the default ipc socket</div>
                                    <div class="line">and drops into interactive
                                      mode.</div>
                                    <div class="line">Arguments:</div>
                                    <div class="line">&lt;ipc socket path&gt;
                                      connect to the given ipc socket (use
                                      ipc://&lt;path&gt; if it does not end with
                                      .ipc)</div>
                                    <div class="line">&lt;javascript file&gt;
                                      execute the given javascript file that has
                                      to end in .js non-interactively.</div>
                                    <div class="line">The script has to call
                                      process.exit() in order to terminate the
                                      console.</div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span id="document-ethereum-clients/go-ethereum/index"></span>
                        <div class="section" id="go-ethereum"> <span id="id1"></span>
                          <h3>go-ethereum<a class="headerlink" href="#go-ethereum"
                              title="Permalink to this headline">¶</a></h3>
                          <p>На клієнт go-ethereum звичайно посилаються як на <strong>geth</strong>,
                            що є інтерфейсом командного рядка, для виконання
                            повного вузла ethereum, реалізований на Go.
                            Встановивши та виконавши geth, ви можете прийняти
                            участь в живій мережі ethereum, та&nbsp; при цьому:</p>
                          <ul class="simple">
                            <li>видобувати (майнати) реальний ether</li>
                            <li>переміщати фонди між адресами</li>
                            <li>створювати контракти та надсилать транзакції</li>
                            <li>досліджувати історію блоків</li>
                            <li>та багато-багато іншого</li>
                          </ul>
                          <p>Посилання:</p>
                          <ul class="simple">
                            <li>Веб сайт: <a class="reference external" href="http://ethereum.github.io/go-ethereum/">http://ethereum.github.io/go-ethereum/</a></li>
                            <li>GitHub: <a class="reference external" href="https://github.com/ethereum/go-ethereum">https://github.com/ethereum/go-ethereum</a></li>
                            <li>Wiki: <a class="reference external" href="https://github.com/ethereum/go-ethereum/wiki/geth">https://github.com/ethereum/go-ethereum/wiki/geth</a></li>
                            <li>Gitter: <a class="reference external" href="https://gitter.im/ethereum/go-ethereum">https://gitter.im/ethereum/go-ethereum</a></li>
                          </ul>
                        </div>
                        <span id="document-ethereum-clients/pyethapp/index"></span>
                        <div class="section" id="pyethapp"> <span id="id1"></span>
                          <h3>pyethapp<a class="headerlink" href="#pyethapp" title="Permalink to this headline">¶</a></h3>
                          <p><strong>pyethapp</strong> is the python-based
                            client implementing the Ethereum cryptoeconomic
                            state machine. The python implementation aims to
                            provide an easily hackable and extendable codebase.</p>
                          <p>pyethapp leverages two ethereum core components to
                            implement the client:</p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/ethereum/pyethereum">pyethereum</a>
                              - the core library, featuring the blockchain, the
                              ethereum virtual machine, mining</li>
                            <li><a class="reference external" href="https://github.com/ethereum/pydevp2p">pydevp2p</a>
                              - the p2p networking library, featuring node
                              discovery for and transport of multiple services
                              over multiplexed and encrypted connections</li>
                          </ul>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/ethereum/pyethapp">https://github.com/ethereum/pyethapp</a></li>
                            <li>Wiki: <a class="reference external" href="https://github.com/ethereum/pyethapp/wiki/Getting-Started">https://github.com/ethereum/pyethapp/wiki/Getting-Started</a></li>
                            <li>Gitter chat: <a class="reference external" href="https://gitter.im/ethereum/pyethapp">https://gitter.im/ethereum/pyethapp</a></li>
                          </ul>
                        </div>
                        <span id="document-ethereum-clients/ethereumjs-lib/index"></span>
                        <div class="section" id="ethereumjs-lib"> <span id="id1"></span>
                          <h3>ethereumjs-lib<a class="headerlink" href="#ethereumjs-lib"
                              title="Permalink to this headline">¶</a></h3>
                          <p><strong>ethereumjs-lib</strong> є бібліотекою
                            javascript базових функцій <a class="reference external"
                              href="http://ethereum.org/">Ethereum</a>, як
                            описане в <a class="reference external" href="https://github.com/ethereum/yellowpaper">Жовтому
                              папірі</a>. Це простий мета-модуль, що провадить
                            наступні модулі. Більшість модулів JS відстежуються
                            в <a class="reference external" href="https://github.com/ethereumjs">ethereumjs</a></p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-vm">VM</a>
                              - Виртуальна машина Ethereum. та функції обробки
                              стану</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-blockchain">Blockchain</a>
                              - Керування блокчейном</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-block">Block</a>
                              - Визначення та перевірка схеми блоку</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-tx">Transaction</a>
                              - Визначення та валідація схеми транзакції</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-account">Account</a>
                              - Визначення та валідація схеми рахунку</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/rlp">rlp</a>
                              - Сериалізація з префіксом рекурсивної довжини</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/merkle-patricia-tree">Trie</a>
                              - Модифіковане дерево Меркля Патрісія</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethashjs">Ethash</a>
                              - Алгоритм доказу виконаної роботи</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/ethereumjs-util">utils</a>
                              - Різноманітні допоміжні функції</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/node-devp2p">devp2p</a>
                              - Мережевий протокол</li>
                            <li><a class="reference external" href="https://github.com/ethereumjs/node-devp2p-dpt">devp2p-dpt</a>
                              - Таблиця взаємодіючих сторін</li>
                          </ul>
                          <p>Посилання:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/ethereumjs/ethereumjs-lib">https://github.com/ethereumjs/ethereumjs-lib</a></li>
                            <li>Join the Gitter chat: <a class="reference external"
                                href="https://gitter.im/ethereum/ethereumjs-lib">https://gitter.im/ethereum/ethereumjs-lib</a></li>
                          </ul>
                        </div>
                        <span id="document-ethereum-clients/ethereumj/index"></span>
                        <div class="section" id="ethereum-j"> <span id="id1"></span>
                          <h3>Ethereum(J)<a class="headerlink" href="#ethereum-j"
                              title="Permalink to this headline">¶</a></h3>
                          <p><strong>Ethereum(J)</strong> is a pure-Java
                            implementation of the Ethereum protocol. It is
                            provided as a library that can be embedded in any
                            Java/Scala project and to provide full support for
                            Ethereum protocol and sub-services. Ethereum(J) was
                            first developed by <a class="reference external" href="https://github.com/romanman">Roman
                              Mandeleil</a> and is now sponsored by <a class="reference external"
                              href="http://www.ether.camp">&lt;ether.camp&gt;</a>.</p>
                          <p>Ethereum(J) supports CPU mining. It is currently
                            implemented in pure Java and can be used in private
                            and test networks. You may even mine on the live
                            Ethereum network, even though it is not economically
                            feasible.</p>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>Blog: <a class="reference external" href="http://ethereumj.io/">http://ethereumj.io/</a></li>
                            <li>GitHub: <a class="reference external" href="https://github.com/ethereum/ethereumj">https://github.com/ethereum/ethereumj</a></li>
                            <li>Gitter chat: <a class="reference external" href="https://gitter.im/ethereum/ethereumj">https://gitter.im/ethereum/ethereumj</a></li>
                          </ul>
                        </div>
                        <span id="document-ethereum-clients/ethereumh/index"></span>
                        <div class="section" id="ethereumh"> <span id="id1"></span>
                          <h3>ethereumH<a class="headerlink" href="#ethereumh" title="Permalink to this headline">¶</a></h3>
                          <p>This package provides a tool written in Haskell to
                            allow you to connect to the Ethereum blockchain</p>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/blockapps/ethereumH">https://github.com/blockapps/ethereumH</a></li>
                            <li>BlockApps: <a class="reference external" href="http://www.blockapps.net/">http://www.blockapps.net/</a></li>
                          </ul>
                        </div>
                        <span id="document-ethereum-clients/parity/index"></span>
                        <div class="section" id="parity"> <span id="id1"></span>
                          <h3>Parity<a class="headerlink" href="#parity" title="Permalink to this headline">¶</a></h3>
                          <p><strong>Parity</strong> запевняє, що він самий
                            швидкий та легкий в світі клієнт Ethereum. Він
                            написаний на мові Rust, що пропонує покращену
                            надійність, продуктивність, та чистоту коду. Parity
                            був розроблений в <a class="reference external" href="https://ethcore.io">Ethcore</a>,
                            що був заснований декількома членами Ethereum
                            Foundation.</p>
                          <ul class="simple">
                            <li>Website: <a class="reference external" href="https://ethcore.io/parity.html">https://ethcore.io/parity.html</a></li>
                            <li>GitHub: <a class="reference external" href="https://github.com/ethcore/parity">https://github.com/ethcore/parity</a></li>
                            <li>Gitter chat: <a class="reference external" href="https://gitter.im/ethcore/parity">https://gitter.im/ethcore/parity</a></li>
                          </ul>
                          <p>Arch Linux packages are community maintained by <a
                              class="reference external" href="https://github.com/5chdn">Afri
                              Schoedon</a> and quininer.</p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://aur.archlinux.org/packages/parity/">https://aur.archlinux.org/packages/parity/</a>
                              (stable, latest release)</li>
                            <li><a class="reference external" href="https://aur.archlinux.org/packages/parity-git/">https://aur.archlinux.org/packages/parity-git/</a>
                              (unstable, latest develop)</li>
                          </ul>
                          <p>Деякі люди розповідали про успіх з Parity на
                            Raspberry Pi 2.</p>
                        </div>
                        <span id="document-ethereum-clients/ruby-ethereum/index"></span>
                        <div class="section" id="ruby-ethereum"> <span id="id1"></span>
                          <h3>ruby-ethereum<a class="headerlink" href="#ruby-ethereum"
                              title="Permalink to this headline">¶</a></h3>
                          <p><strong>ruby-ethereum</strong> is an implementation
                            of the <a class="reference internal" href="index.html#the-evm"><span>Ethereum
                                Virtual Machine</span></a> written in Ruby.</p>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/janx/ruby-ethereum">https://github.com/janx/ruby-ethereum</a></li>
                            <li>Gem: <a class="reference external" href="https://rubygems.org/gems/ruby-ethereum">https://rubygems.org/gems/ruby-ethereum</a></li>
                          </ul>
                          <p>Related:</p>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/janx/ruby-serpent">ruby-serpent</a>:
                              Ruby binding to the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/Serpent">Ethereum
                                Serpent</a> compiler.</li>
                            <li><a class="reference internal" href="index.html#ethereum-ruby"><span>ethereum-ruby</span></a>:
                              a pure-Ruby JSON-RPC wrapper for communicating
                              with an Ethereum node.</li>
                          </ul>
                        </div>
                      </div>
                    </div>
                    <span id="document-connecting-to-clients/index"></span>
                    <div class="section" id="connecting-to-ethereum-clients"> <span
                        id="connecting-to-clients"></span>
                      <h2>Під'єднання до клієнтів Ethereum<a class="headerlink"
                          href="#connecting-to-ethereum-clients" title="Permalink to this headline">¶</a></h2>
                      <p>Клієнти Ethereum експонують декілька методів через <a
                          class="reference external" href="https://github.com/ethereum/wiki/wiki/JSON-RPC">JSON-RPC</a>
                        для взаємодії з ними в вашому застосуванні. Однак,
                        взаємодія напряму через JSON-RPC надає деякого безладу
                        розробникам застосувань, такий, як:</p>
                      <blockquote>
                        <div>
                          <ul class="simple">
                            <li>Реалізація протоколу JSON-RPC</li>
                            <li>Бінарний формат кодування/розкодування для
                              створення та взаємодії зі смарт контрактами</li>
                            <li>256 бітові числові типи</li>
                            <li>Підтримка адміністративних команд, як
                              створення/керування адресами, підпис транзакцій</li>
                          </ul>
                        </div>
                      </blockquote>
                      <p>Було написано декілька бібліотек, щоб допомогти
                        вирішенню ціх проблем, дозволяючи розробникам
                        застосувань зфокусуватись на застосуванні, замість на
                        низькорівневих узгодженнях, щоб взаємодіяти з клієнтами
                        Ethereum та ширшою екосистемою.</p>
                      <table class="docutils" border="1">
                        <colgroup> <col width="27%"> <col width="15%"> <col width="58%">
                        </colgroup>
                        <thead valign="bottom">
                          <tr class="row-odd">
                            <th class="head">Бібліотека</th>
                            <th class="head">Мова</th>
                            <th class="head">Сторінка проекту</th>
                          </tr>
                        </thead>
                        <tbody valign="top">
                          <tr class="row-even">
                            <td><a class="reference internal" href="index.html#web3-js"><span>web3.js</span></a></td>
                            <td>JavaScript</td>
                            <td><a class="reference external" href="https://github.com/ethereum/web3.js">https://github.com/ethereum/web3.js</a></td>
                          </tr>
                          <tr class="row-odd">
                            <td><a class="reference internal" href="index.html#web3j"><span>web3j</span></a></td>
                            <td>Java</td>
                            <td><a class="reference external" href="https://github.com/web3j/web3j">https://github.com/web3j/web3j</a></td>
                          </tr>
                          <tr class="row-even">
                            <td><a class="reference internal" href="index.html#nethereum"><span>Nethereum</span></a></td>
                            <td>C# .NET</td>
                            <td><a class="reference external" href="https://github.com/Nethereum/Nethereum">https://github.com/Nethereum/Nethereum</a></td>
                          </tr>
                          <tr class="row-odd">
                            <td><a class="reference internal" href="index.html#ethereum-ruby"><span>ethereum-ruby</span></a></td>
                            <td>Ruby</td>
                            <td><a class="reference external" href="https://github.com/DigixGlobal/ethereum-ruby">https://github.com/DigixGlobal/ethereum-ruby</a></td>
                          </tr>
                        </tbody>
                      </table>
                      <p>Information on each library is provided in the
                        following sections:</p>
                      <div class="toctree-wrapper compound"> <span id="document-connecting-to-clients/web3.js/index"></span>
                        <div class="section" id="web3-js"> <span id="id1"></span>
                          <h3>web3.js<a class="headerlink" href="#web3-js" title="Permalink to this headline">¶</a></h3>
                          <p><strong>web3.js</strong></p>
                          <p>This is the Ethereum compatible <a class="reference external"
                              href="https://github.com/ethereum/wiki/wiki/JavaScript-API">JavaScript
                              API</a> which implements the <a class="reference external"
                              href="https://github.com/ethereum/wiki/wiki/JSON-RPC">Generic
                              JSON RPC</a> spec. It’s available on npm as a node
                            module, for bower and component as an embeddable js
                            and as a meteor.js package.</p>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/ethereum/web3.js/">https://github.com/ethereum/web3.js/</a></li>
                            <li>Wiki: <a class="reference external" href="https://github.com/ethereum/wiki/wiki/JavaScript-API">https://github.com/ethereum/wiki/wiki/JavaScript-API</a></li>
                            <li>Gitter: <a class="reference external" href="https://gitter.im/ethereum/web3.js">https://gitter.im/ethereum/web3.js</a></li>
                            <li>NPM module: <a class="reference external" href="https://www.npmjs.com/package/web3">https://www.npmjs.com/package/web3</a></li>
                          </ul>
                        </div>
                        <span id="document-connecting-to-clients/web3j/index"></span>
                        <div class="section" id="web3j"> <span id="id1"></span>
                          <h3>web3j<a class="headerlink" href="#web3j" title="Permalink to this headline">¶</a></h3>
                          <p><strong>web3j</strong></p>
                          <p>web3j is a lightweight Java library for integrating
                            with clients (nodes) on the Ethereum network.</p>
                          <dl class="docutils">
                            <dt>Core features:</dt>
                            <dd>
                              <ul class="first last simple">
                                <li>Interaction with Ethereum clients over
                                  JSON-RPC via Java types</li>
                                <li>Supports all JSON-RPC method types</li>
                                <li>Supports all Geth and Parity methods for
                                  managing accounts and signing transactions</li>
                                <li>Sending of client requests both
                                  asynchronously and synchronously</li>
                                <li>Auto-generation of Java smart contract
                                  function wrappers from Solidity ABI files</li>
                              </ul>
                            </dd>
                          </dl>
                          <p>Currently, the <a class="reference internal" href="index.html#go-ethereum"><span>go-ethereum</span></a>
                            and <a class="reference internal" href="index.html#parity"><span>Parity</span></a>
                            clients are supported.</p>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/web3j/web3j">https://github.com/web3j/web3j</a></li>
                            <li>Website: <a class="reference external" href="http://web3j.io">http://web3j.io</a></li>
                            <li>Wiki: <a class="reference external" href="https://github.com/web3j/web3j/wiki">https://github.com/web3j/web3j/wiki</a></li>
                            <li>Gitter: <a class="reference external" href="https://gitter.im/web3j/web3j">https://gitter.im/web3j/web3j</a></li>
                          </ul>
                        </div>
                        <span id="document-connecting-to-clients/nethereum/index"></span>
                        <div class="section" id="nethereum"> <span id="id1"></span>
                          <h3>Nethereum<a class="headerlink" href="#nethereum" title="Permalink to this headline">¶</a></h3>
                          <p><strong>Nethereum</strong></p>
                          <p>Nethereum є бібліотекою інтеграції .Net для
                            Ethereum. Він дозволяє вам взаємодіяти з клієнтами
                            Ethereum, як <a class="reference internal" href="index.html#go-ethereum"><span>go-ethereum</span></a>,
                            <a class="reference internal" href="index.html#cpp-ethereum"><span>cpp-ethereum</span></a>
                            або <a class="reference internal" href="index.html#parity"><span>Parity</span></a>
                            з використанням RPC.</p>
                          <p>Біблілотека має дуже подібну функціональність, що і
                            Javascript Etherum Web3 RPC Client Library.</p>
                          <p>Всі методи JSON RPC/IPC реалізуються по мірі того,
                            як вони з'являються в нових версіях клієнтів.</p>
                          <p>Клієнт geth щільно підтримуєтсья та тестується,
                            включаючи його розширення керування для&nbsp; admin,
                            personal, debugging, miner.</p>
                          <p>Взаємодія з контрактами була спрощена для
                            розгортання, виклику функцій, транзакцій, фільтрації
                            подій та декодування тем.</p>
                          <p>Бібліотека була протестована на всіх платформах:
                            .Net Core, Mono, Linux, iOS, Android, Raspberry PI,
                            Xbox, та, звичайно, Windows.</p>
                          <p>Посилання:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/Nethereum/Nethereum">https://github.com/Nethereum/Nethereum</a></li>
                            <li>Веб сайт: <a class="reference external" href="http://nethereum.com">http://nethereum.com</a></li>
                            <li>Documentation: <a class="reference external" href="https://nethereum.readthedocs.io/en/latest/">https://nethereum.readthedocs.io/en/latest/</a></li>
                            <li>Gitter: <a class="reference external" href="https://gitter.im/Nethereum/Nethereum">https://gitter.im/Nethereum/Nethereum</a></li>
                          </ul>
                        </div>
                        <span id="document-connecting-to-clients/ethereum-ruby/index"></span>
                        <div class="section" id="ethereum-ruby"> <span id="id1"></span>
                          <h3>ethereum-ruby<a class="headerlink" href="#ethereum-ruby"
                              title="Permalink to this headline">¶</a></h3>
                          <p><strong>ethereum-ruby</strong> is a pure-Ruby
                            JSON-RPC wrapper for communicating with an Ethereum
                            node. To use this library you will need to have a
                            running Ethereum node with IPC support enabled
                            (default). Currently, the <a class="reference internal"
                              href="index.html#go-ethereum"><span>go-ethereum</span></a>
                            client is supported.</p>
                          <p>Links:</p>
                          <ul class="simple">
                            <li>GitHub: <a class="reference external" href="https://github.com/DigixGlobal/ethereum-ruby">https://github.com/DigixGlobal/ethereum-ruby</a></li>
                          </ul>
                        </div>
                      </div>
                      <p>For an overview of creating and interacting with smart
                        contracts and transactions via the web3.js library,
                        please refer to the section <a class="reference internal"
                          href="index.html#accessing-contracts-and-transactions"><span>Accessing
                            Contracts and Transactions</span></a>.</p>
                    </div>
                    <span id="document-account-management"></span>
                    <div class="section" id="account-management">
                      <h2>Керування рахунками<a class="headerlink" href="#account-management"
                          title="Permalink to this headline">¶</a></h2>
                      <div class="section" id="accounts"> <span id="id1"></span>
                        <h3>Рахунки<a class="headerlink" href="#accounts" title="Permalink to this headline">¶</a></h3>
                        <p>Рахунки відіграють центральну роль в Ethereum. Це два
                          типи рахунків: <em>зовнішньої власності, externally
                            owned accounts</em> (EOAs) та <em>контрактні
                            разунки</em>. Тут ми сфокусуємось на рахунках у
                          зовнішній власності, на які будемо посилатись як на
                          просто <em>рахунки</em>. Контрактні рахунки ми будемо
                          називати просто <em>контракти</em> та <a class="reference internal"
                            href="index.html#contracts"><span>детально
                              описуються в розділі Контракти</span></a>. Ця
                          загальна нотація рахунку об'єднує обоє, рахунки у
                          зовнішній власності, та контракти, має право, бо ці
                          об'єкти також називаються <em>об'єкти зі станом</em>.
                          Ці сутності мають стан: рахунки мають баланс та
                          контракти мають обоє, баланс та сховище контракту.
                          Стан всіх рахунків є станом всієї мережі Ethereum, що
                          оновлюється з кожним блоком, та що мережі дійсно
                          треба, так це знайти консенсус щодо цього стану.
                          Рахунки є основним для користувача у взаємодії з
                          блокчейном Ethereum через транзакції.</p>
                        <p>Якщо ми обмежимо Ethereum до тільки рахунків у
                          зовнішній власності, та дозволимо тільки транзакції
                          між ними, ми опинимось на системі “альткоіну”, що менш
                          потужна, ніж сам біткоін, та може тільки передавати
                          ефір.</p>
                        <p>Рахунки представляють ідентифікації зовнішніх агентів
                          (як особи, вузли майнінгу або автоматизовані агенти).
                          Рахунки використовують криптографію з публічним ключем
                          для підпису транзакцій, так що EVM може безпечно
                          перевірити ідентичність надсилача транзакції.</p>
                      </div>
                      <div class="section" id="keyfiles">
                        <h3>Файли ключів<a class="headerlink" href="#keyfiles" title="Permalink to this headline">¶</a></h3>
                        <p>Кожний рахунок визначений як пара ключів, приватний
                          та публічний. Рахунки індексовані своїми <em>адресами</em>,
                          що походять від публічного ключа, еручи з нього
                          останні 20 байтів. Кожна пара приватний ключ/адреса
                          закодована в <em>keyfile</em>. Файли ключів є
                          текстовими файлами JSON, які можна відкрити та
                          передивитись в любому текстовому редакторі. Критичний
                          компонент keyfile, приватний ключ вашого рахунку, є
                          завжди зашифрований, та він зашифрований за допомогою
                          пароля, що ви вводите, коли створюєте рахунок. Файли
                          ключів знаходяться в підкаталозі&nbsp; <code class="docutils literal"><span
                              class="pre">keystore</span></code> вашого каталогу
                          даних вузла Ethereum. Переконайтесь, що ви зберігаєте
                          ваші файли ключів регулярно! Дивіться розділ <a class="reference internal"
                            href="#backup-and-restore-accounts"><span>Зберігання
                              та відновлення рахунків</span></a> щодо додаткової
                          інформації.</p>
                        <p>Створити ключ це рівнозначно створенню рахунка.</p>
                        <ul class="simple">
                          <li>Вам не треба розказувати комусь іншому, що ви
                            робите це</li>
                          <li>Вам не треба синхронізуватись з блокчейном</li>
                          <li>Вам не треба запускати клієнта</li>
                          <li>Вам навіть не треба бути під'єднаним до інтернету</li>
                        </ul>
                        <p>Звісно, ваш новий рахунок не буде містити жодного
                          Ether. Але він буде вашим, і ви можете бути певні, що
                          без вашого ключа та пароля ніхто не відкриє та не
                          отримає доступ до нього.</p>
                        <p>Є безпечним передати цілу директорію або любий
                          окремий файл ключів між вузлами Ethereum.</p>
                        <div class="admonition warning">
                          <p class="first admonition-title">Попередження</p>
                          <p class="last">Зауважте, що в випадку, коли ви
                            додаєте файли ключів до вашого вузла з іншого,
                            порядок рахунків може змінитись. Так що
                            переконайтесь, що ви не покладаєтесь або змінюєте
                            індекс в ваших скриптах або фрагментах коду. </p>
                        </div>
                      </div>
                      <div class="section" id="creating-an-account"> <span id="id2"></span>
                        <h3>Створення рахунку<a class="headerlink" href="#creating-an-account"
                            title="Permalink to this headline">¶</a></h3>
                        <div class="admonition warning">
                          <p class="first admonition-title">Попередження</p>
                          <p class="last"><strong>Пам'ятайте ваш пароль та
                              зберігайте ваші файли клічів.</strong> Щоб
                            надіслати транзакцію з разунку, включаючи надсилання
                            ефіру, вам знадобляться ОБОЄ, файл ключів та пароль.
                            Будьте абсолютно переконані, що маєте копію вашого
                            файла ключів ТА пам'ятайте пароль для цього файла,
                            та зберігайте обоє так безпечно, як це можливо. Тут
                            немає рятівного шляху; втрата файла ключів або
                            забування вашого паролю призведе до втрати всього
                            ефіру. НЕ МОЖЛИВО отримати доступ до рахунку без
                            пароля, і немає ніякої опції <em>я забув мій пароль</em>.
                            Не забувайте його. </p>
                        </div>
                        <div class="section" id="using-geth-account-new">
                          <h4>Використання <code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">account</span>
                              <span class="pre">new</span></code><a class="headerlink"
                              href="#using-geth-account-new" title="Permalink to this headline">¶</a></h4>
                          <p>Якщо ви маєте встановлений клієнт geth, створення
                            рахунку є просто питанням виклику команди <code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">account</span>
                              <span class="pre">new</span></code> в терміналі.</p>
                          <p>Зауважте, що ви не маєте виконувати клієнт geth,
                            або синхронізуватись з блокчейном, щоб
                            використовувати команду<code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">account</span></code>.</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>$ geth account new

  Your new account is locked with a password. Please give a password. Do not forget this password.
  Passphrase:
  Repeat Passphrase:
  Address: {168bc315a2ee09042d83d7c5811b533620531f67}
</pre></div>
                          </div>
                          <p>Для не-інтерактивного використання ви маєте задати
                            файл пароля відкритим текстом, як аргумент флагу <code
                              class="docutils literal"><span class="pre">--password</span></code>.
                            Дані в файлі складаються з необроблених байтів
                            пароля, за якими, опціонально, іде один символ
                            нового рядка. </p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>$ geth --password /path/to/password account new
</pre></div>
                          </div>
                          <div class="admonition warning">
                            <p class="first admonition-title">Попередження</p>
                            <p class="last">Використання флагу <code class="docutils literal"><span
                                  class="pre">--password</span></code>
                              призначене тільки для тестування або автоматизації
                              в довірених оточеннях. Буде поганої ідеєю
                              зберігати ваш пароль в файлі, або виказувати його
                              в інший спосіб. Якщо ви використовуєте флаг <code
                                class="docutils literal"><span class="pre">--password</span></code>
                              з файлом пароля, переконайтесь, що файл не
                              читаєтсья, або навіть не показується як такий, до
                              будь-кого, крім вас. Ви можете досягти цього в
                              системах Mac/Linux наступним чином:</p>
                          </div>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>touch /path/to/password
chmod 600 /path/to/password
cat &gt; /path/to/password
&gt;I type my pass
</pre></div>
                          </div>
                          <p>Щоб перелічити всі рахунки з файлами ключів, що
                            наразі знаходяться в вашій папці <code class="docutils literal"><span
                                class="pre">keystore</span></code>,
                            використовуйте субкоманду <code class="docutils literal"><span
                                class="pre">list</span></code> команди <code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">account</span></code>:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>$ geth account list

account #0: {a94f5374fce5edbc8e2a8697c15331677e6ebf0b}
account #1: {c385233b188811c9f355d4caec14df86d6248235}
account #2: {7f444580bfef4b9bc7e14eb7fb2a029336b07c9d}
</pre></div>
                          </div>
                          <p>Імена файлів файлів ключів мають формат <code class="docutils literal"><span
                                class="pre">UTC--&lt;created_at</span> <span class="pre">UTC</span>
                              <span class="pre">ISO8601&gt;-&lt;address</span> <span
                                class="pre">hex&gt;</span></code>. Порядок
                            рахунків при переліку є лексографічний, але, як
                            слідоцтво формата відтиску дати, насправді він є
                            порядком створення.</p>
                        </div>
                        <div class="section" id="using-geth-console">
                          <h4>Використання консолі geth<a class="headerlink" href="#using-geth-console"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Щоб створити новий рахунок, використовуючи geth, з
                            початку ми повинні зпочатку стартувати geth в
                            консольному режимі (або ви можете
                            використовувати&nbsp; <code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">attach</span></code>
                            для підключення консолі до вже виконуваного
                            екземпляра):</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>&gt; geth console 2&gt;&gt; file_to_log_output
instance: Geth/v1.4.0-unstable/linux/go1.5.1
coinbase: coinbase: [object Object]
at block: 865174 (Mon, 18 Jan 2016 02:58:53 GMT)
datadir: /home/USERNAME/.ethereum
</pre></div>
                          </div>
                          <p>Консоль дозволяє вам взаємодіяти з вашим локальним
                            вузлом через відданя команд. наприклад, спробуйте
                            команду для переліку рахунків:</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; eth.accounts

{
code: -32000,
message: "no keys in store"
}
</pre></div>
                          </div>
                          <p>Це показує, що ви не маєте рахунків. Ви також
                            можете створити рахунок з консолі:</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; personal.newAccount()
Passphrase:
Repeat passphrase:
"0xb2f69ddf70297958e582a0cc98bce43294f1007d"
</pre></div>
                          </div>
                          <div class="admonition note">
                            <p class="first admonition-title">Зауваження</p>
                            <p class="last">Звикніть до використання сильних, та
                              випадково згенерованих, паролів.</p>
                          </div>
                          <p>Ми тільки що створили наш перший рахунок. Якщо ви
                            спробуєте знову перелічити рахунки, ви побачите
                            новий рахунок:</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; eth.accounts
["0xb2f69ddf70297958e582a0cc98bce43294f1007d"]
</pre></div>
                          </div>
                        </div>
                        <div class="section" id="using-mist-ethereum-wallet"> <span
                            id="id3"></span>
                          <h4>Використання Ethereum гаманця Mist <a class="headerlink"
                              href="#using-mist-ethereum-wallet" title="Permalink to this headline">¶</a></h4>
                          <p>Для відходу від командного рядка, тепер є графічна
                            опція GUI для створення рахунків: "офіційний"
                            гаманець Ethereum Mist. Гаманець Mist Ethereum, та
                            його батьківській проект Mist, були розроблені під
                            егідою Ethereum Foundation, звідки і статус
                            “офіційного”. Існують версії застосування для Linux,
                            Mac OS X, та Windows.</p>
                          <div class="admonition warning">
                            <p class="first admonition-title">Попередження</p>
                            <p class="last">Гаманець Mist є в стані
                              бета-тестування. Майте це на увазі, та
                              використовуйте на власний розсуд.</p>
                          </div>
                          <p>Створення рахунку з викристанням гаманця GUI Mist
                            Ethereum не може бути простішим. Фактично, ваш
                            перший рахунок створюється під час встановлення
                            застосування.</p>
                          <ol class="arabic simple">
                            <li><a class="reference external" href="https://github.com/ethereum/mist/releases">Завантажте
                                останню версію застосування гаманця</a> для
                              вашої операційної системи. Відкриття застосування
                              гаманця розпочнеться з синхронізації повної копії
                              блокчейна Ethereum на вашому комп'ютері, оскільки
                              по суті ви будете виконувати повний вузол geth.</li>
                            <li>Розгорніть завантажені файли та запустіть
                              виконавчий файл Ethereum-Wallet.</li>
                          </ol>
                          <a class="reference internal image-reference" href="images/51Downloading.png"><img
                              alt="downloading-mist" class="align-center" src="images/51Downloading.png"
                              style="width: 436.5px; height: 351.75px;"></a>
                          <ol class="arabic simple" start="3">
                            <li>Зачекайте блокчейн, докі він не буде
                              синхронізований, потім слідуйте інструкціям на
                              екрані, та ваш перший рахунок буде створений.</li>
                            <li>Коли ви запустите гаманець Mist Ethereum перший
                              раз, ви побачите рахунок, створений під час
                              процеса встановлення. По замовчанню він буде
                              названий MAIN ACCOUNT (ETHERBASE).</li>
                          </ol>
                          <a class="reference internal image-reference" href="images/51OpeningScreen.png"><img
                              alt="opening-screen" class="align-center" src="images/51OpeningScreen.png"
                              style="width: 512.0px; height: 469.0px;"></a>
                          <ol class="arabic simple" start="5">
                            <li>Створення додаткових рахунків просте; просто
                              клацніть на ADD ACCOUNT на головному екрані
                              застосування, та введіть бажаний пароль.</li>
                          </ol>
                          <div class="admonition note">
                            <p class="first admonition-title">Зауваження</p>
                            <p class="last">Гаманець Mist все ще в стані
                              активної розробки, так що описані вище кроки
                              можуть змінитись під час оновлень.</p>
                          </div>
                        </div>
                        <div class="section" id="creating-a-multi-signature-wallet-in-mist">
                          <h4>Створення Multi-Sig гаманця в Mist<a class="headerlink"
                              href="#creating-a-multi-signature-wallet-in-mist"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Гаманець Mist Ethereum має опцію захисту вашого
                            баланса на гаманці за допомогою гаманця multisig.
                            Перевага від використання multisig гаманця в тому,
                            що він потребує авторизації з більше ніж одного
                            рахунку, щоб списати більші суми з вашого баланса.
                            Перед тим, як ви створите гаманець multisig, вам
                            знадобиться створити більше ніж один рахунок. </p>
                          <p>В Mist створювати файли рахунків дуже просто. В
                            розділі ‘Accounts’ клацніть ‘Add Account’. Pick a
                            strong yet easy-to-remember password (remember there
                            is no password recovery option), confirm it, and
                            your account is created. Create at least 2 accounts.
                            Secondary accounts can be created on separate
                            computers running Mist if you prefer (and
                            theoretically make your multisig more secure doing
                            it this way). You only need the public keys (your
                            deposit addresses) of your secondary accounts when
                            creating the multisig wallet (copy/paste them, do
                            not ever type them by hand). Your primary account
                            will be needed to create the multisig wallet
                            contract, so it must be on the computer you are
                            creating the multisig wallet on.</p>
                          <p>Now that you have your accounts setup, be safe and
                            back them up (if your computer crashes, you will
                            lose your balance if you do not have a backup).
                            Click ‘Backup’ in the top menu. Choose the
                            ‘keystore’ folder, opposite-click on it / choose
                            ‘copy’ (do NOT choose ‘cut’, that would be very
                            bad). Navigate to your desktop, opposite-click in a
                            blank area and choose ‘paste’. You may want to
                            rename this new copy of the ‘keystore’ folder to
                            something like
                            ‘Ethereum-keystore-backup-year-month-day’ so you
                            have quick recognition of it later. At this point
                            you can then add the folder contents to a zip / rar
                            file (and even password-protect the archive with
                            another strong yet easy-to-remember password if
                            backing up online), copy it to a USB Drive, burn it
                            to a CD / DVD, or upload it to online storage
                            (Dropbox / Google Drive / etc).</p>
                          <p>You now should add approximately no less than 0.02
                            ETH to your primary account (the account you will
                            initiate creation of a multisig wallet with). This
                            is required for the transaction fee when you create
                            the multisig wallet contract. An additional 1 ETH
                            (or more) is also needed, because Mist currently
                            requires this to assure wallet contract transactions
                            have enough ‘gas’ to execute properly...so no less
                            than about 1.02 ETH total for starters.</p>
                          <p>You will be entering the full addresses of all the
                            accounts you are attaching to this multisig wallet,
                            when you create it. I recommend copying / pasting
                            each address into a plain text editor (notepad /
                            kedit / etc), after going to each account’s details
                            page in Mist, and choosing ‘copy address’ from the
                            right-side column of buttons. Never type an address
                            by hand, or you run a very high risk of typos and
                            could lose your balance sending transactions to the
                            wrong address.</p>
                          <p>We are now ready to create the multisig wallet.
                            Under ‘Wallet Contracts’, select ‘Add Wallet
                            Contract’. Give it a name, select the primary
                            account owner, and choose ‘Multisignature Wallet
                            Contract’. You will see something like this appear:</p>
                          <p>“This is a joint account controlled by X owners.
                            You can send up to X ether per day. Any transaction
                            over that daily limit requires the confirmation of X
                            owners.”</p>
                          <p>Set whatever amount of owners (accounts) you are
                            attaching to this multisig wallet, whatever you want
                            for a daily withdrawal limit (that only requires one
                            account to withdrawal that amount), and how many
                            owners (accounts) are required to approve any
                            withdrawal amount over the daily limit.</p>
                          <p>Now add the addresses of the accounts that you
                            copied / pasted into your text editor earlier,
                            confirm all your settings are correct, and click
                            ‘Create’ at the bottom. You will then need to enter
                            your password to send the transaction. In the
                            ‘Wallet Contracts’ section it should show your new
                            wallet, and say ‘creating’.</p>
                          <p>When wallet creation is complete, you should see
                            your contract address on the screen. Select the
                            entire address, copy / paste it into a new text file
                            in your text editor, and save the text file to your
                            desktop as ‘Ethereum-Wallet-Address.txt’, or
                            whatever you want to name it.</p>
                          <p>Now all you need to do is backup the
                            ‘Ethereum-Wallet-Address.txt’ file the same way you
                            backed up your account files, and then you are ready
                            to load your new multisig wallet with ETH using this
                            address.</p>
                          <p>If you are restoring from backup, simply copy the
                            files inside the ‘Ethereum-keystore-backup’ folder
                            over into the ‘keystore’ folder mentioned in the
                            first section of this walkthrough. FYI, you may need
                            to create the ‘keystore’ folder if it’s a brand new
                            install of Mist on a machine it was never installed
                            on before (the first time you create an account is
                            when this folder is created). As for restoring a
                            multisig wallet, instead of choosing ‘Multisignature
                            Wallet Contract’ like we did before when creating
                            it, we merely choose ‘Import Wallet’ instead.</p>
                          <p>Вирішення проблем:</p>
                          <ul class="simple">
                            <li>Mist не синхронізується. Одним з рішень, що
                              добре робить, є синхронізація апаратного годинника
                              вашого ПК через NTP сервер, так що час буде
                              напевне коректним... потім перезавантажтесь.</li>
                            <li>Mist запускається після синхронізації, але елран
                              білий і порожній. Є шанс, що ви виконуєте відео
                              драйвери “xorg” на Linux-базованій OS (Ubuntu,
                              Linux Mint, тощо). Спробуйте встановити відео
                              драйвери від виробника. </li>
                            <li>Повідомлення “Wrong password”. Це видається
                              хибне повідомлення, що тимчасово виникає на
                              поточних версіях Mist. Перезапустить Mist, та
                              проблема повинна піти геть (якщо ви при цьому
                              вкажете коректний пароль).</li>
                          </ul>
                        </div>
                        <div class="section" id="using-eth">
                          <h4>Using Eth<a class="headerlink" href="#using-eth" title="Permalink to this headline">¶</a></h4>
                          <p>Every options related to key management available
                            using geth can be used the same way in eth.</p>
                          <p>Below are “account” related options:</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; eth account list  // List all keys available in wallet.
&gt; eth account new   // Create a new key and add it to the wallet.
&gt; eth account update [&lt;uuid&gt;|&lt;address&gt; , ... ]  // Decrypt and re-encrypt given keys.
&gt; eth account import [&lt;uuid&gt;|&lt;file&gt;|&lt;secret-hex&gt;] // Import keys from given source and place in wallet.
</pre></div>
                          </div>
                          <p>Below are “wallet” related option:</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; eth wallet import &lt;file&gt; //Import a presale wallet.
</pre></div>
                          </div>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">the ‘account import’ option can only
                              be used to import generic key file. the ‘wallet
                              import’ option can only be used to import a
                              presale wallet.</p>
                          </div>
                          <p>It is also possible to access keys management from
                            the integrated console (using the built-in console
                            or geth attach):</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; web3.personal
{
      listAccounts: [],
      getListAccounts: function(callback),
      lockAccount: function(),
      newAccount: function(),
      unlockAccount: function()
}
</pre></div>
                          </div>
                        </div>
                        <div class="section" id="using-ethkey-deprecated">
                          <h4>Using EthKey (deprecated)<a class="headerlink" href="#using-ethkey-deprecated"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethkey is a CLI tool of the C++ implementation that
                            allows you to interact with the Ethereum wallet.
                            With it you can list, inspect, create, delete and
                            modify keys and inspect, create and sign
                            transactions.</p>
                          <p>We will assume you have not yet run a client such
                            as eth or anything in the Aleth series of clients.
                            If you have, you can skip this section. To create a
                            wallet, run <code class="docutils literal"><span class="pre">ethkey</span></code>
                            with the <code class="docutils literal"><span class="pre">createwallet</span></code>
                            command:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>&gt; ethkey createwallet
</pre></div>
                          </div>
                          <p>Please enter a MASTER passphrase to protect your
                            key store (make it strong!): You’ll be asked for a
                            “master” passphrase. This protects your privacy and
                            acts as a default password for any keys. You’ll need
                            to confirm it by entering the same text again.</p>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">Use a strong randomly generated
                              password.</p>
                          </div>
                          <p>We can list the keys within the wallet simply by
                            using the list command:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>&gt; ethkey list

No keys found.
</pre></div>
                          </div>
                          <p>We haven’t yet created any keys, and it’s telling
                            us so! Let’s create one.</p>
                          <p>To create a key, we use the <code class="docutils literal"><span
                                class="pre">new</span></code> command. To use it
                            we must pass a name - this is the name we’ll give to
                            this account in the wallet. Let’s call it “test”:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>&gt; ethkey new test
</pre></div>
                          </div>
                          <p>Enter a passphrase with which to secure this
                            account (or nothing to use the master passphrase).
                            It will prompt you to enter a passphrase to protect
                            this key. If you just press enter, it’ll use the
                            default “master” passphrase. Typically this means
                            you won’t need to enter the passphrase for the key
                            when you want to use the account (since it remembers
                            the master passphrase). In general, you should try
                            to use a different passphrase for each key since it
                            prevents one compromised passphrase from giving
                            access to other accounts. However, out of
                            convenience you might decide that for low-security
                            accounts to use the same passphrase.</p>
                          <p>Here, let’s give it the incredibly imaginative
                            passphrase of 123. (Never ever use simple passwords
                            like this for anything else than ephemeral test
                            accounts). Once you enter a passphrase, it’ll ask
                            you to confirm it by entering again. Enter 123 a
                            second time. Because you gave it its own passphrase,
                            it’ll also ask you to provide a hint for this
                            password which will be displayed to you whenever it
                            asks you to enter it. The hint is stored in the
                            wallet and is itself protected by the master
                            passphrase. Enter the truly awful hint of 321
                            backwards.</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>&gt; ethkey new test

Enter a passphrase with which to secure this account (or nothing to use the master passphrase):
Please confirm the passphrase by entering it again:
Enter a hint to help you remember this passphrase: 321 backwards
Created key 055dde03-47ff-dded-8950-0fe39b1fa101
  Name: test
  Password hint: 321 backwards
  ICAP: XE472EVKU3CGMJF2YQ0J9RO1Y90BC0LDFZ
  Raw hex: 0092e965928626f8880629cec353d3fd7ca5974f
</pre></div>
                          </div>
                          <p>All normal (aka direct) ICAP addresses begin with
                            XE so you should be able to recognize them easily.
                            Notice also that the key has another identifier
                            after Created key. This is known as the UUID. This
                            is a unique identifier for the key that has
                            absolutely nothing to do with the account itself.
                            Knowing it does nothing to help an attacker discover
                            who you are on the network. It also happens to be
                            the filename for the key, which you can find in
                            either ~/.web3/keys (Mac or Linux) or
                            $HOME/AppData/Web3/keys (Windows). Now let’s make
                            sure it worked properly by listing the keys in the
                            wallet:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>&gt; ethkey list
055dde03-47ff-dded-8950-0fe39b1fa101 0092e965… XE472EVKU3CGMJF2YQ0J9RO1Y90BC0LDFZ  test
</pre></div>
                          </div>
                          <p>It reports one key on each line (for a total of one
                            key here). In this case our key is stored in a file
                            055dde... and has an ICAP address beginning
                            XE472EVK.... Not especially easy things to remember
                            so rather helpful that it has its proper name, test,
                            too.</p>
                        </div>
                      </div>
                      <div class="section" id="importing-your-presale-wallet">
                        <h3>Importing your presale wallet<a class="headerlink" href="#importing-your-presale-wallet"
                            title="Permalink to this headline">¶</a></h3>
                        <div class="section" id="id4">
                          <h4>Using Mist Ethereum wallet<a class="headerlink" href="#id4"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Importing your presale wallet using the GUI Mist
                            Ethereum wallet is very easy. In fact, you will be
                            asked if you want to import your presale wallet
                            during the installation of the app.</p>
                          <div class="admonition warning">
                            <p class="first admonition-title">Warning</p>
                            <p class="last">Mist wallet is beta software. Beware
                              and use it at your own risk.</p>
                          </div>
                          <p>Instructions for installing the Mist Ethereum
                            wallet are given in the section <a class="reference internal"
                              href="#using-mist-ethereum-wallet"><span>Creating
                                an account: Using Mist Ethereum wallet</span></a>.</p>
                          <p>Simply drag-and-drop your <code class="docutils literal"><span
                                class="pre">.json</span></code> presale wallet
                            file into the designated area and enter your
                            password to import your presale account.</p>
                          <a class="reference internal image-reference" href="images/51PresaleImportInstall.png"><img
                              alt="presale-import" class="align-center" src="images/51PresaleImportInstall.png"
                              style="width: 436.5px; height: 351.75px;"></a>
                          <p>If you choose not to import your presale wallet
                            during installation of the app, you can import it at
                            any time by selecting the <code class="docutils literal"><span
                                class="pre">Accounts</span></code> menu in the
                            app’s menu bar and then selecting <code class="docutils literal"><span
                                class="pre">Import</span> <span class="pre">Pre-sale</span>
                              <span class="pre">Accounts</span></code>.</p>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">The Mist wallet is still in active
                              development, so details of the steps outlined
                              above may change with upgrades.</p>
                          </div>
                        </div>
                        <div class="section" id="using-geth">
                          <h4>Using geth<a class="headerlink" href="#using-geth"
                              title="Permalink to this headline">¶</a></h4>
                          <p>If you have a standalone installation of geth,
                            importing your presale wallet is accomplished by
                            executing the following command in a terminal:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>geth wallet import /path/to/my/presale-wallet.json
</pre></div>
                          </div>
                          <p>You will be prompted to enter your password.</p>
                        </div>
                      </div>
                      <div class="section" id="updating-an-account">
                        <h3>Updating an account<a class="headerlink" href="#updating-an-account"
                            title="Permalink to this headline">¶</a></h3>
                        <p>You are able to upgrade your keyfile to the latest
                          keyfile format and/or upgrade your keyfile password.</p>
                        <div class="section" id="id5">
                          <h4>Using geth<a class="headerlink" href="#id5" title="Permalink to this headline">¶</a></h4>
                          <p>You can update an existing account on the command
                            line with the <code class="docutils literal"><span
                                class="pre">update</span></code> subcommand with
                            the account address or index as parameter. Remember
                            that the account index reflects the order of
                            creation (lexicographic order of keyfile names
                            containing the creation time).</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>geth account update b0047c606f3af7392e073ed13253f8f4710b08b6
</pre></div>
                          </div>
                          <p>or</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>geth account update 2
</pre></div>
                          </div>
                          <p>For example:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>$ geth account update a94f5374fce5edbc8e2a8697c15331677e6ebf0b

Unlocking account a94f5374fce5edbc8e2a8697c15331677e6ebf0b | Attempt 1/3
Passphrase:
0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b
account 'a94f5374fce5edbc8e2a8697c15331677e6ebf0b' unlocked.
Please give a new password. Do not forget this password.
Passphrase:
Repeat Passphrase:
0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b
</pre></div>
                          </div>
                          <p>The account is saved in the newest version in
                            encrypted format, you are prompted for a passphrase
                            to unlock the account and another to save the
                            updated file. This same command can be used to
                            migrate an account of a deprecated format to the
                            newest format or change the password for an account.</p>
                          <p>For non-interactive use the passphrase can be
                            specified with the <code class="docutils literal"><span
                                class="pre">--password</span></code> flag:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>geth --password &lt;passwordfile&gt; account update a94f5374fce5edbc8e2a8697c15331677e6ebf0bs
</pre></div>
                          </div>
                          <p>Since only one password can be given, only format
                            update can be performed, changing your password is
                            only possible interactively.</p>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">account update has the side effect
                              that the order of your accounts may change. After
                              a successful update, all previous formats/versions
                              of that same key will be removed!</p>
                          </div>
                        </div>
                      </div>
                      <div class="section" id="backup-and-restore-accounts"> <span
                          id="id6"></span>
                        <h3>Backup and restore accounts<a class="headerlink" href="#backup-and-restore-accounts"
                            title="Permalink to this headline">¶</a></h3>
                        <div class="section" id="manual-backup-restore">
                          <h4>Manual backup/restore<a class="headerlink" href="#manual-backup-restore"
                              title="Permalink to this headline">¶</a></h4>
                          <p>You must have an account’s keyfile to be able to
                            send any transaction from that account. Keyfiles are
                            found in the keystore subdirectory of your Ethereum
                            node’s data directory. The default data directory
                            locations are platform specific:</p>
                          <ul class="simple">
                            <li>Windows: <code class="docutils literal"><span class="pre">C:\Users\username\%appdata%\Roaming\Ethereum\keystore</span></code></li>
                            <li>Linux: <code class="docutils literal"><span class="pre">~/.ethereum/keystore</span></code></li>
                            <li>Mac: <code class="docutils literal"><span class="pre">~/Library/Ethereum/keystore</span></code></li>
                          </ul>
                          <p>To backup your keyfiles (accounts), copy either the
                            individual keyfiles within the <code class="docutils literal"><span
                                class="pre">keystore</span></code> subdirectory
                            or copy the entire <code class="docutils literal"><span
                                class="pre">keystore</span></code> folder.</p>
                          <p>To restore your keyfiles (accounts), copy the
                            keyfiles back into the <code class="docutils literal"><span
                                class="pre">keystore</span></code> subdirectory,
                            where they were originally.</p>
                        </div>
                        <div class="section" id="importing-an-unencrypted-private-key">
                          <h4>Importing an unencrypted private key<a class="headerlink"
                              href="#importing-an-unencrypted-private-key" title="Permalink to this headline">¶</a></h4>
                          <p>Importing an unencrypted private key is supported
                            by <code class="docutils literal"><span class="pre">geth</span></code></p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>geth account import /path/to/&lt;keyfile&gt;
</pre></div>
                          </div>
                          <p>This command imports an unencrypted private key
                            from the plain text file <code class="docutils literal"><span
                                class="pre">&lt;keyfile&gt;</span></code> and
                            creates a new account and prints the address. The
                            keyfile is assumed to contain an unencrypted private
                            key as canonical EC raw bytes encoded into hex. The
                            account is saved in encrypted format, you are
                            prompted for a passphrase. You must remember this
                            passphrase to unlock your account in the future.</p>
                          <p>An example where the data directory is specified.
                            If the <code class="docutils literal"><span class="pre">--datadir</span></code>
                            flag is not used, the new account will be created in
                            the default data directory, i.e., the keyfile will
                            be placed in the <code class="docutils literal"><span
                                class="pre">keystore</span></code> subdirectory
                            of the data directory.</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>$ geth --datadir /someOtherEthDataDir  account import ./key.prv
The new account will be encrypted with a passphrase.
Please enter a passphrase now.
Passphrase:
Repeat Passphrase:
Address: {7f444580bfef4b9bc7e14eb7fb2a029336b07c9d}
</pre></div>
                          </div>
                          <p>For non-interactive use the passphrase can be
                            specified with the <code class="docutils literal"><span
                                class="pre">--password</span></code> flag:</p>
                          <div class="highlight-Bash">
                            <div class="highlight">
                              <pre>geth --password &lt;passwordfile&gt; account import &lt;keyfile&gt;
</pre></div>
                          </div>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">Since you can directly copy your
                              encrypted accounts to another Ethereum instance,
                              this import/export mechanism is not needed when
                              you transfer an account between nodes.</p>
                          </div>
                          <div class="admonition warning">
                            <p class="first admonition-title">Warning</p>
                            <p class="last">When you copy keys into an existing
                              node’s <code class="docutils literal"><span class="pre">keystore</span></code>,
                              the order of accounts you are used to may change.
                              Therefore you make sure you either do not rely on
                              the account order or double-check and update the
                              indexes used in your scripts.</p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <span id="document-ether"></span>
                    <div class="section" id="ether">
                      <h2>Ефір<a class="headerlink" href="#ether" title="Permalink to this headline">¶</a></h2>
                      <div class="section" id="what-is-ether">
                        <h3>Що таке ефір?<a class="headerlink" href="#what-is-ether"
                            title="Permalink to this headline">¶</a></h3>
                        <p>Ефір є ім'я для валюти, що використовується в
                          Ethereum. Вона використовується для сплати за
                          обчислення в EVM. Це робиться непрямо, через придбання
                          гасу за ефір, як це пояснено в статті про гас. </p>
                        <div class="section" id="denominations">
                          <h4>Номінали<a class="headerlink" href="#denominations"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethereum має метричну систему номіналів, що
                            використовуються як одиниці ефіру. Кожний номінал
                            має власне унікальне ім'я (деякі отримали призвіща
                            визначних фігур, що відіграли помітну роль в
                            розвитку комп'ютерних наук та криптоекономіки).
                            Найменьший номінал, або <em>базова одиниця</em>,
                            ефіру має назву Вей (Wei). Нижче э список назв
                            номіналів, та їх вартість в веях. Слідуя загальному
                            (хоча дещо неоднозначному) шаблону, ефір також також
                            позначає одиницю виміру валюти (1e18 або один
                            квінтільйон вей). Зауважте, що валюта не називаєтсья
                            Ethereum, як багато людей помилково вважає, а також
                            Ethereum і не є одиницею виміру.</p>
                          <table class="docutils" border="1">
                            <colgroup> <col width="32%"> <col width="14%"> <col
                                width="54%"> </colgroup>
                            <thead valign="bottom">
                              <tr class="row-odd">
                                <th class="head">Одиниця</th>
                                <th class="head">Вартість</th>
                                <th class="head">Вей</th>
                              </tr>
                            </thead>
                            <tbody valign="top">
                              <tr class="row-even">
                                <td><strong>wei</strong></td>
                                <td>1 wei</td>
                                <td>1</td>
                              </tr>
                              <tr class="row-odd">
                                <td><strong>Kwei (babbage)</strong></td>
                                <td>1e3 wei</td>
                                <td>1,000</td>
                              </tr>
                              <tr class="row-even">
                                <td><strong>Mwei (lovelace)</strong></td>
                                <td>1e6 wei</td>
                                <td>1,000,000</td>
                              </tr>
                              <tr class="row-odd">
                                <td><strong>Gwei (shannon)</strong></td>
                                <td>1e9 wei</td>
                                <td>1,000,000,000</td>
                              </tr>
                              <tr class="row-even">
                                <td><strong>microether (szabo)</strong></td>
                                <td>1e12 wei</td>
                                <td>1,000,000,000,000</td>
                              </tr>
                              <tr class="row-odd">
                                <td><strong>milliether (finney)</strong></td>
                                <td>1e15 wei</td>
                                <td>1,000,000,000,000,000</td>
                              </tr>
                              <tr class="row-even">
                                <td><strong>ether</strong></td>
                                <td>1e18 wei</td>
                                <td>1,000,000,000,000,000,000</td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                      </div>
                      <div class="section" id="ether-supply">
                        <h3>Випуск ефіру<a class="headerlink" href="#ether-supply"
                            title="Permalink to this headline">¶</a></h3>
                        <ul class="simple">
                          <li><a class="reference external" href="https://blog.ethereum.org/2014/04/10/the-issuance-model-in-ethereum/">https://blog.ethereum.org/2014/04/10/the-issuance-model-in-ethereum/</a></li>
                          <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/44zy88/clarification_on_ether_supply_and_cost_of_gas/">https://www.reddit.com/r/ethereum/comments/44zy88/clarification_on_ether_supply_and_cost_of_gas/</a></li>
                          <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/45vj4g/question_about_scarcity_of_ethereum_and_its/">https://www.reddit.com/r/ethereum/comments/45vj4g/question_about_scarcity_of_ethereum_and_its/</a></li>
                          <li><a class="reference external" href="https://www.reddit.com/r/ethtrader/comments/48yqg6/is_there_a_cap_like_with_btc_with_how_many_ether/">https://www.reddit.com/r/ethtrader/comments/48yqg6/is_there_a_cap_like_with_btc_with_how_many_ether/</a></li>
                        </ul>
                      </div>
                      <div class="section" id="getting-ether">
                        <h3>Отримання ефіру<a class="headerlink" href="#getting-ether"
                            title="Permalink to this headline">¶</a></h3>
                        <p>Щоб отримати ефір, вам або:</p>
                        <ul class="simple">
                          <li>стати добувачем (майнером) на Ethereum (дивіться
                            Майнинг) або</li>
                          <li>торгувати іншими малютами за ефір, використовуючи
                            централізований або недовірений сервіси</li>
                          <li>використовувати дружній до користувача <a class="reference external"
                              href="https://github.com/ethereum/mist/releases">Mist
                              Ethereum GUI Wallet</a>, що починаючи з Beta 6
                            додає можливість придбання ефіру, використовуючи <a
                              class="reference external" href="http://shapeshift.io/">http://shapeshift.io/</a>
                            API.</li>
                        </ul>
                        <div class="section" id="trustless-services">
                          <h4>Недовірені сервіси<a class="headerlink" href="#trustless-services"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Зауважте, що платформа Ethereum особлива в тому, що
                            смарт контракти дозволяють недовірені сервіси, що
                            уникають потреби в довірених третіх сторонах в
                            транзакціях обміну валюти, тобто це бізнес обміну
                            валюти без посередників. </p>
                          <p>Такі проекти (в статусі альфа/передвихід на час
                            написання):</p>
                          <ul>
                            <li>
                              <dl class="first docutils">
                                <dt><a class="reference external" href="http://btcrelay.org/">BTCrelay</a></dt>
                                <dd>
                                  <ul class="first last simple">
                                    <li><a class="reference external" href="https://medium.com/@ConsenSys/taking-stock-bitcoin-and-ethereum-4382f0a2f17">Більше
                                        інформації</a> (щодо ETH/BTC
                                      двосторонній обмін без модифіікації коду
                                      bitcoin).</li>
                                    <li><a class="reference external" href="http://martin.swende.se/blog/BTCRelay-Auditing.html">BTCrelay
                                        audit</a></li>
                                  </ul>
                                </dd>
                              </dl>
                            </li>
                            <li>
                              <p class="first"><a class="reference external" href="https://etherex.org">EtherEx
децентралізований
                                  обмінник</a>.</p>
                            </li>
                          </ul>
                        </div>
                        <div class="section" id="list-of-centralised-exchange-marketplaces">
                          <h4>Список централізованих ринків обміну<a class="headerlink"
                              href="#list-of-centralised-exchange-marketplaces"
                              title="Permalink to this headline">¶</a></h4>
                          <table class="docutils" border="1">
                            <colgroup> <col width="48%"> <col width="52%"> </colgroup>
                            <thead valign="bottom">
                              <tr class="row-odd">
                                <th class="head">Обмінник</th>
                                <th class="head">Валюти</th>
                              </tr>
                            </thead>
                            <tbody valign="top">
                              <tr class="row-even">
                                <td>Poloniex</td>
                                <td>BTC</td>
                              </tr>
                              <tr class="row-odd">
                                <td>Kraken</td>
                                <td>BTC, USD, EUR, CAD, GBP</td>
                              </tr>
                              <tr class="row-even">
                                <td>Gatecoin</td>
                                <td>BTC, EUR</td>
                              </tr>
                              <tr class="row-odd">
                                <td>Bitfinex</td>
                                <td>BTC, USD</td>
                              </tr>
                              <tr class="row-even">
                                <td>Bittrex</td>
                                <td>BTC</td>
                              </tr>
                              <tr class="row-odd">
                                <td>Bluetrade</td>
                                <td>BTC, LTC, DOGE</td>
                              </tr>
                              <tr class="row-even">
                                <td>HitBTC</td>
                                <td>BTC</td>
                              </tr>
                              <tr class="row-odd">
                                <td>Livecoin</td>
                                <td>BTC</td>
                              </tr>
                              <tr class="row-even">
                                <td>Coinsquare</td>
                                <td>BTC</td>
                              </tr>
                              <tr class="row-odd">
                                <td>Bittylicious</td>
                                <td>GBP</td>
                              </tr>
                              <tr class="row-even">
                                <td>BTER</td>
                                <td>CNY</td>
                              </tr>
                              <tr class="row-odd">
                                <td>Yunbi</td>
                                <td>CNY</td>
                              </tr>
                              <tr class="row-even">
                                <td>Metaexchange</td>
                                <td>BTC</td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                        <div class="section" id="centralised-fixed-rate-exchanges">
                          <h4>Централізовані обмінники з фвксованими ставками<a
                              class="headerlink" href="#centralised-fixed-rate-exchanges"
                              title="Permalink to this headline">¶</a></h4>
                          <table class="docutils" border="1">
                            <colgroup> <col width="48%"> <col width="52%"> </colgroup>
                            <thead valign="bottom">
                              <tr class="row-odd">
                                <th class="head">Обмінник</th>
                                <th class="head">Валюти</th>
                              </tr>
                            </thead>
                            <tbody valign="top">
                              <tr class="row-even">
                                <td><a class="reference external" href="shapeshift.io">Shapeshift</a></td>
                                <td>BTC, LTC, DOGE, Other</td>
                              </tr>
                              <tr class="row-odd">
                                <td><a class="reference external" href="https://bity.com">Bity</a></td>
                                <td>BTC, USD, EUR, CHF</td>
                              </tr>
                            </tbody>
                          </table>
                        </div>
                        <div class="section" id="trading-and-price-analytics">
                          <h4>Trading and price analytics<a class="headerlink" href="#trading-and-price-analytics"
                              title="Permalink to this headline">¶</a></h4>
                          <ul class="simple">
                            <li><a class="reference external" href="https://coinmarketcap.com/currencies/ethereum/#markets">ETH
                                markets exhaustive listing by volume on
                                coinmarketcap</a></li>
                            <li>Aggregating realtime stats of major ETH markets:
                              <ul>
                                <li><a class="reference external" href="https://tradeblock.com/ethereum">Tradeblock</a></li>
                                <li><a class="reference external" href="http://ethereumwisdom.com">EthereumWisdom</a></li>
                                <li><a class="reference external" href="https://www.cryptocompare.com/coins/eth/overview">Cryptocompare</a></li>
                                <li><a class="reference external" href="https://coinmarketcap.com/currencies/ethereum/">Coinmarketcap</a></li>
                              </ul>
                            </li>
                          </ul>
                        </div>
                      </div>
                      <div class="section" id="online-wallets-paper-wallets-and-cold-storage">
                        <span id="online-wallets-and-storage-solutions"></span>
                        <h3>Онлайн гаманці, паперові гаманці та холодні сховища<a
                            class="headerlink" href="#online-wallets-paper-wallets-and-cold-storage"
                            title="Permalink to this headline">¶</a></h3>
                        <div class="admonition-todo admonition" id="index-0">
                          <p class="first admonition-title">Todo</p>
                          <p>This is here just a dumping ground of links and
                            notes Please move this over in a listing form to
                            ecosystem</p>
                          <p class="last">Keep examples here, maybe explain
                            paranoid practices, list dangers</p>
                        </div>
                        <ul>
                          <li>
                            <dl class="first docutils">
                              <dt>Mist Ethereum Wallet</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="https://github.com/ethereum/mist/releases">Releases
                                      to download</a></li>
                                  <li><a class="reference external" href="https://blog.ethereum.org/2015/09/16/ethereum-wallet-developer-preview/">Mist
                                      Ethereum Wallet developer preview</a> -
                                    foundation blog post</li>
                                  <li><a class="reference external" href="https://www.youtube.com/watch?v=Z6lE0Ctaeqs">How
                                      to easily set up the Ethereum Mist wallet!</a>
                                    - Tutorial by Tommy Economics</li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>Kryptokit Jaxx</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="http://jaxx.io/">Jaxx
                                      main site</a></li>
                                  <li><a class="reference external" href="http://favs.pw/first-ethereum-mobile-app-released/#.VsHn_PGPL5c">Mobile
                                      release</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>Etherwall</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="http://www.etherwall.com/">Etherwall
                                      website</a></li>
                                  <li><a class="reference external" href="https://github.com/almindor/etherwall">Etherwall
                                      source</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>MyEtherWallet</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="https://www.myetherwallet.com/">MyEtherWallet
                                      website</a></li>
                                  <li><a class="reference external" href="https://github.com/kvhnuke/etherwallet/">MyEtherWallet
                                      source</a></li>
                                  <li><a class="reference external" href="http://sebfor.com/myetherwallet-chrome-extension-release/">Chrome
                                      extension</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>Cold storage</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="https://github.com/ConsenSys/icebox">Icebox</a>
                                    by <a class="reference external" href="https://consensys.net/">ConsenSys</a>
                                    - Cold storage based on lightwallet with HD
                                    wallet library integrated.</li>
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/45uvmy/offline_cold_storage_question/offline_cold_storage_question">Reddit
                                      discussion 1</a></li>
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/48wfbv/eli5_how_to_setup_a_cold_storage_wallet_as/">How
                                      to setup a cold storage wallet</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>Hardware wallet</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/45siaq/hardware_wallet/">reddit
                                      discussion 2</a></li>
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/4521o4/crowdfunding_ethereum_hardware_cold_storage_wallet/">reddit
                                      discussion 3</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>Brain wallet</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li>brain wallets are not safe, do not use
                                    them. <a class="reference external" href="https://www.reddit.com/r/ethereum/comments/45y8m7/brain_wallets_are_now_generally_shunned_by/">https://www.reddit.com/r/ethereum/comments/45y8m7/brain_wallets_are_now_generally_shunned_by/</a></li>
                                  <li>Extreme caution with brain wallets. Read
                                    the recent controversy: <a class="reference external"
                                      href="https://reddit.com/r/ethereum/comments/43fhb5/brainwallets">https://reddit.com/r/ethereum/comments/43fhb5/brainwallets</a>
                                    vs <a class="reference external" href="http://blog.ether.camp/post/138376049438/why-brain-wallet-is-the-best">http://blog.ether.camp/post/138376049438/why-brain-wallet-is-the-best</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                          <li>
                            <dl class="first docutils">
                              <dt>Різне</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li><a class="reference external" href="https://www.kraken.com/ether">Kraken
                                      Wallet Sweeper Tool</a> - Pre-sale wallet
                                    import</li>
                                  <li><a class="reference external" href="http://ethereum.stackexchange.com/questions/1239/what-is-the-recommended-way-to-safely-store-ether">Рекомендовані
                                      шляхи для безпечного зберігання ефіру<br>
                                    </a></li>
                                  <li><a class="reference external" href="http://sebfor.com/how-to-buy-and-store-ether/">Як
                                      купляти та продавати ефір</a></li>
                                  <li><a class="reference external" href="http://www.fastcompany.com/3056651/researchers-find-a-crack-that-drains-supposedly-secure-bitcoin-wallets">Всуп
                                      для недосвідчених щодо брутфорсу, та чому
                                      не слід використовувати брейн гаманці</a></li>
                                  <li><a class="reference external" href="https://github.com/ethereum/pyethsaletool/blob/master/README.md">Pyethsaletool</a></li>
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/47j3r5/eli5_accounts_vs_wallet_contracts_on_mist/">Рахунок
                                      проти гаманця</a></li>
                                </ul>
                              </dd>
                            </dl>
                          </li>
                        </ul>
                      </div>
                      <div class="section" id="sending-ether">
                        <h3>Надсилання ефіру<a class="headerlink" href="#sending-ether"
                            title="Permalink to this headline">¶</a></h3>
                        <p><a class="reference external" href="https://github.com/ethereum/mist/releases">Ethereum
                            Wallet</a> підтримує надсилання ефіру через
                          графічний інтерфейс.</p>
                        <p>Ефір також може бути переданий з використанням <strong>geth
                            console</strong>.</p>
                        <div class="highlight-console">
                          <div class="highlight">
                            <pre><span class="gp">&gt;</span> var <span class="nv">sender</span> <span
class="o">=</span> eth.accounts<span class="o">[</span>0<span class="o">]</span><span
class="p">;</span>
<span class="gp">&gt;</span> var <span class="nv">receiver</span> <span class="o">=</span> eth.accounts<span
class="o">[</span>1<span class="o">]</span><span class="p">;</span>
<span class="gp">&gt;</span> var <span class="nv">amount</span> <span class="o">=</span> web3.toWei<span
class="o">(</span>0.01, <span class="s2">"ether"</span><span class="o">)</span>
<span class="gp">&gt;</span> eth.sendTransaction<span class="o">({</span>from:sender, to:receiver, value: amount<span
class="o">})</span>
</pre></div>
                        </div>
                        <p>Для додаткової інформації щодо транзакцій передачі
                          ефіру дививіться <a class="reference internal" href="index.html#account-types-gas-and-transactions"><span>Типи
                              рахунків, Гас, та Транзакцїі</span></a>.</p>
                        <p>Ethereum є унікальним в сфері криптовалют, в тому
                          сенсі, що ефір має практичну вартість як криптопальне,
                          загально відоме як “гас”. Крім комісійних за
                          транзакцію, гас є центральною частиною кожного
                          мережевого запиту, та вимагає, щоб надсилач сплачував
                          за спожиті обчислювальні ресурси. Вартість гасу
                          обчислюється динамічно, базуючись на об'ємі та
                          складності запиту, та множиться на поточну ціну гасу.
                          Його значення, як криптопального, має ефект збільшення
                          стабільності та довготривалого запиту на ефір, та
                          Ethereum загалом. Для додаткової інформації дивіться <a
                            class="reference internal" href="index.html#account-types-gas-and-transactions"><span>Типи
                              рахунків, Гас, та Транзакції</span></a>.</p>
                      </div>
                      <div class="section" id="gas-and-ether">
                        <h3>Гас та ефір<a class="headerlink" href="#gas-and-ether"
                            title="Permalink to this headline">¶</a></h3>
                        <ul class="simple">
                          <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/271qdz/can_someone_explain_the_concept_of_gas_in_ethereum/">https://www.reddit.com/r/ethereum/comments/271qdz/can_someone_explain_the_concept_of_gas_in_ethereum/</a></li>
                          <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3fnpr1/can_someone_possibly_explain_the_concept_of/">https://www.reddit.com/r/ethereum/comments/3fnpr1/can_someone_possibly_explain_the_concept_of/</a></li>
                          <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/49gol3/can_ether_be_used_as_a_currency_eli5_ether_gas/">https://www.reddit.com/r/ethereum/comments/49gol3/can_ether_be_used_as_a_currency_eli5_ether_gas/</a></li>
                        </ul>
                        <p>Гас призначений бути сталою вартістю мережевих
                          ресурсів/навантаження. Ви бажаєте, щоб ціна надсилання
                          транзакції завжди була та ж сама, так що насправді ви
                          не очікуєте, щоб гас будь-коли почав друкуватись, бо
                          валюти загалом є волатильними. </p>
                        <p>Так що замість цього ми випустили ефір, чия вартість
                          призначена бути змінною, але також реалізували
                          вартість гасу, в термінах ефіру. Якщо ціна ефіру буде
                          зростати, ціна гасу в термінах ефіру має знижатись,
                          щоб утримувати реальну цінність гасу тою самою.</p>
                        <p>Гас має декілька асоційованих з собою термінів:
                          вартість гасу, ціна гасу, ліміт гасу, та комісійний
                          гас. Принцип за гасом є мати стабільну вартість, в
                          якій можна оцінити певну транзакцію або обчислення в
                          мережі Ethereum.</p>
                        <ul class="simple">
                          <li>Вартість гасу є статичне значення, скільки коштує
                            обчислення в термінах гасу, та ціль цього є таке,
                            щоб реальна вартість гасу ніколи не зменшувалась,
                            так, щоб ця вартість завжди залишалась стабільною з
                            часом. </li>
                          <li>Ціна гасу є те, скільки коштує гас в термінах
                            іншої валюти або токенів, як ефір. Щоб стабілізувати
                            вартість гасу, ціна гасу є плаваючим значенням, так,
                            що коли ціна токенів або валюти зазнає змін, ціна
                            гасу змінювалась, щоб залишати ту ж саму реальність
                            вартість гасу. Ціна гасу встановлюється через
                            врівноважену ціну, від того, як багато користувачі
                            бажають витратити, та як багато обробляючих вузлів
                            бажають прийняти. </li>
                          <li>Ліміт гасу є максимальна кількість гасу, що може
                            бути використана на блок. Гас, що може бути
                            використаний на блок, приймає до уваги максимальне
                            обчислювальне навантаження, об'єм транзакції або
                            розмір блоку, та майнери можуть повільно змінювати
                            це значення з часом. </li>
                          <li>Комісійний гас є ефективною кількістю гасу, яку
                            потрібно сплатити для виконання певної транзакцїі
                            або програми (що називаєтсья контрактом). Комісійний
                            гас для блоку може приймати до уваги&nbsp;
                            обчислювальне навантаження, обсяг транзакції, або
                            розмір блоку. Комісійний гас сплачується майнерам
                            (або пов'язаним контракторам в PoS).</li>
                        </ul>
                      </div>
                    </div>
                    <span id="document-network/index"></span>
                    <div class="section" id="the-ethereum-network">
                      <h2>Мережа Ethereum<a class="headerlink" href="#the-ethereum-network"
                          title="Permalink to this headline">¶</a></h2>
                      <p>Інформація про мережу.</p>
                      <div class="toctree-wrapper compound"> <span id="document-network/connecting-to-the-network"></span>
                        <div class="section" id="connecting-to-the-network"> <span
                            id="sec-connecting-to-the-network"></span>
                          <h3>Під'єднання до мережі<a class="headerlink" href="#connecting-to-the-network"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Цей розділ</p>
                          <div class="section" id="the-ethereum-network">
                            <h4>Мережа Ethereum<a class="headerlink" href="#the-ethereum-network"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Базою для децентралізованого консенсусу є
                              двостороння мережа приймаючих участь вузлів, що
                              обслуговують та захищають блокчейн. Дивіться <a class="reference internal"
                                href="index.html#mining"><span>Майнинг</span></a>.</p>
                            <div class="section" id="ethereum-network-stats">
                              <h5>Статистика мережі Ethereum<a class="headerlink"
                                  href="#ethereum-network-stats" title="Permalink to this headline">¶</a></h5>
                              <p><a class="reference external" href="https://ethstats.net/">EthStats.net</a>
                                is a dashboard of live statistics of the
                                Ethereum network. This dashboard displays
                                important information such as the current block,
                                hash difficulty, gas price, and gas spending.
                                The nodes shown on the page are only a selection
                                of actual nodes on the network. Anyone is
                                allowed to add their node to the EthStats
                                dashboard. The <a class="reference external" href="https://github.com/cubedro/eth-netstats">Eth-Netstats
                                  README on Github</a> describes how to connect.</p>
                              <p><a class="reference external" href="https://www.ethernodes.org/">EtherNodes.com</a>
                                displays current and historical data on node
                                count and other information on both the Ethereum
                                mainnet and Morden testnet.</p>
                              <p><a class="reference external" href="https://etherchain.org/nodes">Distribution
                                  of client implementations on the current live
                                  network</a> - Realtime stats on EtherChain.</p>
                            </div>
                            <div class="section" id="public-private-and-consortium-blockchains">
                              <h5>Публічні, приватні та консорциум блокчейни<a class="headerlink"
                                  href="#public-private-and-consortium-blockchains"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>Сьогодні більшість проектів Ethereum
                                покладаються на Ethereum як на публічний
                                блокчейн, що гарантує доступ до більшої
                                аудиторії користувачів, мережевих вузлів, валюти
                                та ринків. Однак, часто існують причини обрати
                                приватний блокчейн, або консорциум блокчейн (між
                                групою довірених сторін). Наприклад, декілька
                                компаній у вертикалях, як банкинг, дивляться на
                                Ethereum як на платформу для своїх власних
                                приватних блокчейнів. </p>
                              <p>Нижче є уривок з блогпосту <a class="reference external"
                                  href="https://blog.ethereum.org/2015/08/07/on-public-and-private-blockchains/">Щодо
                                  публічних та приватних блокчейнів<span style="color: #404040;">,</span></a>
                                що пояснює різницю між трьома типами блокчейнів,
                                на основі дозволів:</p>
                              <ul class="simple">
                                <li><strong>Публічні блокчейни</strong>:
                                  публічний блокчейн є такий блокчейн, який
                                  будь-хто в світі може читати, в який будь-хто
                                  в світі може надсилати транзакції, та очікує
                                  побачити їх включеними, якщо вони валідні, та
                                  будь-хто в світі може приймати участь в
                                  процесі консенсусу – процес для визначення, що
                                  блоки були додані в ланцюг, та який стан є
                                  наразі. Як заміна для централізованої або
                                  квазі-централізованої довіри, публічні
                                  блокчейни захищені через криптоекономіку –
                                  комбінацію економічних заохочень та
                                  криптографічної верифікацїі, використовуючи
                                  механізми, такі, як доказ виконаної роботи,
                                  або перевірка вкладів, слідуя загальному
                                  принципу, що ступінь, до якої дехто може мати
                                  вплив на процес консенсусу, пропорційно до
                                  кількості економічних ресурсів, що вони можуть
                                  докласти для присвоєння його собі. Ці
                                  блокчейни загалом розглядаються як “повністю
                                  децентралізовані”.</li>
                                <li><strong>Консорциум блокчейни</strong>:
                                  консорциум блокчейн є блокчейн, де процес
                                  консенсусу контролюється попередньо обраним
                                  набором вузлів; наприклад, дехто може уявити
                                  консорціум з 15 фінансових установ, кожна з
                                  яких оперує вузлом, та з яких 10 мусять
                                  підписати кожний блок, щоб цей блок став
                                  валідним. Право читати блокчейн може бути
                                  публічним, або обмеженим до зацікавлених
                                  сторін, і також існують гібридні маршрути,
                                  такі як коли кореневі хеші блоків є публічні,
                                  разом з API, що дозволяє членам з публіки
                                  зробити обмежену кількість запитів, та
                                  отримати криптографічні докази деяких частин
                                  стану блокчейну. Ці блокчейни можуть
                                  розглядатись&nbsp; “частково
                                  децентралізованими”.</li>
                                <li><strong>Приватні блокчейни</strong>:
                                  повністю приватний блокчейн є блокчейн, де
                                  право на запис утримуєтсья централізованим до
                                  однієї організації. Право на читання може бути
                                  публічним, або обмеженим до довільної міри.
                                  Вірогідні застосування включають
                                  обслуговування бази даних, аудит, тощо,
                                  внутрішні для однієї компанії, так що публічне
                                  читання може бути непотрібним в багатьох
                                  випадках взагалі, хоча в інших випадках
                                  публічний аудит може бути бажаним.</li>
                              </ul>
                              <p>Хоча ці приватні/консорциум блокчейни не можуть
                                мати ніякого з'єднання з публічним блокчейном,
                                вони все ще додають до загальної&nbsp;
                                екосистеми Ethereum, через інвестицію в розробку
                                програмного забезпечення Ethereum. З часом, це
                                перетворюється в покращення цього забезпечення,
                                загальні знання, та можливості створення робочих
                                місць.</p>
                            </div>
                          </div>
                          <div class="section" id="how-to-connect">
                            <h4>Як з'єднатись<a class="headerlink" href="#how-to-connect"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Geth постійно намагається з'єднатись до інших
                              вузлів в мережі, доки він має співрозмовників.
                              Якщо ви маєте UPnP ввімкнений на вашому
                              маршрутизаторі, або виконуєте Ethereum на сервері
                              в інтернеті, він також буде підтримувати з'єднання
                              від інших вузлів.</p>
                            <p>Geth знаходить інших через дещо з назвою <em>протокол
                                виявлення</em>. В протоколі виявлення вузли
                              пліткують один з одним, щоб взнати про інші вузли
                              в мережі. Щоб з початку почати з чогось, geth
                              використовує набір розкручуючих вузлів, чиї
                              кінцеви точки записані в джерельному коді.</p>
                            <div class="section" id="checking-connectivity-and-enode-ids">
                              <h5>Перевірка з'єднання та ENODE ID<a class="headerlink"
                                  href="#checking-connectivity-and-enode-ids" title="Permalink to this headline">¶</a></h5>
                              <p>Щоб перевірити в інтерактивній консолі, як
                                багато співрозмовників під'єднано, модуль <code
                                  class="docutils literal"><span class="pre">net</span></code>
                                має два атрибути, що дають вам інформацію щодо
                                числа сторін розмови, та чи є ви в слухаючому
                                режимі.</p>
                              <div class="highlight-Javascript">
                                <div class="highlight">
                                  <pre>&gt; net.listening
true

&gt; net.peerCount
4
</pre></div>
                              </div>
                              <p>Щоб отримати більше інформації щодо під'єднаних
                                вузлів, таку, як IP адреси та номери портів,
                                підтримувані протоколи, використовуйте функцію <code
                                  class="docutils literal"><span class="pre">peers()</span></code>
                                об'єкта <code class="docutils literal"><span class="pre">admin</span></code>.
                                <code class="docutils literal"><span class="pre">admin.peers()</span></code>
                                повертає список наразі під'єднаних сторін. </p>
                              <div class="highlight-Javascript">
                                <div class="highlight">
                                  <pre>&gt; admin.peers
[{
      ID: 'a4de274d3a159e10c2c9a68c326511236381b84c9ec52e72ad732eb0b2b1a2277938f78593cdbe734e6002bf23114d434a085d260514ab336d4acdc312db671b',
      Name: 'Geth/v0.9.14/linux/go1.4.2',
      Caps: 'eth/60',
      RemoteAddress: '5.9.150.40:30301',
      LocalAddress: '192.168.0.28:39219'
 }, {
      ID: 'a979fb575495b8d6db44f750317d0f4622bf4c2aa3365d6af7c284339968eef29b69ad0dce72a4d8db5ebb4968de0e3bec910127f134779fbcb0cb6d3331163c',
      Name: 'Geth/v0.9.15/linux/go1.4.2',
      Caps: 'eth/60',
      RemoteAddress: '52.16.188.185:30303',
      LocalAddress: '192.168.0.28:50995'
 }, {
      ID: 'f6ba1f1d9241d48138136ccf5baa6c2c8b008435a1c2bd009ca52fb8edbbc991eba36376beaee9d45f16d5dcbf2ed0bc23006c505d57ffcf70921bd94aa7a172',
      Name: 'pyethapp_dd52/v0.9.13/linux2/py2.7.9',
      Caps: 'eth/60, p2p/3',
      RemoteAddress: '144.76.62.101:30303',
      LocalAddress: '192.168.0.28:40454'
 }, {
  ID: 'f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0',
  Name: '++eth/Zeppelin/Rascal/v0.9.14/Release/Darwin/clang/int',
  Caps: 'eth/60, shh/2',
  RemoteAddress: '129.16.191.64:30303',
  LocalAddress: '192.168.0.28:39705'
 } ]
</pre></div>
                              </div>
                              <p>Щоб перевірити порти, задіяні geth, а також
                                знайти URI вашого вузла, виконайте наступне:</p>
                              <div class="highlight-Javascript">
                                <div class="highlight">
                                  <pre>&gt; admin.nodeInfo
{
  Name: 'Geth/v0.9.14/darwin/go1.4.2',
  NodeUrl: 'enode://3414c01c19aa75a34f2dbd2f8d0898dc79d6b219ad77f8155abf1a287ce2ba60f14998a3a98c0cf14915eabfdacf914a92b27a01769de18fa2d049dbf4c17694@[::]:30303',
  NodeID: '3414c01c19aa75a34f2dbd2f8d0898dc79d6b219ad77f8155abf1a287ce2ba60f14998a3a98c0cf14915eabfdacf914a92b27a01769de18fa2d049dbf4c17694',
  IP: '::',
  DiscPort: 30303,
  TCPPort: 30303,
  Td: '2044952618444',
  ListenAddr: '[::]:30303'
}
</pre></div>
                              </div>
                            </div>
                          </div>
                          <div class="section" id="download-the-blockchain-faster">
                            <h4>Швидке завантаження блокчейну<a class="headerlink"
                                href="#download-the-blockchain-faster" title="Permalink to this headline">¶</a></h4>
                            <p>Коли ви запускаєте клієнт Ethereum, блокчейн
                              Ethereum буде завантажений автоматично. Час, який
                              займає завантаження блокчейну Ethereum, може
                              варіювати на основі клієнту, налаштувань клієнта,
                              швидкості з'єднання, та числа доступних
                              співрозмовників. Нижче є деякі опції для більш
                              швидкого отримання блокчейну Ethereum.</p>
                            <div class="section" id="using-geth">
                              <h5>Використовуючи geth<a class="headerlink" href="#using-geth"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>Якщо ви використовуєте клієнт geth, є деякі
                                речі, як ви можете прискорити час завантаження
                                блокчейну Ethereum. Якщо ви обираєте
                                використовувати флаг <code class="docutils literal"><span
                                    class="pre">--fast</span></code> для
                                виконання швидкої синхронізації Ethereum, ви не
                                зберігатиме останні дані транзакцій.</p>
                              <div class="admonition note">
                                <p class="first admonition-title">Зауваження</p>
                                <p class="last">Ви не можете використовувати цей
                                  флаг після виконання всіх або частини
                                  нормальної операпції синхронізації, що
                                  означає, що вам не потрібно мати любу частину
                                  блокчейну Ethereum завантаженою, перед
                                  виконанням цієї команди. <a class="reference external"
                                    href="http://ethereum.stackexchange.com/questions/1845/why-isnt-fast-sync-the-default">Дивіться
                                    цю відповідь на Ethereum Stack.Exchange для
                                    додаткової інформації</a>.</p>
                              </div>
                              <p>Нижче надані деякі флаги, які ви можете
                                використати, якщо бажаєте синхронізувати вашого
                                клієнта більш швидко.</p>
                              <p><code class="docutils literal"><span class="pre">--fast</span></code></p>
                              <p>Цей флаг дозволяє швидку синхронізацію через
                                завантаження стану, замість ніж завантажувати
                                повні дані блоків. Це також драматично зменшить
                                розмір вашого блокчейну. ЗАУВАЖЕННЯ: <code class="docutils literal"><span
                                    class="pre">--fast</span></code> може бути
                                виконаний, якщо ви синхронізуєте ваш блокчейн з
                                нуля, та тільки якщо перший раз ви завантажуєте
                                блокчейн з міркувань безпеки. <a class="reference external"
                                  href="https://www.reddit.com/r/ethereum/comments/3y9316/geth_fast_option_question/">Дивіться
                                  цей пост Reddit для додаткової інформації</a>.</p>
                              <p><code class="docutils literal"><span class="pre">--cache=1024</span></code></p>
                              <p>Мегабайти пам'яті, розміщеної для внутрішнього
                                кешування (мінімум 16MB / примус бази даних).
                                Замовчанням є 16MB, так що збільшивши його до
                                256, 512, 1024 (1GB), або 2048 (2GB), в
                                залежності від того, скільки пам'яті має ваш
                                комп'ютер, повинно дати різницю.</p>
                              <p><code class="docutils literal"><span class="pre">--jitvm</span></code></p>
                              <p>Цей флаг вмикає JIT VM.</p>
                              <p>Повний приклад команди з консолі:</p>
                              <div class="highlight-Bash">
                                <div class="highlight">
                                  <pre>geth --fast --cache=1024 --jitvm console
</pre></div>
                              </div>
                              <p>Щодо додаткової дискусії по швидкій
                                синхронізацїі та часу завантаження блокчейну <a
                                  class="reference external" href="https://www.reddit.com/r/ethereum/comments/46c4ga/lets_benchmark_the_clients/">дивіться
                                  цей пост на Reddit</a>.</p>
                            </div>
                            <div class="section" id="exporting-importing-the-blockchain">
                              <h5>Експорт/Імпорт блокчейну<a class="headerlink"
                                  href="#exporting-importing-the-blockchain" title="Permalink to this headline">¶</a></h5>
                              <p>Якщо ви вже маєте повний синхронизований вузол
                                Ethereum, ви можете експортувати дані блокчейну
                                з повністю синхронізованого вузла, та
                                імпортувати його на новий вузол. Ви можете
                                досягти цього в geth, експортувавши ваш повний
                                вузол командою <code class="docutils literal"><span
                                    class="pre">geth</span> <span class="pre">export</span>
                                  <span class="pre">filename</span></code>, та
                                імпортувавши блокчейн в наш вузол,
                                використовуючи <code class="docutils literal"><span
                                    class="pre">geth</span> <span class="pre">import</span>
                                  <span class="pre">filename</span></code>.
                                Дивіться <a class="reference external" href="staticnodes">це
                                  посилання</a></p>
                            </div>
                          </div>
                          <div class="section" id="static-nodes-trusted-nodes-and-boot-nodes">
                            <span id="cr-static-nodes"></span>
                            <h4>Статичні вузли, довірені вузли та завантажувані
                              вузли<a class="headerlink" href="#static-nodes-trusted-nodes-and-boot-nodes"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Geth підтримує можливість, що називається
                              статичними вузлами, якщо ви маєте деякі вузли, до
                              яких ви б бажали весь час під'єднуватись. Статичні
                              вузли повторно підключаютсья після від'єднання. Ви
                              можете сконфігурувати постійні статичні вузли,
                              поклавши дещо подібне до наступного в <code class="docutils literal"><span
                                  class="pre">&lt;datadir&gt;/static-nodes.json</span></code>
                              (це має бути та сама папка, де ваші <code class="docutils literal"><span
                                  class="pre">chaindata</span></code> and <code
                                class="docutils literal"><span class="pre">keystore</span></code>)</p>
                            <div class="highlight-Javascript">
                              <div class="highlight">
                                <pre>[
      "enode://f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0@33.4.2.1:30303",
      "enode://pubkey@ip:port"
]
</pre></div>
                            </div>
                            <p>Ви також можете додати статичні вузли під час
                              виконання через консоль Javascript, використовуючи
                              <code class="docutils literal"><span class="pre">admin.addPeer()</span></code></p>
                            <div class="highlight-Console">
                              <div class="highlight">
                                <pre>&gt; admin.addPeer("enode://f4642fa65af50cfdea8fa7414a5def7bb7991478b768e296f5e4a54e8b995de102e0ceae2e826f293c481b5325f89be6d207b003382e18a8ecba66fbaf6416c0@33.4.2.1:30303")
</pre></div>
                            </div>
                            <div class="section" id="common-problems-with-connectivity">
                              <h5>Загальні проблеми зі зв'язком<a class="headerlink"
                                  href="#common-problems-with-connectivity" title="Permalink to this headline">¶</a></h5>
                              <p>Іноді ви не можете з'єднатись. Найбільш
                                загальні причини наступні:</p>
                              <ul class="simple">
                                <li>Ваш локальний час може бути некоректним.
                                  Точний годинник є необхідним, щоб приймати
                                  цчасть в мережі Ethereum. Перевірте вашу OS
                                  щодо того, як виставляти ваш годинник
                                  (приклад: <code class="docutils literal"><span
                                      class="pre">sudo</span> <span class="pre">ntpdate</span>
                                    <span class="pre">-s</span> <span class="pre">time.nist.gov</span></code>),
                                  оскільки тільки 12 секунд випередження
                                  призведе до 0 з'єднань.</li>
                                <li>Деякі налаштування мережевого фільтру можуть
                                  заважати проходженню UDP трафку. Ви можете
                                  використовувати можливість статичних вузлів,
                                  або <code class="docutils literal"><span class="pre">admin.addPeer()</span></code>
                                  з консолі, щоб сконфігурувати з'єднання
                                  вручну.</li>
                              </ul>
                              <p>To start geth without the discovery protocol,
                                you can use the <code class="docutils literal"><span
                                    class="pre">--nodiscover</span></code>
                                parameter. You only want this if you are running
                                a test node or an experimental test network with
                                fixed nodes.</p>
                            </div>
                          </div>
                        </div>
                        <span id="document-network/test-networks"></span>
                        <div class="section" id="test-networks"> <span id="id1"></span>
                          <h3>Test Networks<a class="headerlink" href="#test-networks"
                              title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="morden-testnet">
                            <h4>Morden testnet<a class="headerlink" href="#morden-testnet"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Morden is a public Ethereum alternative testnet.
                              It is expected to continue throughout the Frontier
                              and Homestead milestones of the software.</p>
                            <div class="section" id="usage">
                              <h5>Usage<a class="headerlink" href="#usage" title="Permalink to this headline">¶</a></h5>
                              <div class="section" id="eth-c-client">
                                <h6>eth (C++ client)<a class="headerlink" href="#eth-c-client"
                                    title="Permalink to this headline">¶</a></h6>
                                <p>This is supported natively on 0.9.93 and
                                  above. Pass the <code class="docutils literal"><span
                                      class="pre">--morden</span></code>
                                  argument in when starting any of the clients.
                                  e.g.:</p>
                              </div>
                              <div class="section" id="pyethapp-python-client">
                                <h6>PyEthApp (Python client)<a class="headerlink"
                                    href="#pyethapp-python-client" title="Permalink to this headline">¶</a></h6>
                                <p>PyEthApp supports the morden network from
                                  v1.0.5 onwards:</p>
                              </div>
                              <div class="section" id="geth-go-client">
                                <h6>geth (Go client)<a class="headerlink" href="#geth-go-client"
                                    title="Permalink to this headline">¶</a></h6>
                              </div>
                            </div>
                            <div class="section" id="details">
                              <h5>Details<a class="headerlink" href="#details" title="Permalink to this headline">¶</a></h5>
                              <p>All parameters are the same as the main
                                Ethereum network except:</p>
                              <ul class="simple">
                                <li>Network Name: <strong>Morden</strong></li>
                                <li>Network Identity: 2</li>
                                <li>genesis.json (given below);</li>
                                <li>Initial Account Nonce (<code class="docutils literal"><span
                                      class="pre">IAN</span></code>) is 2^20
                                  (instead of 0 in all previous networks).
                                  <ul>
                                    <li>All accounts in the state trie have
                                      nonce &gt;= <code class="docutils literal"><span
                                          class="pre">IAN</span></code>.</li>
                                    <li>Whenever an account is inserted into the
                                      state trie it is initialised with nonce =
                                      <code class="docutils literal"><span class="pre">IAN</span></code>.</li>
                                  </ul>
                                </li>
                                <li>Genesis generic block hash: <code class="docutils literal"><span
                                      class="pre">0cd786a2425d16f152c658316c423e6ce1181e15c3295826d7c9904cba9ce303</span></code></li>
                                <li>Genesis generic state root: <code class="docutils literal"><span
                                      class="pre">f3f4696bbf3b3b07775128eb7a3763279a394e382130f27c21e70233e04946a9</span></code></li>
                              </ul>
                              <div class="section" id="morden-s-genesis-json">
                                <h6>Morden’s genesis.json<a class="headerlink" href="#morden-s-genesis-json"
                                    title="Permalink to this headline">¶</a></h6>
                              </div>
                            </div>
                            <div class="section" id="getting-morden-testnet-ether">
                              <h5>Getting Morden testnet ether<a class="headerlink"
                                  href="#getting-morden-testnet-ether" title="Permalink to this headline">¶</a></h5>
                              <p>Two ways to obtain Morden testnet ether:</p>
                              <ul class="simple">
                                <li>Mine using your CPU/GPU, (see <a class="reference internal"
                                    href="index.html#mining"><span>Mining</span></a>).</li>
                                <li>Use the <a class="reference external" href="https://zerogox.com/ethereum/wei_faucet">Ethereum
                                    wei faucet</a>.</li>
                              </ul>
                            </div>
                          </div>
                        </div>
                        <div class="section" id="setting-up-a-local-private-testnet">
                          <h3>Setting up a local private testnet<a class="headerlink"
                              href="#setting-up-a-local-private-testnet" title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="custom-networks-eth"> <span
                              id="id2"></span>
                            <h4>eth (C++ client)<a class="headerlink" href="#custom-networks-eth"
                                title="Permalink to this headline">¶</a></h4>
                            <p>It is possible to connect to or create a new
                              network by using the –genesis and –config.</p>
                            <p>It is possible to use both –config and –genesis.</p>
                            <p>In that case, the genesis block description
                              provided by –config will be overwritten by the
                              –genesis option.</p>
                            <div class="admonition note">
                              <p class="first admonition-title">Note</p>
                              <p>&lt;filename&gt; contains a JSON description of
                                the network:</p>
                              <ul class="last">
                                <li>
                                  <p class="first">sealEngine (engine use to
                                    mine block)</p>
                                  <blockquote>
                                    <div>
                                      <p>“Ethash” is the Ethereum proof of work
                                        engine (used by the live network).</p>
                                      <p>“NoProof” no proof of work is needed to
                                        mine a block.</p>
                                    </div>
                                  </blockquote>
                                </li>
                                <li>
                                  <p class="first">params (general network
                                    information like minGasLimit,
                                    minimumDifficulty, blockReward, networkID)</p>
                                </li>
                                <li>
                                  <p class="first">genesis (genesis block
                                    description)</p>
                                </li>
                                <li>
                                  <p class="first">accounts (setup an original
                                    state that contains accounts/contracts)</p>
                                </li>
                              </ul>
                            </div>
                            <p>Here is a Config sample (used by the Olympic
                              network):</p>
                            <div class="admonition note">
                              <p class="first admonition-title">Note</p>
                              <p class="last">&lt;filename&gt; contains a JSON
                                description of the genesis block:</p>
                            </div>
                            <p>The content is the same as the genesis field
                              provided by the ‘config’ parameter:</p>
                          </div>
                          <div class="section" id="id3">
                            <h4>geth (Go client)<a class="headerlink" href="#id3"
                                title="Permalink to this headline">¶</a></h4>
                            <p>You either pre-generate or mine your own ether on
                              a private testnet. It is a much more cost
                              effective way of trying out Ethereum and you can
                              avoid having to mine or find Morden test ether.</p>
                            <dl class="docutils">
                              <dt>The things that are required to specify in a
                                private chain are:</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li>Custom Genesis File</li>
                                  <li>Custom Data Directory</li>
                                  <li>Custom NetworkID</li>
                                  <li>(Recommended) Disable Node Discovery</li>
                                </ul>
                              </dd>
                            </dl>
                            <div class="section" id="the-genesis-file">
                              <h5>The genesis file<a class="headerlink" href="#the-genesis-file"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>The genesis block is the start of the
                                blockchain - the first block, block 0, and the
                                only block that does not point to a predecessor
                                block. The protocol ensures that no other node
                                will agree with your version of the blockchain
                                unless they have the same genesis block, so you
                                can make as many private testnet blockchains as
                                you’d like!</p>
                              <p><code class="file docutils literal"><span class="pre">CustomGenesis.json</span></code></p>
                              <div class="highlight-JSON">
                                <div class="highlight">
                                  <pre>{
    "nonce": "0x0000000000000042",     "timestamp": "0x0",
    "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "extraData": "0x0",     "gasLimit": "0x8000000",     "difficulty": "0x400",
    "mixhash": "0x0000000000000000000000000000000000000000000000000000000000000000",
    "coinbase": "0x3333333333333333333333333333333333333333",     "alloc": {     }
}
</pre></div>
                              </div>
                              <p>Save a file called <code class="file docutils literal"><span
                                    class="pre">CustomGenesis.json</span></code>.
                                You will reference this when starting your geth
                                node using the following command:</p>
                              <p><code class="docutils literal"><span class="pre">geth</span>
                                  <span class="pre">init</span> <span class="pre">/path/to/CustomGenesis.json</span></code></p>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">By default geth will use the
                                  same directory for network related files as
                                  for the public mainnet. Thus you are advised
                                  to set a custom <code class="docutils literal"><span
                                      class="pre">--datadir</span></code> to
                                  keep the public network’s chaindata from bing
                                  reset.</p>
                              </div>
                            </div>
                            <div class="section" id="command-line-parameters-for-private-network">
                              <h5>Command line parameters for private network<a
                                  class="headerlink" href="#command-line-parameters-for-private-network"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>There are some command line options (also
                                called “flags”) that are necessary in order to
                                make sure that your network is private. We
                                already covered the genesis flag, but we need a
                                few more. Note that all of the commands below
                                are to be used in the geth Ethereum client.</p>
                              <p><code class="docutils literal"><span class="pre">--nodiscover</span></code></p>
                              <p>Use this to make sure that your node is not
                                discoverable by people who do not manually add
                                you. Otherwise, there is a chance that your node
                                may be inadvertently added to a stranger’s
                                blockchain if they have the same genesis file
                                and network id.</p>
                              <p><code class="docutils literal"><span class="pre">--maxpeers</span>
                                  <span class="pre">0</span></code></p>
                              <p>Use maxpeers 0 if you do not want anyone else
                                connecting to your test chain. Alternatively,
                                you can adjust this number if you know exactly
                                how many peers you want connecting to your node.</p>
                              <p><code class="docutils literal"><span class="pre">--rpc</span></code></p>
                              <p>This will enable RPC interface on your node.
                                This is generally enabled by default in Geth.</p>
                              <p><code class="docutils literal"><span class="pre">--rpcapi</span>
                                  <span class="pre">"db,eth,net,web3"</span></code></p>
                              <p>This dictates what APIs that are allowed to be
                                accessed over RPC. By default, Geth enables the
                                web3 interface over RPC.</p>
                              <p><strong>IMPORTANT: Please note that offering an
                                  API over the RPC/IPC interface will give
                                  everyone access to the API who can access this
                                  interface (e.g. dapp’s). Be careful which
                                  API’s you enable. By default geth enables all
                                  API’s over the IPC interface and only the
                                  db,eth,net and web3 API’s over the RPC
                                  interface.</strong></p>
                              <p><code class="docutils literal"><span class="pre">--rpcport</span>
                                  <span class="pre">"8080"</span></code></p>
                              <p>Change 8000 to any port that is open on your
                                network. The default for geth is 8080.</p>
                              <p><code class="docutils literal"><span class="pre">--rpccorsdomain</span>
                                  <span class="pre">"http://chriseth.github.io/browser-solidity/"</span></code></p>
                              <p>This dictates what URLs can connect to your
                                node in order to perform RPC client tasks. Be
                                very careful with this and type a specific URL
                                rather than the wildcard (*) which would allow
                                any URL to connect to your RPC instance.</p>
                              <p><code class="docutils literal"><span class="pre">--datadir</span>
                                  <span class="pre">"/home/TestChain1"</span></code></p>
                              <p>This is the data directory that your private
                                chain data will be stored in (under the <code class="file docutils literal"><span
                                    class="pre">nubits</span></code> . Choose a
                                location that is separate from your public
                                Ethereum chain folder.</p>
                              <p><code class="docutils literal"><span class="pre">--port</span>
                                  <span class="pre">"30303"</span></code></p>
                              <p>This is the “network listening port”, which you
                                will use to connect with other peers manually.</p>
                              <p><code class="docutils literal"><span class="pre">--identity</span>
                                  <span class="pre">"TestnetMainNode"</span></code></p>
                              <p>This will set up an identity for your node so
                                it can be identified more easily in a list of
                                peers. Here is an example of how these
                                identities show up on the network.</p>
                            </div>
                            <div class="section" id="launching-geth">
                              <h5>Launching <code class="docutils literal"><span
                                    class="pre">geth</span></code><a class="headerlink"
                                  href="#launching-geth" title="Permalink to this headline">¶</a></h5>
                              <p>After you have created your custom genesis
                                block JSON file and created a directory for your
                                blockchain data, type the following command into
                                your console that has access to geth:</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>geth --identity "MyNodeName" --rpc --rpcport "8080" --rpccorsdomain "*" --datadir "C:\chains\TestChain1" --port "30303" --nodiscover --rpcapi "db,eth,net,web3" --networkid 1999 init /path/to/CustomGenesis.json
</pre></div>
                              </div>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">Please change the flags to match
                                  your custom settings.</p>
                              </div>
                              <p>This will initialize your genesis block. To
                                interact with geth through the console enter:</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>geth --identity "MyNodeName" --rpc --rpcport "8080" --rpccorsdomain "*" --datadir "C:\chains\TestChain1" --port "30303" --nodiscover --rpcapi "db,eth,net,web3" --networkid 1999 console
</pre></div>
                              </div>
                              <p>You will need to start your geth instance with
                                your custom chain command every time you want to
                                access your custom chain. If you just type
                                “geth” in your console, it will not remember all
                                of the flags you have set.</p>
                              <p>The full list of methods available through the
                                javascript console is available on <a class="reference external"
                                  href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console">the
                                  geth wiki on github</a></p>
                              <p>If you already have a geth node running, you
                                can attach another geth instance to it using:</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>geth attach
</pre></div>
                              </div>
                              <p>Now you’ll need to initialize a new account on
                                the testnest, and set it as your etherbase (the
                                address that will receive mining rewards).</p>
                              <p>In the javascript console type</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>personal.newAccount("password")
</pre></div>
                              </div>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">Replace with the password of
                                  your choice</p>
                              </div>
                              <p>Now we’ll set it as the etherbase:</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>miner.setEtherbase(personal.listAccounts[0])
</pre></div>
                              </div>
                              <p>If successful, the console will print “true”</p>
                              <p>Finally, you are ready to start mining test
                                ether:</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>miner.start()
</pre></div>
                              </div>
                            </div>
                            <div class="section" id="pre-allocating-ether-to-your-account">
                              <h5>Pre-allocating ether to your account<a class="headerlink"
                                  href="#pre-allocating-ether-to-your-account" title="Permalink to this headline">¶</a></h5>
                              <p>A difficulty of “0x400” allows you to mine
                                Ether very quickly on your private testnet
                                chain. If you create your chain and start
                                mining, you should have hundreds of ether in a
                                matter of minutes which is way more than enough
                                to test transactions on your network. If you
                                would still like to pre-allocate Ether to your
                                account, you will need to:</p>
                              <ol class="arabic simple">
                                <li>Create a new Ethereum account after you
                                  create your private chain</li>
                                <li>Copy your new account address</li>
                                <li>Add the following command to your
                                  Custom_Genesis.json file:</li>
                              </ol>
                              <div class="highlight-Javascript">
                                <div class="highlight">
                                  <pre>"alloc":
{
        "&lt;your account address e.g. 0x1fb891f92eb557f4d688463d0d7c560552263b5a&gt;":
        { "balance": "20000000000000000000" }
}
</pre></div>
                              </div>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">Replace <code class="docutils literal"><span
                                      class="pre">0x1fb891f92eb557f4d688463d0d7c560552263b5a</span></code>
                                  with your account address.</p>
                              </div>
                              <p>Save your genesis file and rerun your private
                                chain command. Once geth is fully loaded, close
                                it by .</p>
                              <p>We want to assign an address to the variable <code
                                  class="docutils literal"><span class="pre">primary</span></code>
                                and check its balance.</p>
                              <p>Run the command <code class="docutils literal"><span
                                    class="pre">geth</span> <span class="pre">account</span>
                                  <span class="pre">list</span></code> in your
                                terminal to see what account # your new address
                                was assigned.</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>&gt; geth account list
Account #0: {d1ade25ccd3d550a7eb532ac759cac7be09c2719}
Account #1: {da65665fc30803cb1fb7e6d86691e20b1826dee0}
Account #2: {e470b1a7d2c9c5c6f03bbaa8fa20db6d404a0c32}
Account #3: {f4dd5c3794f1fd0cdc0327a83aa472609c806e99}
</pre></div>
                              </div>
                              <p>Take note of which account # is the one that
                                you pre-allocated ether to. Alternatively, you
                                can launch the console with <code class="docutils literal"><span
                                    class="pre">geth</span> <span class="pre">console</span></code>
                                (keep the same parameters as when you launched <code
                                  class="docutils literal"><span class="pre">geth</span></code>
                                first). Once the prompt appears, type</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>&gt; eth.accounts
</pre></div>
                              </div>
                              <p>This will return the array of account addresses
                                you possess.</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>&gt; primary = eth.accounts[0]
</pre></div>
                              </div>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">Replace <code class="docutils literal"><span
                                      class="pre">0</span></code> with your
                                  account’s index. This console command should
                                  return your primary Ethereum address.</p>
                              </div>
                              <p>Type the following command:</p>
                              <div class="highlight-Console">
                                <div class="highlight">
                                  <pre>&gt; balance = web3.fromWei(eth.getBalance(primary), "ether");
</pre></div>
                              </div>
                              <p>This should return <code class="docutils literal"><span
                                    class="pre">7.5</span></code> indicating you
                                have that much ether in your account. The reason
                                we had to put such a large number in the alloc
                                section of your genesis file is because the
                                “balance” field takes a number in wei which is
                                the smallest denomination of the Ethereum
                                currency ether (see <span class="target" id="ether">Ether</span>).</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3kdnus/question_about_private_chain_mining_dont_upvote/">https://www.reddit.com/r/ethereum/comments/3kdnus/question_about_private_chain_mining_dont_upvote/</a></li>
                              </ul>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <span id="document-mining"></span>
                    <div class="section" id="mining"> <span id="id1"></span>
                      <h2>Mining<a class="headerlink" href="#mining" title="Permalink to this headline">¶</a></h2>
                      <div class="section" id="introduction">
                        <h3>Introduction<a class="headerlink" href="#introduction"
                            title="Permalink to this headline">¶</a></h3>
                        <p>The word mining originates in the context of the gold
                          analogy for crypto currencies. Gold or precious metals
                          are scarce, so are digital tokens, and the only way to
                          increase the total volume is through mining. This is
                          appropriate to the extent that in Ethereum too, the
                          only mode of issuance post launch is via mining.
                          Unlike these examples however, mining is also the way
                          to secure the network by creating, verifying,
                          publishing and propagating blocks in the blockchain.</p>
                        <ul class="simple">
                          <li>Mining ether = Securing the Network = Verifying
                            Computation</li>
                        </ul>
                        <div class="section" id="what-is-mining">
                          <h4>What is mining?<a class="headerlink" href="#what-is-mining"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethereum, like all blockchain technologies, uses an
                            incentive-driven model of security. Consensus is
                            based on choosing the block with the highest total
                            difficulty. Miners produce blocks which the others
                            check for validity. Among other well-formedness
                            criteria, a block is only valid if it contains <em>proof
                              of work</em> (PoW) of a given <em>difficulty</em>.
                            Note that in the Ethereum Serenity milestone, this
                            is likely going to be replaced by a (see <a class="reference internal"
                              href="#pos-vs-pow"><span>proof of stake model</span></a>
                            ).</p>
                          <p>The Ethereum blockchain is in many ways similar to
                            the Bitcoin blockchain, although it does have some
                            differences. The main difference between Ethereum
                            and Bitcoin with regard to the blockchain
                            architecture is that, unlike Bitcoin, Ethereum
                            blocks contain a copy of both the transaction list
                            and the most recent state (the root hash of the
                            merkle patricia trie encoding the state to be more
                            precise). Aside from that, two other values, the
                            block number and the difficulty, are also stored in
                            the block.</p>
                          <p>The proof of work algorithm used is called <a class="reference external"
                              href="https://github.com/ethereum/wiki/wiki/Ethash">Ethash</a>
                            (a modified version of <a class="reference external"
                              href="https://github.com/ethereum/wiki/wiki/Dagger-Hashimoto">the
                              Dagger-Hashimoto algorithm</a>) and involves
                            finding a <em>nonce</em> input to the algorithm so
                            that the result is below a certain difficulty
                            threshold. The point in PoW algorithms is that there
                            is no better strategy to find such a nonce than
                            enumerating the possibilities, while verification of
                            a solution is trivial and cheap. Since outputs have
                            a uniform distribution (as they are the result of
                            the application of a hash function), we can
                            guarantee that, on average, the time needed to find
                            such a nonce depends on the difficulty threshold.
                            This makes it possible to control the time of
                            finding a new block just by manipulating the
                            difficulty.</p>
                          <p>As dictated by the protocol, the difficulty
                            dynamically adjusts in such a way that on average
                            one block is produced by the entire network every 15
                            seconds. We say that the network produces a
                            blockchain with a <em>15 second block time</em>.
                            This “heartbeat” basically punctuates the
                            synchronisation of system state and guarantees that
                            maintaining a fork (to allow double spend) or
                            rewriting history by malicious actors are impossible
                            unless the attacker possesses more than half of the
                            network mining power (this is the so called <em>51%
                              attack</em>).</p>
                          <p>Any node participating in the network can be a
                            miner and their expected revenue from mining will be
                            directly proportional to their (relative) mining
                            power or <em>hashrate</em>, i.e., the number of
                            nonces tried per second normalised by the total
                            hashrate of the network.</p>
                          <p>Ethash PoW is <em>memory hard</em>, making it <em>ASIC
                              resistant</em>. Memory hardness is achieved with a
                            proof of work algorithm that requires choosing
                            subsets of a fixed resource dependent on the nonce
                            and block header. This resource (a few gigabyte size
                            data) is called a <strong>DAG</strong>. The <a class="reference external"
                              href="https://github.com/ethereum/wiki/wiki/Ethash-DAG">DAG</a>
                            is totally different every 30000 blocks, a 125-hour
                            window called <em>epoch</em> (roughly 5.2 days) and
                            takes a while to generate. Since the DAG only
                            depends on block height, it can be pregenerated but
                            if its not, the client needs to wait until the end
                            of this process to produce a block. If clients do
                            not pregenerate and cache DAGs ahead of time the
                            network may experience massive block delay on each
                            epoch transition. Note that the DAG does not need to
                            be generated for verifying the PoW essentially
                            allowing for verification with both low CPU and
                            small memory.</p>
                          <p>As a special case, when you start up your node from
                            scratch, mining will only start once the DAG is
                            built for the current epoch.</p>
                        </div>
                        <div class="section" id="mining-rewards">
                          <h4>Mining rewards<a class="headerlink" href="#mining-rewards"
                              title="Permalink to this headline">¶</a></h4>
                          <p>The successful PoW miner of the winning block
                            receives:</p>
                          <ul class="simple">
                            <li>a <em>static block reward</em> for the
                              ‘winning’ block, consisting of exactly 5.0 Ether</li>
                            <li>cost of the gas expended within the block – an
                              amount of ether that depends on the current gas
                              price</li>
                            <li>an extra reward for including uncles as part of
                              the block, in the form of an extra 1/32 per uncle
                              included</li>
                          </ul>
                          <p>All the gas consumed by the execution of all the
                            transactions in the block submitted by the winning
                            miner is paid by the senders of each transaction.
                            The gas cost incurred is credited to the miner’s
                            account as part of the consensus protocol. Over
                            time, it is expected these will dwarf the static
                            block reward.</p>
                          <p><em>Uncles</em> are stale blocks i.e. with parents
                            that are ancestors (max 6 blocks back) of the
                            including block. Valid uncles are rewarded in order
                            to neutralise the effect of network lag on the
                            dispersion of mining rewards, thereby increasing
                            security (this is called the GHOST protocol). Uncles
                            included in a block formed by the successful PoW
                            miner receive 7/8 of the static block reward (=4.375
                            ether). A maximum of 2 uncles are allowed per block.</p>
                          <blockquote>
                            <div>
                              <ul class="simple">
                                <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3c9jbf/wtf_are_uncles_and_why_do_they_matter/">Uncles
                                    ELI5 on reddit</a></li>
                                <li><a class="reference external" href="https://forum.ethereum.org/discussion/2262/eli5-whats-an-uncle-in-ethereum-mining">Forum
                                    thread explaining uncles</a></li>
                              </ul>
                            </div>
                          </blockquote>
                          <p>Mining success depends on the set block difficulty.
                            Block difficulty dynamically adjusts each block in
                            order to regulate the network hashing power to
                            produce a 12 second blocktime. Your chances of
                            finding a block therefore follows from your hashrate
                            relative to difficulty.</p>
                        </div>
                        <div class="section" id="ethash-dag">
                          <h4>Ethash DAG<a class="headerlink" href="#ethash-dag"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethash uses a <em>DAG</em> (directed acyclic
                            graph) for the proof of work algorithm, this is
                            generated for each <em>epoch</em>, i.e., every
                            30000 blocks (125 hours, ca. 5.2 days). The DAG
                            takes a long time to generate. If clients only
                            generate it on demand, you may see a long wait at
                            each epoch transition before the first block of the
                            new epoch is found. However, the DAG only depends on
                            the block number, so it can and should be calculated
                            in advance to avoid long wait times at each epoch
                            transition. Both <code class="docutils literal"><span
                                class="pre">geth</span></code> and <code class="docutils literal"><span
                                class="pre">ethminer</span></code> implement
                            automatic DAG generation and maintains two DAGs at a
                            time for smooth epoch transitions. Automatic DAG
                            generation is turned on and off when mining is
                            controlled from the console. It is also turned on by
                            default if <code class="docutils literal"><span class="pre">geth</span></code>
                            is launched with the <code class="docutils literal"><span
                                class="pre">--mine</span></code> option. Note
                            that clients share a DAG resource, so if you are
                            running multiple instances of any client, make sure
                            automatic dag generation is switched off in all but
                            one instance.</p>
                          <p>To generate the DAG for an arbitrary epoch:</p>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>geth makedag &lt;block number&gt; &lt;outputdir&gt;
</pre></div>
                          </div>
                          <p>For instance <code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">makedag</span>
                              <span class="pre">360000</span> <span class="pre">~/.ethash</span></code>.
                            Note that ethash uses <code class="docutils literal"><span
                                class="pre">~/.ethash</span></code> (Mac/Linux)
                            or <code class="docutils literal"><span class="pre">~/AppData/Ethash</span></code>
                            (Windows) for the DAG so that it can shared between
                            different client implementations as well as multiple
                            running instances.</p>
                        </div>
                      </div>
                      <div class="section" id="the-algorithm">
                        <h3>The algorithm<a class="headerlink" href="#the-algorithm"
                            title="Permalink to this headline">¶</a></h3>
                        <p>Our algorithm, <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Ethash">Ethash</a>
                          (previously known as Dagger-Hashimoto), is based
                          around the provision of a large, transient, randomly
                          generated dataset which forms a DAG (the Dagger-part),
                          and attempting to solve a particular constraint on it,
                          partly determined through a block’s header-hash.</p>
                        <p>It is designed to hash a fast verifiability time
                          within a slow CPU-only environment, yet provide vast
                          speed-ups for mining when provided with a large amount
                          of memory with high-bandwidth. The large memory
                          requirements mean that large-scale miners get
                          comparatively little super-linear benefit. The high
                          bandwidth requirement means that a speed-up from
                          piling on many super-fast processing units sharing the
                          same memory gives little benefit over a single unit.
                          This is important in that pool mining have no benefit
                          for nodes doing verification, thus discourageing
                          centralisation.</p>
                        <p>Communication between the external mining application
                          and the Ethereum daemon for work provision and
                          submission happens through the JSON-RPC API. Two RPC
                          functions are provided; <code class="docutils literal"><span
                              class="pre">eth_getWork</span></code> and <code class="docutils literal"><span
                              class="pre">eth_submitWork</span></code>.</p>
                        <p>These are formally documented on the <a class="reference external"
                            href="https://github.com/ethereum/wiki/wiki/JSON-RPC">JSON-RPC
                            API</a> wiki article under <a class="reference external"
                            href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console#miner">miner</a>.</p>
                        <p>In order to mine you need a fully synced Ethereum
                          client that is enabled for mining and at least one
                          ethereum account. This account is used to send the
                          mining rewards to and is often referred to as <em>coinbase</em>
                          or <em>etherbase</em>. Visit the “<a class="reference internal"
                            href="index.html#creating-an-account"><span>Creating
                              an account</span></a>” section of this guide to
                          learn how to create an account.</p>
                        <div class="admonition warning">
                          <p class="first admonition-title">Warning</p>
                          <p class="last">Ensure your blockchain is fully
                            synchronised with the main chain before starting to
                            mine, otherwise you will not be mining on the main
                            chain.</p>
                        </div>
                      </div>
                      <div class="section" id="cpu-mining">
                        <h3>CPU mining<a class="headerlink" href="#cpu-mining" title="Permalink to this headline">¶</a></h3>
                        <p>You can use your computer’s central processing unit
                          (CPU) to mine ether. This is no longer profitable,
                          since GPU miners are roughly two orders of magnitude
                          more efficient. However, you can use CPU mining to
                          mine on the Morden testnet or a private chain for the
                          purposes of creating the ether you need to test
                          contracts and transactions without spending your real
                          ether on the live network.</p>
                        <div class="admonition note">
                          <p class="first admonition-title">Note</p>
                          <p class="last">The testnet ether has no value other
                            than using it for testing purposes (see <a class="reference internal"
                              href="index.html#test-networks"><span>Test
                                Networks</span></a>).</p>
                        </div>
                        <div class="section" id="using-geth">
                          <h4>Using geth<a class="headerlink" href="#using-geth"
                              title="Permalink to this headline">¶</a></h4>
                          <p>When you start up your ethereum node with <code class="docutils literal"><span
                                class="pre">geth</span></code> it is not mining
                            by default. To start it in CPU mining mode, you use
                            the <code class="docutils literal"><span class="pre">--mine</span></code>
                            <a class="reference external" href="https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options">command
                              line option</a>. The <code class="docutils literal"><span
                                class="pre">-minerthreads</span></code>
                            parameter can be used to set the number parallel
                            mining threads (defaulting to the total number of
                            processor cores).</p>
                          <p><code class="docutils literal"><span class="pre">geth</span>
                              <span class="pre">--mine</span> <span class="pre">--minerthreads=4</span></code></p>
                          <p>You can also start and stop CPU mining at runtime
                            using the <a class="reference external" href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console#adminminerstart">console</a>.
                            <code class="docutils literal"><span class="pre">miner.start</span></code>
                            takes an optional parameter for the number of miner
                            threads.</p>
                          <div class="highlight-Javascript">
                            <div class="highlight">
                              <pre>&gt; miner.start(8)
true
&gt; miner.stop()
true
</pre></div>
                          </div>
                          <p>Note that mining for real ether only makes sense if
                            you are in sync with the network (since you mine on
                            top of the consensus block). Therefore the eth
                            blockchain downloader/synchroniser will delay mining
                            until syncing is complete, and after that mining
                            automatically starts unless you cancel your
                            intention with <code class="docutils literal"><span
                                class="pre">miner.stop()</span></code>.</p>
                          <p>In order to earn ether you must have your <strong>etherbase</strong>
                            (or <strong>coinbase</strong>) address set. This
                            etherbase defaults to your primary account. If you
                            don’t have an etherbase address, then <code class="docutils literal"><span
                                class="pre">geth</span> <span class="pre">--mine</span></code>
                            will not start up.</p>
                          <p>You can set your etherbase on the command line:</p>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>geth --etherbase 1 --mine  2&gt;&gt; geth.log // 1 is index: second account by creation order OR
geth --etherbase <span class="s1">'0xa4d8e9cae4d04b093aac82e6cd355b6b963fb7ff'</span> --mine 2&gt;&gt; geth.log
</pre></div>
                          </div>
                          <p>You can reset your etherbase on the console too:</p>
                          <div class="highlight-javascript">
                            <div class="highlight">
                              <pre><span class="nx">miner</span><span class="p">.</span><span
class="nx">setEtherbase</span><span class="p">(</span><span class="nx">eth</span><span
class="p">.</span><span class="nx">accounts</span><span class="p">[</span><span
class="mi">2</span><span class="p">])</span>
</pre></div>
                          </div>
                          <p>Note that your etherbase does not need to be an
                            address of a local account, just an existing one.</p>
                          <p>There is an option <a class="reference external" href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console#minersetextra">to
                              add extra Data</a> (32 bytes only) to your mined
                            blocks. By convention this is interpreted as a
                            unicode string, so you can set your short vanity
                            tag.</p>
                          <div class="highlight-javascript">
                            <div class="highlight">
                              <pre>miner.setExtra("ΞTHΞЯSPHΞЯΞ")
...
debug.printBlock(131805)
BLOCK(be465b020fdbedc4063756f0912b5a89bbb4735bd1d1df84363e05ade0195cb1): Size: 531.00 B TD: 643485290485 {
NoNonce: ee48752c3a0bfe3d85339451a5f3f411c21c8170353e450985e1faab0a9ac4cc
Header:
[
...
        Coinbase:           a4d8e9cae4d04b093aac82e6cd355b6b963fb7ff
        Number:             131805
        Extra:              ΞTHΞЯSPHΞЯΞ
...
}
</pre></div>
                          </div>
                          <p>You can check your hashrate with <a class="reference external"
                              href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console#adminminerhashrate">miner.hashrate</a>,
                            the result is in H/s (Hash operations per second).</p>
                          <div class="highlight-javascript">
                            <div class="highlight">
                              <pre><span class="o">&gt;</span> <span class="nx">miner</span><span
class="p">.</span><span class="nx">hashrate</span>
<span class="mi">712000</span>
</pre></div>
                          </div>
                          <p>After you successfully mined some blocks, you can
                            check the ether balance of your etherbase account.
                            Now assuming your etherbase is a local account:</p>
                          <div class="highlight-javascript">
                            <div class="highlight">
                              <pre><span class="o">&gt;</span> <span class="nx">eth</span><span
class="p">.</span><span class="nx">getBalance</span><span class="p">(</span><span
class="nx">eth</span><span class="p">.</span><span class="nx">coinbase</span><span
class="p">).</span><span class="nx">toNumber</span><span class="p">();</span>
<span class="s1">'34698870000000'</span>
</pre></div>
                          </div>
                          <p>In order to spend your earnings on gas to transact,
                            you will need to have this account unlocked.</p>
                          <div class="highlight-javascript">
                            <div class="highlight">
                              <pre><span class="o">&gt;</span> <span class="nx">personal</span><span
class="p">.</span><span class="nx">unlockAccount</span><span class="p">(</span><span
class="nx">eth</span><span class="p">.</span><span class="nx">coinbase</span><span
class="p">)</span>
<span class="nx">Password</span>
<span class="kc">true</span>
</pre></div>
                          </div>
                          <p>You can check which blocks are mined by a
                            particular miner (address) with the following code
                            snippet on the console:</p>
                          <div class="highlight-javascript">
                            <div class="highlight">
                              <pre><span class="kd">function</span> <span class="nx">minedBlocks</span><span
class="p">(</span><span class="nx">lastn</span><span class="p">,</span> <span class="nx">addr</span><span
class="p">)</span> <span class="p">{</span>
  <span class="nx">addrs</span> <span class="o">=</span> <span class="p">[];</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span
class="nx">addr</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">addr</span> <span class="o">=</span> <span class="nx">eth</span><span
class="p">.</span><span class="nx">coinbase</span>
  <span class="p">}</span>
  <span class="nx">limit</span> <span class="o">=</span> <span class="nx">eth</span><span
class="p">.</span><span class="nx">blockNumber</span> <span class="o">-</span> <span
class="nx">lastn</span>
  <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span
class="o">=</span> <span class="nx">eth</span><span class="p">.</span><span class="nx">blockNumber</span><span
class="p">;</span> <span class="nx">i</span> <span class="o">&gt;=</span> <span
class="nx">limit</span><span class="p">;</span> <span class="nx">i</span><span class="o">--</span><span
class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">eth</span><span
class="p">.</span><span class="nx">getBlock</span><span class="p">(</span><span
class="nx">i</span><span class="p">).</span><span class="nx">miner</span> <span
class="o">==</span> <span class="nx">addr</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">addrs</span><span class="p">.</span><span class="nx">push</span><span
class="p">(</span><span class="nx">i</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">addrs</span>
<span class="p">}</span>
<span class="c1">// scans the last 1000 blocks and returns the blocknumbers of blocks mined by your coinbase</span>
<span class="c1">// (more precisely blocks the mining reward for which is sent to your coinbase).</span>
<span class="nx">minedBlocks</span><span class="p">(</span><span class="mi">1000</span><span
class="p">,</span> <span class="nx">eth</span><span class="p">.</span><span class="nx">coinbase</span><span
class="p">);</span>
<span class="c1">//[352708, 352655, 352559]</span>
</pre></div>
                          </div>
                          <p>Note that it will happen often that you find a
                            block yet it never makes it to the canonical chain.
                            This means when you locally include your mined
                            block, the current state will show the mining reward
                            credited to your account, however, after a while,
                            the better chain is discovered and we switch to a
                            chain in which your block is not included and
                            therefore no mining reward is credited. Therefore it
                            is quite possible that as a miner monitoring their
                            coinbase balance will find that it may fluctuate
                            quite a bit.</p>
                        </div>
                      </div>
                      <div class="section" id="gpu-mining">
                        <h3>GPU mining<a class="headerlink" href="#gpu-mining" title="Permalink to this headline">¶</a></h3>
                        <div class="section" id="hardware">
                          <h4>Hardware<a class="headerlink" href="#hardware" title="Permalink to this headline">¶</a></h4>
                          <p>The algorithm is memory hard and in order to fit
                            the DAG into memory, it needs 1-2GB of RAM on each
                            GPU. If you get <code class="docutils literal"><span
                                class="pre">Error</span> <span class="pre">GPU</span>
                              <span class="pre">mining.</span> <span class="pre">GPU</span>
                              <span class="pre">memory</span> <span class="pre">fragmentation?</span></code>
                            you do not have enough memory. The GPU miner is
                            implemented in OpenCL, so AMD GPUs will be ‘faster’
                            than same-category NVIDIA GPUs. ASICs and FPGAs are
                            relatively inefficient and therefore discouraged. To
                            get openCL for your chipset and platform, try:</p>
                          <ul class="simple">
                            <li><a class="reference external" href="http://developer.amd.com/tools-and-sdks/opencl-zone/amd-accelerated-parallel-processing-app-sdk">AMD
                                SDK openCL</a></li>
                            <li><a class="reference external" href="https://developer.nvidia.com/cuda-downloads">NVIDIA
                                CUDA openCL</a></li>
                          </ul>
                        </div>
                        <div class="section" id="ubuntu-linux-set-up">
                          <h4>Ubuntu Linux set-up<a class="headerlink" href="#ubuntu-linux-set-up"
                              title="Permalink to this headline">¶</a></h4>
                          <p>For this quick guide, you’ll need Ubuntu 14.04 or
                            15.04 and the fglrx graphics drivers. You can use
                            NVidia drivers and other platforms, too, but you’ll
                            have to find your own way to getting a working
                            OpenCL install with them, such as <a class="reference external"
                              href="http://cryptomining-blog.com/tag/ethminer/">Genoil’s
                              ethminer fork</a>.</p>
                          <p>If you’re on 15.04, Go to “Software and Updates
                            &gt; Additional Drivers” and set it to “Using video
                            drivers for the AMD graphics accelerator from
                            fglrx”.</p>
                          <p>If you’re on 14.04, go to “Software and Updates
                            &gt; Additional Drivers” and set it to “Using video
                            drivers for the AMD graphics accelerator from
                            fglrx”. Unfortunately, for some of you this will not
                            work due to a known bug in Ubuntu 14.04.02
                            preventing you from switching to the proprietary
                            graphics drivers required to GPU mine.</p>
                          <p>So, if you encounter this bug, and before you do
                            anything else, go to “Software and updates &gt;
                            Updates” and select “Pre-released updates trusty
                            proposed”. Then, go back to “Software and Updates
                            &gt; Additional Drivers” and set it to “Using video
                            drivers for the AMD graphics accelerator from
                            fglrx”). After rebooting, it’s well worth having a
                            check that the drivers have now indeed been
                            installed correctly (For example by going to
                            “Additional Drivers” again).</p>
                          <p>Whatever you do, if you are on 14.04.02 do not
                            alter the drivers or the drivers configuration once
                            set. For example, the usage of aticonfig –initial
                            (especially with the -f, –force option) can ‘break’
                            your setup. If you accidentally alter their
                            configuration, you’ll need to de-install the
                            drivers, reboot, reinstall the drivers and reboot.</p>
                        </div>
                        <div class="section" id="mac-set-up">
                          <h4>Mac set-up<a class="headerlink" href="#mac-set-up"
                              title="Permalink to this headline">¶</a></h4>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/cuda_7.0.29_mac.pkg
sudo installer -pkg ~/Desktop/cuda_7.0.29_mac.pkg -target /
brew update
brew tap ethereum/ethereum
brew reinstall cpp-ethereum --with-gpu-mining --devel --headless --build-from-source
</pre></div>
                          </div>
                          <p>You check your cooling status:</p>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>aticonfig --adapter<span class="o">=</span>0 --od-gettemperature
</pre></div>
                          </div>
                        </div>
                        <div class="section" id="windows-set-up">
                          <h4>Windows set-up<a class="headerlink" href="#windows-set-up"
                              title="Permalink to this headline">¶</a></h4>
                          <p><a class="reference external" href="https://github.com/ethereum/webthree-umbrella/releases">Download
                              the latest Eth++ installation</a> and choose
                            ethminer at the “Choose Components” screen of the
                            installation screen.</p>
                          <img alt="images/eth_miner_setup.png" src="images/eth_miner_setup.png">
                        </div>
                        <div class="section" id="using-ethminer-with-geth">
                          <h4>Using ethminer with geth<a class="headerlink" href="#using-ethminer-with-geth"
                              title="Permalink to this headline">¶</a></h4>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>geth account new // Set-up ethereum account <span
class="k">if </span>you <span class="k">do </span>not have one
geth --rpc --rpccorsdomain localhost 2&gt;&gt; geth.log <span class="p">&amp;</span>
ethminer -G  // -G <span class="k">for </span>GPU, -M <span class="k">for </span>benchmark
tail -f geth.log
</pre></div>
                          </div>
                          <p><code class="docutils literal"><span class="pre">ethminer</span></code>
                            communicates with geth on port 8545 (the default RPC
                            port in geth). You can change this by giving the <code
                              class="docutils literal"><span class="pre">--rpcport</span></code>
                            option to <code class="docutils literal"><span class="pre">geth</span></code>.
                            Ethminer will find geth on any port. Note that you
                            need to set the CORS header with <code class="docutils literal"><span
                                class="pre">--rpccorsdomain</span> <span class="pre">localhost</span></code>.
                            You can also set port on <code class="docutils literal"><span
                                class="pre">ethminer</span></code> with <code class="docutils literal"><span
                                class="pre">-F</span> <span class="pre">http://127.0.0.1:3301</span></code>.
                            Setting the ports is necessary if you want several
                            instances mining on the same computer, although this
                            is somewhat pointless. If you are testing on a
                            private chain, we recommend you use CPU mining
                            instead.</p>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">You do <strong>not</strong> need to
                              give <code class="docutils literal"><span class="pre">geth</span></code>
                              the <code class="docutils literal"><span class="pre">--mine</span></code>
                              option or start the miner in the console unless
                              you want to do CPU mining on TOP of GPU mining.</p>
                          </div>
                          <p>If the default for <code class="docutils literal"><span
                                class="pre">ethminer</span></code> does not work
                            try to specify the OpenCL device with: <code class="docutils literal"><span
                                class="pre">--opencl-device</span> <span class="pre">X</span></code>
                            where X is {0, 1, 2,...}. When running <code class="docutils literal"><span
                                class="pre">ethminer</span></code> with <code class="docutils literal"><span
                                class="pre">-M</span></code> (benchmark), you
                            should see something like:</p>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>Benchmarking on platform: <span class="o">{</span> <span
class="s2">"platform"</span>: <span class="s2">"NVIDIA CUDA"</span>, <span class="s2">"device"</span>: <span
class="s2">"GeForce GTX 750 Ti"</span>, <span class="s2">"version"</span>: <span
class="s2">"OpenCL 1.1 CUDA"</span> <span class="o">}</span>


Benchmarking on platform: <span class="o">{</span> <span class="s2">"platform"</span>: <span
class="s2">"Apple"</span>, <span class="s2">"device"</span>: <span class="s2">"Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz"</span>, <span
class="s2">"version"</span>: <span class="s2">"OpenCL 1.2 "</span> <span class="o">}</span>
</pre></div>
                          </div>
                          <p>To debug <code class="docutils literal"><span class="pre">geth</span></code>:</p>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>geth  --rpccorsdomain <span class="s2">"localhost"</span> --verbosity 6 2&gt;&gt; geth.log
</pre></div>
                          </div>
                          <p>To debug the miner:</p>
                          <div class="highlight-bash">
                            <div class="highlight">
                              <pre>make -DCMAKE_BUILD_TYPE<span class="o">=</span>Debug -DETHASHCL<span
class="o">=</span>1 -DGUI<span class="o">=</span>0
gdb --args ethminer -G -M
</pre></div>
                          </div>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">hashrate info is not available in <code
                                class="docutils literal"><span class="pre">geth</span></code>
                              when GPU mining.</p>
                          </div>
                          <p>Check your hashrate with <code class="docutils literal"><span
                                class="pre">ethminer</span></code>, <code class="docutils literal"><span
                                class="pre">miner.hashrate</span></code> will
                            always report 0.</p>
                        </div>
                        <div class="section" id="using-ethminer-with-eth">
                          <h4>Using ethminer with eth<a class="headerlink" href="#using-ethminer-with-eth"
                              title="Permalink to this headline">¶</a></h4>
                          <div class="section" id="mining-on-a-single-gpu">
                            <h5>Mining on a single GPU<a class="headerlink" href="#mining-on-a-single-gpu"
                                title="Permalink to this headline">¶</a></h5>
                            <p>In order to mine on a single GPU all that needs
                              to be done is to run eth with the following
                              arguments:</p>
                            <div class="highlight-bash">
                              <div class="highlight">
                                <pre>eth -v 1 -a 0xcadb3223d4eebcaa7b40ec5722967ced01cfc8f2 --client-name <span
class="s2">"OPTIONALNAMEHERE"</span> -x 50 -m on -G
</pre></div>
                            </div>
                            <ul class="simple">
                              <li><code class="docutils literal"><span class="pre">-v</span>
                                  <span class="pre">1</span></code> Set
                                verbosity to 1. Let’s not get spammed by
                                messages.</li>
                              <li><code class="docutils literal"><span class="pre">-a</span>
                                  <span class="pre">YOURWALLETADDRESS</span></code>
                                Set the coinbase, where the mining rewards will
                                go to. The above address is just an example.
                                This argument is really important, make sure to
                                not make a mistake in your wallet address or you
                                will receive no ether payout.</li>
                              <li><code class="docutils literal"><span class="pre">--client-name</span>
                                  <span class="pre">"OPTIONAL"</span></code> Set
                                an optional client name to identify you on the
                                network</li>
                              <li><code class="docutils literal"><span class="pre">-x</span>
                                  <span class="pre">50</span></code> Request a
                                high amount of peers. Helps with finding peers
                                in the beginning.</li>
                              <li><code class="docutils literal"><span class="pre">-m</span>
                                  <span class="pre">on</span></code> Actually
                                launch with mining on.</li>
                              <li><code class="docutils literal"><span class="pre">-G</span></code>
                                set GPU mining on.</li>
                            </ul>
                            <p>While the client is running you can interact with
                              it using either geth attach` or [ethconsole](<a class="reference external"
                                href="https://github.com/ethereum/ethereum-console">https://github.com/ethereum/ethereum-console</a>).</p>
                          </div>
                          <div class="section" id="mining-on-a-multiple-gpus">
                            <h5>Mining on a multiple GPUs<a class="headerlink" href="#mining-on-a-multiple-gpus"
                                title="Permalink to this headline">¶</a></h5>
                            <p>Mining with multiple GPUs and eth is very similar
                              to mining with geth and multiple GPUs. Ensure that
                              an eth node is running with your coinbase address
                              properly set:</p>
                            <div class="highlight-bash">
                              <div class="highlight">
                                <pre>eth -v 1 -a 0xcadb3223d4eebcaa7b40ec5722967ced01cfc8f2 --client-name <span
class="s2">"OPTIONALNAMEHERE"</span> -x 50 -j
</pre></div>
                            </div>
                            <p>Notice that we also added the -j argument so that
                              the client can have the JSON-RPC server enabled to
                              communicate with the ethminer instances.
                              Additionally we removed the mining related
                              arguments since ethminer will now do the mining
                              for us. For each of your GPUs execute a different
                              ethminer instance:</p>
                            <div class="highlight-bash">
                              <div class="highlight">
                                <pre>ethminer --no-precompute -G --opencl-device X
</pre></div>
                            </div>
                            <p>Where X is the index number corresponding to the
                              openCL device you want the ethminer to use {0, 1,
                              2,...}. In order to easily get a list of OpenCL
                              devices you can execute <code class="docutils literal"><span
                                  class="pre">ethminer</span> <span class="pre">--list-devices</span></code>
                              which will provide a list of all devices OpenCL
                              can detect, with also some additional information
                              per device.</p>
                            <p>Below is a sample output:</p>
                            <div class="highlight-console">
                              <div class="highlight">
                                <pre><span class="go">[0] GeForce GTX 770</span>
<span class="go">    CL_DEVICE_TYPE: GPU</span>
<span class="go">    CL_DEVICE_GLOBAL_MEM_SIZE: 4286345216</span>
<span class="go">    CL_DEVICE_MAX_MEM_ALLOC_SIZE: 1071586304</span>
<span class="go">    CL_DEVICE_MAX_WORK_GROUP_SIZE: 1024</span>
</pre></div>
                            </div>
                            <p>Finally the <code class="docutils literal"><span
                                  class="pre">--no-precompute</span></code>
                              argument requests that the ethminers don’t create
                              the DAG of the next epoch ahead of time. Although
                              this is not recommended since you’ll have a mining
                              interruption every time when there’s an epoch
                              transition.</p>
                          </div>
                          <div class="section" id="benchmarking">
                            <h5>Benchmarking<a class="headerlink" href="#benchmarking"
                                title="Permalink to this headline">¶</a></h5>
                            <p>Mining power tends to scale with memory
                              bandwidth. Our implementation is written in
                              OpenCL, which is typically supported better by AMD
                              GPUs over NVidia. Empirical evidence confirms that
                              AMD GPUs offer a better mining performance in
                              terms of price than their NVidia counterparts.</p>
                            <p>To benchmark a single-device setup you can use
                              ethminer in benchmarking mode through the -M
                              option:</p>
                            <div class="highlight-bash">
                              <div class="highlight">
                                <pre>ethminer -G -M
</pre></div>
                            </div>
                            <p>If you have many devices and you’ll like to
                              benchmark each individually, you can use the
                              –opencl-device option similarly to the previous
                              section:</p>
                            <div class="highlight-bash">
                              <div class="highlight">
                                <pre>ethminer -G -M --opencl-device X
</pre></div>
                            </div>
                            <p>Use ethminer <code class="docutils literal"><span
                                  class="pre">--list-devices</span></code> to
                              list possible numbers to substitute for the X {0,
                              1, 2,...}.</p>
                            <p>To start mining on Windows, first <a class="reference external"
                                href="https://build.ethereum.org/builds/Windows%20Go%20master%20branch/">download
                                the geth windows binary</a>.</p>
                            <ul class="simple">
                              <li>Unzip Geth (right-click and select unpack) and
                                launch Command Prompt. Use <cite>cd</cite> to
                                navigate to the location of the Geth data
                                folder. (e.g. <code class="docutils literal"><span
                                    class="pre">cd</span> <span class="pre">/</span></code>
                                to go to the <code class="docutils literal"><span
                                    class="pre">C:</span></code> drive)</li>
                              <li>Start geth by typing <code class="docutils literal"><span
                                    class="pre">geth</span> <span class="pre">--rpc</span></code>.</li>
                            </ul>
                            <p>As soon as you enter this, the Ethereum
                              blockchain will start downloading. Sometimes your
                              firewall may block the synchronisation process (it
                              will prompt you when doing so). If this is the
                              case, click “Allow access”.</p>
                            <ul class="simple">
                              <li>First <a class="reference external" href="http://cryptomining-blog.com/tag/ethminer-cuda-download/">download
                                  and install ethminer</a>, the C++ mining
                                software (your firewall or Windows itself may
                                act up, allow access)</li>
                              <li>Open up another Command Prompt (leave the
                                first one running!), change directory by typing
                                <code class="docutils literal"><span class="pre">cd</span>
                                  <span class="pre">/Program\</span> <span class="pre">Files/Ethereum(++)/release</span></code></li>
                              <li>Now make sure <cite>geth</cite> has finished
                                syncing the blockchain. If it is not syncing any
                                longer, you can start the mining process by
                                typing <code class="docutils literal"><span class="pre">ethminer</span>
                                  <span class="pre">-G</span></code> at the
                                command prompt</li>
                            </ul>
                            <p>At this point some problems may appear. If you
                              get an error, you can abort the miner by pressing
                              <code class="docutils literal"><span class="pre">Ctrl+C</span></code>.
                              If the error says “Insufficient Memory”, your GPU
                              does not have enough memory to mine ether.</p>
                          </div>
                        </div>
                      </div>
                      <div class="section" id="pool-mining">
                        <h3>Pool mining<a class="headerlink" href="#pool-mining"
                            title="Permalink to this headline">¶</a></h3>
                        <p>Mining pools are cooperatives that aim to smooth out
                          expected revenue by pooling the mining power of
                          participating miners. In return, they usually charge
                          you 0-5% of your mining rewards. The mining pool
                          submits blocks with proof of work from a central
                          account and redistributes the reward to participants
                          in proportion to their contributed mining power.</p>
                        <div class="admonition warning">
                          <p class="first admonition-title">Warning</p>
                          <p class="last">Most mining pools involve third party,
                            central components which means they are not
                            trustless. In other words, pool operators can run
                            away with your earnings. Act with caution. There are
                            a number of trustless, decentralised pools with open
                            source codebase.</p>
                        </div>
                        <div class="admonition warning">
                          <p class="first admonition-title">Warning</p>
                          <p class="last">Mining pools only outsource proof of
                            work calculation, they do not validate blocks or run
                            the VM to check state transitions brought about by
                            executing the transactions. This effectively make
                            pools behave like single nodes in terms of security,
                            so their growth poses a centralisation risk of a <a
                              class="reference external" href="https://learncryptography.com/cryptocurrency/51-attack">51%
                              attack</a>. Make sure you follow the network
                            capacity distribution and do not allow pools to grow
                            too large.</p>
                        </div>
                        <div class="section" id="mining-pools">
                          <h4>Mining pools<a class="headerlink" href="#mining-pools"
                              title="Permalink to this headline">¶</a></h4>
                          <ul class="simple">
                            <li><a class="reference external" href="https://www.coinotron.com/">coinotron</a></li>
                            <li><a class="reference external" href="http://eth.nanopool.org/">nanopool</a></li>
                            <li><a class="reference external" href="https://github.com/etherchain-org/ethpool-core">ethpool</a>
                              - Predictable solo mining, unconventional payout
                              scheme, affiliated with <a class="reference external"
                                href="https://etherchain.org/">etherchain.org</a>.</li>
                            <li><a class="reference external" href="https://eth.suprnova.cc/">supernova</a></li>
                            <li><a class="reference external" href="https://www2.coinmine.pl/eth/">coinmine.pl</a></li>
                            <li><a class="reference external" href="https://eth.pp.ua/">eth.pp.ua</a></li>
                            <li><a class="reference external" href="http://talkether.org/">talkether</a>
                              - Unconventional payout scheme, partially
                              decentralized</li>
                            <li><a class="reference external" href="http://weipool.org/">weipool</a></li>
                            <li><a class="reference external" href="https://ethereumpool.co/">ethereumpool</a></li>
                            <li><a class="reference external" href="http://www.pooleum.com">pooleum</a></li>
                            <li><a class="reference external" href="http://www.alphapool.xyz/">alphapool</a></li>
                            <li><a class="reference external" href="http://ethereum.cryptopool.online/">cryptopool</a></li>
                            <li><a class="reference external" href="http://eth.unitedminers.cloud/">unitedminers</a></li>
                            <li><a class="reference external" href="http://dwarfpool.com/eth">dwarfpool</a>
                              - Try to avoid this (currently over 50% of the
                              network)</li>
                            <li><a class="reference external" href="http://pool.laintimes.com/">laintimes</a>
                              - Discontinued</li>
                          </ul>
                        </div>
                      </div>
                      <div class="section" id="mining-resources">
                        <h3>Mining resources<a class="headerlink" href="#mining-resources"
                            title="Permalink to this headline">¶</a></h3>
                        <ul class="simple">
                          <li><a class="reference external" href="https://etherchain.org/statistics/miners">Top
                              miners of last 24h on etherchain</a></li>
                          <li><a class="reference external" href="ehttp://cryptomining-blog.com/5607-the-current-state-of-ethereum-mining-pools/">pool
                              hashrate distribution for august 2015</a></li>
                          <li><a class="reference external" href="https://forum.ethereum.org/discussion/3659/list-of-pools">Unmaintained
                              list of pools on Forum</a></li>
                          <li><a class="reference external" href="https://www.cryptocompare.com/mining/calculator/eth">Mining
                              profitability calculator on cryptocompare</a></li>
                          <li><a class="reference external" href="http://cryptowizzard.github.io/eth-mining-calculator/">Mining
                              profitability calculator on cryptowizzard</a></li>
                          <li><a class="reference external" href="http://etherscan.io/ether-mining-calculator/">Mining
                              profitability calculator on etherscan</a></li>
                          <li><a class="reference external" href="http://ethereum-mining-calculator.com/">Mining
                              profitability calculator on In The Ether</a></li>
                          <li><a class="reference external" href="http://etherscan.io/charts/difficulty">Mining
                              difficulty chart on etherscan</a></li>
                        </ul>
                        <div class="section" id="pos-vs-pow"> <span id="id2"></span>
                          <h4>POS vs POW<a class="headerlink" href="#pos-vs-pow"
                              title="Permalink to this headline">¶</a></h4>
                          <ul class="simple">
                            <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/38db1z/eli5_the_difference_between_pos_and_pow/">https://www.reddit.com/r/ethereum/comments/38db1z/eli5_the_difference_between_pos_and_pow/</a></li>
                            <li><a class="reference external" href="https://blog.ethereum.org/2014/11/25/proof-stake-learned-love-weak-subjectivity/">https://blog.ethereum.org/2014/11/25/proof-stake-learned-love-weak-subjectivity/</a></li>
                            <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/42o8oy/can_someone_explain_the_switch_to_pos_how_and_when/">https://www.reddit.com/r/ethereum/comments/42o8oy/can_someone_explain_the_switch_to_pos_how_and_when/</a></li>
                          </ul>
                        </div>
                      </div>
                    </div>
                    <span id="document-contracts-and-transactions/index"></span>
                    <div class="section" id="contracts-and-transactions">
                      <h2>Contracts and Transactions<a class="headerlink" href="#contracts-and-transactions"
                          title="Permalink to this headline">¶</a></h2>
                      <div class="toctree-wrapper compound"> <span id="document-contracts-and-transactions/account-types-gas-and-transactions"></span>
                        <div class="section" id="account-types-gas-and-transactions">
                          <span id="id1"></span>
                          <h3>Account Types, Gas, and Transactions<a class="headerlink"
                              href="#account-types-gas-and-transactions" title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="eoa-vs-contract-accounts">
                            <h4>EOA vs contract accounts<a class="headerlink" href="#eoa-vs-contract-accounts"
                                title="Permalink to this headline">¶</a></h4>
                            <dl class="docutils">
                              <dt>There are two types of accounts in Ethereum</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li>Externally Owned Accounts</li>
                                  <li>Contracts Accounts</li>
                                </ul>
                              </dd>
                            </dl>
                            <p>This distinction might be eliminated in Serenity.</p>
                            <div class="section" id="externally-owned-accounts-eoas">
                              <h5>Externally owned accounts (EOAs)<a class="headerlink"
                                  href="#externally-owned-accounts-eoas" title="Permalink to this headline">¶</a></h5>
                              <p>An externally controlled account</p>
                              <ul class="simple">
                                <li>has an ether balance,</li>
                                <li>can send transactions (ether transfer or
                                  trigger contract code),</li>
                                <li>is controlled by private keys,</li>
                                <li>has no associated code.</li>
                              </ul>
                            </div>
                            <div class="section" id="contract-accounts">
                              <h5>Contract accounts<a class="headerlink" href="#contract-accounts"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>A contract</p>
                              <ul class="simple">
                                <li>has an ether balance,</li>
                                <li>has associated code,</li>
                                <li>code execution is triggered by transactions
                                  or messages (calls) received from other
                                  contracts.</li>
                                <li>when executed - perform operations of
                                  arbitrary complexity (Turing completeness) -
                                  manipulate its own persistent storage, i.e.,
                                  can have its own permanent state - can call
                                  other contracts</li>
                              </ul>
                              <p>All action on the Ethereum block chain is set
                                in motion by transactions fired from externally
                                owned accounts. Every time a contract account
                                receives a transaction, its code is executed as
                                instructed by the input parameters sent as part
                                of the transaction. The contract code is
                                executed by the Ethereum Virtual Machine on each
                                node participating in the network as part of
                                their verification of new blocks.</p>
                              <p>This execution needs to be completely
                                deterministic, its only context is the position
                                of the block on the blockchain and all data
                                available. The blocks on the blockchain
                                represent units of time, the blockchain itself
                                is a temporal dimension and represents the
                                entire history of states at the discrete time
                                points designated by the blocks on the chain.</p>
                              <p>All ether balances and values are denominated
                                in units of wei: 1 ether is 1e18 wei.</p>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">“Contracts” in Ethereum should
                                  not be seen as something that should be
                                  “fulfilled” or “complied with”; rather, they
                                  are more like “autonomous agents” that live
                                  inside of the Ethereum execution environment,
                                  always executing a specific piece of code when
                                  “poked” by a message or transaction, and
                                  having direct control over their own ether
                                  balance and their own key/value store to store
                                  their permanent state.</p>
                              </div>
                            </div>
                          </div>
                          <div class="section" id="what-is-a-transaction">
                            <h4>What is a transaction?<a class="headerlink" href="#what-is-a-transaction"
                                title="Permalink to this headline">¶</a></h4>
                            <p>The term “transaction” is used in Ethereum to
                              refer to the signed data package that stores a
                              message to be sent from an externally owned
                              account to another account on the blockchain.</p>
                            <dl class="docutils">
                              <dt>Transactions contain:</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li>the recipient of the message,</li>
                                  <li>a signature identifying the sender and
                                    proving their intention to send the message
                                    via the blockchain to the recipient,</li>
                                  <li><code class="docutils literal"><span class="pre">VALUE</span></code>
                                    field - The amount of wei to transfer from
                                    the sender to the recipient,</li>
                                  <li>an optional data field, which can contain
                                    the message sent to a contract,</li>
                                  <li>a <code class="docutils literal"><span class="pre">STARTGAS</span></code>
                                    value, representing the maximum number of
                                    computational steps the transaction
                                    execution is allowed to take,</li>
                                  <li>a <code class="docutils literal"><span class="pre">GASPRICE</span></code>
                                    value, representing the fee the sender is
                                    willing to pay for gas. One unit of gas
                                    corresponds to the execution of one atomic
                                    instruction, i.e., a computational step.</li>
                                </ul>
                              </dd>
                            </dl>
                          </div>
                          <div class="section" id="what-is-a-message">
                            <h4>What is a message?<a class="headerlink" href="#what-is-a-message"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Contracts have the ability to send “messages” to
                              other contracts. Messages are virtual objects that
                              are never serialized and exist only in the
                              Ethereum execution environment. They can be
                              conceived of as function calls.</p>
                            <dl class="docutils">
                              <dt>A message contains:</dt>
                              <dd>
                                <ul class="first last simple">
                                  <li>the sender of the message (implicit).</li>
                                  <li>the recipient of the message</li>
                                  <li><code class="docutils literal"><span class="pre">VALUE</span></code>
                                    field - The amount of wei to transfer
                                    alongside the message to the contract
                                    address,</li>
                                  <li>an optional data field, that is the actual
                                    input data to the contract</li>
                                  <li>a <code class="docutils literal"><span class="pre">STARTGAS</span></code>
                                    value, which limits the maximum amount of
                                    gas the code execution triggered by the
                                    message can incur.</li>
                                </ul>
                              </dd>
                            </dl>
                            <p>Essentially, a message is like a transaction,
                              except it is produced by a contract and not an
                              external actor. A message is produced when a
                              contract currently executing code executes the <code
                                class="docutils literal"><span class="pre">CALL</span></code>
                              or <code class="docutils literal"><span class="pre">DELEGATECALL</span></code>
                              opcodes, which produces and executes a message.
                              Like a transaction, a message leads to the
                              recipient account running its code. Thus,
                              contracts can have relationships with other
                              contracts in exactly the same way that external
                              actors can.</p>
                          </div>
                          <div class="section" id="what-is-gas">
                            <h4>What is gas?<a class="headerlink" href="#what-is-gas"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Ethereum implements an execution environment on
                              the blockchain called the Ethereum Virtual Machine
                              (EVM). Every node participating in the network
                              runs the EVM as part of the block verification
                              protocol. They go through the transactions listed
                              in the block they are verifying and run the code
                              as triggered by the transaction within the EVM.
                              Each and every full node in the network does the
                              same calculations and stores the same values.
                              Clearly Ethereum is not about optimising
                              efficiency of computation. Its parallel processing
                              is redundantly parallel. This is to offer an
                              efficient way to reach consensus on the system
                              state without needing trusted third parties,
                              oracles or violence monopolies. But importantly
                              they are not there for optimal computation. The
                              fact that contract executions are redundantly
                              replicated across nodes, naturally makes them
                              expensive, which generally creates an incentive
                              not to use the blockchain for computation that can
                              be done offchain.</p>
                            <p>When you are running a decentralized application
                              (dapp), it interacts with the blockchain to read
                              and modify its state, but dapps will typically
                              only put the business logic and state that are
                              crucial for consensus on the blockchain.</p>
                            <p>When a contract is executed as a result of being
                              triggered by a message or transaction, every
                              instruction is executed on every node of the
                              network. This has a cost: for every executed
                              operation there is a specified cost, expressed in
                              a number of gas units.</p>
                            <p>Gas is the name for the execution fee that
                              senders of transactions need to pay for every
                              operation made on an Ethereum blockchain. The name
                              gas is inspired by the view that this fee acts as
                              cryptofuel, driving the motion of smart contracts.
                              Gas is purchased for ether from the miners that
                              execute the code. Gas and ether are decoupled
                              deliberately since units of gas align with
                              computation units having a natural cost, while the
                              price of ether generally fluctuates as a result of
                              market forces. The two are mediated by a free
                              market: the price of gas is actually decided by
                              the miners, who can refuse to process a
                              transaction with a lower gas price than their
                              minimum limit. To get gas you simply need to add
                              ether to your account. The Ethereum clients
                              automatically purchase gas for your ether in the
                              amount you specify as your maximum expenditure for
                              the transaction.</p>
                            <p>The Ethereum protocol charges a fee per
                              computational step that is executed in a contract
                              or transaction to prevent deliberate attacks and
                              abuse on the Ethereum network. Every transaction
                              is required to include a gas limit and a fee that
                              it is willing to pay per gas. Miners have the
                              choice of including the transaction and collecting
                              the fee or not. If the total amount of gas used by
                              the computational steps spawned by the
                              transaction, including the original message and
                              any sub-messages that may be triggered, is less
                              than or equal to the gas limit, then the
                              transaction is processed. If the total gas exceeds
                              the gas limit, then all changes are reverted,
                              except that the transaction is still valid and the
                              fee can still be collected by the miner. All
                              excess gas not used by the transaction execution
                              is reimbursed to the sender as Ether. You do not
                              need to worry about overspending, since you are
                              only charged for the gas you consume. This means
                              that it is useful as well as safe to send
                              transactions with a gas limit well above the
                              estimates.</p>
                          </div>
                          <div class="section" id="estimating-transaction-costs">
                            <h4>Estimating transaction costs<a class="headerlink"
                                href="#estimating-transaction-costs" title="Permalink to this headline">¶</a></h4>
                            <p>The total ether cost of a transaction is based on
                              2 factors:</p>
                            <p><code class="docutils literal"><span class="pre">gasUsed</span></code>
                              is the total gas that is consumed by the
                              transaction</p>
                            <p><code class="docutils literal"><span class="pre">gasPrice</span></code>
                              price (in ether) of one unit of gas specified in
                              the transaction</p>
                            <p><strong>Total cost = gasUsed * gasPrice</strong></p>
                            <div class="section" id="gasused">
                              <h5>gasUsed<a class="headerlink" href="#gasused" title="Permalink to this headline">¶</a></h5>
                              <p>Each operation in the EVM was assigned a number
                                of how much gas it consumes. <code class="docutils literal"><span
                                    class="pre">gasUsed</span></code> is the sum
                                of all the gas for all the operations executed.
                                There is a <a class="reference external" href="http://ethereum.stackexchange.com/q/52/42">spreadsheet</a>
                                which offers a glimpse to some of the analysis
                                behind this.</p>
                              <p>For estimating <code class="docutils literal"><span
                                    class="pre">gasUsed</span></code>, there is
                                an <a class="reference external" href="http://ethereum.stackexchange.com/q/266/42">estimateGas
                                  API</a> that can be used but has some caveats.</p>
                            </div>
                            <div class="section" id="gasprice">
                              <h5>gasPrice<a class="headerlink" href="#gasprice"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>A user constructs and signs a transaction, and
                                each user may specify whatever <code class="docutils literal"><span
                                    class="pre">gasPrice</span></code> they
                                desire, which can be zero. However, the Ethereum
                                clients launched at Frontier had a default
                                gasPrice of 0.05e12 wei. As miners optimize for
                                their revenue, if most transactions are being
                                submitted with a gasPrice of 0.05e12 wei, it
                                would be difficult to convince a miner to accept
                                a transaction that specified a lower, or zero,
                                gasPrice.</p>
                            </div>
                            <div class="section" id="example-transaction-cost">
                              <h5>Example transaction cost<a class="headerlink"
                                  href="#example-transaction-cost" title="Permalink to this headline">¶</a></h5>
                              <p>Let’s take a contract that just adds 2 numbers.
                                The EVM OPCODE <code class="docutils literal"><span
                                    class="pre">ADD</span></code> consumes 3
                                gas.</p>
                              <p>The approximate cost, using the default gas
                                price (as of January 2016), would be:</p>
                              <p>3 * 0.05e12 = 1.5e11 wei</p>
                              <p>Since 1 ether is 1e18 wei, the total cost would
                                be 0.00000015 Ether.</p>
                              <p>This is a simplification since it ignores some
                                costs, such as the cost of passing the 2 numbers
                                to contract, before they can even be added.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="http://ethereum.stackexchange.com/q/324/42">question</a></li>
                                <li><a class="reference external" href="http://ether.fund/tool/gas-fees">gas
                                    fees</a></li>
                                <li><a class="reference external" href="http://ether.fund/tool/calculator">gas
                                    cost calculator</a></li>
                                <li><a class="reference external" href="https://docs.google.com/spreadsheets/d/1m89CVujrQe5LAFJ8-YAUCcNK950dUzMQPMJBxRtGCqs">Ethereum
                                    Gas Prices</a></li>
                              </ul>
                              <table class="docutils" border="1">
                                <colgroup> <col width="24%"> <col width="13%">
                                  <col width="63%"> </colgroup>
                                <thead valign="bottom">
                                  <tr class="row-odd">
                                    <th class="head">Operation Name</th>
                                    <th class="head">Gas Cost</th>
                                    <th class="head">Remark</th>
                                  </tr>
                                </thead>
                                <tbody valign="top">
                                  <tr class="row-even">
                                    <td>step</td>
                                    <td>1</td>
                                    <td>default amount per execution cycle</td>
                                  </tr>
                                  <tr class="row-odd">
                                    <td>stop</td>
                                    <td>0</td>
                                    <td>free</td>
                                  </tr>
                                  <tr class="row-even">
                                    <td>suicide</td>
                                    <td>0</td>
                                    <td>free</td>
                                  </tr>
                                  <tr class="row-odd">
                                    <td>sha3</td>
                                    <td>20</td>
                                    <td>&nbsp;</td>
                                  </tr>
                                  <tr class="row-even">
                                    <td>sload</td>
                                    <td>20</td>
                                    <td>get from permanent storage</td>
                                  </tr>
                                  <tr class="row-odd">
                                    <td>sstore</td>
                                    <td>100</td>
                                    <td>put into permanent storage</td>
                                  </tr>
                                  <tr class="row-even">
                                    <td>balance</td>
                                    <td>20</td>
                                    <td>&nbsp;</td>
                                  </tr>
                                  <tr class="row-odd">
                                    <td>create</td>
                                    <td>100</td>
                                    <td>contract creation</td>
                                  </tr>
                                  <tr class="row-even">
                                    <td>call</td>
                                    <td>20</td>
                                    <td>initiating a read-only call</td>
                                  </tr>
                                  <tr class="row-odd">
                                    <td>memory</td>
                                    <td>1</td>
                                    <td>every additional word when expanding
                                      memory</td>
                                  </tr>
                                  <tr class="row-even">
                                    <td>txdata</td>
                                    <td>5</td>
                                    <td>every byte of data or code for a
                                      transaction</td>
                                  </tr>
                                  <tr class="row-odd">
                                    <td>transaction</td>
                                    <td>500</td>
                                    <td>base fee transaction</td>
                                  </tr>
                                  <tr class="row-even">
                                    <td>contract creation</td>
                                    <td>53000</td>
                                    <td>changed in homestead from 21000</td>
                                  </tr>
                                </tbody>
                              </table>
                            </div>
                          </div>
                          <div class="section" id="account-interactions-example-betting-contract">
                            <h4>Account interactions example - betting contract<a
                                class="headerlink" href="#account-interactions-example-betting-contract"
                                title="Permalink to this headline">¶</a></h4>
                            <p>As previously mentioned, there are two types of
                              accounts:</p>
                            <ul class="simple">
                              <li><strong>Externally owned account (EOAs)</strong>:
                                an account controlled by a private key, and if
                                you own the private key associated with the EOA
                                you have the ability to send ether and messages
                                from it.</li>
                              <li><strong>Contract</strong>: an account that has
                                its own code, and is controlled by code.</li>
                            </ul>
                            <p>By default, the Ethereum execution environment is
                              lifeless; nothing happens and the state of every
                              account remains the same. However, any user can
                              trigger an action by sending a transaction from an
                              externally owned account, setting Ethereum’s
                              wheels in motion. If the destination of the
                              transaction is another EOA, then the transaction
                              may transfer some ether but otherwise does
                              nothing. However, if the destination is a
                              contract, then the contract in turn activates, and
                              automatically runs its code.</p>
                            <p>The code has the ability to read/write to its own
                              internal storage (a database mapping 32-byte keys
                              to 32-byte values), read the storage of the
                              received message, and send messages to other
                              contracts, triggering their execution in turn.
                              Once execution stops, and all sub-executions
                              triggered by a message sent by a contract stop
                              (this all happens in a deterministic and
                              synchronous order, ie. a sub-call completes fully
                              before the parent call goes any further), the
                              execution environment halts once again, until
                              woken by the next transaction.</p>
                            <p>Contracts generally serve four purposes:</p>
                            <ul class="simple">
                              <li>Maintain a data store representing something
                                which is useful to either other contracts or to
                                the outside world; one example of this is a
                                contract that simulates a currency, and another
                                is a contract that records membership in a
                                particular organization.</li>
                              <li>Serve as a sort of externally-owned account
                                with a more complicated access policy; this is
                                called a “forwarding contract” and typically
                                involves simply resending incoming messages to
                                some desired destination only if certain
                                conditions are met; for example, one can have a
                                forwarding contract that waits until two out of
                                a given three private keys have confirmed a
                                particular message before resending it (ie.
                                multisig). More complex forwarding contracts
                                have different conditions based on the nature of
                                the message sent. The simplest use case for this
                                functionality is a withdrawal limit that is
                                overrideable via some more complicated access
                                procedure. A wallet contract is a good example
                                of this.</li>
                              <li>Manage an ongoing contract or relationship
                                between multiple users. Examples of this include
                                a financial contract, an escrow with some
                                particular set of mediators, or some kind of
                                insurance. One can also have an open contract
                                that one party leaves open for any other party
                                to engage with at any time; one example of this
                                is a contract that automatically pays a bounty
                                to whoever submits a valid solution to some
                                mathematical problem, or proves that it is
                                providing some computational resource.</li>
                              <li>Provide functions to other contracts,
                                essentially serving as a software library.</li>
                            </ul>
                            <p>Contracts interact with each other through an
                              activity that is alternately called either
                              “calling” or “sending messages”. A “message” is an
                              object containing some quantity of ether, a
                              byte-array of data of any size, the addresses of a
                              sender and a recipient. When a contract receives a
                              message, it has the option of returning some data,
                              which the original sender of the message can then
                              immediately use. In this way, sending a message is
                              exactly like calling a function.</p>
                            <p>Because contracts can play such different roles,
                              we expect that contracts will be interacting with
                              each other. As an example, consider a situation
                              where Alice and Bob are betting 100 GavCoin that
                              the temperature in San Francisco will not exceed
                              35ºC at any point in the next year. However, Alice
                              is very security-conscious, and as her primary
                              account uses a forwarding contract which only
                              sends messages with the approval of two out of
                              three private keys. Bob is paranoid about quantum
                              cryptography, so he uses a forwarding contract
                              which passes along only messages that have been
                              signed with Lamport signatures alongside
                              traditional ECDSA (but because he’s old fashioned,
                              he prefers to use a version of Lamport sigs based
                              on SHA256, which is not supported in Ethereum
                              directly).</p>
                            <p>The betting contract itself needs to fetch data
                              about the San Francisco weather from some
                              contract, and it also needs to talk to the GavCoin
                              contract when it wants to actually send the
                              GavCoin to either Alice or Bob (or, more
                              precisely, Alice or Bob’s forwarding contract). We
                              can show the relationships between the accounts
                              thus:</p>
                            <img alt="images/contract_relationship.png" src="images/contract_relationship.png">
                            <p>When Bob wants to finalize the bet, the following
                              steps happen:</p>
                            <ol class="arabic simple">
                              <li>A transaction is sent, triggering a message
                                from Bob’s EOA to his forwarding contract.</li>
                              <li>Bob’s forwarding contract sends the hash of
                                the message and the Lamport signature to a
                                contract which functions as a Lamport signature
                                verification library.</li>
                              <li>The Lamport signature verification library
                                sees that Bob wants a SHA256-based Lamport sig,
                                so it calls the SHA256 library many times as
                                needed to verify the signature.</li>
                              <li>Once the Lamport signature verification
                                library returns 1, signifying that the signature
                                has been verified, it sends a message to the
                                contract representing the bet.</li>
                              <li>The bet contract checks the contract providing
                                the San Francisco temperature to see what the
                                temperature is.</li>
                              <li>The bet contract sees that the response to the
                                messages shows that the temperature is above
                                35ºC, so it sends a message to the GavCoin
                                contract to move the GavCoin from its account to
                                Bob’s forwarding contract.</li>
                            </ol>
                            <p>Note that the GavCoin is all “stored” as entries
                              in the GavCoin contract’s database; the word
                              “account” in the context of step 6 simply means
                              that there is a data entry in the GavCoin contract
                              storage with a key for the bet contract’s address
                              and a value for its balance. After receiving this
                              message, the GavCoin contract decreases this value
                              by some amount and increases the value in the
                              entry corresponding to Bob’s forwarding contract’s
                              address. We can see these steps in the following
                              diagram:</p>
                            <img alt="images/contract_relationship2.png" src="images/contract_relationship2.png">
                          </div>
                          <div class="section" id="signing-transactions-offline">
                            <h4>Signing transactions offline<a class="headerlink"
                                href="#signing-transactions-offline" title="Permalink to this headline">¶</a></h4>
                            <p>[ Maybe add this to the FAQ and point to the
                              ethkey section of turboethereum guide? ]</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://github.com/resilience-me/broadcaster/">Resilience
                                  Raw Transaction Broadcaster</a></li>
                            </ul>
                          </div>
                        </div>
                        <span id="document-contracts-and-transactions/contracts"></span>
                        <div class="section" id="contracts"> <span id="id1"></span>
                          <h3>Contracts<a class="headerlink" href="#contracts" title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="what-is-a-contract">
                            <h4>What is a contract?<a class="headerlink" href="#what-is-a-contract"
                                title="Permalink to this headline">¶</a></h4>
                            <p>A contract is a collection of code (its
                              functions) and data (its state) that resides at a
                              specific address on the Ethereum blockchain.
                              Contract accounts are able to pass messages
                              between themselves as well as doing practically
                              Turing complete computation. Contracts live on the
                              blockchain in a Ethereum-specific binary format
                              called Ethereum Virtual Machine (EVM) bytecode.</p>
                            <p>Contracts are typically written in some high
                              level language such as <a class="reference external"
                                href="https://solidity.readthedocs.org/en/latest/">Solidity</a>
                              and then compiled into bytecode to be uploaded on
                              the blockchain.</p>
                            <div class="admonition seealso">
                              <p class="first admonition-title">See also</p>
                              <p class="last">Other languages also exist,
                                notably Serpent and LLL, which are described
                                further in the <a class="reference internal" href="#ethereum-high-level-languages"><span>Ethereum
                                    high level languages</span></a> section of
                                this documentation.</p>
                            </div>
                            <p><a class="reference internal" href="index.html#ide-or-development-framework"><span>Dapp
                                  development resources</span></a> lists the
                              integrated development environments, developer
                              tools that help you develop in these languages,
                              offering testing, and deployment support among
                              other features.</p>
                          </div>
                          <div class="section" id="ethereum-high-level-languages">
                            <span id="id2"></span>
                            <h4>Ethereum high level languages<a class="headerlink"
                                href="#ethereum-high-level-languages" title="Permalink to this headline">¶</a></h4>
                            <p>Contracts live on the blockchain in an
                              Ethereum-specific binary format (EVM bytecode)
                              that is executed by the Ethereum Virtual Machine
                              (EVM). However, contracts are typically written in
                              a higher level language and then compiled using
                              the EVM compiler into byte code to be deployed to
                              the blockchain.</p>
                            <p>Below are the different high level languages
                              developers can use to write smart contracts for
                              Ethereum.</p>
                            <div class="section" id="id3">
                              <h5>Solidity<a class="headerlink" href="#id3" title="Permalink to this headline">¶</a></h5>
                              <p>Solidity is a language similar to JavaScript
                                which allows you to develop contracts and
                                compile to EVM bytecode. It is currently the
                                flagship language of Ethereum and the most
                                popular.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="http://solidity.readthedocs.org/en/latest/">Solidity
                                    Documentation</a> - Solidity is the flagship
                                  Ethereum high level language that is used to
                                  write contracts.</li>
                                <li><a class="reference external" href="http://ethereum.github.io/browser-solidity/">Solidity
                                    online realtime compiler</a></li>
                                <li><a class="reference external" href="https://github.com/ethereum/wiki/wiki/Standardized_Contract_APIs">Standardized
                                    Contract APIs</a></li>
                                <li><a class="reference external" href="https://github.com/ethereum/wiki/wiki/Useful-%C3%90app-Patterns">Useful
                                    Ðapp Patterns</a> - Code snippets which are
                                  useful for Ðapp development.</li>
                              </ul>
                            </div>
                            <div class="section" id="serpent">
                              <h5>Serpent<a class="headerlink" href="#serpent" title="Permalink to this headline">¶</a></h5>
                              <p>Serpent is a language similar to Python which
                                can be used to develop contracts and compile to
                                EVM bytecode. It is intended to be maximally
                                clean and simple, combining many of the
                                efficiency benefits of a low-level language with
                                ease-of-use in programming style, and at the
                                same time adding special domain-specific
                                features for contract programming. Serpent is
                                compiled using <span class="target" id="lll">LLL</span>.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://github.com/ethereum/wiki/wiki/Serpent">Serpent
                                    on the ethereum wiki</a></li>
                                <li><a class="reference external" href="https://github.com/ethereum/serpent">Serpent
                                    EVM compiler</a></li>
                              </ul>
                            </div>
                            <div class="section" id="id4">
                              <h5>LLL<a class="headerlink" href="#id4" title="Permalink to this headline">¶</a></h5>
                              <p><a class="reference external" href="https://github.com/ethereum/libethereum/tree/develop/liblll">Lisp
                                  Like Language (LLL)</a> is a low level
                                language similar to Assembly. It is meant to be
                                very simple and minimalistic; essentially just a
                                tiny wrapper over coding in EVM directly.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://github.com/ethereum/libethereum/tree/develop/liblll">LIBLLL
                                    in GitHub</a></li>
                                <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3secu1/anyone_have_a_copy_of_the_old_lll_tutorials/">Examples
                                    of LLL</a></li>
                              </ul>
                            </div>
                            <div class="section" id="mutan-deprecated">
                              <h5>Mutan (deprecated)<a class="headerlink" href="#mutan-deprecated"
                                  title="Permalink to this headline">¶</a></h5>
                              <p><a class="reference external" href="https://github.com/obscuren/mutan">Mutan</a>
                                is a statically typed, C-like language designed
                                and developed by Jeffrey Wilcke. It is no longer
                                maintained.</p>
                            </div>
                          </div>
                          <div class="section" id="writing-a-contract">
                            <h4>Writing a contract<a class="headerlink" href="#writing-a-contract"
                                title="Permalink to this headline">¶</a></h4>
                            <p>No language would be complete without a Hello
                              World program. Operating within the Ethereum
                              environment, Solidity has no obvious way of
                              “outputting” a string. The closest we can do is to
                              use a <em>log event</em> to place a string into
                              the blockchain:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>contract HelloWorld {
        event Print(string out);
        function() { Print("Hello, World!"); }
}
</pre></div>
                            </div>
                            <p>This contract will create a log entry on the
                              blockchain of type Print with a parameter “Hello,
                              World!” each time it is executed.</p>
                            <div class="admonition seealso">
                              <p class="first admonition-title">See also</p>
                              <p class="last"><a class="reference external" href="https://solidity.readthedocs.org/en/latest/">Solidity
                                  docs</a> has more examples and guidelines to
                                writing Solidity code.</p>
                            </div>
                          </div>
                          <div class="section" id="compiling-a-contract">
                            <h4>Compiling a contract<a class="headerlink" href="#compiling-a-contract"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Compilation of solidity contracts can be
                              accomplished via a number of mechanisms.</p>
                            <ul class="simple">
                              <li>Using the <code class="docutils literal"><span
                                    class="pre">solc</span></code> compiler via
                                the command line.</li>
                              <li>Using <code class="docutils literal"><span class="pre">web3.eth.compile.solidity</span></code>
                                in the javascript console provided by <code class="docutils literal"><span
                                    class="pre">geth</span></code> or <code class="docutils literal"><span
                                    class="pre">eth</span></code> (This still
                                requires the <code class="docutils literal"><span
                                    class="pre">solc</span></code> compiler to
                                be installed).</li>
                              <li>The <a class="reference external" href="https://ethereum.github.io/browser-solidity/">online
                                  Solidity realtime compiler</a>.</li>
                              <li>The <a class="reference external" href="https://github.com/SilentCicero/meteor-dapp-cosmo">Meteor
                                  dapp Cosmo for building solidity contracts</a>.</li>
                              <li>The <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Mix:-The-DApp-IDE">Mix
                                  IDE</a>.</li>
                              <li>The <a class="reference external" href="https://github.com/ethereum/mist/releases">Ethereum
                                  Wallet</a>.</li>
                            </ul>
                            <div class="admonition note">
                              <p class="first admonition-title">Note</p>
                              <p class="last">More information on solc and
                                compiling Solidity contract code can be found <a
                                  class="reference external" href="https://solidity.readthedocs.org/en/latest/frequently-asked-questions.html#how-do-i-compile-contracts">here</a>.</p>
                            </div>
                            <div class="section" id="setting-up-the-solidity-compiler-in-geth">
                              <h5>Setting up the solidity compiler in geth<a class="headerlink"
                                  href="#setting-up-the-solidity-compiler-in-geth"
                                  title="Permalink to this headline">¶</a></h5>
                              <p>If you start up your <code class="docutils literal"><span
                                    class="pre">geth</span></code> node, you can
                                check which compilers are available.</p>
                              <div class="code bash highlight-python">
                                <div class="highlight">
                                  <pre>&gt; web3.eth.getCompilers();
["lll", "solidity", "serpent"]
</pre></div>
                              </div>
                              <p>This command returns an array of strings
                                indicating which compilers are currently
                                available.</p>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">The <code class="docutils literal"><span
                                      class="pre">solc</span></code> compiler is
                                  installed with <code class="docutils literal"><span
                                      class="pre">cpp-ethereum</span></code>.
                                  Alternatively, you can <a class="reference external"
                                    href="https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum">build
                                    it yourself</a>.</p>
                              </div>
                              <p>If your <code class="docutils literal"><span class="pre">solc</span></code>
                                executable is in a non-standard location you can
                                specify a custom path to the <code class="docutils literal"><span
                                    class="pre">solc</span></code> executable
                                using th <code class="docutils literal"><span class="pre">--solc</span></code>
                                flag.</p>
                              <div class="code bash highlight-python">
                                <div class="highlight">
                                  <pre>$ geth --solc /usr/local/bin/solc
</pre></div>
                              </div>
                              <p>Alternatively, you can set this option at
                                runtime via the console:</p>
                              <div class="code bash highlight-python">
                                <div class="highlight">
                                  <pre>&gt; admin.setSolc("/usr/local/bin/solc")
solc, the solidity compiler commandline interface
Version: 0.2.2-02bb315d/.-Darwin/appleclang/JIT linked to libethereum-1.2.0-8007cef0/.-Darwin/appleclang/JIT
path: /usr/local/bin/solc
</pre></div>
                              </div>
                            </div>
                            <div class="section" id="compiling-a-simple-contract">
                              <span id="compile-a-simple-contract"></span>
                              <h5>Compiling a simple contract<a class="headerlink"
                                  href="#compiling-a-simple-contract" title="Permalink to this headline">¶</a></h5>
                              <p>Let’s compile a simple contract source:</p>
                              <div class="code bash highlight-python">
                                <div class="highlight">
                                  <pre>&gt; source = "contract test { function multiply(uint a) returns(uint d) { return a * 7; } }"
</pre></div>
                              </div>
                              <p>This contract offers a single method <strong>multiply</strong>
                                which is called with a positive integer <code class="docutils literal"><span
                                    class="pre">a</span></code> and returns <code
                                  class="docutils literal"><span class="pre">a</span>
                                  <span class="pre">*</span> <span class="pre">7</span></code>.</p>
                              <p>You are ready to compile solidity code in the <code
                                  class="docutils literal"><span class="pre">geth</span></code>
                                JS console using <a class="reference external"
                                  href="https://github.com/ethereum/wiki/wiki/JavaScript-API#web3ethcompilesolidity">eth.compile.solidity()</a>:</p>
                              <div class="code bash highlight-python">
                                <div class="highlight">
                                  <pre>&gt; contract = eth.compile.solidity(source).test
{
  code: '605280600c6000396000f3006000357c010000000000000000000000000000000000000000000000000000000090048063c6888fa114602e57005b60376004356041565b8060005260206000f35b6000600782029050604d565b91905056',
  info: {
    language: 'Solidity',
    languageVersion: '0',
    compilerVersion: '0.9.13',
    abiDefinition: [{
      constant: false,
      inputs: [{
        name: 'a',
        type: 'uint256'
      } ],
      name: 'multiply',
      outputs: [{
        name: 'd',
        type: 'uint256'
      } ],
      type: 'function'
    } ],
    userDoc: {
      methods: {
      }
    },
    developerDoc: {
      methods: {
      }
    },
    source: 'contract test { function multiply(uint a) returns(uint d) { return a * 7; } }'
  }
}
</pre></div>
                              </div>
                              <div class="admonition note">
                                <p class="first admonition-title">Note</p>
                                <p class="last">The compiler is also available
                                  via <a class="reference external" href="https://github.com/ethereum/wiki/wiki/JSON-RPC">RPC</a>
                                  and therefore via <a class="reference external"
                                    href="https://github.com/ethereum/wiki/wiki/JavaScriptAPI#web3ethcompilesolidity">web3.js</a>
                                  to any in-browser Ðapp connecting to <code class="docutils literal"><span
                                      class="pre">geth</span></code> via
                                  RPC/IPC.</p>
                              </div>
                              <p>The following example shows how you interface <code
                                  class="docutils literal"><span class="pre">geth</span></code>
                                via JSON-RPC to use the compiler.</p>
                              <div class="code bash highlight-python">
                                <div class="highlight">
                                  <pre>$ geth --datadir ~/eth/ --loglevel 6 --logtostderr=true --rpc --rpcport 8100 --rpccorsdomain '*' --mine console  2&gt;&gt; ~/eth/eth.log
$ curl -X POST --data '{"jsonrpc":"2.0","method":"eth_compileSolidity","params":["contract test { function multiply(uint a) returns(uint d) { return a * 7; } }"],"id":1}' http://127.0.0.1:8100
</pre></div>
                              </div>
                              <p>The compiler output for one source will give
                                you contract objects each representing a single
                                contract. The actual return value of <code class="docutils literal"><span
                                    class="pre">eth.compile.solidity</span></code>
                                is a map of contract name to contract object
                                pairs. Since our contract’s name is <code class="docutils literal"><span
                                    class="pre">test</span></code>, <code class="docutils literal"><span
                                    class="pre">eth.compile.solidity(source).test</span></code>
                                will give you the contract object for the test
                                contract containing the following fields:</p>
                              <dl class="glossary docutils">
                                <dt id="term-code"><code class="docutils literal"><span
                                      class="pre">code</span></code></dt>
                                <dd>The compiled EVM bytecode</dd>
                                <dt id="term-info"><code class="docutils literal"><span
                                      class="pre">info</span></code></dt>
                                <dd>Additional metadata output from the compiler</dd>
                                <dt id="term-source"><code class="docutils literal"><span
                                      class="pre">source</span></code></dt>
                                <dd>The source code</dd>
                                <dt id="term-language"><code class="docutils literal"><span
                                      class="pre">language</span></code></dt>
                                <dd>The contract language (Solidity, Serpent,
                                  LLL)</dd>
                                <dt id="term-languageversion"><code class="docutils literal"><span
                                      class="pre">languageVersion</span></code></dt>
                                <dd>The contract language version</dd>
                                <dt id="term-compilerversion"><code class="docutils literal"><span
                                      class="pre">compilerVersion</span></code></dt>
                                <dd>The solidity compiler version that was used
                                  to compile this contract.</dd>
                                <dt id="term-abidefinition"><code class="docutils literal"><span
                                      class="pre">abiDefinition</span></code></dt>
                                <dd>The <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI">Application
                                    Binary Interface Definition</a></dd>
                                <dt id="term-userdoc"><code class="docutils literal"><span
                                      class="pre">userDoc</span></code></dt>
                                <dd>The <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Ethereum-Natural-Specification-Format">NatSpec
                                    Doc</a> for users.</dd>
                                <dt id="term-developerdoc"><code class="docutils literal"><span
                                      class="pre">developerDoc</span></code></dt>
                                <dd>The <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Ethereum-Natural-Specification-Format">NatSpec
                                    Doc</a> for developers.</dd>
                              </dl>
                              <p>The immediate structuring of the compiler
                                output (into <code class="docutils literal"><span
                                    class="pre">code</span></code> and <code class="docutils literal"><span
                                    class="pre">info</span></code>) reflects the
                                two very different <strong>paths of deployment</strong>.
                                The compiled EVM code is sent off to the
                                blockchain with a contract creation transaction
                                while the rest (info) will ideally live on the
                                decentralised cloud as publicly verifiable
                                metadata complementing the code on the
                                blockchain.</p>
                              <p>If your source contains multiple contracts, the
                                output will contain an entry for each contract,
                                the corresponding contract info object can be
                                retrieved with the name of the contract as
                                attribute name. You can try this by inspecting
                                the most current GlobalRegistrar code:</p>
                              <div class="code js highlight-python">
                                <div class="highlight">
                                  <pre><span class="n">contracts</span> <span class="o">=</span> <span
class="n">eth</span><span class="o">.</span><span class="n">compile</span><span
class="o">.</span><span class="n">solidity</span><span class="p">(</span><span class="n">globalRegistrarSrc</span><span
class="p">)</span>
</pre></div>
                              </div>
                            </div>
                          </div>
                          <div class="section" id="create-and-deploy-a-contract">
                            <h4>Create and deploy a contract<a class="headerlink"
                                href="#create-and-deploy-a-contract" title="Permalink to this headline">¶</a></h4>
                            <p>Before you begin this section, make sure you have
                              both an unlocked account as well as some funds.</p>
                            <p>You will now create a contract on the blockchain
                              by <a class="reference external" href="https://github.com/ethereum/wiki/wiki/JavaScript-API#web3ethsendtransaction">sending
                                a transaction</a> to the empty address with the
                              EVM code from the previous section as data.</p>
                            <div class="admonition note">
                              <p class="first admonition-title">Note</p>
                              <p class="last">This can be accomplished much
                                easier using the <a class="reference external"
                                  href="https://ethereum.github.io/browser-solidity/">online
                                  Solidity realtime compiler</a> or the <a class="reference external"
                                  href="https://github.com/ethereum/wiki/wiki/Mix:-The-DApp-IDE">Mix
                                  IDE</a> program.</p>
                            </div>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>var primaryAddress = eth.accounts[0]
var abi = [{ constant: false, inputs: { name: 'a', type: 'uint256' } }]
var MyContract = eth.contract(abi)
var contract = MyContract.new(arg1, arg2, ..., {from: primaryAddress, data: evmByteCodeFromPreviousSection})
</pre></div>
                            </div>
                            <p>All binary data is serialised in hexadecimal
                              form. Hex strings always have a hex prefix <code
                                class="docutils literal"><span class="pre">0x</span></code>.</p>
                            <div class="admonition note">
                              <p class="first admonition-title">Note</p>
                              <p class="last">Note that <code class="docutils literal"><span
                                    class="pre">arg1,</span> <span class="pre">arg2,</span>
                                  <span class="pre">...</span></code> are the
                                arguments for the contract constructor, in case
                                it accepts any. If the contract does not require
                                any constructor arguments then these arguments
                                can be omitted.</p>
                            </div>
                            <p>It is worth pointing out that this step requires
                              you to pay for execution. Your balance on the
                              account (that you put as sender in the <code class="docutils literal"><span
                                  class="pre">from</span></code> field) will be
                              reduced according to the gas rules of the EVM once
                              your transaction makes it into a block. After some
                              time, your transaction should appear included in a
                              block confirming that the state it brought about
                              is a consensus. Your contract now lives on the
                              blockchain.</p>
                            <p>The asynchronous way of doing the same looks like
                              this:</p>
                            <div class="highlight-js">
                              <div class="highlight">
                                <pre><span class="nx">MyContract</span><span class="p">.</span><span
class="k">new</span><span class="p">([</span><span class="nx">arg1</span><span class="p">,</span> <span
class="nx">arg2</span><span class="p">,</span> <span class="p">...,]{</span><span
class="nx">from</span><span class="o">:</span> <span class="nx">primaryAccount</span><span
class="p">,</span> <span class="nx">data</span><span class="o">:</span> <span class="nx">evmCode</span><span
class="p">},</span> <span class="kd">function</span><span class="p">(</span><span
class="nx">err</span><span class="p">,</span> <span class="nx">contract</span><span
class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span
class="nx">err</span> <span class="o">&amp;&amp;</span> <span class="nx">contract</span><span
class="p">.</span><span class="nx">address</span><span class="p">)</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span
class="p">(</span><span class="nx">contract</span><span class="p">.</span><span
class="nx">address</span><span class="p">);</span>
<span class="p">});</span>
</pre></div>
                            </div>
                          </div>
                          <div class="section" id="interacting-with-a-contract">
                            <span id="id7"></span>
                            <h4>Interacting with a contract<a class="headerlink"
                                href="#interacting-with-a-contract" title="Permalink to this headline">¶</a></h4>
                            <p>Interaction with a contract is typically done
                              using an abstraction layer such as the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/JavaScript-API#web3ethcontract">eth.contract()</a>
                              function which returns a javascript object with
                              all of the contract functions available as
                              callable functions in javascript.</p>
                            <p>The standard way to describe the available
                              functions of a contract is the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI">ABI
                                definition</a>. This object is an array which
                              describles the call signature and return values
                              for each available contract function.</p>
                            <div class="highlight-js">
                              <div class="highlight">
                                <pre><span class="kd">var</span> <span class="nx">Multiply7</span> <span
class="o">=</span> <span class="nx">eth</span><span class="p">.</span><span class="nx">contract</span><span
class="p">(</span><span class="nx">contract</span><span class="p">.</span><span
class="nx">info</span><span class="p">.</span><span class="nx">abiDefinition</span><span
class="p">);</span>
<span class="kd">var</span> <span class="nx">myMultiply7</span> <span class="o">=</span> <span
class="nx">Multiply7</span><span class="p">.</span><span class="nx">at</span><span
class="p">(</span><span class="nx">address</span><span class="p">);</span>
</pre></div>
                            </div>
                            <p>Now all the function calls specified in the ABI
                              are made available on the contract instance. You
                              can just call those methods on the contract
                              instance in one of two ways.</p>
                            <div class="highlight-js">
                              <div class="highlight">
                                <pre><span class="o">&gt;</span> <span class="nx">myMultiply7</span><span
class="p">.</span><span class="nx">multiply</span><span class="p">.</span><span
class="nx">sendTransaction</span><span class="p">(</span><span class="mi">3</span><span
class="p">,</span> <span class="p">{</span><span class="nx">from</span><span class="o">:</span> <span
class="nx">address</span><span class="p">})</span>
<span class="s2">"0x12345"</span>
<span class="o">&gt;</span> <span class="nx">myMultiply7</span><span class="p">.</span><span
class="nx">multiply</span><span class="p">.</span><span class="nx">call</span><span
class="p">(</span><span class="mi">3</span><span class="p">)</span>
<span class="mi">21</span>
</pre></div>
                            </div>
                            <p>When called using <code class="docutils literal"><span
                                  class="pre">sendTransaction</span></code> the
                              function call is executed via sending a
                              transaction. This will cost ether to send and the
                              call will be recorded forever on the blockchain.
                              The return value of calls made in this manner is
                              the hash of the transaction.</p>
                            <p>When called using <code class="docutils literal"><span
                                  class="pre">call</span></code> the function is
                              executed locally in the EVM and the return value
                              of the function is returned with the function.
                              Calls made in this manner are not recorded on the
                              blockchain and thus, cannot modify the internal
                              state of the contract. This manner of call is
                              referred to as a <strong>constant</strong>
                              function call. Calls made in this manner do not
                              cost any ether.</p>
                            <p>You should use <code class="docutils literal"><span
                                  class="pre">call</span></code> if you are
                              interested only in the return value and use <code
                                class="docutils literal"><span class="pre">sendTransaction</span></code>
                              if you only care about <em>side effects</em> on
                              the state of the contract.</p>
                            <p>In the example above, there are no side effects,
                              therefore <code class="docutils literal"><span class="pre">sendTransaction</span></code>
                              only burns gas and increases the entropy of the
                              universe.</p>
                          </div>
                          <div class="section" id="contract-metadata">
                            <h4>Contract metadata<a class="headerlink" href="#contract-metadata"
                                title="Permalink to this headline">¶</a></h4>
                            <p>In the previous sections we explained how you
                              create a contract on the blockchain. Now we will
                              deal with the rest of the compiler output, the <strong>contract
                                metadata</strong> or contract info.</p>
                            <p>When interacting with a contract you did not
                              create you might want documentation or to look at
                              the source code. Contract authors are encouraged
                              to make such information available by registering
                              it on the blockchain or through a third party
                              service, such as <a class="reference external" href="https://www.etherchain.org/contracts">EtherChain</a>.
                              The <code class="docutils literal"><span class="pre">admin</span></code>
                              API provides convenience methods to fetch this
                              bundle for any contract that chose to register.</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>// get the contract info for contract address to do manual verification
var info = admin.getContractInfo(address) // lookup, fetch, decode
var source = info.source;
var abiDef = info.abiDefinition
</pre></div>
                            </div>
                            <p>The underlying mechanism that makes this work is
                              is that:</p>
                            <ul class="simple">
                              <li>contract info is uploaded somewhere
                                identifiable by a <em>URI</em> which is
                                publicly accessible</li>
                              <li>anyone can find out what the <em>URI</em> is
                                only knowing the contracts address</li>
                            </ul>
                            <p>These requirements are achieved using a 2 step
                              blockchain registry. The first step registers the
                              contract code (hash) with a content hash in a
                              contract called <code class="docutils literal"><span
                                  class="pre">HashReg</span></code>. The second
                              step registers a url with the content hash in the
                              <code class="docutils literal"><span class="pre">UrlHint</span></code>
                              contract. These <a class="reference external" href="https://github.com/ethereum/go-ethereum/blob/develop/common/registrar/contracts.go">registry
                                contracts</a> were part of the Frontier release
                              and have carried on into Homestead.</p>
                            <p>By using this scheme, it is sufficient to know a
                              contract’s address to look up the url and fetch
                              the actual contract metadata info bundle.</p>
                            <p>So if you are a conscientious contract creator,
                              the steps are the following:</p>
                            <ol class="arabic simple">
                              <li>Deploy the contract itself to the blockchain</li>
                              <li>Get the contract info json file.</li>
                              <li>Deploy contract info json file to any url of
                                your choice</li>
                              <li>Register codehash -&gt;content hash -&gt; url</li>
                            </ol>
                            <p>The JS API makes this process very easy by
                              providing helpers. Call <code class="docutils literal"><span
                                  class="pre">admin.register</span></code> to
                              extract info from the contract, write out its json
                              serialisation in the given file, calculates the
                              content hash of the file and finally registers
                              this content hash to the contract’s code hash.
                              Once you deployed that file to any url, you can
                              use <code class="docutils literal"><span class="pre">admin.registerUrl</span></code>
                              to register the url with your content hash on the
                              blockchain as well. (Note that in case a fixed
                              content addressed model is used as document store,
                              the url-hint is no longer necessary.)</p>
                            <div class="highlight-js">
                              <div class="highlight">
                                <pre><span class="nx">source</span> <span class="o">=</span> <span
class="s2">"contract test { function multiply(uint a) returns(uint d) { return a * 7; } }"</span>
<span class="c1">// compile with solc</span>
<span class="nx">contract</span> <span class="o">=</span> <span class="nx">eth</span><span
class="p">.</span><span class="nx">compile</span><span class="p">.</span><span class="nx">solidity</span><span
class="p">(</span><span class="nx">source</span><span class="p">).</span><span class="nx">test</span>
<span class="c1">// create contract object</span>
<span class="kd">var</span> <span class="nx">MyContract</span> <span class="o">=</span> <span
class="nx">eth</span><span class="p">.</span><span class="nx">contract</span><span
class="p">(</span><span class="nx">contract</span><span class="p">.</span><span
class="nx">info</span><span class="p">.</span><span class="nx">abiDefinition</span><span
class="p">)</span>
<span class="c1">// extracts info from contract, save the json serialisation in the given file,</span>
<span class="nx">contenthash</span> <span class="o">=</span> <span class="nx">admin</span><span
class="p">.</span><span class="nx">saveInfo</span><span class="p">(</span><span
class="nx">contract</span><span class="p">.</span><span class="nx">info</span><span
class="p">,</span> <span class="s2">"~/dapps/shared/contracts/test/info.json"</span><span
class="p">)</span>
<span class="c1">// send off the contract to the blockchain</span>
<span class="nx">MyContract</span><span class="p">.</span><span class="k">new</span><span
class="p">({</span><span class="nx">from</span><span class="o">:</span> <span class="nx">primaryAccount</span><span
class="p">,</span> <span class="nx">data</span><span class="o">:</span> <span class="nx">contract</span><span
class="p">.</span><span class="nx">code</span><span class="p">},</span> <span class="kd">function</span><span
class="p">(</span><span class="nx">error</span><span class="p">,</span> <span class="nx">contract</span><span
class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="o">!</span><span
class="nx">error</span> <span class="o">&amp;&amp;</span> <span class="nx">contract</span><span
class="p">.</span><span class="nx">address</span><span class="p">)</span> <span
class="p">{</span>
    <span class="c1">// calculates the content hash and registers it with the code hash in `HashReg`</span>
    <span class="c1">// it uses address to send the transaction.</span>
    <span class="c1">// returns the content hash that we use to register a url</span>
    <span class="nx">admin</span><span class="p">.</span><span class="nx">register</span><span
class="p">(</span><span class="nx">primaryAccount</span><span class="p">,</span> <span
class="nx">contract</span><span class="p">.</span><span class="nx">address</span><span
class="p">,</span> <span class="nx">contenthash</span><span class="p">)</span>
    <span class="c1">// here you deploy ~/dapps/shared/contracts/test/info.json to a url</span>
    <span class="nx">admin</span><span class="p">.</span><span class="nx">registerUrl</span><span
class="p">(</span><span class="nx">primaryAccount</span><span class="p">,</span> <span
class="nx">hash</span><span class="p">,</span> <span class="nx">url</span><span
class="p">)</span>
  <span class="p">}</span>
<span class="p">});</span>
</pre></div>
                            </div>
                          </div>
                          <div class="section" id="testing-contracts-and-transactions">
                            <h4>Testing contracts and transactions<a class="headerlink"
                                href="#testing-contracts-and-transactions" title="Permalink to this headline">¶</a></h4>
                            <p>Often you need to resort to a low level strategy
                              of testing and debugging contracts and
                              transactions. This section introduces some debug
                              tools and practices you can use. In order to test
                              contracts and transactions without real-word
                              consequences, you best test it on a private
                              blockchain. This can be achieved with configuring
                              an alternative network id (select a unique
                              integer) and/or disable peers. It is recommended
                              practice that for testing you use an alternative
                              data directory and ports so that you never even
                              accidentally clash with your live running node
                              (assuming that runs using the defaults. Starting
                              your <code class="docutils literal"><span class="pre">geth</span></code>
                              with in VM debug mode with profiling and highest
                              logging verbosity level is recommended:</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>geth --datadir ~/dapps/testing/00/ --port 30310 --rpcport 8110 --networkid 4567890 --nodiscover --maxpeers 0 --vmdebug --verbosity 6 --pprof --pprofport 6110 console 2&gt;&gt; ~/dapp/testint/00/00.log
</pre></div>
                            </div>
                            <p>Before you can submit any transactions, you need
                              set up your private test chain. See <a class="reference internal"
                                href="index.html#test-networks"><span>Test
                                  Networks</span></a>.</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>// create account. will prompt for password
personal.newAccount();
// name your primary account, will often use it
primary = eth.accounts[0];
// check your balance (denominated in ether)
balance = web3.fromWei(eth.getBalance(primary), "ether");
</pre></div>
                            </div>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>// assume an existing unlocked primary account
primary = eth.accounts[0];

// mine 10 blocks to generate ether

// starting miner
miner.start(4);
// sleep for 10 blocks (this can take quite some time).
admin.sleepBlocks(10);
// then stop mining (just not to burn heat in vain)
miner.stop();
balance = web3.fromWei(eth.getBalance(primary), "ether");
</pre></div>
                            </div>
                            <p>After you create transactions, you can force
                              process them with the following lines:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre><span class="n">miner</span><span class="o">.</span><span
class="n">start</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="n">admin</span><span class="o">.</span><span class="n">sleepBlocks</span><span
class="p">(</span><span class="mi">1</span><span class="p">);</span>
<span class="n">miner</span><span class="o">.</span><span class="n">stop</span><span
class="p">();</span>
</pre></div>
                            </div>
                            <p>You can check your pending transactions with:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>// shows transaction pool
txpool.status
// number of pending txs
eth.getBlockTransactionCount("pending");
// print all pending txs
eth.getBlock("pending", true).transactions
</pre></div>
                            </div>
                            <p>If you submitted contract creation transaction,
                              you can check if the desired code actually got
                              inserted in the current blockchain:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>txhash = eth.sendTansaction({from:primary, data: code})
//... mining
contractaddress = eth.getTransactionReceipt(txhash);
eth.getCode(contractaddress)
</pre></div>
                            </div>
                          </div>
                        </div>
                        <span id="document-contracts-and-transactions/accessing-contracts-and-transactions"></span>
                        <div class="section" id="accessing-contracts-and-transactions">
                          <span id="id1"></span>
                          <h3>Accessing Contracts and Transactions<a class="headerlink"
                              href="#accessing-contracts-and-transactions" title="Permalink to this headline">¶</a></h3>
                          <div class="section" id="rpc">
                            <h4>RPC<a class="headerlink" href="#rpc" title="Permalink to this headline">¶</a></h4>
                            <p>In previous sections we have seen how contracts
                              can be written, deployed and interacted with. Now
                              it’s time to dive in the details of communicating
                              with the Ethereum network and smart contracts.</p>
                            <p>An Ethereum node offers a <a class="reference external"
                                href="https://wikipedia.org/wiki/Remote_procedure_call">RPC</a>
                              interface. This interface gives Ðapp’s access to
                              the Ethereum blockchain and functionality that the
                              node provides, such as compiling smart contract
                              code. It uses a subset of the <a class="reference external"
                                href="http://www.jsonrpc.org/specification">JSON-RPC
                                2.0</a> specification (no support for
                              notifications or named parameters) as
                              serialisation protocol and is available over HTTP
                              and IPC (unix domain sockets on linux/OSX and
                              named pipe’s on Windows).</p>
                            <p>If you are not interested in the details but are
                              looking for an easy to use javascript library you
                              can skip the following sections and continue with
                              <a class="reference internal" href="#using-web3-js"><span>Using
                                  Web3</span></a>.</p>
                          </div>
                          <div class="section" id="conventions">
                            <h4>Conventions<a class="headerlink" href="#conventions"
                                title="Permalink to this headline">¶</a></h4>
                            <p>The RPC interface uses a couple of conventions
                              that are not part of the JSON-RPC 2.0
                              specification:</p>
                            <ul class="simple">
                              <li>Numbers are hex encoded. This decision was
                                made because some languages have no or limited
                                support for working with extremly large numbers.
                                To prevent these type of errors numbers are hex
                                encoded and it is up to the deverloper to parse
                                these numbers and handle them appropriately. See
                                the <a class="reference external" href="https://github.com/ethereum/wiki/wiki/JSON-RPC#output-hex-values">hex
                                  encoding section</a> on the wiki for examples.</li>
                              <li>Default block number, several RPC methods
                                accept a block number. In some cases it’s not
                                possible to give a block number or not very
                                convenient. For these cases the default block
                                number can be one of these strings [“earliest”,
                                “latest”, “pending”]. See the <a class="reference external"
                                  href="https://github.com/ethereum/wiki/wiki/JSON-RPC#the-default-block-parameter">wiki
                                  page</a> for a list of RPC methods that use
                                the default block parameters.</li>
                            </ul>
                          </div>
                          <div class="section" id="deploy-contract">
                            <h4>Deploy contract<a class="headerlink" href="#deploy-contract"
                                title="Permalink to this headline">¶</a></h4>
                            <p>We will go through the different steps to deploy
                              the following contract using only the RPC
                              interface.</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>contract Multiply7 {
   event Print(uint);
   function multiply(uint input) returns (uint) {
      Print(input * 7);
      return input * 7;
   }
}
</pre></div>
                            </div>
                            <p>The first thing to do is make sure the HTTP RPC
                              interface is enabled. This means for geth we
                              supply the <code class="docutils literal"><span class="pre">--rpc</span></code>
                              flag on startup and for eth the <code class="docutils literal"><span
                                  class="pre">-j</span></code> flag. In this
                              example we use the geth node on a private
                              development chain. Using this approach we don’t
                              need ether on the real network.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; geth --rpc --dev --mine --minerthreads 1 --unlock 0 console 2&gt;&gt;geth.log
</pre></div>
                            </div>
                            <p>This will start the HTTP RPC interface on <code
                                class="docutils literal"><span class="pre">http://localhost:8545</span></code>.</p>
                            <div class="admonition note">
                              <p class="first admonition-title">Note</p>
                              <p class="last">geth supports <a class="reference external"
                                  href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">CORS</a>,
                                see the <code class="docutils literal"><span class="pre">--rpccorsdomain</span></code>
                                flag for more information.</p>
                            </div>
                            <p>We can verify that the interface is running by
                              retrieving the coinbase address and balance using
                              <a class="reference external" href="https://curl.haxx.se/download.html">curl</a>.
                              Please note that data in these examples will
                              differ on your local node. If you want to try
                              these command replace the request params
                              accordingly.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method":"eth_coinbase", "id":1}' localhost:8545
{"id":1,"jsonrpc":"2.0","result":["0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a"]}

&gt; curl --data '{"jsonrpc":"2.0","method":"eth_getBalance", "params": ["0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a"], "id":2}' localhost:8545
{"id":2,"jsonrpc":"2.0","result":"0x1639e49bba16280000"}
</pre></div>
                            </div>
                            <p>Remember when we said that numbers are hex
                              encoded? In this case the balance is returned in
                              wei as a hex string. If we want to have the
                              balance in ether as a number we can use web3 from
                              the geth console.</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>&gt; web3.fromWei("0x1639e49bba16280000", "ether")
"410"
</pre></div>
                            </div>
                            <p>Now that we have some ether on our private
                              development chain we can deploy the contract. The
                              first step is to verify that the solidity compiler
                              is available. We can retrieve available compilers
                              using the <code class="docutils literal"><span class="pre">eth_getCompilers</span></code>
                              RPC method.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method": "eth_getCompilers", "id": 3}' localhost:8545
{"id":3,"jsonrpc":"2.0","result":["Solidity"]}
</pre></div>
                            </div>
                            <p>We can see that the solidity compiler is
                              available. If it’s not available follow <a class="reference external"
                                href="http://solidity.readthedocs.org/en/latest/installing-solidity.html">these</a>
                              instructions.</p>
                            <p>The next step is to compile the Multiply7
                              contract to byte code that can be send to the EVM.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method": "eth_compileSolidity", "params": ["contract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } }"], "id": 4}' localhost:8545
{"id":4,"jsonrpc":"2.0","result":{"Multiply7":{"code":"0x6060604052605f8060106000396000f3606060405260e060020a6000350463c6888fa18114601a575b005b60586004356007810260609081526000907f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da90602090a15060070290565b5060206060f3","info":{"source":"contract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } }","language":"Solidity","languageVersion":"0.2.2","compilerVersion":"0.2.2","compilerOptions":"--bin --abi --userdoc --devdoc --add-std --optimize -o /tmp/solc205309041","abiDefinition":[{"constant":false,"inputs":[{"name":"input","type":"uint256"}],"name":"multiply","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"","type":"uint256"}],"name":"Print","type":"event"}],"userDoc":{"methods":{}},"developerDoc":{"methods":{}}}}}}
</pre></div>
                            </div>
                            <p>Now that we have the compiled code we need to
                              determine how much gas it costs to deploy it. The
                              RPC interface has an <code class="docutils literal"><span
                                  class="pre">eth_estimateGas</span></code>
                              method that will give us an estimate.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method": "eth_estimateGas", "params": [{"from": "0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a", "data": "0x6060604052605f8060106000396000f3606060405260e060020a6000350463c6888fa18114601a575b005b60586004356007810260609081526000907f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da90602090a15060070290565b5060206060f3"}], "id": 5}' localhost:8545
{"id":5,"jsonrpc":"2.0","result":"0xb8a9"}
</pre></div>
                            </div>
                            <p>And finally deploy the contract.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method": "eth_sendTransaction", "params": [{"from": "0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a", "gas": "0xb8a9", "data": "0x6060604052605f8060106000396000f3606060405260e060020a6000350463c6888fa18114601a575b005b60586004356007810260609081526000907f24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da90602090a15060070290565b5060206060f3"}], "id": 6}' localhost:8545
{"id":6,"jsonrpc":"2.0","result":"0x3a90b5face52c4c5f30d507ccf51b0209ca628c6824d0532bcd6283df7c08a7c"}
</pre></div>
                            </div>
                            <p>The transaction is accepted by the node and a
                              transaction hash is returned. We can use this hash
                              to track the transaction.</p>
                            <p>The next step is to determine the address where
                              our contract is deployed. Each executed
                              transaction will create a receipt. This receipt
                              contains various information about the transaction
                              such as in which block the transaction was
                              included and how much gas was used by the EVM. If
                              a transaction creates a contract it will also
                              contain the contract address. We can retrieve the
                              receipt with the <code class="docutils literal"><span
                                  class="pre">eth_getTransactionReceipt</span></code>
                              RPC method.</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method": "eth_getTransactionReceipt", "params": ["0x3a90b5face52c4c5f30d507ccf51b0209ca628c6824d0532bcd6283df7c08a7c"], "id": 7}' localhost:8545
{"id":7,"jsonrpc":"2.0","result":{"transactionHash":"0x3a90b5face52c4c5f30d507ccf51b0209ca628c6824d0532bcd6283df7c08a7c","transactionIndex":"0x0","blockNumber":"0x4c","blockHash":"0xe286656e478a1b99030e318d0f5c3a61a644f25e63deaa8be52e80da1e7b0c47","cumulativeGasUsed":"0xb8a9","gasUsed":"0xb8a9","contractAddress":"0x6ff93b4b46b41c0c3c9baee01c255d3b4675963d","logs":[]}}
</pre></div>
                            </div>
                            <p>We can see that our contract was created on <code
                                class="docutils literal"><span class="pre">0x6ff93b4b46b41c0c3c9baee01c255d3b4675963d</span></code>.
                              If you got null instead of a receipt the
                              transaction has not been included in a block yet.
                              Wait for a moment and check if your miner is
                              running and retry it.</p>
                          </div>
                          <div class="section" id="interacting-with-smart-contracts">
                            <h4>Interacting with smart contracts<a class="headerlink"
                                href="#interacting-with-smart-contracts" title="Permalink to this headline">¶</a></h4>
                            <p>Now that our contract is deployed we can interact
                              with it. There are 2 methods for this, sending a
                              transaction or <a class="reference internal" href="index.html#interacting-with-a-contract"><span>using
                                  call as previously explained</span></a>. In
                              this example we will be sending a transaction to
                              the multiply method of the contract.</p>
                            <p>If we look at the documentation for the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sendtransaction">eth_sendTransaction</a>
                              we can see that we need to supply several
                              arguments. In our case we need to specify the <code
                                class="docutils literal"><span class="pre">from</span></code>,
                              <code class="docutils literal"><span class="pre">to</span></code>
                              and <code class="docutils literal"><span class="pre">data</span></code>
                              arguments. <code class="docutils literal"><span class="pre">From</span></code>
                              is the public address of our account and <code class="docutils literal"><span
                                  class="pre">to</span></code> the contract
                              address. The <code class="docutils literal"><span
                                  class="pre">data</span></code> argument is a
                              bit harder. It contains a payload that defines
                              which method must be called and with which
                              arguments. This is were the ABI comes into play.
                              The ABI defines how to define and encode data for
                              the EVM. You can read <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI">all
                                the details about the ABI here</a>.</p>
                            <p>The bytes of the payload is the function selector
                              and defines which method is called. This is done
                              by taking the first 4 bytes from the Keccak hash
                              over the function name and its argument types and
                              hex encode it. The <cite>multiply</cite> function
                              accepts an <cite>uint</cite> which is an <a class="reference external"
                                href="http://solidity.readthedocs.org/en/latest/types.html#integers">alias</a>
                              for <cite>uint256</cite>. This leaves us with:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>&gt; web3.sha3("multiply(uint256)").substring(0, 8)
"c6888fa1"
</pre></div>
                            </div>
                            <p>See for details <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI#function-selector">this
                                page</a>.</p>
                            <p>The next step is to encode the arguments. We only
                              have one uint256, lets assume we supply the value
                              6. The ABI has a <a class="reference external" href="https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI#argument-encoding">section</a>
                              which specifies how to encode uint256 types.</p>
                            <blockquote>
                              <div><cite>int&lt;M&gt;: enc(X) is the big-endian
                                  two’s complement encoding of X, padded on the
                                  higher-oder (left) side with 0xff for negative
                                  X and with zero bytes for positive X such that
                                  the length is a multiple of 32 bytes.</cite></div>
                            </blockquote>
                            <p>This encodes to <code class="docutils literal"><span
                                  class="pre">0000000000000000000000000000000000000000000000000000000000000006</span></code>.</p>
                            <p>Combining the function selector and the encoded
                              argument our <code class="docutils literal"><span
                                  class="pre">data</span></code> will be <code
                                class="docutils literal"><span class="pre">0xc6888fa10000000000000000000000000000000000000000000000000000000000000006</span></code>.</p>
                            <p>Lets try it:</p>
                            <div class="code bash highlight-python">
                              <div class="highlight">
                                <pre>&gt; curl --data '{"jsonrpc":"2.0","method": "eth_sendTransaction", "params": [{"from": "0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a", "to": "0x6ff93b4b46b41c0c3c9baee01c255d3b4675963d", "data": "0xc6888fa10000000000000000000000000000000000000000000000000000000000000006"}], "id": 8}' localhost:8545
{"id":8,"jsonrpc":"2.0","result":"0x759cf065cbc22e9d779748dc53763854e5376eea07409e590c990eafc0869d74"}
</pre></div>
                            </div>
                            <p>Since we sent a transaction we got the
                              transaction hash returned. If we retrieve the
                              receipt we can see something new:</p>
                            <div class="highlight-js">
                              <div class="highlight">
                                <pre><span class="p">{</span>
   <span class="nx">blockHash</span><span class="o">:</span> <span class="s2">"0xbf0a347307b8c63dd8c1d3d7cbdc0b463e6e7c9bf0a35be40393588242f01d55"</span><span
class="p">,</span>
   <span class="nx">blockNumber</span><span class="o">:</span> <span class="mi">268</span><span
class="p">,</span>
   <span class="nx">contractAddress</span><span class="o">:</span> <span class="kc">null</span><span
class="p">,</span>
   <span class="nx">cumulativeGasUsed</span><span class="o">:</span> <span class="mi">22631</span><span
class="p">,</span>
   <span class="nx">gasUsed</span><span class="o">:</span> <span class="mi">22631</span><span
class="p">,</span>
<span class="hll">   <span class="nx">logs</span><span class="o">:</span> <span
class="p">[{</span>
</span>      <span class="nx">address</span><span class="o">:</span> <span class="s2">"0x6ff93b4b46b41c0c3c9baee01c255d3b4675963d"</span><span
class="p">,</span>
      <span class="nx">blockHash</span><span class="o">:</span> <span class="s2">"0xbf0a347307b8c63dd8c1d3d7cbdc0b463e6e7c9bf0a35be40393588242f01d55"</span><span
class="p">,</span>
      <span class="nx">blockNumber</span><span class="o">:</span> <span class="mi">268</span><span
class="p">,</span>
      <span class="nx">data</span><span class="o">:</span> <span class="s2">"0x000000000000000000000000000000000000000000000000000000000000002a"</span><span
class="p">,</span>
      <span class="nx">logIndex</span><span class="o">:</span> <span class="mi">0</span><span
class="p">,</span>
      <span class="nx">topics</span><span class="o">:</span> <span class="p">[</span><span
class="s2">"0x24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da"</span><span
class="p">],</span>
      <span class="nx">transactionHash</span><span class="o">:</span> <span class="s2">"0x759cf065cbc22e9d779748dc53763854e5376eea07409e590c990eafc0869d74"</span><span
class="p">,</span>
      <span class="nx">transactionIndex</span><span class="o">:</span> <span class="mi">0</span>
  <span class="p">}],</span>
  <span class="nx">transactionHash</span><span class="o">:</span> <span class="s2">"0x759cf065cbc22e9d779748dc53763854e5376eea07409e590c990eafc0869d74"</span><span
class="p">,</span>
  <span class="nx">transactionIndex</span><span class="o">:</span> <span class="mi">0</span>
<span class="p">}</span>
</pre></div>
                            </div>
                            <p>The receipt contains a log. This log was
                              generated by the EVM on transaction execution and
                              included in the receipt. If we look at the multipy
                              function we can see that the Print event was
                              raised with the input times 7. Since the argument
                              for the Print event was a uint256 we can decode it
                              according to the ABI rules which will leave us
                              with the expected decimal 42. Apart from the data
                              it is worth noting that topics can be used to
                              determine which event created the log:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>&gt; web3.sha3("Print(uint256)")
"24abdb5865df5079dcc5ac590ff6f01d5c16edbc5fab4e195d9febd1114503da"
</pre></div>
                            </div>
                            <p>You can read more about events, topics and
                              indexing in the <a class="reference external" href="http://solidity.readthedocs.org/en/latest/contracts.html#events">Solidity
                                tutorial</a>.</p>
                            <p>This was just a brief introduction into some of
                              the most common tasks. See for a full list of
                              available RPC methods the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/JSON-RPC#json-rpc-methods">RPC
                                wiki page</a>.</p>
                          </div>
                          <div class="section" id="web3-js"> <span id="using-web3-js"></span>
                            <h4>Web3.js<a class="headerlink" href="#web3-js" title="Permalink to this headline">¶</a></h4>
                            <p>As we have seen in the previous example using the
                              JSON-RPC interface can be quite tedious and
                              error-prone, especially when we have to deal with
                              the ABI. Web3.js is a javascript library that
                              works on top of the Ethereum RPC interface. Its
                              goal is to provide a more user friendly interface
                              and reducing the chance for errors.</p>
                            <p>Deploying the Multiply7 contract using web3 would
                              look like:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>var source = 'contract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } }';
var compiled = web3.eth.compile.solidity(source);
var code = compiled.Multiply7.code;
var abi = compiled.Multiply7.info.abiDefinition;

web3.eth.contract(abi).new({from: "0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a", data: code}, function (err, contract) {
   if (!err &amp;&amp; contract.address)
      console.log("deployed on:", contract.address);
   }
);

deployed on: 0x0ab60714033847ad7f0677cc7514db48313976e2
</pre></div>
                            </div>
                            <p>Load a deployed contract and send a transaction:</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>var source = 'contract Multiply7 { event Print(uint); function multiply(uint input) returns (uint) { Print(input * 7); return input * 7; } }';
var compiled = web3.eth.compile.solidity(source);
var Multiply7 = web3.eth.contract(compiled.Multiply7.info.abiDefinition);
var multi = Multiply7.at("0x0ab60714033847ad7f0677cc7514db48313976e2")
multi.multiply.sendTransaction(6, {from: "0xeb85a5557e5bdc18ee1934a89d8bb402398ee26a"})
</pre></div>
                            </div>
                            <p>Register a callback which is called when the <code
                                class="docutils literal"><span class="pre">Print</span></code>
                              event created a log.</p>
                            <div class="code js highlight-python">
                              <div class="highlight">
                                <pre>multi.Print(function(err, data) { console.log(JSON.stringify(data)) })
{"address":"0x0ab60714033847ad7f0677cc7514db48313976e2","args": {"":"21"},"blockHash":"0x259c7dc07c99eed9dd884dcaf3e00a81b2a1c83df2d9855ce14c464b59f0c8b3","blockNumber":539,"event":"Print","logIndex":0, "transactionHash":"0x5c115aaa5418118457e96d3c44a3b66fe9f2bead630d79455d0ecd832dc88d48","transactionIndex":0}
</pre></div>
                            </div>
                            <p>See for more information the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/JavaScript-API">web3.js</a>
                              wiki page.</p>
                          </div>
                          <div class="section" id="console">
                            <h4>Console<a class="headerlink" href="#console" title="Permalink to this headline">¶</a></h4>
                            <p>The geth <a class="reference external" href="https://github.com/ethereum/go-ethereum/wiki/JavaScript-Console">console</a>
                              offers a command line interface with a javascript
                              runtime. It can connect to a local or remote geth
                              or eth node. It will load the web3.js library that
                              users can use. This allows users to deploy and
                              interact with smart contract from the console
                              using web3.js. In fact the examples in the <a class="reference internal"
                                href="#using-web3-js"><span>Web3.js</span></a>
                              section can by copied into the console.</p>
                          </div>
                          <div class="section" id="viewing-contracts-and-transactions">
                            <h4>Viewing Contracts and Transactions<a class="headerlink"
                                href="#viewing-contracts-and-transactions" title="Permalink to this headline">¶</a></h4>
                            <p>There are several online blockchain explorers
                              available that will allow you to inspect the
                              Ethereum blockchain. See for a list: <a class="reference internal"
                                href="#blockchain-explorers"><span>Blockchain
                                  explorers</span></a>.</p>
                            <div class="section" id="hosted-blockchain-explorers">
                              <span id="blockchain-explorers"></span>
                              <h5>Hosted blockchain explorers<a class="headerlink"
                                  href="#hosted-blockchain-explorers" title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><a class="reference external" href="https://www.etherchain.org/">EtherChain</a></li>
                                <li><a class="reference external" href="https://live.ether.camp/">EtherCamp</a></li>
                                <li><a class="reference external" href="http://etherscan.io/">EtherScan</a>
                                  (and for <a class="reference external" href="http://testnet.etherscan.io">Testnet</a>)</li>
                              </ul>
                            </div>
                            <div class="section" id="other-resources">
                              <h5>Other Resources<a class="headerlink" href="#other-resources"
                                  title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><a class="reference external" href="http://ethernodes.org/">EtherNodes</a>
                                  - Geographic distribution of nodes and split
                                  by client</li>
                                <li><a class="reference external" href="http://www.etherlisten.com">EtherListen</a>
                                  - Realtime Ethereum transaction visualizer and
                                  audializer</li>
                              </ul>
                            </div>
                          </div>
                        </div>
                        <span id="document-contracts-and-transactions/mix"></span>
                        <div class="section" id="mix"> <span id="sec-mix"></span>
                          <h3>Mix<a class="headerlink" href="#mix" title="Permalink to this headline">¶</a></h3>
                          <p>The IDE Mix is intended to help you as a developer
                            to create, debug and deploy contracts and dapps
                            (both contracts backend and frontend).</p>
                          <p><strong>WARNING - There are numerous reports of
                              crash-at-boot issues for Mix on OS X. The issue is
                              a</strong> <a class="reference external" href="https://en.wikipedia.org/wiki/Heisenbug">Heisenbug</a>
                            <strong>which we have been chasing for a month or
                              two. The best workaround we have for right now is
                              to use the Debug configuration, like so:</strong></p>
                          <div class="highlight-python">
                            <div class="highlight">
                              <pre>cmake -DCMAKE_BUILD_TYPE=Debug ..
</pre></div>
                          </div>
                          <p><strong>WARNING - A replacement for Mix called</strong>
                            <a class="reference external" href="https://blog.ethereum.org/2016/05/04/c-dev-update-announcing-remix/">Remix</a>
                            <strong>is being worked on, so if you are
                              experiencing issues with Mix, you might be better
                              to look for alternatives until Remix is more
                              mature.</strong></p>
                          <p>Start by creating a new project that consists of</p>
                          <ul class="simple">
                            <li>contracts</li>
                            <li>html files</li>
                            <li>JavaScript files</li>
                            <li>style files</li>
                            <li>image files</li>
                          </ul>
                          <div class="toctree-wrapper compound"> <span id="document-contracts-and-transactions/mix/project-editor"></span>
                            <div class="section" id="project-editor"> <span id="sec-project-editor"></span>
                              <h4>Project Editor<a class="headerlink" href="#project-editor"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>You can use projects to manage the creation and
                                testing of a dapp. The project will contain data
                                related to both backend and frontend as well as
                                the data related to your scenarios (blockchain
                                interaction) for debugging and testing. The
                                related files will be created and saved
                                automatically in the project directory.</p>
                              <div class="section" id="creating-a-new-project">
                                <h5>Creating a new project<a class="headerlink"
                                    href="#creating-a-new-project" title="Permalink to this headline">¶</a></h5>
                                <p>The development of a dapp start with the
                                  creation of a new project. Create a new
                                  project in the “edit” menu. Enter the project
                                  name, e.g. “Ratings” and select a path for the
                                  project file.</p>
                              </div>
                              <div class="section" id="editing-backend-contract-file">
                                <h5>Editing backend contract file<a class="headerlink"
                                    href="#editing-backend-contract-file" title="Permalink to this headline">¶</a></h5>
                                <p>By default, a new project contains a contract
                                  “Contract” for backend development on the
                                  blockchain using the Solidity language and the
                                  “index.html” for the frontend. Check the
                                  Solidity tutorial for references.</p>
                                <p>Edit the empty default contract “Contract”,
                                  e.g.</p>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre>contract Rating {
        function setRating(bytes32 _key, uint256 _value) {
                ratings[_key] = _value;
        }
        mapping (bytes32 =&gt; uint256) public ratings;
}
</pre></div>
                                </div>
                                <p>Check the Solidity tutorial for help getting
                                  started with the solidity programming
                                  language.</p>
                                <p>Save changes</p>
                                <div class="section" id="editing-frontend-html-files">
                                  <h6>Editing frontend html files<a class="headerlink"
                                      href="#editing-frontend-html-files" title="Permalink to this headline">¶</a></h6>
                                  <p>Select default index.html file and enter
                                    the following code</p>
                                  <div class="highlight-python">
                                    <div class="highlight">
                                      <pre> .... &lt;script&gt;

function getRating() {
  var param = document.getElementById(“query”).value;
  var res = contracts[“Rating”].contract.ratings(param);
  document.getElementById(“queryres”).innerText = res;
}

function setRating() {
        var key = document.getElementById("key").value;
        var value = parseInt(document.getElementById("value").value);
        var res = contracts["Rating"].contract.setRating(key, value);
}

&lt;/script&gt;
    &lt;/head&gt;
    &lt;body bgcolor="#E6E6FA"&gt;
        &lt;h1&gt;Ratings&lt;/h1&gt;
        &lt;div&gt;
            Store:
            &lt;input type="string" id="key"&gt;
            &lt;input type="number" id="value"&gt;
            &lt;button onclick="setRating()"&gt;Save&lt;/button&gt;
        &lt;/div&gt;
        &lt;div&gt;
            Query:
            &lt;input type="string" id="query" onkeyup='getRating()'&gt;
            &lt;div id="queryres"&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/body&gt;
    &lt;/html&gt;
</pre></div>
                                  </div>
                                  <p>Then it is possible to add many contract
                                    files as well as many HTML, JavaScript, css
                                    files</p>
                                </div>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/mix/scenario-editor"></span>
                            <div class="section" id="scenarios-editor"> <span id="sec-scenario-editor"></span>
                              <h4>Scenarios Editor<a class="headerlink" href="#scenarios-editor"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Scenarios can be used to test and debug
                                contracts.</p>
                              <p>A scenario is effectively a local blockchain
                                where blocks can be mined without PoW –
                                otherwise testing would be quite slow ;).</p>
                              <p>A scenario consists of a sequence of
                                transactions. Usually, a scenario would start
                                with the contract creation scenarios of the
                                dapp. In addition, further transactions can be
                                added to test and debug the dapp. Scenarios can
                                be modified, i.e. transactions can be removed.
                                Note that a scenario needs to be rebuilt for
                                modifications to become effective. Further
                                testing can be done using local JS calls via the
                                JS API.</p>
                              <p>In case it’s not open, access the scenario and
                                debugger pane by pressing F7 or Windows &gt;
                                Show right or the debug button in the upper
                                right corner of the main window.</p>
                              <div class="section" id="creating-and-setting-up-a-new-scenario">
                                <h5>Creating and setting up a new scenario<a class="headerlink"
                                    href="#creating-and-setting-up-a-new-scenario"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>When you launch Mix for the first time, an
                                  empty scenario, i.e. not containing any
                                  transactions, will be created. Add an account
                                  named “MyAccount” and set it’s initial balance
                                  to 1 ether. Click OK. Rename the scenario to
                                  “Deploy”.</p>
                              </div>
                              <div class="section" id="modifying-initial-ether-balance-of-an-account">
                                <h5>Modifying initial ether balance of an
                                  account<a class="headerlink" href="#modifying-initial-ether-balance-of-an-account"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>Actually, we want to do a lot of tests Edit
                                  the Genesis block parameters and set your
                                  initial account balance to 1000 ether. Rebuild
                                  the scenario for the change to become
                                  effective.</p>
                              </div>
                              <div class="section" id="rebuilding-a-scenario">
                                <h5>Rebuilding a scenario<a class="headerlink" href="#rebuilding-a-scenario"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>Each time a transaction is modified or an
                                  account added, the scenario has to be rebuilt
                                  for modifications to become effective. Note
                                  that if a scenario is rebuilt the web frontend
                                  (local storage) may also need to be reset
                                  (this is not done automatically be Mix).</p>
                              </div>
                              <div class="section" id="creating-a-transaction">
                                <h5>Creating a transaction<a class="headerlink"
                                    href="#creating-a-transaction" title="Permalink to this headline">¶</a></h5>
                                <p>Let’s get some ether sent to Bob. Create
                                  another account named “Bob” with zero ether
                                  balance. Create a new transaction in the
                                  scenario pane. Click “Add Tx…” and send 300
                                  ether to Bob. Add a block.</p>
                              </div>
                              <div class="section" id="altering-and-reusing-scenarios">
                                <h5>Altering and reusing scenarios<a class="headerlink"
                                    href="#altering-and-reusing-scenarios" title="Permalink to this headline">¶</a></h5>
                                <p>Create a new scenario or start from a
                                  scenario with several transactions that you
                                  duplicate first</p>
                                <p>Rename the scenario</p>
                                <p>Modify scenario by specifying transactions
                                  that shall be removed</p>
                                <p>Rebuild the scenario</p>
                              </div>
                              <div class="section" id="display-calls">
                                <h5>Display calls<a class="headerlink" href="#display-calls"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>A contract call is a function invokation.
                                  This is not a transaction as a contract call
                                  cannot change the state. A contract call is
                                  not part of the blockchain but for practical
                                  and ux design reason, it is convenient to
                                  display calls at the same functional level as
                                  a transaction. The JS icon warn you that this
                                  is not a transaction but a call. To show/hide
                                  call, click on the menu Scenario -&gt; Display
                                  calls.</p>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/mix/state-viewer"></span>
                            <div class="section" id="state-viewer"> <span id="sec-state-viewer"></span>
                              <h4>State Viewer<a class="headerlink" href="#state-viewer"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>This panel is located below the block chain
                                panel, in the scenario view. Once the blockchain
                                has been run, this panel shows the state of the
                                blockchain.</p>
                              <p>By state we mean all accounts balance
                                (including contract and normal account), and the
                                storage (global variable of all deployed
                                contract). The content of this panel is not
                                static, it depends on the selected transaction
                                on the blockchain panel. The state shown here is
                                the state resulting of the execution of the
                                selected transaction.</p>
                              <p><img alt="image0" src="images/state_mix.png"></p>
                              <p>In that case, 2 contracts are deployed, the
                                selected transaction (deployment of testCtr) is
                                the last one. so the state view shows the
                                storage of both TestCtr and BasicContract.</p>
                            </div>
                            <span id="document-contracts-and-transactions/mix/transaction-explorer"></span>
                            <div class="section" id="transaction-explorer"> <span
                                id="sec-transaction-explorer"></span>
                              <h4>Transaction Explorer<a class="headerlink" href="#transaction-explorer"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Using the transaction pane</p>
                              <p>The transaction pane enables you to explore
                                transactions receipts, including</p>
                              <blockquote>
                                <div>
                                  <ul class="simple">
                                    <li>Input parameters</li>
                                    <li>Return parameters</li>
                                    <li>Event logs</li>
                                  </ul>
                                </div>
                              </blockquote>
                              <p>To display the transaction explorer, click on
                                the down triangle icon which is on the right of
                                each transaction, this will expand transaction
                                details:</p>
                              <p><img alt="image0" src="images/mix_bc.png"></p>
                              <p>Then you can either copy the content of this
                                transaction in the clipboard, Edit the current
                                transaction (you will have to rerun the
                                blockchain then), or debug the transaction.</p>
                            </div>
                            <span id="document-contracts-and-transactions/mix/javascript-console"></span>
                            <div class="section" id="javascript-console"> <span
                                id="sec-javascript-console"></span>
                              <h4>JavaScript console<a class="headerlink" href="#javascript-console"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Mix exposes the following objects into the
                                global window context</p>
                              <p>web3 - Ethereum JavaScript API</p>
                              <p>contracts: A collection of contract objects.
                                keys represents contracts name. values are is an
                                objects containing the following properties:</p>
                              <blockquote>
                                <div>
                                  <ul class="simple">
                                    <li>contract: contract object instance
                                      (created as in web3.eth.contract)</li>
                                    <li>address: contract address from the last
                                      deployed state (see below)</li>
                                    <li>interface: contract ABI</li>
                                  </ul>
                                </div>
                              </blockquote>
                              <p>Check the JavaScript API Reference for further
                                information.</p>
                              <div class="section" id="using-the-js-console-to-add-transactions-and-local-calls">
                                <h5>Using the JS console to add transactions and
                                  local calls<a class="headerlink" href="#using-the-js-console-to-add-transactions-and-local-calls"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>In case the name of the contract is “Sample”
                                  with a function named “set”, it is possible to
                                  make a transaction to call “set” by writing:</p>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre><span class="n">contracts</span><span class="p">[</span><span
class="s">"Sample"</span><span class="p">]</span><span class="o">.</span><span class="n">contract</span><span
class="o">.</span><span class="n">set</span><span class="p">(</span><span class="mi">14</span><span
class="p">)</span>
</pre></div>
                                </div>
                                <p>If a call can be made this will be done by
                                  writing:</p>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre><span class="n">contracts</span><span class="p">[</span><span
class="s">"Sample"</span><span class="p">]</span><span class="o">.</span><span class="n">contract</span><span
class="o">.</span><span class="n">get</span><span class="o">.</span><span class="n">call</span><span
class="p">()</span>
</pre></div>
                                </div>
                                <div class="line-block">
                                  <div class="line">It is also possible to use
                                    all properties and functions of the web3
                                    object:</div>
                                  <div class="line"><a class="reference external"
                                      href="https://github.com/ethereum/wiki/wiki/JavaScript-API">https://github.com/ethereum/wiki/wiki/JavaScript-API</a></div>
                                </div>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/mix/transaction-debugger"></span>
                            <div class="section" id="transaction-debugger"> <span
                                id="sec-transaction-debugger"></span>
                              <h4>Transaction debugger<a class="headerlink" href="#transaction-debugger"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Mix supports both Solidity and assembly level
                                contract code debugging. You can toggle between
                                the two modes to retrieve the relevant
                                information you need.</p>
                              <p>At any execution point the following
                                information is available:</p>
                              <p>VM stack – See Yellow Paper for VM instruction
                                description</p>
                              <p>Call stack – Grows when contract is calling
                                into another contract. Double click a stack
                                frame to view the machine state in that frame</p>
                              <p>Storage – Storage data associated with the
                                contract</p>
                              <p>Memory – Machine memory allocated up to this
                                execution point</p>
                              <p>Call data – Transaction or call parameters</p>
                              <div class="section" id="accessing-the-debug-mode">
                                <h5>Accessing the debug mode<a class="headerlink"
                                    href="#accessing-the-debug-mode" title="Permalink to this headline">¶</a></h5>
                                <p>When transaction details are expanded, you
                                  can switch to the debugger view by clicking on
                                  the “Debug Transaction” button</p>
                              </div>
                              <div class="section" id="toggling-between-debug-modes-and-stepping-through-transactions">
                                <h5>Toggling between debug modes and stepping
                                  through transactions<a class="headerlink" href="#toggling-between-debug-modes-and-stepping-through-transactions"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>This opens the Solidity debugging mode.
                                  Switch between Solidity and EVM debugging mode
                                  using the Menu button (Debug -&gt; Show VM
                                  code)</p>
                                <ul class="simple">
                                  <li>Step through a transaction in solidity
                                    debugging mode</li>
                                  <li>Step through a transaction in EVM
                                    debugging mode</li>
                                </ul>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/mix/dapp-deployment"></span>
                            <div class="section" id="dapps-deployment"> <span id="sec-dapp-deployment"></span>
                              <h4>Dapps deployment<a class="headerlink" href="#dapps-deployment"
                                  title="Permalink to this headline">¶</a></h4>
                              <div class="line-block">
                                <div class="line">This feature allows users to
                                  deploy the current project as a Dapp in the
                                  main blockchain.</div>
                                <div class="line">This will deploy contracts and
                                  register frontend resources.</div>
                              </div>
                              <p>The deployment process includes three steps:</p>
                              <ul>
                                <li>
                                  <div class="first line-block">
                                    <div class="line"><strong>Deploy contract</strong>:</div>
                                    <div class="line">This step will deploy
                                      contracts in the main blockchain.</div>
                                  </div>
                                </li>
                                <li>
                                  <div class="first line-block">
                                    <div class="line"><strong>Package dapp</strong>:</div>
                                    <div class="line">This step is used to
                                      package and upload frontend resources.</div>
                                  </div>
                                </li>
                                <li>
                                  <div class="first line-block">
                                    <div class="line"><strong>Register</strong>:</div>
                                    <div class="line">To render the Dapp, the
                                      Ethereum browser (Mist or AlethZero) needs
                                      to access this package. This step will
                                      register the URL where the resources are
                                      stored.</div>
                                  </div>
                                </li>
                              </ul>
                              <p>To Deploy your Dapp, Please follow these
                                instructions:</p>
                              <div class="line-block">
                                <div class="line">Click on <code class="docutils literal"><span
                                      class="pre">Deploy</span></code>, <code class="docutils literal"><span
                                      class="pre">Deploy</span> <span class="pre">to</span>
                                    <span class="pre">Network</span></code>.</div>
                                <div class="line">This modal dialog displays
                                  three parts (see above):</div>
                              </div>
                              <ul class="simple">
                                <li><strong>Deploy contract</strong></li>
                                <li><em>Select Scenario</em></li>
                              </ul>
                              <p>“Ethereum node URL” is the location where a
                                node is running, there must be a node running in
                                order to initiate deployment.</p>
                              <p>“Pick Scenario to deploy” is a mandatory step.
                                Mix will execute transactions that are in the
                                selected scenario (all transactions except
                                transactions that are not related to contract
                                creation or contract call). Mix will display all
                                the transactions in the panel below with all
                                associated input parameters.</p>
                              <p>“Gas Used”: depending on the selected scenario,
                                Mix will display the total gas used.</p>
                              <ul class="simple">
                                <li><em>Deploy Scenario</em></li>
                              </ul>
                              <p>“Deployment account” allow selecting the
                                account that Mix will use to execute
                                transactions.</p>
                              <p>“Gas Price” shows the default gas price of the
                                network. You can also specify a different value.</p>
                              <p>“Deployment cost”: depending on the value of
                                the gas price that you want to use and the
                                selected scenario. this will display the amount
                                ether that the deployment need.</p>
                              <p>“Deployed Contract”: before any deployment this
                                part is empty. This will be filled once the
                                deployment is finished by all contract addresses
                                that have been created.</p>
                              <p>“Verifications”. This will shows the number of
                                verifications (number of blocks generated on top
                                of the last block which contains the last
                                deployed transactions). Mix keep track of all
                                the transactions. If one is missing
                                (unvalidated) it will be displayed in this
                                panel.</p>
                              <ul class="simple">
                                <li><em>Package dapp</em></li>
                              </ul>
                              <p>The action “Generate Package” will create a new
                                folder named ‘www’, this folder will contain all
                                the resources and scripts will be mapped to the
                                current deployed contract. In order to publish
                                your dapp, you need to host the www folder in a
                                webserver (to be replace soon by IPFS and
                                SWARM). by default the library web3.js is not
                                included. If you want to be able to use the dapp
                                in a standard web browser, you wiil need to
                                include this library.</p>
                            </div>
                            <span id="document-contracts-and-transactions/mix/codeeditor"></span>
                            <div class="section" id="code-editor"> <span id="sec-codeeditor"></span>
                              <h4>Code Editor<a class="headerlink" href="#code-editor"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>This editor provides basic functionalities of a
                                code editor.</p>
                              <ul class="simple">
                                <li>In Solidity or JavaScript mode, an
                                  autocompletion plugin is available (Ctrl +
                                  Space).</li>
                                <li>Increasing/decreasing the font size (Ctrl +,
                                  Ctrl -)</li>
                                <li>In Solidity mode, you can display the gas
                                  estimation (Tools -&gt; Display Gas
                                  Estimation). This will highlight all
                                  statements which requires a minimum amount of
                                  gas. Color turns to red if the gas required
                                  becomes important. It will also display the
                                  max execution cost of a transaction (for each
                                  function).</li>
                              </ul>
                            </div>
                          </div>
                        </div>
                        <span id="document-contracts-and-transactions/developer-tools"></span>
                        <div class="section" id="dapps"> <span id="id1"></span>
                          <h3>Dapps<a class="headerlink" href="#dapps" title="Permalink to this headline">¶</a></h3>
                          <p>A dapp is a service that enables direct interaction
                            between end users and providers (e.g. connecting
                            buyers and sellers in some marketplace, owners and
                            storers in file storage). Ethereum dapps typically
                            interface users via an HTML/Javascript web
                            application using a Javascript API to communicate
                            with the blockchain. Dapps would typically have
                            their own suite of associated contracts on the
                            blockchain which they use to encode business logic
                            and allow persistent storage of their
                            consensus-critical state. Remember that because of
                            the redundant nature of computation on the Ethereum
                            network, the gas costs of execution will always be
                            higher than private execution offchain. This
                            incentivizes dapp developers to restrict the amount
                            of code they execute and amount of data they store
                            on the blockchain.</p>
                          <div class="section" id="dapp-directories">
                            <h4>Dapp directories<a class="headerlink" href="#dapp-directories"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Dapps that use Ethereum are compiled to the
                              following lists. They are listed in various stages
                              of development (concept, working prototype,
                              live/deployed). If you are developing a dapp,
                              consider adding an entry to these listings:</p>
                            <ul class="simple">
                              <li><a class="reference external" href="http://dapps.ethercasts.com/">Ethercasts
                                  State of the Ðapps</a></li>
                            </ul>
                            <p>The offered decentralised services listed cover a
                              wide range of areas including finance, insurance,
                              prediction markets, social networks, distributed
                              computation and storage, gambling, marketplace,
                              internet of things, governance, collaboration,
                              development and games.</p>
                            <ul class="simple">
                              <li>What apps can we eventually expect? <a class="reference external"
                                  href="https://www.reddit.com/r/ethereum/comments/2mnl7f/the_top_10_ether_dapps_of_2015/cm63nsf">https://www.reddit.com/r/ethereum/comments/2mnl7f/the_top_10_ether_dapps_of_2015/cm63nsf</a></li>
                            </ul>
                            <p>In the future, dapps are likely to be listed and
                              distributed in dappstores integrated in dapp
                              browsers.</p>
                          </div>
                          <div class="section" id="dapp-browsers">
                            <h4>Dapp browsers<a class="headerlink" href="#dapp-browsers"
                                title="Permalink to this headline">¶</a></h4>
                            <ul class="simple">
                              <li><a class="reference external" href="https://github.com/ethereum/mist">Mist</a>
                                - official GUI dapp browser developed by the
                                foundation, alpha stage. Mist as Wallet dapp is
                                in beta.</li>
                              <li><a class="reference external" href="https://status.im/">Status</a>
                                - Mobile Ethereum browser (alpha)</li>
                              <li><a class="reference external" href="https://metamask.io/">MetaMask</a>
                                - Aaron Kumavis Davis’s in-browser GUI. <a class="reference external"
                                  href="https://www.reddit.com/r/ethereum/comments/3x97rg/aaron_davis_explains_the_differences_between/">Epicenter
                                  Bitcoin interview on github</a> - supported by
                                DEVgrants</li>
                              <li><a class="reference external" href="https://github.com/ethereum/alethzero">AlethZero</a>
                                - C++ eth client GUI, (discontinued).</li>
                              <li><a class="reference external" href="http://www.supernove.cc">Supernova</a>
                                - (discontinued).</li>
                            </ul>
                          </div>
                        </div>
                        <div class="section" id="developer-tools">
                          <h3>Developer Tools<a class="headerlink" href="#developer-tools"
                              title="Permalink to this headline">¶</a></h3>
                          <p>Dapp development requires an understanding of the
                            Web3 Javascript API, the JSON RPC API, and the
                            Solidity programming language.</p>
                          <div class="admonition note">
                            <p class="first admonition-title">Note</p>
                            <p class="last">There are developer tools that help
                              you develop, test, and deploy dapps in a way that
                              automatically utilizes the resources listed below.</p>
                          </div>
                          <ul class="simple">
                            <li><a class="reference external" href="https://github.com/ethereum/wiki/wiki/JavaScript-API">Web3
                                JavaScript API</a> - This is the main JavaScript
                              SDK to use when you want to interact with an
                              Ethereum node.</li>
                            <li><a class="reference external" href="https://github.com/ethereum/wiki/wiki/JSON-RPC">JSON
                                RPC API</a> - This is the low level JSON RPC 2.0
                              interface to interface with a node. This API is
                              used by the <a class="reference external" href="https://github.com/ethereum/wiki/wiki/JavaScript-API">Web3
                                JavaScript API</a>.</li>
                            <li><a class="reference external" href="https://solidity.readthedocs.org/en/latest/">Solidity
                                Docs</a> - Solidity is the Ethereum developed
                              Smart Contract language, which compiles to EVM
                              (Ethereum Virtual Machine) opcodes.</li>
                            <li><a class="reference external" href="https://github.com/duaraghav8/Solium/">Solium</a>
                              - A linter for Solidity which strictly follows the
                              rules prescribed by the official <a class="reference external"
                                href="http://solidity.readthedocs.io/en/latest/style-guide.html">Solidity
                                Style Guide</a>.</li>
                            <li><a class="reference internal" href="index.html#test-networks"><span>Test
                                  Networks</span></a> - Test networks help
                              developers develop and test Ethereum code and
                              network interactions without spending their own
                              ether on the main network. Test network options
                              are listed below.</li>
                            <li><a class="reference internal" href="#ide-or-development-framework"><span>Dapp
                                  development resources</span></a>. This assists
                              you in developing, debugging, and deploying
                              Ethereum applications.</li>
                          </ul>
                          <div class="section" id="dapp-development-resources">
                            <span id="ide-or-development-framework"></span>
                            <h4>Dapp development resources<a class="headerlink"
                                href="#dapp-development-resources" title="Permalink to this headline">¶</a></h4>
                            <ul class="simple">
                              <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/2cbwak/ethereum_contracts_please_eli5/">Smart
                                  contracts ELI5</a></li>
                              <li><a class="reference external" href="https://blog.slock.it/a-primer-to-the-decentralized-autonomous-organization-dao-69fb125bd3cd">https://blog.slock.it/a-primer-to-the-decentralized-autonomous-organization-dao-69fb125bd3cd</a></li>
                              <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/44vs8b/a_101_noob_intro_to_programming_smart_contracts/">A
                                  101 noob’s intro to programming smart
                                  contracts</a></li>
                              <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3k3jha/reminder_standardized_contract_apis_listing/">Standardised
                                  contract APIs listing</a></li>
                            </ul>
                            <div class="section" id="examples">
                              <h5>Examples<a class="headerlink" href="#examples"
                                  title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><a class="reference external" href="https://gist.github.com/larspensjo/ffd2e4d41f739dc5af54">example
                                    use of pricefeed - web3 script printing all
                                    account balances</a></li>
                                <li><a class="reference external" href="https://github.com/drupalnomad/ethereum-contracts">Example
                                    Ethereum contracts</a></li>
                              </ul>
                              <p><a class="reference external" href="https://dappsforbeginners.wordpress.com/tutorials/your-first-dapp/">https://dappsforbeginners.wordpress.com/tutorials/your-first-dapp/</a></p>
                              <p><a class="reference external" href="https://github.com/ethereum/wiki/wiki/Dapp-Developer-Resources">https://github.com/ethereum/wiki/wiki/Dapp-Developer-Resources</a></p>
                            </div>
                            <div class="section" id="tutorials">
                              <h5>Tutorials<a class="headerlink" href="#tutorials"
                                  title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><a class="reference external" href="https://ethereum.org">Dapp
                                    tutorials on ethereum.org</a></li>
                                <li><a class="reference external" href="https://dappsforbeginners.wordpress.com/">Dapps
                                    for beginners tutorial series</a></li>
                                <li><a class="reference external" href="https://docs.erisindustries.com/tutorials/solidity/">Eris’
                                    Solidity Tutorial Series</a></li>
                                <li><a class="reference external" href="https://github.com/androlo/solidity-workshop">Tutorials
                                    on advanced Solidity</a></li>
                                <li><a class="reference external" href="http://ethereumj.io/blog/2015/09/09/friendly-ether-bot/">http://ethereumj.io/blog/2015/09/09/friendly-ether-bot/</a></li>
                                <li><a class="reference external" href="https://github.com/ConsenSys/ether-pudding">https://github.com/ConsenSys/ether-pudding</a></li>
                              </ul>
                            </div>
                          </div>
                          <div class="section" id="mix-ide">
                            <h4>Mix-IDE<a class="headerlink" href="#mix-ide" title="Permalink to this headline">¶</a></h4>
                            <p>Mix is the official Ethereum IDE that allows
                              developers to build and deploy contracts and
                              decentralized applications on top of the Ethereum
                              blockchain. It includes a Solidity source code
                              debugger. <a class="reference internal" href="index.html#sec-mix"><span>Mix</span></a>
                              (discontinued)</p>
                          </div>
                          <div class="section" id="ides-frameworks">
                            <h4>IDEs/Frameworks<a class="headerlink" href="#ides-frameworks"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Below are developer frameworks and IDEs used for
                              writing Ethereum dapps.</p>
                            <ul class="simple">
                              <li><a class="reference external" href="https://github.com/ConsenSys/truffle">Truffle</a>
                                - Truffle is a development environment, testing
                                framework and asset pipeline for Ethereum.</li>
                              <li><a class="reference external" href="https://github.com/nexusdev/dapple">Dapple</a>
                                - Dapple is a tool for Solidity developers to
                                help build and manage complex contract systems
                                on Ethereum-like blockchains.</li>
                              <li><a class="reference external" href="http://populus.readthedocs.org/en/latest/">Populus</a>
                                - Populus is a Smart Contract development
                                framework written in python.</li>
                              <li><a class="reference external" href="https://docs.erisindustries.com/documentation/eris-package-manager/">Eris-PM</a>
                                - The Eris Package Manager deploys and tests
                                smart contract systems on private and public
                                chains.</li>
                              <li><a class="reference external" href="https://iurimatias.github.io/embark-framework/">Embark</a>
                                - Embark is a Ðapp development framework written
                                in JavaScript.</li>
                              <li><a class="reference external" href="http://etherscripter.com/0-5-1/">EtherScripter
                                  (obsolete, discontinued)</a></li>
                              <li><a class="reference external" href="https://github.com/resilience-me/broadcaster/">Resilience
                                  Raw Transaction Broadcaster</a></li>
                            </ul>
                          </div>
                          <div class="section" id="ethereum-console">
                            <h4>Ethereum-console<a class="headerlink" href="#ethereum-console"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Command-line console for Ethereum nodes.</p>
                            <p><a class="reference external" href="https://github.com/ethereum/ethereum-console">Ethconsole</a>
                              connects to an Ethereum node running in the
                              background (tested with eth and geth) via IPC and
                              provides an interactive javascript console
                              containing the web3 object with admin additions.</p>
                            <p>Here you could find a list of available commands
                              <a class="reference external" href="https://github.com/ethereum/ethereum-console/blob/master/web3Admin.js">ethereum
                                node control commands</a></p>
                            <p>To use this console you would need to start a
                              local ethereum node with ipc communication socket
                              enabled (file <code class="docutils literal"><span
                                  class="pre">geth.ipc</span></code> in data
                              directory). By default ipc socket should be
                              located at you local home directory in .ethereum
                              after you started a node. You could also set <code
                                class="docutils literal"><span class="pre">--test</span></code>
                              option to use specific node test commands.</p>
                            <p>In the console you could then type</p>
                            <p>Here the defenition of <code class="docutils literal"><span
                                  class="pre">--test</span></code> mode node
                              commands:</p>
                            <p>More information about node <a class="reference external"
                                href="../network/test-networks.html#custom-networks-eth">configuration</a>
                              file.</p>
                          </div>
                          <div class="section" id="base-layer-services">
                            <h4>Base layer services<a class="headerlink" href="#base-layer-services"
                                title="Permalink to this headline">¶</a></h4>
                            <div class="section" id="whisper">
                              <h5>Whisper<a class="headerlink" href="#whisper" title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><a class="reference external" href="http://ethereum.stackexchange.com/questions/127/what-is-whisper-and-what-is-it-used-for">What
                                    is Whisper and what is it used for</a> -
                                  stackexchange Q&amp;A</li>
                                <li><a class="reference external" href="https://www.youtube.com/watch?v=U_nPoBVLPiw">Gavin
                                    Wood: Shh! Whisper</a> - DEVCON-1 talk
                                  youtube video</li>
                                <li><a class="reference external" href="https://github.com/ethereum/wiki/wiki/Whisper-Overview">Whisper
                                    overview and dream API usage</a> -</li>
                                <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/2xzm5w/whisper_explain_to_me_like_im_5/">ELI5</a></li>
                              </ul>
                            </div>
                            <div class="section" id="swarm">
                              <h5>Swarm<a class="headerlink" href="#swarm" title="Permalink to this headline">¶</a></h5>
                              <p>Swarm is a distributed storage platform and
                                content distribution service, a native base
                                layer service of the Ethereum web 3 stack. The
                                primary objective of Swarm is to provide a
                                sufficiently decentralized and redundant store
                                of Ethereum’s public record, in particular to
                                store and distribute dapp code and data as well
                                as block chain data. From an economic point of
                                view, it allows participants to efficiently pool
                                their storage and bandwidth resources in order
                                to provide the aforementioned services to all
                                participants.</p>
                              <p>From the end user’s perspective, Swarm is not
                                that different from WWW, except that uploads are
                                not to a specific server. The objective is to
                                peer-to-peer storage and serving solution that
                                is DDOS-resistant, zero-downtime, fault-tolerant
                                and censorship-resistant as well as
                                self-sustaining due to a built-in incentive
                                system which uses peer to peer accounting and
                                allows trading resources for payment. Swarm is
                                designed to deeply integrate with the devp2p
                                multiprotocol network layer of Ethereum as well
                                as with the Ethereum blockchain for domain name
                                resolution, service payments and content
                                availability insurance.</p>
                              <div class="section" id="vcon-talks-on-swarm">
                                <h6>ÐΞVcon talks on swarm<a class="headerlink" href="#vcon-talks-on-swarm"
                                    title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <li><a class="reference external" href="https://www.youtube.com/watch?v=VOC45AgZG5Q">Viktor
                                      Trón, Daniel A. Nagy: Swarm</a> - Ethereum
                                    ÐΞVcon-1 talk on youtube</li>
                                  <li><a class="reference external" href="https://www.youtube.com/watch?v=QzYZQ03ON2o&amp;list=PLJqWcTqh_zKEjpSej3ddtDOKPRGl_7MhS">Daniel
                                      A. Nagy: Keeping the Public Record Safe
                                      and Accessible</a> - Ethereum ÐΞVcon-0
                                    talk on youtube</li>
                                </ul>
                              </div>
                              <div class="section" id="code-and-status">
                                <h6>Code and status<a class="headerlink" href="#code-and-status"
                                    title="Permalink to this headline">¶</a></h6>
                                <ul class="simple">
                                  <li>[source](<a class="reference external" href="https://github.com/ethereum/go-ethereum/tree/swarm">https://github.com/ethereum/go-ethereum/tree/swarm</a>)</li>
                                  <li>[issues on github](<a class="reference external"
                                      href="https://github.com/ethereum/go-ethereum/labels/swarm">https://github.com/ethereum/go-ethereum/labels/swarm</a>)</li>
                                  <li>[development roadmap]()</li>
                                  <li><a class="reference external" href="https://twitter.com/ethersphere">ethersphere
                                      on twitter</a></li>
                                  <li><a class="reference external" href="https://gitter.im/ethereum/swarm">swarm
                                      gitter room</a></li>
                                  <li><a class="reference external" href="https://reddit.com/r/bzz">swarm
                                      subreddit</a></li>
                                </ul>
                                <p>Storage on and offchain</p>
                                <ul class="simple">
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3hkv2f/eli5_storage_in_the_ethereum_blockchain/">https://www.reddit.com/r/ethereum/comments/3hkv2f/eli5_storage_in_the_ethereum_blockchain/</a></li>
                                  <li><a class="reference external" href="https://www.reddit.com/r/ethereum/comments/3npsoz/ethereum_ipfs_and_filecoin/">https://www.reddit.com/r/ethereum/comments/3npsoz/ethereum_ipfs_and_filecoin/</a></li>
                                  <li><a class="reference external" href="https://ethereum.stackexchange.com/questions/375/what-is-swarm-and-what-is-it-used-for">What
                                      is swarm and what is it used for?</a> -
                                    stackexchange Q&amp;A</li>
                                </ul>
                              </div>
                            </div>
                            <div class="section" id="ethereum-alarm-clock">
                              <h5>Ethereum Alarm Clock<a class="headerlink" href="#ethereum-alarm-clock"
                                  title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><strong>Author:</strong> Piper Merriam</li>
                                <li><strong>Website:</strong> <a class="reference external"
                                    href="http://www.ethereum-alarm-clock.com/">alarm_main_website</a>.</li>
                                <li><strong>Documentation:</strong> <a class="reference external"
                                    href="http://docs.ethereum-alarm-clock.com/">alarm_documentation</a>.</li>
                              </ul>
                              <p>A marketplace that facilitates scheduling
                                transactions to occur at a later time. Serves a
                                similar role to things like <em>crontab</em> in
                                unix, or <em>setTimeout</em> in javascript.</p>
                              <ul class="simple">
                                <li><a class="reference external" href="https://gist.github.com/karalabe/0ab4d715a81b74dd257d">Decentralized
                                    cron service in Ethereum proposal</a> - by
                                  Peter Szilagyi</li>
                              </ul>
                            </div>
                            <div class="section" id="ethereum-computation-market">
                              <h5>Ethereum Computation Market<a class="headerlink"
                                  href="#ethereum-computation-market" title="Permalink to this headline">¶</a></h5>
                              <ul class="simple">
                                <li><strong>Author:</strong> Piper Merriam</li>
                                <li><strong>Website:</strong> <a class="reference external"
                                    href="http://www.ethereum-computation-market.com/">computation_market_main_website</a>.</li>
                                <li><strong>Documentation:</strong> <a class="reference external"
                                    href="http://docs.ethereum-computation-market.com/">computation_market_documentation</a>.</li>
                              </ul>
                              <p>A marketplace that facilitates verifiable
                                execution of computations off-chain. Allows for
                                very expernsive computations to be used within
                                the EVM without having to actually pay the high
                                gas costs of executing them on-chain.</p>
                            </div>
                            <div class="section" id="btcrelay">
                              <h5>BTCRelay<a class="headerlink" href="#btcrelay"
                                  title="Permalink to this headline">¶</a></h5>
                              <dl class="docutils">
                                <dt><a class="reference external" href="http://btcrelay.org/">BTCrelay</a></dt>
                                <dd>
                                  <ul class="first last simple">
                                    <li><a class="reference external" href="https://medium.com/@ConsenSys/taking-stock-bitcoin-and-ethereum-4382f0a2f17">More
                                        information</a> (about ETH/BTC 2-way peg
                                      without modifying bitcoin code).</li>
                                    <li><a class="reference external" href="http://martin.swende.se/blog/BTCRelay-Auditing.html">BTCrelay
                                        audit</a></li>
                                  </ul>
                                </dd>
                              </dl>
                            </div>
                            <div class="section" id="randao">
                              <h5>RANDAO<a class="headerlink" href="#randao" title="Permalink to this headline">¶</a></h5>
                              <p>Random number * <a class="reference external"
                                  href="https://www.reddit.com/r/ethereum/comments/49yld7/eli5_how_does_a_service_like_szabodice_grab_a/">https://www.reddit.com/r/ethereum/comments/49yld7/eli5_how_does_a_service_like_szabodice_grab_a/</a></p>
                            </div>
                          </div>
                          <div class="section" id="the-evm"> <span id="id3"></span>
                            <h4>The EVM<a class="headerlink" href="#the-evm" title="Permalink to this headline">¶</a></h4>
                            <p>The Ethereum Virtual Machine (EVM) is the runtime
                              environment for smart contracts in Ethereum. It is
                              not only sandboxed, but actually completely
                              isolated, which means that code running inside the
                              EVM has no access to network, filesystem, or other
                              processes. Smart contracts even have limited
                              access to other smart contracts.</p>
                            <p>Contracts live on the blockchain in an
                              Ethereum-specific binary format (EVM bytecode).
                              However, contracts are typically written in an
                              Ethereum high level language, compiled into byte
                              code using an EVM compiler, and finally uploaded
                              on the blockchain using an Ethereum client.</p>
                          </div>
                        </div>
                        <span id="document-contracts-and-transactions/ethereum-tests/index"></span>
                        <div class="section" id="ethereum-tests"> <span id="id1"></span>
                          <h3>Ethereum Tests<a class="headerlink" href="#ethereum-tests"
                              title="Permalink to this headline">¶</a></h3>
                          <div class="line-block">
                            <div class="line">Common tests for all clients to
                              test against. The <a class="reference external" href="https://github.com/ethereum/tests">git
                                repo</a> updated regulary with new tests.</div>
                            <div class="line">This section describes basic test
                              concepts and templates which are created by
                              cpp-client.</div>
                            <div class="line"><br>
                            </div>
                          </div>
                          <div class="toctree-wrapper compound"> <span id="document-contracts-and-transactions/ethereum-tests/using-testeth"></span>
                            <div class="section" id="using-testeth">
                              <h4>Using Testeth<a class="headerlink" href="#using-testeth"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Ethereum cpp-client testeth tool for creation
                                and execution of ethereum tests.</p>
                              <p>To run tests you should open folder (see also <a
                                  class="reference external" href="../../ethereum-clients/cpp-ethereum/index.html#installing-and-building">Installing
                                  and building</a>)</p>
                              <blockquote>
                                <div><code class="docutils literal"><span class="pre">/build/libethereum/test</span></code></div>
                              </blockquote>
                              <p>and execute a command <code class="docutils literal"><span
                                    class="pre">./testeth</span></code> This
                                will run all test cases automatically. To run a
                                specific test case you could use parameter <code
                                  class="docutils literal"><span class="pre">-t</span></code>
                                in the command line option:</p>
                              <blockquote>
                                <div><code class="docutils literal"><span class="pre">./testeth</span>
                                    <span class="pre">-t</span> <span class="pre">&lt;TEST_SUITE&gt;/&lt;TEST_CASE&gt;</span></code></div>
                              </blockquote>
                              <p>Or just the test suite:</p>
                              <blockquote>
                                <div><code class="docutils literal"><span class="pre">./testeth</span>
                                    <span class="pre">-t</span> <span class="pre">&lt;TEST_SUITE&gt;</span></code></div>
                              </blockquote>
                              <p>You could also use <code class="docutils literal"><span
                                    class="pre">--filltests</span></code> option
                                to rerun test creation from .json files which
                                are located at <code class="docutils literal"><span
                                    class="pre">../cpp-ethereum/test/&lt;TEST_FILLER&gt;.json</span></code></p>
                              <blockquote>
                                <div><code class="docutils literal"><span class="pre">./testeth</span>
                                    <span class="pre">-t</span> <span class="pre">&lt;TEST_SUITE&gt;/&lt;TEST_CASE&gt;</span>
                                    <span class="pre">--filltests</span></code></div>
                              </blockquote>
                              <p>By default using <code class="docutils literal"><span
                                    class="pre">--filltests</span></code> option
                                <code class="docutils literal"><span class="pre">testeth</span></code>
                                recreate tests to the <code class="docutils literal"><span
                                    class="pre">ETHEREUM_TEST_PATH</span></code>
                                folder. You might want to set this variable
                                globally on your system like:</p>
                              <div class="line-block">
                                <div class="line"><code class="docutils literal"><span
                                      class="pre">nano</span> <span class="pre">/etc/environment</span></code></div>
                                <div class="line"><code class="docutils literal"><span
                                      class="pre">ETHEREUM_TEST_PATH="/home/user/ethereum/tests"</span></code></div>
                                <div class="line"><br>
                                </div>
                              </div>
                              <p>Filler files are test templates which are used
                                to fill initial parameters defined at test
                                specification <a class="reference external" href="../ethereum-tests/index.html">Ethereum
                                  Tests</a> and then create a complete test <code
                                  class="docutils literal"><span class="pre">.json</span></code>
                                file. You might find filler files very useful
                                when creating your own tests.</p>
                              <p>The <code class="docutils literal"><span class="pre">--checkstate</span></code>
                                option adds a BOOST error if the post state of
                                filled test differs from its <code class="docutils literal"><span
                                    class="pre">expected</span></code> section.</p>
                              <p>To specify a concrete test in a TEST_CASE file
                                for filling/running procedure use <code class="docutils literal"><span
                                    class="pre">--singletest</span></code>
                                option:</p>
                              <blockquote>
                                <div><code class="docutils literal"><span class="pre">./testeth</span>
                                    <span class="pre">-t</span> <span class="pre">&lt;TEST_SUITE&gt;/&lt;TEST_CASE&gt;</span>
                                    <span class="pre">--singletest</span> <span
                                      class="pre">&lt;TEST_NAME&gt;</span></code></div>
                              </blockquote>
                              <p>If you want to debug (note: testeth should be
                                build with VMTRACE=1) a single test within a
                                result test <code class="docutils literal"><span
                                    class="pre">.json</span></code> file, you
                                might use the following command:</p>
                              <div class="line-block">
                                <div class="line"><code class="docutils literal"><span
                                      class="pre">./testeth</span> <span class="pre">--log_level=test_suite</span>
                                    <span class="pre">--run_test=&lt;TEST_SUITE&gt;/&lt;TEST_CASE&gt;</span>
                                    <span class="pre">--singletest</span> <span
                                      class="pre">&lt;TEST_FILE&gt;.json</span></code></div>
                                <div class="line-block">
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">&lt;TEST_NAME&gt;</span> <span
                                        class="pre">--vmtrace</span> <span class="pre">--verbosity</span>
                                      <span class="pre">12</span></code></div>
                                </div>
                                <div class="line">or</div>
                                <div class="line"><code class="docutils literal"><span
                                      class="pre">./testeth</span> <span class="pre">-t</span>
                                    <span class="pre">&lt;TEST_SUITE&gt;/&lt;TEST_CASE&gt;</span>
                                    <span class="pre">--singletest</span> <span
                                      class="pre">&lt;TEST_NAME&gt;</span> <span
                                      class="pre">--vmtrace</span> <span class="pre">--verbosity</span>
                                    <span class="pre">12</span></code></div>
                                <div class="line"><br>
                                </div>
                              </div>
                              <p>Some tests may use excessive resources when
                                running, so by default they are disabled. Such
                                tests require specific flag to be set in order
                                to be executed. Like <code class="docutils literal"><span
                                    class="pre">--performance</span></code>, <code
                                  class="docutils literal"><span class="pre">--inputLimits</span></code>,
                                <code class="docutils literal"><span class="pre">--memory</span></code>,
                                <code class="docutils literal"><span class="pre">--quadratic</span></code>.
                                You may also enable all of the tests by setting
                                <code class="docutils literal"><span class="pre">--all</span></code>
                                flag. Be careful. Enabled memory tests may
                                stress your system to use 4GB of RAM and more.</p>
                              <p>That’s it for test execution. To read more
                                about command line options you may run <code class="docutils literal"><span
                                    class="pre">testeth</span></code> with <code
                                  class="docutils literal"><span class="pre">--help</span></code>
                                option.</p>
                              <p>Now let’s see what test cases are available.</p>
                              <div class="section" id="test-cases">
                                <h5>Test Cases<a class="headerlink" href="#test-cases"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>Almost each test case has its filler file
                                  available at <code class="docutils literal"><span
                                      class="pre">/webthree-umbrella/libethereum/test</span></code></p>
                                <p>TEST_SUITE = BlockTests TEST_CASES =
                                  blValidBlockTest blInvalidTransactionRLP
                                  blTransactionTest blInvalidHeaderTest
                                  userDefinedFile</p>
                                <p>TEST_SUITE = TransactionTests TEST_CASES =
                                  ttTransactionTest ttWrongRLPTransaction
                                  tt10mbDataField userDefinedFile</p>
                                <p>TEST_SUITE = StateTests TEST_CASES =
                                  stExample stSystemOperationsTest
                                  stPreCompiledContracts stLogTests
                                  stRecursiveCreate stTransactionTest
                                  stInitCodeTest stSpecialTest stRefundTest
                                  stBlockHashTest stQuadraticComplexityTest
                                  stSolidityTest stMemoryTest stCreateTest
                                  userDefinedFileState</p>
                                <p>TEST_SUITE = VMTests TEST_CASES = vm_tests
                                  vmArithmeticTest vmBitwiseLogicOperationTest
                                  vmSha3Test vmEnvironmentalInfoTest
                                  vmBlockInfoTest vmIOandFlowOperationsTest
                                  vmPushDupSwapTest vmLogTest
                                  vmSystemOperationsTest vmPerformanceTest
                                  vmInputLimitsTest1 vmInputLimitsTest2 vmRandom
                                  userDefinedFile</p>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/ethereum-tests/blockchain_tests/index"></span>
                            <div class="section" id="blockchain-tests"> <span id="id1"></span>
                              <h4>Blockchain Tests<a class="headerlink" href="#blockchain-tests"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Found in <code class="docutils literal"><span
                                    class="pre">/BlockTests</span></code>, the
                                blockchain tests aim is to test the basic
                                verification of a blockchain.</p>
                              <p><code class="docutils literal"><span class="pre">/BlockTests</span></code>
                                - general blockchain tests. All blocks are built
                                on network: <strong>Frontier</strong> <code class="docutils literal"><span
                                    class="pre">/BlockTests/Homestead</span></code>
                                - homestead blockchain tests. All blocks are
                                built on network: <strong>Homestead</strong> <code
                                  class="docutils literal"><span class="pre">/BlockTests/TestNetwork</span></code>
                                - transition blockchain tests. All blocks before
                                5th are built on network: <strong>Frontier</strong>,
                                then each block should correspond to Homestead
                                rules.</p>
                              <p>It is based around the notion of executing a
                                list of single blocks, described by the <code class="docutils literal"><span
                                    class="pre">blocks</span></code> portion of
                                the test. The first block is the modified
                                genesis block as described by the <code class="docutils literal"><span
                                    class="pre">genesisBlockHeader</span></code>
                                portion of the test. A set of pre-existing
                                accounts are detailed in the <code class="docutils literal"><span
                                    class="pre">pre</span></code> portion and
                                form the world state of the genesis block.</p>
                              <p>It is generally expected that the test
                                implementer will read <code class="docutils literal"><span
                                    class="pre">genesisBlockHeader</span></code>
                                and <code class="docutils literal"><span class="pre">pre</span></code>
                                and build the corresponding blockchain in the
                                client. Then the new blocks, described by its
                                RLP found in the <code class="docutils literal"><span
                                    class="pre">rlp</span></code> object of the
                                <code class="docutils literal"><span class="pre">blocks</span></code>
                                (RLP of a complete block, not the block header
                                only), is read. If the client concludes that the
                                block is valid, it should execute the block and
                                verify the parameters given in <code class="docutils literal"><span
                                    class="pre">blockHeader</span></code> (block
                                header of the new block), <code class="docutils literal"><span
                                    class="pre">transactions</span></code>
                                (transaction list) and <code class="docutils literal"><span
                                    class="pre">uncleHeaders</span></code> (list
                                of uncle headers). If the client concludes that
                                the block is invalid, it should verify that no <code
                                  class="docutils literal"><span class="pre">blockHeader</span></code>,
                                <code class="docutils literal"><span class="pre">transactions</span></code>
                                or <code class="docutils literal"><span class="pre">uncleHeaders</span></code>
                                object is present in the test. The client is
                                expected to iterate through the list of blocks
                                and ignore invalid blocks.</p>
                              <div class="section" id="basic-structure">
                                <h5>Basic structure<a class="headerlink" href="#basic-structure"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre>{
   "ValidBlocks": {
           "genesisBlockHeader": { ... },
           "pre": { ... },
           "blocks" : [
                   {
                           "chainname" : "A",
                           "blocknumber" : "1",
                           "rlp": { ... },
                           "blockHeader": { ... },
                           "transactions": { ... },
                           "uncleHeaders": { ... }
                   },
                   {
                           "chainname" : "A",
                           "blocknumber" : "2",
                           "rlp": { ... },
                           "blockHeader": { ... },
                           "transactions": { ... },
                           "uncleHeaders": { ... }
                   }
           ]
   },
   "SomeInvalidBlocks": {
           "genesisBlockHeader": { ... },
           "pre": { ... },
           "blocks" : [
                   {
                           "chainname" : "B",
                           "blocknumber" : "3",
                           "chainnetwork" : "Frontier",
                           "rlp": { ... },
                   },
                   {
                           "blocknumber" : "1",
                           "rlp": { ... },
                           "blockHeader": { ... },
                           "transactions": { ... },
                           "uncleHeaders": { ... }
                   },
                   {
                           "blocknumber" : "1",
                           "chainnetwork" : "Homestead",
                           "rlp": { ... },
                   },
                   {
                           "blocknumber" : "2",
                           "rlp": { ... },
                           "blockHeader": { ... },
                           "transactions": { ... },
                           "uncleHeaders": { ... }
                   }
           ]
   },
   ...
}
</pre></div>
                                </div>
                              </div>
                              <div class="section" id="sections">
                                <h5>Sections<a class="headerlink" href="#sections"
                                    title="Permalink to this headline">¶</a></h5>
                                <ul class="simple">
                                  <li>The <code class="docutils literal"><span
                                        class="pre">genesisBlockHeader</span></code>
                                    section</li>
                                </ul>
                                <dl class="docutils">
                                  <dt><code class="docutils literal"><span class="pre">coinbase</span></code>:</dt>
                                  <dd>The 160-bit address to which all fees
                                    collected from the successful mining of this
                                    block be transferred, as returned by the <strong>COINBASE</strong>
                                    instruction.</dd>
                                  <dt><code class="docutils literal"><span class="pre">difficulty</span></code>:</dt>
                                  <dd>A scalar value corresponding to the
                                    difficulty level of this block. This can be
                                    alculated from the previous block’s
                                    difficulty level and the timestamp, as
                                    returned by the <strong>DIFFICULTY</strong>
                                    instruction.</dd>
                                  <dt><code class="docutils literal"><span class="pre">gasLimit</span></code>:</dt>
                                  <dd>A scalar value equal to the current limit
                                    of gas expenditure per block, as returned by
                                    the <strong>GASLIMIT</strong> instruction.</dd>
                                  <dt><code class="docutils literal"><span class="pre">number</span></code>:</dt>
                                  <dd>A scalar value equal to the number of
                                    ancestor blocks. The genesis block has a
                                    number of zero.</dd>
                                  <dt><code class="docutils literal"><span class="pre">timestamp</span></code>:</dt>
                                  <dd>A scalar value equal to the reasonable
                                    output of Unix’s time() at this block’s
                                    inception, as returned by the <strong>TIMESTAMP</strong>
                                    instruction.</dd>
                                  <dt><code class="docutils literal"><span class="pre">parentHash</span></code>:</dt>
                                  <dd>The Keccak 256-bit hash of the parent
                                    block’s header, in its entirety</dd>
                                  <dt><code class="docutils literal"><span class="pre">bloom</span></code>:</dt>
                                  <dd>The Bloom filter composed from indexable
                                    information (logger address and log topics)
                                    contained in each log entry from the receipt
                                    of each transaction in the transactions
                                    list.</dd>
                                  <dt><code class="docutils literal"><span class="pre">extraData</span></code>:</dt>
                                  <dd>An arbitrary byte array containing data
                                    relevant to this block. This must be 1024
                                    bytes or fewer.</dd>
                                  <dt><code class="docutils literal"><span class="pre">gasUsed</span></code>:</dt>
                                  <dd>A scalar value equal to the total gas used
                                    in transactions in this block.</dd>
                                  <dt><code class="docutils literal"><span class="pre">nonce</span></code>:</dt>
                                  <dd>A 256-bit hash which proves that a
                                    sufficient amount of computation has been
                                    carried out on this block.</dd>
                                  <dt><code class="docutils literal"><span class="pre">receiptTrie</span></code>:</dt>
                                  <dd>The Keccak 256-bit hash of the root node
                                    of the trie structure populated with the
                                    receipts of each transaction in the
                                    transactions list portion of the block.</dd>
                                  <dt><code class="docutils literal"><span class="pre">stateRoot</span></code>:</dt>
                                  <dd>The Keccak 256-bit hash of the root node
                                    of the state trie, after all transactions
                                    are executed and finalisations applied.</dd>
                                  <dt><code class="docutils literal"><span class="pre">transactionsTrie</span></code>:</dt>
                                  <dd>The Keccak 256-bit hash of the root node
                                    of the trie structure populated with each
                                    transaction in the transactions list portion
                                    of the block.</dd>
                                  <dt><code class="docutils literal"><span class="pre">uncleHash</span></code>:</dt>
                                  <dd>The Keccak 256-bit hash of the uncles list
                                    portion of this block</dd>
                                </dl>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">pre</span></code>
                                    section: as described in State Tests.</li>
                                  <li><code class="docutils literal"><span class="pre">postState</span></code>
                                    section: as described in State Tests
                                    (section - post).</li>
                                  <li><code class="docutils literal"><span class="pre">blocks</span></code>
                                    section is a list of block objects, which
                                    have the following format:</li>
                                  <li><code class="docutils literal"><span class="pre">rlp</span></code>
                                    section contains the complete rlp of the new
                                    block as described in the yellow paper in
                                    section 4.3.3.</li>
                                  <li><code class="docutils literal"><span class="pre">blockHeader</span></code>
                                    section describes the block header of the
                                    new block in the same format as described in
                                    <cite>genesisBlockHeader</cite>.</li>
                                  <li><code class="docutils literal"><span class="pre">transactions</span></code>
                                    section is a list of transactions which have
                                    the same format as in Transaction Tests.</li>
                                  <li><code class="docutils literal"><span class="pre">uncleHeaders</span></code>
                                    section is a list of block headers which
                                    have the same format as descibed in <cite>genesisBlockHeader</cite>.</li>
                                </ul>
                              </div>
                              <div class="section" id="optional-blockheader-sections-information-fields">
                                <h5>Optional BlockHeader Sections (Information
                                  fields)<a class="headerlink" href="#optional-blockheader-sections-information-fields"
                                    title="Permalink to this headline">¶</a></h5>
                                <p><code class="docutils literal"><span class="pre">"blocknumber"</span>
                                    <span class="pre">=</span> <span class="pre">"int"</span></code>
                                  is section which defines what is the order of
                                  this block. It is used to define a situation
                                  when you have 3 blocks already imported but
                                  then it comes new version of the block 2 and 3
                                  and thus you might have new best blockchain
                                  with blocks 1 2’ 3’ instead previous. If <cite>blocknumber</cite>
                                  is undefined then it is assumed that blocks
                                  are imported one by one. When running test,
                                  this field could be used for information
                                  purpose only.</p>
                                <p><code class="docutils literal"><span class="pre">"chainname"</span>
                                    <span class="pre">=</span> <span class="pre">"string"</span></code>
                                  This is used for defining forks in the same
                                  test. You could mine blocks to chain “A”: 1,
                                  2, 3 then to chain “B”: 1, 2, 3, 4 (chainB
                                  becomes primary). Then again to chain “A”: 4,
                                  5, 6 (chainA becomes primary) and so on.
                                  chainname could also be defined in uncle
                                  header section. If defined in uncle header it
                                  tells on which chain’s block uncle header
                                  would be populated from. When running test,
                                  this field could be used for information
                                  purpose only.</p>
                                <p><code class="docutils literal"><span class="pre">"chainnetwork"</span>
                                    <span class="pre">=</span> <span class="pre">"string"</span></code>
                                  Defines on which network rules this block was
                                  mined. (see the difference <a class="reference external"
                                    href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki</a>).
                                  When running test, this field could be used
                                  for information purpose only.</p>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/ethereum-tests/state_tests/index"></span>
                            <div class="section" id="state-tests"> <span id="id1"></span>
                              <h4>State Tests<a class="headerlink" href="#state-tests"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Found in <code class="docutils literal"><span
                                    class="pre">/StateTest</span></code>, the
                                state tests aim is to test the basic workings of
                                the state in isolation.</p>
                              <p>It is based around the notion of executing a
                                single transaction, described by the <code class="docutils literal"><span
                                    class="pre">transaction</span></code>
                                portion of the test. The overarching environment
                                in which it is executed is described by the <code
                                  class="docutils literal"><span class="pre">env</span></code>
                                portion of the test and includes attributes of
                                the current and previous blocks. A set of
                                pre-existing accounts are detailed in the <code
                                  class="docutils literal"><span class="pre">pre</span></code>
                                portion and form the world state prior to
                                execution. Similarly, a set of accounts are
                                detailed in the <code class="docutils literal"><span
                                    class="pre">post</span></code> portion to
                                specify the end world state. Since the data of
                                the blockchain is not given, the opcode <code class="docutils literal"><span
                                    class="pre">BLOCKHASH</span></code> could
                                not return the hashes of the corresponding
                                blocks. Therefore we define the hash of block
                                number <code class="docutils literal"><span class="pre">n</span></code>
                                to be <code class="docutils literal"><span class="pre">SHA256("n")</span></code>.</p>
                              <p>The log entries (<code class="docutils literal"><span
                                    class="pre">logs</span></code>) as well as
                                any output returned from the code (<code class="docutils literal"><span
                                    class="pre">output</span></code>) is also
                                detailed.</p>
                              <p>It is generally expected that the test
                                implementer will read <code class="docutils literal"><span
                                    class="pre">env</span></code>, <code class="docutils literal"><span
                                    class="pre">transaction</span></code> and <code
                                  class="docutils literal"><span class="pre">pre</span></code>
                                then check their results against <code class="docutils literal"><span
                                    class="pre">logs</span></code>, <code class="docutils literal"><span
                                    class="pre">out</span></code>, and <code class="docutils literal"><span
                                    class="pre">post</span></code>.</p>
                              <div class="section" id="basic-structure">
                                <h5>Basic structure<a class="headerlink" href="#basic-structure"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre>{
   "test name 1": {
           "env": { ... },
           "logs": { ... },
           "out": { ... },
           "post": { ... },
           "pre": { ... },
           "transaction": { ... },
   },
   "test name 2": {
           "env": { ... },
           "logs": { ... },
           "out": { ... },
           "post": { ... },
           "pre": { ... },
           "transaction": { ... },
   },
   ...
}
</pre></div>
                                </div>
                              </div>
                              <div class="section" id="sections">
                                <h5>Sections<a class="headerlink" href="#sections"
                                    title="Permalink to this headline">¶</a></h5>
                                <ul class="simple">
                                  <li><strong>The</strong> <code class="docutils literal"><span
                                        class="pre">env</span></code> <strong>section:</strong></li>
                                </ul>
                                <div class="line-block">
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">currentCoinbase</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The current block’s
                                      coinbase address, to be returned by the <cite>COINBASE</cite>
                                      instruction.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">currentDifficulty</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The current block’s
                                      difficulty, to be returned by the <cite>DIFFICULTY</cite>
                                      instruction.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">currentGasLimit</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The current block’s gas
                                      limit.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">currentNumber</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The current block’s
                                      number. Also indicates network rules for
                                      the transaction. Since blocknumber = <strong>1000000</strong>
                                      Homestead rules are applied to
                                      transaction. (see <a class="reference external"
                                        href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki</a>)</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">currentTimestamp</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The current block’s
                                      timestamp.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">previousHash</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The previous block’s hash.</div>
                                    <div class="line"><br>
                                    </div>
                                  </div>
                                </div>
                                <ul class="simple">
                                  <li><strong>The</strong> <code class="docutils literal"><span
                                        class="pre">transaction</span></code> <strong>section:</strong></li>
                                </ul>
                                <div class="line-block">
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">data</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The input data passed to
                                      the execution, as used by the <cite>CALLDATA</cite>...
                                      instructions. Given as an array of byte
                                      values. See $DATA_ARRAY.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">gasLimit</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The total amount of gas
                                      available for the execution, as would be
                                      returned by the <cite>GAS</cite>
                                      instruction were it be executed first.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">gasPrice</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The price of gas for the
                                      transaction, as used by the <cite>GASPRICE</cite>
                                      instruction.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">nonce</span></code></div>
                                  <div class="line-block">
                                    <div class="line">Scalar value equal to the
                                      number of transactions sent by the sender.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">address</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The address of the account
                                      under which the code is executing, to be
                                      returned by the <cite>ADDRESS</cite>
                                      instruction.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">secretKey</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The secret key as can be
                                      derived by the v,r,s values if the
                                      transaction.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">to</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The address of the
                                      transaction’s recipient, to be returned by
                                      the <cite>ORIGIN</cite> instruction.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">value</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The value of the
                                      transaction (or the endowment of the
                                      create), to be returned by the <cite>CALLVALUE`</cite>
                                      instruction (if executed first, before any
                                      <cite>CALL</cite>).</div>
                                    <div class="line"><br>
                                    </div>
                                  </div>
                                </div>
                                <ul class="simple">
                                  <li><strong>The</strong> <code class="docutils literal"><span
                                        class="pre">pre</span></code> <strong>and</strong>
                                    <code class="docutils literal"><span class="pre">post</span></code>
                                    <strong>sections each have the same format
                                      of a mapping between addresses and
                                      accounts. Each account has the format:</strong></li>
                                </ul>
                                <div class="line-block">
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">balance</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The balance of the
                                      account.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">nonce</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The nonce of the account.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">code</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The body code of the
                                      account, given as an array of byte values.
                                      See $DATA_ARRAY.</div>
                                  </div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">storage</span></code></div>
                                  <div class="line-block">
                                    <div class="line">The account’s storage,
                                      given as a mapping of keys to values. For
                                      key used notion of string as digital or
                                      hex number e.g: <code class="docutils literal"><span
                                          class="pre">"1200"</span></code> or <code
                                        class="docutils literal"><span class="pre">"0x04B0"</span></code>
                                      For values used $DATA_ARRAY.</div>
                                    <div class="line"><br>
                                    </div>
                                  </div>
                                </div>
                                <div class="line-block">
                                  <div class="line">The <code class="docutils literal"><span
                                        class="pre">logs</span></code> sections
                                    is a mapping between the blooms and their
                                    corresponding logentries.</div>
                                  <div class="line">Each logentry has the
                                    format:</div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">address</span></code> The
                                    address of the logentry.</div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">data</span></code> The data
                                    of the logentry.</div>
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">topics</span></code> The
                                    topics of the logentry, given as an array of
                                    values.</div>
                                  <div class="line"><br>
                                  </div>
                                </div>
                                <p>Finally, there is one simple key <code class="docutils literal"><span
                                      class="pre">output</span></code></p>
                                <div class="line-block">
                                  <div class="line"><code class="docutils literal"><span
                                        class="pre">output</span></code></div>
                                  <div class="line">The data, given as an array
                                    of bytes, returned from the execution (using
                                    the <code class="docutils literal"><span class="pre">RETURN</span></code>
                                    instruction). See $DATA_ARRAY. In order to
                                    avoid big data files, there is one
                                    exception. If the output data is prefixed
                                    with <code class="docutils literal"><span class="pre">#</span></code>,
                                    the following number represents the size of
                                    the output, and not the output directly.</div>
                                  <div class="line"><br>
                                  </div>
                                </div>
                                <blockquote>
                                  <div>
                                    <dl class="docutils">
                                      <dt><strong>$DATA_ARRAY</strong> - type
                                        that intended to contain raw byte data</dt>
                                      <dd>
                                        <p class="first">and for convenient of
                                          the users is populated with three
                                          types of numbers, all of them should
                                          be converted and concatenated to a
                                          byte array for VM execution.</p>
                                        <p>The types are:</p>
                                        <ol class="arabic simple">
                                          <li>number - (unsigned 64bit)</li>
                                          <li>“longnumber” - (any long number)</li>
                                          <li>“0xhex_num” - (hex format number)</li>
                                        </ol>
                                        <blockquote class="last">
                                          <div>e.g: <code class="docutils literal"><span
                                                class="pre">````[1,</span> <span
                                                class="pre">2,</span> <span class="pre">10000,</span>
                                              <span class="pre">"0xabc345dFF",</span>
                                              <span class="pre">"199999999999999999999999999999999999999"]````</span></code></div>
                                        </blockquote>
                                      </dd>
                                    </dl>
                                  </div>
                                </blockquote>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/ethereum-tests/rlp_tests/index"></span>
                            <div class="section" id="rlp-tests"> <span id="id1"></span>
                              <h4>RLP Tests<a class="headerlink" href="#rlp-tests"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Describes an <strong>RLP</strong> (<a class="reference external"
                                  href="https://github.com/ethereum/wiki/wiki/RLP">https://github.com/ethereum/wiki/wiki/RLP</a>)
                                encoding using the .json file. The client should
                                read the rlp byte stream, <strong>decode</strong>
                                and check whether the contents match its json
                                representation. Then it should try do it reverse
                                - <strong>encode</strong> json rlp
                                representation into rlp byte stream and check
                                whether it matches the given rlp byte stream.</p>
                              <p>If it is an invalid RLP byte stream in the
                                test, then ‘in’ field would contain string
                                ‘INVALID’</p>
                              <p>Some RLP byte streams are expected to be
                                generated by fuzz test suite. For those examples
                                ‘in’ field would contain string ‘VALID’ as it
                                means that rlp should be easily decoded.</p>
                              <p>RLP tests are located in in <code class="docutils literal"><span
                                    class="pre">/RLPTests</span></code></p>
                              <p><strong>Note</strong> that RLP tests are
                                testing a single RLP object encoding. Not a
                                stream of RLP objects in one array.</p>
                              <div class="section" id="basic-structure">
                                <h5>Basic structure<a class="headerlink" href="#basic-structure"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre>{
   "rlpTest": {
        "in": "dog",
        "out": "83646f67"
   },

   "multilist": {
        "in": [ "zw", [ 4 ], 1 ],
        "out": "c6827a77c10401"
   },

   "validRLP": {
        "in": "VALID",
        "out": "c7c0c1c0c3c0c1c0"
   },

   "invalidRLP": {
        "in": "INVALID",
        "out": "bf0f000000000000021111"
   },
   ...
}
</pre></div>
                                </div>
                              </div>
                              <div class="section" id="sections">
                                <h5>Sections<a class="headerlink" href="#sections"
                                    title="Permalink to this headline">¶</a></h5>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">in</span></code>
                                    - json object (array, int, string)
                                    representation of the rlp byte stream
                                    (*except values ‘VALID’ and ‘INVALID’)</li>
                                  <li><code class="docutils literal"><span class="pre">out</span></code>
                                    - string of rlp bytes stream</li>
                                </ul>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/ethereum-tests/difficulty_tests/index"></span>
                            <div class="section" id="difficulty-tests"> <span id="id1"></span>
                              <h4>Difficulty Tests<a class="headerlink" href="#difficulty-tests"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Found in <code class="docutils literal"><span
                                    class="pre">\Basic</span> <span class="pre">Tests\difficulty*.json</span></code>
                                files. This tests are designed to just check the
                                difficulty formula of a block.</p>
                              <p>difficulty = DIFFICULTY(currentBlockNumber,
                                currentTimestamp, parentTimestamp,
                                parentDifficulty)</p>
                              <p>described at [EIP2](<a class="reference external"
                                  href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki</a>)
                                point 4 with homestead changes.</p>
                              <p>So basically this .json tests are just to check
                                how this function is calculated on different
                                function parameters (parentDifficulty,
                                currentNumber) in its extremum points.</p>
                              <p>There are several test files:</p>
                              <dl class="docutils">
                                <dt><code class="docutils literal"><span class="pre">difficulty.json</span></code></dt>
                                <dd>Normal Frontier/Homestead chain difficulty
                                  tests defined manually</dd>
                                <dt><code class="docutils literal"><span class="pre">difficultyFrontier.json</span></code></dt>
                                <dd>Same as above, but auto-generated tests</dd>
                                <dt><code class="docutils literal"><span class="pre">difficultyMorden.json</span></code></dt>
                                <dd>Tests for testnetwork difficulty. (it has
                                  different homestead transition block)</dd>
                                <dt><code class="docutils literal"><span class="pre">difficultyOlimpic.json</span></code></dt>
                                <dd>Olympic network. (no homestead)</dd>
                                <dt><code class="docutils literal"><span class="pre">difficultyHomestead.json</span></code></dt>
                                <dd>Tests for homestead difficulty (regardless
                                  of the block number)</dd>
                                <dt><code class="docutils literal"><span class="pre">difficultyCustomHomestead.json</span></code></dt>
                                <dd>Tests for homestead difficulty (regardless
                                  of the block number)</dd>
                              </dl>
                              <div class="section" id="basic-structure">
                                <h5>Basic structure<a class="headerlink" href="#basic-structure"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre><span class="p">{</span>
        <span class="s">"difficultyTest"</span> <span class="p">:</span> <span class="p">{</span>
                <span class="s">"parentTimestamp"</span> <span class="p">:</span> <span
class="s">"42"</span><span class="p">,</span>
                <span class="s">"parentDifficulty"</span> <span class="p">:</span> <span
class="s">"1000000"</span><span class="p">,</span>
                <span class="s">"currentTimestamp"</span> <span class="p">:</span> <span
class="s">"43"</span><span class="p">,</span>
                <span class="s">"currentBlockNumber"</span> <span class="p">:</span> <span
class="s">"42"</span><span class="p">,</span>
                <span class="s">"currentDifficulty"</span> <span class="p">:</span> <span
class="s">"1000488"</span>
        <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                                </div>
                              </div>
                              <div class="section" id="sections">
                                <h5>Sections<a class="headerlink" href="#sections"
                                    title="Permalink to this headline">¶</a></h5>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">parentTimestamp</span></code>
                                    - indicates the timestamp of a previous
                                    block</li>
                                  <li><code class="docutils literal"><span class="pre">parentDifficulty</span></code>
                                    - indicates the difficulty of a previous
                                    block</li>
                                  <li><code class="docutils literal"><span class="pre">currentTimestamp</span></code>
                                    - indicates the timestamp of a current block</li>
                                  <li><code class="docutils literal"><span class="pre">currentBlockNumber</span></code>
                                    - indicates the number of a current block
                                    (previous block number = currentBlockNumber
                                    - 1)</li>
                                  <li><code class="docutils literal"><span class="pre">currentDifficulty</span></code>
                                    - indicates the difficulty of a current
                                    block</li>
                                </ul>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/ethereum-tests/transaction_tests/index"></span>
                            <div class="section" id="transaction-tests"> <span
                                id="id1"></span>
                              <h4>Transaction Tests<a class="headerlink" href="#transaction-tests"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Describes a complete transaction and its <a class="reference external"
                                  href="https://github.com/ethereum/wiki/wiki/RLP">RLP</a>
                                representation using the .json file. The client
                                should read the rlp and check whether the
                                transaction is valid, has the correct sender and
                                corresponds to the transaction parameters. If it
                                is an invalid transaction, the transaction and
                                the sender object will be missing.</p>
                              <div class="section" id="basic-structure">
                                <h5>Basic structure<a class="headerlink" href="#basic-structure"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre>{
   "transactionTest1": {
          "rlp" : "bytearray",
          "sender" : "address",
          "blocknumber" : "1000000"
          "transaction" : {
                        "nonce" : "int",
                        "gasPrice" : "int",
                        "gasLimit" : "int",
                        "to" : "address",
                        "value" : "int",
                        "v" : "byte",
                        "r" : "256 bit unsigned int",
                        "s" : "256 bit unsigned int",
                        "data" : "byte array"
          }
   },

   "invalidTransactionTest": {
          "rlp" : "bytearray",
   },
   ...
}
</pre></div>
                                </div>
                              </div>
                              <div class="section" id="sections">
                                <h5>Sections<a class="headerlink" href="#sections"
                                    title="Permalink to this headline">¶</a></h5>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">rlp</span></code>
                                    - RLP encoded data of this transaction</li>
                                  <li><code class="docutils literal"><span class="pre">transaction</span></code>
                                    - transaction described by fields</li>
                                  <li><code class="docutils literal"><span class="pre">nonce</span></code>
                                    - A scalar value equal to the number of
                                    transactions sent by the sender.</li>
                                  <li><code class="docutils literal"><span class="pre">gasPrice</span></code>
                                    - A scalar value equal to the number of wei
                                    to be paid per unit of gas.</li>
                                  <li><code class="docutils literal"><span class="pre">gasLimit</span></code>
                                    - A scalar value equal to the maximum amount
                                    of gas that should be used in executing this
                                    transaction.</li>
                                  <li><code class="docutils literal"><span class="pre">to</span></code>
                                    - The 160-bit address of the message call’s
                                    recipient or empty for a contract creation
                                    transaction.</li>
                                  <li><code class="docutils literal"><span class="pre">value</span></code>
                                    - A scalar value equal to the number of wei
                                    to be transferred to the message call’s
                                    recipient or, in the case of contract
                                    creation, as an endowment to the newly
                                    created account.</li>
                                  <li><code class="docutils literal"><span class="pre">v,</span>
                                      <span class="pre">r,</span> <span class="pre">s</span></code>
                                    - Values corresponding to the signature of
                                    the transaction and used to determine the
                                    sender of the transaction.</li>
                                  <li><code class="docutils literal"><span class="pre">sender</span></code>
                                    - the address of the sender, derived from
                                    the v,r,s values.</li>
                                  <li><code class="docutils literal"><span class="pre">blocknumber</span></code>
                                    - indicates network rules for the
                                    transaction. Since blocknumber = <strong>1000000</strong>
                                    Homestead rules are applied to transaction.
                                    (see <a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki</a>)</li>
                                </ul>
                              </div>
                            </div>
                            <span id="document-contracts-and-transactions/ethereum-tests/vm_tests/index"></span>
                            <div class="section" id="vm-tests"> <span id="id1"></span>
                              <h4>VM Tests<a class="headerlink" href="#vm-tests"
                                  title="Permalink to this headline">¶</a></h4>
                              <p>Found in <code class="docutils literal"><span
                                    class="pre">/VMTest</span></code>, the VM
                                tests aim is to test the basic workings of the
                                VM in isolation. This is specifically not meant
                                to cover transaction, creation or call
                                processing, or management of the state trie.
                                Indeed at least one implementation tests the VM
                                without calling into any Trie code at all.</p>
                              <p>It is based around the notion of executing a
                                single piece of code as part of a transaction,
                                described by the <code class="docutils literal"><span
                                    class="pre">exec</span></code> portion of
                                the test. The overarching environment in which
                                it is executed is described by the <code class="docutils literal"><span
                                    class="pre">env</span></code> portion of the
                                test and includes attributes of the current and
                                previous blocks. A set of pre-existing accounts
                                are detailed in the <code class="docutils literal"><span
                                    class="pre">pre</span></code> portion and
                                form the world state prior to execution.
                                Similarly, a set of accounts are detailed in the
                                <code class="docutils literal"><span class="pre">post</span></code>
                                portion to specify the end world state.</p>
                              <p>The gas remaining (<code class="docutils literal"><span
                                    class="pre">gas</span></code>), the log
                                entries (<code class="docutils literal"><span class="pre">logs</span></code>)
                                as well as any output returned from the code (<code
                                  class="docutils literal"><span class="pre">output</span></code>)
                                is also detailed.</p>
                              <p>Because the data of the blockchain is not
                                given, the opcode BLOCKHASH could not return the
                                hashes of the corresponding blocks. Therefore we
                                define the hash of block number n to be
                                SHA3-256(“n”).</p>
                              <p>Since these tests are meant only as a basic
                                test of VM operation, the <code class="docutils literal"><span
                                    class="pre">CALL</span></code> and <code class="docutils literal"><span
                                    class="pre">CREATE</span></code>
                                instructions are not actually executed. To
                                provide the possibility of testing to guarantee
                                they were actually run at all, a separate
                                portion <code class="docutils literal"><span class="pre">callcreates</span></code>
                                details each <code class="docutils literal"><span
                                    class="pre">CALL</span></code> or <code class="docutils literal"><span
                                    class="pre">CREATE</span></code> operation
                                in the order they would have been executed.
                                Furthermore, gas required is simply that of the
                                VM execution: the gas cost for transaction
                                processing is excluded.</p>
                              <p>It is generally expected that the test
                                implementer will read <code class="docutils literal"><span
                                    class="pre">env</span></code>, <code class="docutils literal"><span
                                    class="pre">exec</span></code> and <code class="docutils literal"><span
                                    class="pre">pre</span></code> then check
                                their results against <code class="docutils literal"><span
                                    class="pre">gas</span></code>, <code class="docutils literal"><span
                                    class="pre">logs</span></code>, <code class="docutils literal"><span
                                    class="pre">out</span></code>, <code class="docutils literal"><span
                                    class="pre">post</span></code> and <code class="docutils literal"><span
                                    class="pre">callcreates</span></code>. If an
                                exception is expected, then latter sections are
                                absent in the test. Since the reverting of the
                                state is not part of the VM tests.</p>
                              <div class="section" id="basic-structure">
                                <h5>Basic structure<a class="headerlink" href="#basic-structure"
                                    title="Permalink to this headline">¶</a></h5>
                                <div class="highlight-python">
                                  <div class="highlight">
                                    <pre>{
   "test name 1": {
           "env": { ... },
           "pre": { ... },
           "exec": { ... },
           "gas": { ... },
           "logs": { ... },
           "out": { ... },
           "post": { ... },
           "callcreates": { ... }
   },
   "test name 2": {
           "env": { ... },
           "pre": { ... },
           "exec": { ... },
           "gas": { ... },
           "logs": { ... },
           "out": { ... },
           "post": { ... },
           "callcreates": { ... }
   },
   ...
}
</pre></div>
                                </div>
                              </div>
                              <div class="section" id="sections">
                                <h5>Sections<a class="headerlink" href="#sections"
                                    title="Permalink to this headline">¶</a></h5>
                                <p>The <code class="docutils literal"><span class="pre">env</span></code>
                                  section:</p>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">currentCoinbase</span></code>:
                                    The current block’s coinbase address, to be
                                    returned by the <code class="docutils literal"><span
                                        class="pre">COINBASE</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">currentDifficulty</span></code>:
                                    The current block’s difficulty, to be
                                    returned by the <code class="docutils literal"><span
                                        class="pre">DIFFICULTY</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">currentGasLimit</span></code>:
                                    The current block’s gas limit.</li>
                                  <li><code class="docutils literal"><span class="pre">currentNumber</span></code>:
                                    The current block’s number.</li>
                                  <li><code class="docutils literal"><span class="pre">currentTimestamp</span></code>:
                                    The current block’s timestamp.</li>
                                  <li><code class="docutils literal"><span class="pre">previousHash</span></code>:
                                    The previous block’s hash.</li>
                                </ul>
                                <p>The <code class="docutils literal"><span class="pre">exec</span></code>
                                  section:</p>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">address</span></code>:
                                    The address of the account under which the
                                    code is executing, to be returned by the <code
                                      class="docutils literal"><span class="pre">ADDRESS</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">origin</span></code>:
                                    The address of the execution’s origin, to be
                                    returned by the <code class="docutils literal"><span
                                        class="pre">ORIGIN</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">caller</span></code>:
                                    The address of the execution’s caller, to be
                                    returned by the <code class="docutils literal"><span
                                        class="pre">CALLER</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">value</span></code>:
                                    The value of the call (or the endowment of
                                    the create), to be returned by the <code class="docutils literal"><span
                                        class="pre">CALLVALUE</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">data</span></code>:
                                    The input data passed to the execution, as
                                    used by the <code class="docutils literal"><span
                                        class="pre">CALLDATA</span></code>...
                                    instructions. Given as an array of byte
                                    values. See $DATA_ARRAY.</li>
                                  <li><code class="docutils literal"><span class="pre">code</span></code>:
                                    The actual code that should be executed on
                                    the VM (not the one stored in the
                                    state(address)) . See $DATA_ARRAY.</li>
                                  <li><code class="docutils literal"><span class="pre">gasPrice</span></code>:
                                    The price of gas for the transaction, as
                                    used by the <code class="docutils literal"><span
                                        class="pre">GASPRICE</span></code>
                                    instruction.</li>
                                  <li><code class="docutils literal"><span class="pre">gas</span></code>:
                                    The total amount of gas available for the
                                    execution, as would be returned by the <code
                                      class="docutils literal"><span class="pre">GAS</span></code>
                                    instruction were it be executed first.</li>
                                </ul>
                                <p>The <code class="docutils literal"><span class="pre">pre</span></code>
                                  and <code class="docutils literal"><span class="pre">post</span></code>
                                  sections each have the same format of a
                                  mapping between addresses and accounts. Each
                                  account has the format:</p>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">balance</span></code>:
                                    The balance of the account.</li>
                                  <li><code class="docutils literal"><span class="pre">nonce</span></code>:
                                    The nonce of the account.</li>
                                  <li><code class="docutils literal"><span class="pre">code</span></code>:
                                    The body code of the account, given as an
                                    array of byte values. See $DATA_ARRAY.</li>
                                  <li><code class="docutils literal"><span class="pre">storage</span></code>:
                                    The account’s storage, given as a mapping of
                                    keys to values. For key used notion of
                                    string as digital or hex number e.g: <code
                                      class="docutils literal"><span class="pre">"1200"</span></code>
                                    or <code class="docutils literal"><span class="pre">"0x04B0"</span></code>
                                    For values used $DATA_ARRAY.</li>
                                </ul>
                                <p>The <code class="docutils literal"><span class="pre">callcreates</span></code>
                                  section details each <code class="docutils literal"><span
                                      class="pre">CALL</span></code> or <code class="docutils literal"><span
                                      class="pre">CREATE</span></code>
                                  instruction that has been executed. It is an
                                  array of maps with keys:</p>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">data</span></code>:
                                    An array of bytes specifying the data with
                                    which the <code class="docutils literal"><span
                                        class="pre">CALL</span></code> or <code
                                      class="docutils literal"><span class="pre">CREATE</span></code>
                                    operation was made. In the case of <code class="docutils literal"><span
                                        class="pre">CREATE</span></code>, this
                                    would be the (initialisation) code. See
                                    $DATA_ARRAY.</li>
                                  <li><code class="docutils literal"><span class="pre">destination</span></code>:
                                    The receipt address to which the <code class="docutils literal"><span
                                        class="pre">CALL</span></code> was made,
                                    or the null address (<code class="docutils literal"><span
                                        class="pre">"0000..."</span></code>) if
                                    the corresponding operation was <code class="docutils literal"><span
                                        class="pre">CREATE</span></code>.</li>
                                  <li><code class="docutils literal"><span class="pre">gasLimit</span></code>:
                                    The amount of gas with which the operation
                                    was made.</li>
                                  <li><code class="docutils literal"><span class="pre">value</span></code>:
                                    The value or endowment with which the
                                    operation was made.</li>
                                </ul>
                                <p>The <code class="docutils literal"><span class="pre">logs</span></code>
                                  sections is a mapping between the blooms and
                                  their corresponding logentries. Each logentry
                                  has the format:</p>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">address</span></code>:
                                    The address of the logentry.</li>
                                  <li><code class="docutils literal"><span class="pre">data</span></code>:
                                    The data of the logentry.</li>
                                  <li><code class="docutils literal"><span class="pre">topics</span></code>:
                                    The topics of the logentry, given as an
                                    array of values.</li>
                                </ul>
                                <p>Finally, there are two simple keys, <code class="docutils literal"><span
                                      class="pre">gas</span></code> and <code class="docutils literal"><span
                                      class="pre">output</span></code>:</p>
                                <ul class="simple">
                                  <li><code class="docutils literal"><span class="pre">gas</span></code>:
                                    The amount of gas remaining after execution.</li>
                                  <li><code class="docutils literal"><span class="pre">output</span></code>:
                                    The data, given as an array of bytes,
                                    returned from the execution (using the <code
                                      class="docutils literal"><span class="pre">RETURN</span></code>
                                    instruction). See $DATA_ARRAY.</li>
                                </ul>
                                <blockquote>
                                  <div>
                                    <dl class="docutils">
                                      <dt><strong>$DATA_ARRAY</strong> - type
                                        that intended to contain raw byte data</dt>
                                      <dd>and for convenient of the users is
                                        populated with three types of numbers,
                                        all of them should be converted and
                                        concatenated to a byte array for VM
                                        execution.</dd>
                                    </dl>
                                  </div>
                                </blockquote>
                                <ul>
                                  <li>
                                    <p class="first">The types are: 1. number -
                                      (unsigned 64bit) 2. “longnumber” - (any
                                      long number) 3. “0xhex_num” - (hex format
                                      number)</p>
                                    <blockquote>
                                      <div>
                                        <p>e.g: <code class="docutils literal"><span
                                              class="pre">````[1,</span> <span
                                              class="pre">2,</span> <span class="pre">10000,</span>
                                            <span class="pre">"0xabc345dFF",</span>
                                            <span class="pre">"199999999999999999999999999999999999999"]````</span></code></p>
                                      </div>
                                    </blockquote>
                                  </li>
                                </ul>
                              </div>
                            </div>
                          </div>
                        </div>
                        <span id="document-contracts-and-transactions/web3-base-layer-services"></span>
                        <div class="section" id="web3-base-layer-services">
                          <h3>Web3 Base Layer Services<a class="headerlink" href="#web3-base-layer-services"
                              title="Permalink to this headline">¶</a></h3>
                          <p>In addition to the Ethereum blockchain, more
                            components are being developed that decentralise
                            other important aspects of web applications.</p>
                          <img alt="images/ethereum-protocols.png" src="images/ethereum-protocols.png">
                          <div class="section" id="swarm-decentralised-data-storage-and-distribution">
                            <h4>Swarm - Decentralised data storage and
                              distribution<a class="headerlink" href="#swarm-decentralised-data-storage-and-distribution"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Swarm is a peer to peer data sharing network in
                              which files are addressed by the hash of their
                              content. Similar to Bittorrent, it is possible to
                              fetch the data from many nodes at once and as long
                              as a single node hosts a piece of data, it will
                              remain accessible everywhere. This approach makes
                              it possible to distribute data without having to
                              host any kind of server - data accessibility is
                              location independent.</p>
                            <p>Other nodes in the network can be incentivised to
                              replicate and store the data themselves, obviating
                              the need for hosting services when the original
                              nodes are not connected to the network.</p>
                          </div>
                          <div class="section" id="whisper-decentralised-messaging">
                            <h4>Whisper - Decentralised messaging<a class="headerlink"
                                href="#whisper-decentralised-messaging" title="Permalink to this headline">¶</a></h4>
                            <p>A protocol for private, secure communication
                              directly between nodes.</p>
                            <hr class="docutils">
                            <p>Furthermore, standard contracts are being created
                              to make the development and usage of distributed
                              applications easier:</p>
                          </div>
                          <div class="section" id="name-registry">
                            <h4>Name registry<a class="headerlink" href="#name-registry"
                                title="Permalink to this headline">¶</a></h4>
                            <p>Because dapps can be stored anywhere, including
                              the Swarm network, the name registry maps names to
                              their content or location. This is a decentralised
                              alternative to the Domain Name System (DNS).</p>
                            <p>See <a class="reference external" href="https://github.com/ethereum/EIPs/issues/26">https://github.com/ethereum/EIPs/issues/26</a></p>
                          </div>
                          <div class="section" id="contract-registry">
                            <h4>Contract registry<a class="headerlink" href="#contract-registry"
                                title="Permalink to this headline">¶</a></h4>
                            <p>To publish the source code of a specific
                              contract, its address has to be mapped to it. The
                              contract registry stores this mapping. Users can
                              then look up this mapping and verify the contract
                              byte code.</p>
                            <p>See * global registrar code * namereg API</p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <span id="document-frequently-asked-questions/frequently-asked-questions"></span>
                    <div class="section" id="frequently-asked-questions">
                      <h2>Frequently Asked Questions<a class="headerlink" href="#frequently-asked-questions"
                          title="Permalink to this headline">¶</a></h2>
                      <div class="contents local topic" id="contents">
                        <ul class="simple">
                          <li><a class="reference internal" href="#questions" id="id1">Questions</a>
                            <ul>
                              <li><a class="reference internal" href="#what-is-ethereum"
                                  id="id2">What is Ethereum?</a></li>
                              <li><a class="reference internal" href="#i-have-heard-of-ethereum-but-what-are-geth-mist-ethminer-mix"
                                  id="id3">I have heard of Ethereum, but what
                                  are Geth, Mist, Ethminer, Mix?</a></li>
                              <li><a class="reference internal" href="#how-can-i-store-big-files-on-the-blockchain"
                                  id="id4">How can I store big files on the
                                  blockchain?</a></li>
                              <li><a class="reference internal" href="#is-ethereum-based-on-bitcoin"
                                  id="id5">Is Ethereum based on Bitcoin?</a></li>
                              <li><a class="reference internal" href="#what-s-the-future-of-ethereum"
                                  id="id6">What’s the future of Ethereum?</a></li>
                              <li><a class="reference internal" href="#what-s-the-difference-between-account-and-wallet-contract"
                                  id="id7">What’s the difference between account
                                  and “wallet contract”?</a></li>
                              <li><a class="reference internal" href="#are-keyfiles-only-accessible-from-the-computer-you-downloaded-the-client-on"
                                  id="id8">Are keyfiles only accessible from the
                                  computer you downloaded the client on?</a></li>
                              <li><a class="reference internal" href="#how-long-should-it-take-to-download-the-blockchain"
                                  id="id9">How long should it take to download
                                  the blockchain?</a></li>
                              <li><a class="reference internal" href="#how-do-i-get-a-list-of-transactions-into-out-of-an-address"
                                  id="id10">How do I get a list of transactions
                                  into/out of an address?</a></li>
                              <li><a class="reference internal" href="#can-a-contract-pay-for-its-execution"
                                  id="id11">Can a contract pay for its
                                  execution?</a></li>
                              <li><a class="reference internal" href="#can-a-contract-call-another-contract"
                                  id="id12">Can a contract call another
                                  contract?</a></li>
                              <li><a class="reference internal" href="#can-a-transaction-be-signed-offline-and-then-submitted-on-another-online-device"
                                  id="id13">Can a transaction be signed offline
                                  and then submitted on another online device?</a></li>
                              <li><a class="reference internal" href="#how-to-get-testnet-ether"
                                  id="id14">How to get testnet Ether?</a></li>
                              <li><a class="reference internal" href="#can-a-transaction-be-sent-by-a-third-party-i-e-can-transaction-broadcasting-be-outsourced"
                                  id="id15">Can a transaction be sent by a third
                                  party? i.e can transaction broadcasting be
                                  outsourced</a></li>
                              <li><a class="reference internal" href="#can-ethereum-contracts-pull-data-using-third-party-apis"
                                  id="id16">Can Ethereum contracts pull data
                                  using third-party APIs?</a></li>
                              <li><a class="reference internal" href="#is-the-content-of-the-data-and-contracts-sent-over-the-ethereum-network-encrypted"
                                  id="id17">Is the content of the data and
                                  contracts sent over the Ethereum network
                                  encrypted?</a></li>
                              <li><a class="reference internal" href="#can-i-store-secrets-or-passwords-on-the-ethereum-network"
                                  id="id18">Can I store secrets or passwords on
                                  the Ethereum network?</a></li>
                              <li><a class="reference internal" href="#how-will-ethereum-combat-centralisation-of-mining-pools"
                                  id="id19">How will Ethereum combat
                                  centralisation of mining pools?</a></li>
                              <li><a class="reference internal" href="#how-will-ethereum-deal-with-ever-increasing-blockchain-size"
                                  id="id20">How will Ethereum deal with ever
                                  increasing blockchain size?</a></li>
                              <li><a class="reference internal" href="#how-will-ethereum-ensure-the-network-is-capable-of-making-10-000-transactions-per-second"
                                  id="id21">How will Ethereum ensure the network
                                  is capable of making 10,000+
                                  transactions-per-second?</a></li>
                              <li><a class="reference internal" href="#where-do-the-contracts-reside"
                                  id="id22">Where do the contracts reside?</a></li>
                              <li><a class="reference internal" href="#your-question-is-still-not-answered"
                                  id="id23">Your question is still not answered?</a></li>
                            </ul>
                          </li>
                        </ul>
                      </div>
                      <div class="section" id="questions">
                        <h3><a class="toc-backref" href="#id1">Questions</a><a class="headerlink"
                            href="#questions" title="Permalink to this headline">¶</a></h3>
                        <div class="section" id="what-is-ethereum">
                          <h4><a class="toc-backref" href="#id2">What is
                              Ethereum?</a><a class="headerlink" href="#what-is-ethereum"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethereum is a decentralized smart contracts
                            platform that is powered by a cryptocurrency called
                            Ether. A good starting point to learn more about its
                            workings would be the “<a class="reference internal"
                              href="index.html#what-is-ethereum"><span>What is
                                Ethereum?</span></a>” page.</p>
                        </div>
                        <div class="section" id="i-have-heard-of-ethereum-but-what-are-geth-mist-ethminer-mix">
                          <h4><a class="toc-backref" href="#id3">I have heard of
                              Ethereum, but what are Geth, Mist, Ethminer, Mix?</a><a
                              class="headerlink" href="#i-have-heard-of-ethereum-but-what-are-geth-mist-ethminer-mix"
                              title="Permalink to this headline">¶</a></h4>
                          <ul class="simple">
                            <li><strong>Geth</strong>: This is the Go
                              implementation of an Ethereum node, and is the
                              basis for any interactions with the Ethereum
                              blockchain. Running this locally will allow you to
                              easily interact with the Ethereum blockchain. Read
                              the <a class="reference external" href="https://github.com/ethereum/go-ethereum/wiki/Building-Ethereum">go-ethereum
                                installation instructions</a>.</li>
                            <li><strong>Mist</strong>: This is the equivalent of
                              a web browser, but for the Ethereum platform. It
                              acts as a GUI to display the accounts and
                              contracts that you interact with. It also allows
                              you to create and interact with contracts in a
                              graphical user interface without ever touching the
                              command line. If you are not a developer and just
                              want to store ether and interact with Ethereum
                              contracts, then Mist is the program to use.
                              Downloads can be found on the <a class="reference external"
                                href="https://github.com/ethereum/mist/releases">Mist
                                releases page</a>.</li>
                            <li><strong>Ethminer</strong>: A standalone miner.
                              This can be used to mine or benchmark a mining
                              set-up. It is compatible with eth, geth, and
                              pyethereum. Check out the <a class="reference internal"
                                href="index.html#mining"><span>Mining</span></a>
                              page for more information.</li>
                            <li><strong>Mix</strong>: The integrated development
                              environment for DApp authoring. Quickly prototype
                              and debug decentralised applications on the
                              Ethereum platform. More information can be found
                              at the <a class="reference external" href="https://github.com/ethereum/mix">Mix
                                GitHub Page</a>.</li>
                          </ul>
                        </div>
                        <div class="section" id="how-can-i-store-big-files-on-the-blockchain">
                          <h4><a class="toc-backref" href="#id4">How can I store
                              big files on the blockchain?</a><a class="headerlink"
                              href="#how-can-i-store-big-files-on-the-blockchain"
                              title="Permalink to this headline">¶</a></h4>
                          <p>In general you do not want to store large files or
                            pieces of data in the Ethereum blockchain because of
                            the high cost of storage. You will need to use a
                            third party storage solution, such as Swarm or IPFS.
                            Swarm is an Ethereum-specific project for
                            distributed file storage. IPFS is an non-Ethereum
                            project which has close ties to Ethereum; it will be
                            used independently and may be used as an added layer
                            underlying Swarm in the future. See <a class="reference external"
                              href="http://ethereum.stackexchange.com/questions/1000/what-are-some-proposed-ways-of-storing-data-in-ethereum/1001#1001">this
                              Ethereum StackExchange post on the topic</a> for
                            more information.</p>
                        </div>
                        <div class="section" id="is-ethereum-based-on-bitcoin">
                          <h4><a class="toc-backref" href="#id5">Is Ethereum
                              based on Bitcoin?</a><a class="headerlink" href="#is-ethereum-based-on-bitcoin"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Only in the sense that it uses a blockchain, which
                            Bitcoin pioneered. Ethereum has a separate
                            blockchain that has several significant technical
                            differences from Bitcoin’s blockchain. See <a class="reference external"
                              href="http://ethereum.stackexchange.com/questions/700/what-are-the-differences-between-bitcoin-blockchain-and-ethereum-blockchain">this
                              Ethereum StackExchange answer</a> for a detailed
                            explanation.</p>
                        </div>
                        <div class="section" id="what-s-the-future-of-ethereum">
                          <h4><a class="toc-backref" href="#id6">What’s the
                              future of Ethereum?</a><a class="headerlink" href="#what-s-the-future-of-ethereum"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethereum developers are planning a switch from a
                            Proof-of-Work consensus model to a Proof-of-Stake
                            consensus model in the future. They are also
                            investigating scalability solutions and how to store
                            secrets on the blockchain.</p>
                        </div>
                        <div class="section" id="what-s-the-difference-between-account-and-wallet-contract">
                          <h4><a class="toc-backref" href="#id7">What’s the
                              difference between account and “wallet contract”?</a><a
                              class="headerlink" href="#what-s-the-difference-between-account-and-wallet-contract"
                              title="Permalink to this headline">¶</a></h4>
                          <p>An account is your public / private key pair file
                            that serves as your identity on the blockchain. See
                            “account” in the glossary. A “wallet contract” is an
                            Ethereum contract that secures your ether and
                            identity with features such as multisignature
                            signing and programmed deposit/withdrawal limits. A
                            wallet contract can be easily created in the Mist
                            Ethereum Wallet GUI client.</p>
                        </div>
                        <div class="section" id="are-keyfiles-only-accessible-from-the-computer-you-downloaded-the-client-on">
                          <h4><a class="toc-backref" href="#id8">Are keyfiles
                              only accessible from the computer you downloaded
                              the client on?</a><a class="headerlink" href="#are-keyfiles-only-accessible-from-the-computer-you-downloaded-the-client-on"
                              title="Permalink to this headline">¶</a></h4>
                          <p>No, you are welcome to export or move the keyfile,
                            but always remember to backup your keyfiles and be
                            aware of which computers you store your keyfile on.</p>
                        </div>
                        <div class="section" id="how-long-should-it-take-to-download-the-blockchain">
                          <h4><a class="toc-backref" href="#id9">How long should
                              it take to download the blockchain?</a><a class="headerlink"
                              href="#how-long-should-it-take-to-download-the-blockchain"
                              title="Permalink to this headline">¶</a></h4>
                          <p>The Ethereum blockchain is constantly growing, and
                            is nearing 10GB as of March 2016. The amount of time
                            it will take to download depends on the amount of
                            peers you are able to connect to, your internet
                            connection speed, and other factors. See the <span
                              class="xref std std-ref">download-the-blockchain-faster</span>
                            section for tips on syncing the blockchain more
                            quickly.</p>
                        </div>
                        <div class="section" id="how-do-i-get-a-list-of-transactions-into-out-of-an-address">
                          <h4><a class="toc-backref" href="#id10">How do I get a
                              list of transactions into/out of an address?</a><a
                              class="headerlink" href="#how-do-i-get-a-list-of-transactions-into-out-of-an-address"
                              title="Permalink to this headline">¶</a></h4>
                          <p>You would have to pull the transactions manually
                            out of the blockchain to achieve this.
                            Alternatively, you can rely on third party
                            explorers’ API’s like <a class="reference external"
                              href="https://etherchain.org/apidoc">Etherchain</a>.
                            For contract execution transactions however, you can
                            filter the contract logs to achieve this.</p>
                        </div>
                        <div class="section" id="can-a-contract-pay-for-its-execution">
                          <h4><a class="toc-backref" href="#id11">Can a contract
                              pay for its execution?</a><a class="headerlink" href="#can-a-contract-pay-for-its-execution"
                              title="Permalink to this headline">¶</a></h4>
                          <p>No this is not possible. The gas for the execution
                            must be provided by the address submitting the
                            execution request.</p>
                        </div>
                        <div class="section" id="can-a-contract-call-another-contract">
                          <h4><a class="toc-backref" href="#id12">Can a contract
                              call another contract?</a><a class="headerlink" href="#can-a-contract-call-another-contract"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Yes, this is possible, read <a class="reference external"
                              href="https://dappsforbeginners.wordpress.com/tutorials/interactions-between-contracts/">about
                              interactions between contracts</a>.</p>
                        </div>
                        <div class="section" id="can-a-transaction-be-signed-offline-and-then-submitted-on-another-online-device">
                          <h4><a class="toc-backref" href="#id13">Can a
                              transaction be signed offline and then submitted
                              on another online device?</a><a class="headerlink"
                              href="#can-a-transaction-be-signed-offline-and-then-submitted-on-another-online-device"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Yes, you can refer to the solution from <a class="reference external"
                              href="https://github.com/ConsenSys/icebox">Icebox</a>.</p>
                        </div>
                        <div class="section" id="how-to-get-testnet-ether">
                          <h4><a class="toc-backref" href="#id14">How to get
                              testnet Ether?</a><a class="headerlink" href="#how-to-get-testnet-ether"
                              title="Permalink to this headline">¶</a></h4>
                          <p>See <a class="reference internal" href="index.html#test-networks"><span>Test
                                Networks</span></a>.</p>
                        </div>
                        <div class="section" id="can-a-transaction-be-sent-by-a-third-party-i-e-can-transaction-broadcasting-be-outsourced">
                          <h4><a class="toc-backref" href="#id15">Can a
                              transaction be sent by a third party? i.e can
                              transaction broadcasting be outsourced</a><a class="headerlink"
                              href="#can-a-transaction-be-sent-by-a-third-party-i-e-can-transaction-broadcasting-be-outsourced"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Technically yes, but there is an important
                            restriction as opposed to bitcoin signed
                            transactions: in ethereum the transaction has a
                            nonce (more precisely, each account increases a
                            counter when sending a transaction based on how many
                            transactions total have been sent. If 3 transactions
                            have ever been sent from the account, the account
                            nonce would be 3).</p>
                        </div>
                        <div class="section" id="can-ethereum-contracts-pull-data-using-third-party-apis">
                          <h4><a class="toc-backref" href="#id16">Can Ethereum
                              contracts pull data using third-party APIs?</a><a
                              class="headerlink" href="#can-ethereum-contracts-pull-data-using-third-party-apis"
                              title="Permalink to this headline">¶</a></h4>
                          <p>No, Ethereum contracts cannot pull data from
                            external information sources in this way. It is
                            however possible to push data from external sites
                            (e.g. weather sites, stock prices) to Ethereum
                            contracts through transactions. There are “oracle”
                            services that are compatible with the Ethereum
                            network that will pull/push data to the Ethereum
                            network for a fee.</p>
                        </div>
                        <div class="section" id="is-the-content-of-the-data-and-contracts-sent-over-the-ethereum-network-encrypted">
                          <h4><a class="toc-backref" href="#id17">Is the content
                              of the data and contracts sent over the Ethereum
                              network encrypted?</a><a class="headerlink" href="#is-the-content-of-the-data-and-contracts-sent-over-the-ethereum-network-encrypted"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Data and contracts on the Ethereum network are
                            encoded, but not encrypted. Everyone can audit the
                            behavior of the contracts and the data sent to them.
                            However, you are always free to encrypt data locally
                            before broadcasting it to the network.</p>
                        </div>
                        <div class="section" id="can-i-store-secrets-or-passwords-on-the-ethereum-network">
                          <h4><a class="toc-backref" href="#id18">Can I store
                              secrets or passwords on the Ethereum network?</a><a
                              class="headerlink" href="#can-i-store-secrets-or-passwords-on-the-ethereum-network"
                              title="Permalink to this headline">¶</a></h4>
                          <p>All data on Ethereum is public. It is not possible
                            to store secrets or passwords in Ethereum contracts
                            without it being seen by all. There is work being
                            done to make this a possibility through code
                            obfuscation and other techniques. A good read would
                            be “<a class="reference external" href="https://blog.ethereum.org/2016/01/15/privacy-on-the-blockchain/">Privacy
                              on the Blockchain</a>” by Vitalik Buterin.</p>
                        </div>
                        <div class="section" id="how-will-ethereum-combat-centralisation-of-mining-pools">
                          <h4><a class="toc-backref" href="#id19">How will
                              Ethereum combat centralisation of mining pools?</a><a
                              class="headerlink" href="#how-will-ethereum-combat-centralisation-of-mining-pools"
                              title="Permalink to this headline">¶</a></h4>
                          <p>There are two primary ways that the Ethereum PoW
                            based consensus algorithm combats mining
                            centralisation (<a class="reference external" href="http://ethereum.stackexchange.com/questions/549/how-does-ethereum-avoid-mining-pool-centralization">Source</a>).</p>
                          <ul class="simple">
                            <li>The first is by reducing losses due to orphaned
                              blocks, which independent miners are more likely
                              to experience.
                              <ul>
                                <li>This portion of the Ethereum mining
                                  algorithm, a technique referred to as GHOST,
                                  includes the headers only of recently orphaned
                                  blocks in return for a reduced reward to both
                                  the block producer and the includer of the
                                  (otherwise orphaned) block. These included
                                  orphans from “grandparent” or earlier blocks
                                  are frequently referred to as “uncle” blocks
                                  because the gender neutral term “ommer” isn’t
                                  widely known or understood.</li>
                              </ul>
                            </li>
                            <li>The second way that the Ethereum PoW consensus
                              algorithm combats mining centralisation is by its
                              use of a Proof of Work function that is ASIC
                              resistant.
                              <ul>
                                <li>By preventing mining from becoming dominated
                                  by specially designed and produced hardware,
                                  independent miners are kept competitive or
                                  even given an advantage in terms of their
                                  profits and/or levels of hardware investment,
                                  because they can make use of readily available
                                  commodity hardware (i.e. consumer graphics
                                  cards).</li>
                              </ul>
                            </li>
                          </ul>
                        </div>
                        <div class="section" id="how-will-ethereum-deal-with-ever-increasing-blockchain-size">
                          <h4><a class="toc-backref" href="#id20">How will
                              Ethereum deal with ever increasing blockchain
                              size?</a><a class="headerlink" href="#how-will-ethereum-deal-with-ever-increasing-blockchain-size"
                              title="Permalink to this headline">¶</a></h4>
                          <p>There are many discussions around blockchain
                            scalability. This questioned has been partially
                            answered on <a class="reference external" href="http://ethereum.stackexchange.com/questions/521/what-does-it-mean-to-run-code-on-the-blockchain-wouldnt-blockchain-become-hu">this
                              Ethereum StackExchange post</a> and <a class="reference external"
                              href="https://blog.ethereum.org/2014/02/18/ethereum-scalability-and-decentralization-updates/">this
                              blog post from Vitalik Buterin</a>.</p>
                        </div>
                        <div class="section" id="how-will-ethereum-ensure-the-network-is-capable-of-making-10-000-transactions-per-second">
                          <h4><a class="toc-backref" href="#id21">How will
                              Ethereum ensure the network is capable of making
                              10,000+ transactions-per-second?</a><a class="headerlink"
                              href="#how-will-ethereum-ensure-the-network-is-capable-of-making-10-000-transactions-per-second"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ethereum is planning on implementing a
                            proof-of-stake consensus protocol change during the
                            Serenity phase of their development roadmap. More
                            information on the likely Ethereum PoS candidate and
                            how it may increase transactions-per-second can be <a
                              class="reference external" href="https://blog.ethereum.org/2015/08/01/introducing-casper-friendly-ghost/">found
                              here</a>.</p>
                        </div>
                        <div class="section" id="where-do-the-contracts-reside">
                          <h4><a class="toc-backref" href="#id22">Where do the
                              contracts reside?</a><a class="headerlink" href="#where-do-the-contracts-reside"
                              title="Permalink to this headline">¶</a></h4>
                          <p>TODO</p>
                        </div>
                        <div class="section" id="your-question-is-still-not-answered">
                          <h4><a class="toc-backref" href="#id23">Your question
                              is still not answered?</a><a class="headerlink" href="#your-question-is-still-not-answered"
                              title="Permalink to this headline">¶</a></h4>
                          <p>Ask the community on <a class="reference external"
                              href="http://ethereum.stackexchange.com/">Ethereum
                              StackExchange</a>.</p>
                        </div>
                      </div>
                    </div>
                    <span id="document-glossary"></span>
                    <div class="section" id="glossary">
                      <h2>Glossary<a class="headerlink" href="#glossary" title="Permalink to this headline">¶</a></h2>
                      <dl class="glossary docutils">
                      </dl>
                      <blockquote id="geth-letter">
                        <div>
                          <dl class="docutils">
                            <dt>Đ</dt>
                            <dd>Đ, <a class="reference external" href="https://en.wikipedia.org/wiki/D_with_stroke">D
                                with stroke</a>, is used in Old English, Middle
                              English, Icelandic, and Faroese to stand for an
                              uppercase letter “Eth”. It is used in words like
                              ĐEV or Đapp (decentralized application), where the
                              Đ is the Norse letter “eth”. The uppercase eth (Ð)
                              is also used to symbolize the cryptocurrency
                              Dogecoin.</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="dec-app">
                        <div>
                          <dl class="docutils">
                            <dt>decentralized application (= <a class="reference internal"
                                href="#dapp">dapp</a>)</dt>
                            <dd>Service that operates without a central trusted
                              party. An application that enables direct
                              interaction/agreements/communication between end
                              users and/or resources without a middleman. See <a
                                class="reference internal" href="index.html#dapps"><span>Dapps</span></a>.</dd>
                            <dt>DAO</dt>
                            <dd>decentralized autonomous organization DAO is
                              type of contract on the blockchain (or a suite of
                              contracts) that is supposed to codify, enforce or
                              automate the workings of an organization including
                              governance, fund-raising, operations, spending and
                              expansion.</dd>
                            <dt>identity</dt>
                            <dd>A set of cryptographically verifiable
                              interactions that have the property that they were
                              all created by the same person.</dd>
                            <dt>digital identity</dt>
                            <dd>The set of cryptographically verifiable
                              transactions signed by the same public key define
                              the digital identity’s behavior. In many real
                              world scenarios (voting) it is desireable that
                              digital identities coincide with real world
                              identities. Ensuring this without violence is an
                              unsolved problem.</dd>
                            <dt>unique identity</dt>
                            <dd>A set of cryptographically verifiable
                              interactions that have the property that they were
                              all created by the same person, with the added
                              constraint that one person cannot have multiple
                              unique identities.</dd>
                            <dt>reputation</dt>
                            <dd>The property of an identity that other entities
                              believe that identity to be either (1) competent
                              at some specific task, or (2) trustworthy in some
                              context, i.e., not likely to betray others even if
                              short-term profitable.</dd>
                            <dt>escrow</dt>
                            <dd>If two mutually-untrusting entities are engaged
                              in commerce, they may wish to pass funds through a
                              mutually trusted third party and instruct that
                              party to send the funds to the payee only when
                              evidence of product delivery has been shown. This
                              reduces the risk of the payer or payee committing
                              fraud. Both this construction and the third party
                              is called escrow.</dd>
                            <dt>deposit</dt>
                            <dd>Digital property placed into a contract
                              involving another party such that if certain
                              conditions are not satisfied that property is
                              automatically forfeited and either credited to a
                              counterparty as insurance against the conditions,
                              or destroyed (= burnt = equally distributed) or
                              donated to some charitable funds.</dd>
                            <dt>web of trust</dt>
                            <dd>The idea that if A highly rates B, and B highly
                              rates C, then A is likely to trust C. Complicated
                              and powerful mechanisms for determining the
                              reliability of specific individuals in specific
                              concepts can theoretically be gathered from this
                              principle.</dd>
                            <dt>incentive compatibility</dt>
                            <dd>A protocol is incentive-compatible if everyone
                              is better off “following the rules” than
                              attempting to cheat, at least unless a very large
                              number of people agree to cheat together at the
                              same time (collusion).</dd>
                            <dt>collusion</dt>
                            <dd>In an incentivized protocol scenario, when a
                              number of participants <em>play together</em>
                              (conspire) to game the rules to their own benefit.</dd>
                            <dt>token system</dt>
                            <dd>A fungible virtual good that can be traded. More
                              formally, a token system is a database mapping
                              addresses to numbers with the property that the
                              primary allowed operation is a transfer of N
                              tokens from A to B, with the conditions that N is
                              non-negative, N is not greater than A’s current
                              balance, and a document authorizing the transfer
                              is digitally signed by A. Secondary “issuance” and
                              “consumption” operations may also exist,
                              transaction fees may also be collected, and
                              simultaneous multi-transfers with many parties may
                              be possible. Typical use cases include currencies,
                              cryptographic tokens inside of networks, company
                              shares and digital gift cards.</dd>
                            <dt>block</dt>
                            <dd>A block is a package of data that contains zero
                              or more transactions, the hash of the previous
                              block (“parent”), and optionally other data. The
                              total set of blocks, with every block except for
                              the initial “genesis block” containing the hash of
                              its parent, is called the blockchain and contains
                              the entire transaction history of a network. Note
                              that some blockchain-based cryptocurrencies use
                              the word “ledger” instead of blockchain; the two
                              are roughly equivalent, although in systems that
                              use the term “ledger” each block generally
                              contains a full copy of the current state (e.g.
                              currency balances, partially fulfilled contracts,
                              registrations) of every account allowing users to
                              discard outdated historical data.</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="dapp">
                        <div>
                          <dl class="docutils">
                            <dt>dapp</dt>
                            <dd>Đapp Stands for “decentralized application”.
                              Some say it is pronounced Ethapp due to the use of
                              the <a class="reference external" href="gl:eth-letter">uppercase
                                eth letter Ð</a>.</dd>
                            <dt>address</dt>
                            <dd>An Ethereum address represents an account. For <a
                                class="reference internal" href="#eoa">EOA</a>,
                              the address is derived as the last 20 bytes of the
                              public key controlling the account, e.g., <code class="docutils literal"><span
                                  class="pre">cd2a3d9f938e13cd947ec05abc7fe734df8dd826</span></code>.
                              This is a <a class="reference internal" href="#hexadecimal">hexadecimal</a>
                              format (base 16 notation), which is often
                              indicated explicitly by appending <code class="docutils literal"><span
                                  class="pre">0x</span></code> to the address.
                              Web3.js and console functions accept addresses
                              with or without this prefix but for transparency
                              we encourage their use. Since each byte of the
                              address is represented by 2 hex characters, a
                              prefixed address is 42 characters long. Several
                              apps and APIs are also meant to implement the new
                              <a class="reference external" href="https://github.com/ethereum/EIPs/issues/55">checksum-enabled
                                address scheme</a> introduced in the Mist
                              Ethereum wallet as of version 0.5.0.</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="hexadecimal">
                        <div>
                          <dl class="docutils">
                            <dt>hexadecimal</dt>
                            <dd>Common representation format for byte
                              sequencing. Its advantage is that values are
                              represented in a compact format using two
                              characters per byte (the characters <code class="docutils literal"><span
                                  class="pre">[0-9][a-f]</span></code>).</dd>
                            <dt>ether</dt>
                            <dd>Ether is the name of the currency used within
                              Ethereum. It is used to pay for computations
                              within the EVM. Ambiguously, ether is also the
                              name of a unit in the system;</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="eoa">
                        <div>
                          <dl class="docutils">
                            <dt>EOA</dt>
                            <dd>Externally Owned Account. An account controlled
                              by a private key. If you own the private key
                              associated with the EOA you have the ability to
                              send ether and messages from it. Contract accounts
                              also have an address, see <a class="reference internal"
                                href="index.html#accounts"><span>Accounts</span></a>.
                              EOAs and contract accounts may be combined into a
                              single account type during Serenity.</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="gas">
                        <div>
                          <dl class="docutils">
                            <dt>gas</dt>
                            <dd>Name for the <cite>cryptofuel</cite> that is
                              consumed when code is executed by the EVM. The gas
                              is paid for execution fee for every operation made
                              on an Ethereum blockchain.</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="gas-limit">
                        <div>
                          <dl class="docutils">
                            <dt>gas limit</dt>
                            <dd>Gas limit can apply to both individual
                              transactions, see <a class="reference internal" href="#transaction-gas-limit">transaction
                                gas limit</a> and to blocks, <cite>block-gas-limit</cite>.
                              For individual transactions, the gas limit
                              represents the maximum amount of gas you indicate
                              you are willing to pay for a contract execution
                              transaction. It is meant to protect users from
                              getting their ether depleted when trying to
                              execute buggy or malicious contracts. The block
                              gas limit represents the maximum cumulative gas
                              used for all the transactions in a block. With the
                              launch of Homestead, the block gas limit floor
                              will increase from 3,141,592 gas to 4,712,388 gas
                              (~50% increase).</dd>
                          </dl>
                        </div>
                      </blockquote>
                      <blockquote id="transaction-gas-limit">
                        <div>
                          <dl class="docutils">
                            <dt>gas price</dt>
                            <dd>Price in ether of one unit of gas specified in a
                              transaction. With the launch of Homestead, the
                              default gas price reduces from 50 shannon to 20
                              shannon (~60% reduction).</dd>
                            <dt>transaction</dt>
                            <dd>The signed data package that stores a message to
                              be sent from an externally owned account. Simply
                              put, a transaction describes a transfer of
                              information from an EOA to another EOA or a
                              contract account.</dd>
                            <dt>message</dt>
                            <dd>A data transfer mechanism contracts use to
                              communicate with other contracts. Messages can
                              also be described as virtual objects that are
                              never serialized and exist only in the Ethereum
                              execution environment.</dd>
                            <dt>Web3</dt>
                            <dd>The exact definition of the Web3 paradigm is
                              still taking form, but it generally refers to the
                              phenomenon of increased connectedness between all
                              kinds of devices, decentralization of services and
                              applications, semantic storage of information
                              online and application of artificial intelligence
                              to the web.</dd>
                            <dt>DAO</dt>
                            <dd>See Decentralized Autonomous Organization.</dd>
                            <dt>epoch</dt>
                            <dd>Epoch is the interval between each regeneration
                              of the DAG used as seed by the PoW algorithm
                              Ethash. The epoch in specified as 30000 blocks.</dd>
                            <dt>elliptic curve (cryptography)</dt>
                            <dd>Refers to an approach to public-key cryptography
                              based on the algebraic structure of elliptic
                              curves over finite fields. See <a class="reference external"
                                href="https://en.wikipedia.org/wiki/Elliptic_curve_cryptography">elliptic
                                curve cryptography</a>.</dd>
                            <dt>wallet</dt>
                            <dd>A wallet, in the most generic sense, refers to
                              anything that can store ether or any other crypto
                              token. In the crypto space in general, the term
                              wallet is used to mean anything from a single
                              private/public key pair (like a single paper
                              wallet) all the way to applications that manage
                              multiple key pairs, like the Mist Ethereum wallet.</dd>
                            <dt>contract</dt>
                            <dd>A persistent piece of code on the Ethereum
                              blockchain that encompasses a set of data and
                              executable functions. These functions execute when
                              Ethereum transactions are made to them with
                              certain input parameters. Based on the input
                              parameters, the functions will execute and
                              interact with data within and outside of the
                              contract.</dd>
                            <dt>suicide</dt>
                            <dd>See self-destruct. <code class="docutils literal"><span
                                  class="pre">selfdestruct</span></code> acts as
                              an alias to the deprecated <code class="docutils literal"><span
                                  class="pre">suicide</span></code> terminology
                              in accordance with <a class="reference external"
                                href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6.md">EIP
                                6 - Renaming SUICIDE OPCODE</a>.</dd>
                            <dt>selfdestruct</dt>
                            <dd>A global variable in the Solidity language that
                              allows you to <a class="reference external" href="https://solidity.readthedocs.org/en/latest/miscellaneous.html#global-variables">“destroy
                                the current contract, sending its funds to the
                                given address”</a>. <code class="docutils literal"><span
                                  class="pre">selfdestruct</span></code> acts as
                              an alias to the deprecated <code class="docutils literal"><span
                                  class="pre">suicide</span></code> terminology
                              in accordance with <a class="reference external"
                                href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-6.md">EIP
                                6 - Renaming SUICIDE OPCODE</a>. It frees up
                              space on the blockchain and prevents future
                              execution of the contract. The contract’s address
                              will still persist, but ether sent to it will be
                              lost forever. The possibility to kill a contract
                              has to be implemented by the contract creator
                              him/herself using the Solidity <code class="docutils literal"><span
                                  class="pre">selfdestruct</span></code>
                              function.</dd>
                            <dt>transaction fee</dt>
                            <dd>Also known as gas cost, it is the amount of
                              ether that the miners will charge for the
                              execution of your transaction.</dd>
                            <dt>mining</dt>
                            <dd>The process of verifying transactions and
                              contract execution on the Ethereum blockchain in
                              exchange for a reward in ether with the mining of
                              every block.</dd>
                            <dt>mining pool</dt>
                            <dd>The pooling of resources by miners, who share
                              their processing power over a network, to split
                              the reward equally, according to the amount of
                              work they contributed to solving a block.</dd>
                            <dt>mining reward</dt>
                            <dd>The amount of cryptographic tokens (in this case
                              ether) that is given to the miner who mined a new
                              block.</dd>
                            <dt>state</dt>
                            <dd>Refers to a snapshot of all balances and data at
                              a particular point in time on the blockchain,
                              normally referring to the condition at a
                              particular block.</dd>
                            <dt>blockchain</dt>
                            <dd>An ever-extending series of data blocks that
                              grows as new transactions are confirmed as part of
                              a new block. Each new block is chained to the
                              existing blockchain by a cryptographic
                              proof-of-work.</dd>
                            <dt>peer</dt>
                            <dd>Other computers on the network also running an
                              Ethereum node (Geth) with an exact copy of the
                              blockchain that you have.</dd>
                            <dt>signing</dt>
                            <dd>Producing a piece of data from the data to be
                              signed using your private key, to prove that the
                              data originates from you.</dd>
                            <dt>discovery (peer)</dt>
                            <dd>The process of ‘gossiping’ with other nodes in
                              the network to find out the state of other nodes
                              on the network.</dd>
                            <dt>gas price oracle</dt>
                            <dd>A helper function of the Geth client that tries
                              to find an appropriate default gas price when
                              sending transactions.</dd>
                            <dt>light client</dt>
                            <dd>A client program that allows users in
                              low-capacity environments to still be able to
                              execute and check the execution of transactions
                              without needing to run a full Ethereum node
                              (Geth).</dd>
                            <dt>etherbase</dt>
                            <dd>It is the default name of the account on your
                              node that acts as your primary account. If you do
                              mining, mining rewards will be credited to this
                              account.</dd>
                            <dt>coinbase</dt>
                            <dd>Coinbase is analogous to etherbase, but is a
                              more generic term for all cryptocurrency
                              platforms.</dd>
                            <dt>balance</dt>
                            <dd>The amount of cryptocurrency (in this case)
                              belonging to an account.</dd>
                            <dt>solidity</dt>
                            <dd>Solidity is a high-level language whose syntax
                              is similar to that of JavaScript and it is
                              designed to compile to code for the Ethereum
                              Virtual Machine.</dd>
                            <dt>serpent</dt>
                            <dd>Serpent is a high-level language whose syntax is
                              similar to that of Python and it is designed to
                              compile to code for the Ethereum Virtual Machine.</dd>
                            <dt>EVM</dt>
                            <dd>Ethereum Virtual Machine, the decentralized
                              computing platform which forms the core of the
                              Ethereum platform.</dd>
                            <dt>virtual machine</dt>
                            <dd>In computing, it refers to an emulation of a
                              particular computer system.</dd>
                            <dt>peer to peer network</dt>
                            <dd>A network of computers that are collectively
                              able to perform functionalities normally only
                              possible with centralized, server-based services.</dd>
                            <dt>decentralization</dt>
                            <dd>The concept of moving the control and execution
                              of computational processes away from a central
                              entity.</dd>
                            <dt>distributed hash table</dt>
                            <dd>A distributed hash table (DHT) is a class of a
                              decentralized distributed system that provides a
                              lookup service similar to a hash table: (key,
                              value) pairs are stored in a DHT, and any
                              participating node can efficiently retrieve the
                              value associated with a given key.</dd>
                            <dt>NAT</dt>
                            <dd>Network address translation (NAT) is a
                              methodology of remapping one IP address space into
                              another by modifying network address information
                              in Internet Protocol (IP) datagram packet headers
                              while they are in transit across a traffic routing
                              device.</dd>
                            <dt>nonce</dt>
                            <dd>Number Used Once or Number Once. A nonce, in
                              information technology, is a number generated for
                              a specific use, such as session authentication.
                              Typically, a nonce is some value that varies with
                              time, although a very large random number is
                              sometimes used. In general usage, nonce means “for
                              the immediate occasion” or “for now.” In the case
                              of Blockchain Proof of Work scenarios, the hash
                              value, found by a Miner, matching the network’s
                              Difficulty thus proving the Block Validity is
                              called Nonce as well.</dd>
                            <dt>proof-of-work</dt>
                            <dd>Often seen in its abbreviated form “PoW”, it
                              refers to a mathematical value that can act as the
                              proof of having solved a resource and time
                              consuming computational problem.</dd>
                            <dt>proof-of-stake</dt>
                            <dd>An alternative method of mining blocks that
                              require miners to demonstrate their possession of
                              a certain amount of the currency of the network in
                              question. This works on the principle that miners
                              will be disincentivized to try to undermine a
                              network in which they have a stake. PoS is less
                              wasteful than PoW, but is still often used
                              together with it to provide added security to the
                              network.</dd>
                            <dt>CASPER</dt>
                            <dd>Casper is a security-deposit based economic
                              consensus protocol. This means that nodes, so
                              called “bonded validators”, have to place a
                              security deposit (an action we call “bonding”) in
                              order to serve the consensus by producing blocks.
                              If a validator produces anything that Casper
                              considers “invalid”, the deposit is forfeited
                              along with the privilege of participating in the
                              consensus process.</dd>
                            <dt>consensus</dt>
                            <dd>The agreement among all nodes in the network
                              about the state of the Ethereum network.</dd>
                            <dt>homestead</dt>
                            <dd>Homestead is the second major version release of
                              the Ethereum platform. Homestead includes several
                              protocol changes and a networking change that
                              makes possible further network upgrades: <a class="reference external"
                                href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">EIP-2
                                Main homestead hardfork changes</a>; <a class="reference external"
                                href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-7.md">EIP-7
                                Hardfork EVM update (DELEGATECALL)</a>; <a class="reference external"
                                href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-8.md">EIP-8
                                devp2p forward compatibility</a>. Homestead will
                              launch when block 1,150,000 is reached on the
                              Mainnet. On the Testnet, Homestead will launch at
                              block 494,000.</dd>
                            <dt>metropolis</dt>
                            <dd>The third stage of Ethereum’s release. This is
                              the stage when the user interfaces come out (e.g.
                              Mist), including a dapp store, and non-technical
                              users should feel comfortable joining at this
                              point.</dd>
                            <dt>serenity</dt>
                            <dd>The fourth stage of Ethereum’s release. This is
                              when things are going to get fancy: the network is
                              going to change its mining process from
                              Proof-of-Work to Proof-of-Stake.</dd>
                            <dt>frontier</dt>
                            <dd>Ethereum was planned to be released in four
                              major steps with Frontier being the name for the
                              first phase. The Frontier release went live on
                              July 30th, 2015. The command line Frontier phase
                              was mainly meant to get mining operations going
                              with the full reward of 5 ether per block and also
                              to promote the emergence of ether exchanges.
                              Frontier surpassed earlier modest expectations and
                              has nurtured tremendous growth of the ecosystem.</dd>
                            <dt>olympic</dt>
                            <dd>The Frontier pre-release, which launched on May
                              9th 2015. It was meant for developers to help test
                              the limits of the Ethereum blockchain.</dd>
                            <dt>morden</dt>
                            <dd>Morden is the first Ethereum alternative
                              testnet. It is expected to continue throughout the
                              Frontier and Homestead era.</dd>
                            <dt>testnet</dt>
                            <dd>A mirror network of the production Ethereum
                              network that is meant for testing. See Morden.</dd>
                            <dt>private chain</dt>
                            <dd>A fully private blockchain is a blockchain where
                              write permissions are kept centralized to one
                              organization.</dd>
                            <dt>consortium chain</dt>
                            <dd>A blockchain where the consensus process is
                              controlled by a pre-selected set of nodes.</dd>
                            <dt>micropayment</dt>
                            <dd>A micropayment is a financial transaction
                              involving a very small sum of money (&lt;1 USD)
                              and usually one that occurs online.</dd>
                            <dt>sharding</dt>
                            <dd>The splitting of the space of possible accounts
                              (contracts are accounts too) into subspaces, for
                              example, based on first digits of their numerical
                              addresses. This allows for contract executions to
                              be executed within ‘shards’ instead of network
                              wide, allowing for faster transactions and greater
                              scalability.</dd>
                            <dt>hash</dt>
                            <dd>A cryptographic function which takes an input
                              (or ‘message’) and returns a fixed-size
                              alphanumeric string, which is called the hash
                              value (sometimes called a message digest, a
                              digital fingerprint, a digest or a checksum). A
                              hash function (or hash algorithm) is a process by
                              which a document (i.e. a piece of data or file) is
                              processed into a small piece of data (usually 32
                              bytes) which looks completely random, and from
                              which no meaningful data can be recovered about
                              the document, but which has the important property
                              that the result of hashing one particular document
                              is always the same. Additionally, it is crucially
                              important that it is computationally infeasible to
                              find two documents that have the same hash.
                              Generally, changing even one letter in a document
                              will completely randomize the hash; for example,
                              the SHA3 hash of “Saturday” is <code class="docutils literal"><span
                                  class="pre">c38bbc8e93c09f6ed3fe39b5135da91ad1a99d397ef16948606cdcbd14929f9d</span></code>,
                              whereas the SHA3 hash of “Caturday” is <code class="docutils literal"><span
                                  class="pre">b4013c0eed56d5a0b448b02ec1d10dd18c1b3832068fbbdc65b98fa9b14b6dbf</span></code>.
                              Hashes are usually used as a way of creating a
                              globally agreed-upon identifier for a particular
                              document that cannot be forged.</dd>
                            <dt>crypto-fuel</dt>
                            <dd>Similar to ‘gas’, referring to the amount of
                              cryptocurrency required to power a transaction.</dd>
                            <dt>cryptoeconomics</dt>
                            <dd>The economics of cryptocurrencies.</dd>
                            <dt>protocol</dt>
                            <dd>A standard used to define a method of exchanging
                              data over a computer network.</dd>
                            <dt>block validation</dt>
                            <dd>The checking of the coherence of the
                              cryptographic signature of the block with the
                              history stored in the entire blockchain.</dd>
                            <dt>blocktime</dt>
                            <dd>The average time interval between the mining of
                              two blocks.</dd>
                            <dt>network hashrate</dt>
                            <dd>The number of hash calculations the network can
                              make per second collectively.</dd>
                            <dt>hashrate</dt>
                            <dd>The number of hash calculations made per second.</dd>
                            <dt>serialization</dt>
                            <dd>The process of converting a data structure into
                              a sequence of bytes. Ethereum internally uses an
                              encoding format called recursive-length prefix
                              encoding (RLP), described in the <a class="reference external"
                                href="https://github.com/ethereum/wiki/wiki/RLP">RLP
                                section of the wiki</a>.</dd>
                            <dt>double spend</dt>
                            <dd>A deliberate blockchain fork, where a user with
                              a large amount of mining power sends a transaction
                              to purchase some produce, then after receiving the
                              product creates another transaction sending the
                              same coins to themselves. The attacker then
                              creates a block, at the same level as the block
                              containing the original transaction but containing
                              the second transaction instead, and starts mining
                              on the fork. If the attacker has more than 50% of
                              all mining power, the double spend is guaranteed
                              to succeed eventually at any block depth. Below
                              50%, there is some probability of success, but it
                              is usually only substantial at a depth up to about
                              2-5; for this reason, most cryptocurrency
                              exchanges, gambling sites and financial services
                              wait until six blocks have been produced (“six
                              confirmations”) before accepting a payment.</dd>
                            <dt>SPV client</dt>
                            <dd>A client that downloads only a small part of the
                              blockchain, allowing users of low-power or
                              low-storage hardware like smartphones and laptops
                              to maintain almost the same guarantee of security
                              by sometimes selectively downloading small parts
                              of the state without needing to spend megabytes of
                              bandwidth and gigabytes of storage on full
                              blockchain validation and maintenance. See light
                              client.</dd>
                            <dt>uncle</dt>
                            <dd>Uncles are blockchain blocks found by a miner,
                              when a different miner has already found another
                              block for the corresponding place in the
                              blockchain. They are called “stale blocks”. The
                              parent of an Uncle is an ancestor of the inserting
                              block, located at the tip of the blockchain. In
                              contrast to the Bitcoin network, Ethereum rewards
                              stale blocks as well in order to avoid to penalize
                              miners with a bad connection to the network. This
                              is less critical in the Bitcoin network, because
                              the Block Time there is much higher (~10 minutes)
                              than on the Ethereum network (aimed to ~15
                              seconds).</dd>
                            <dt>GHOST</dt>
                            <dd>Greedy Heaviest-Observed Sub-Tree is an
                              alternative chain-selection method that is
                              designed to incentivize stale blocks (uncles) as
                              well, thus reducing the incentive for pool mining.
                              In GHOST, even the confirmation given by stale
                              blocks to previous blocks are considered valid,
                              and the miners of the stale blocks are also
                              rewarded with a mining reward.</dd>
                            <dt>merkle patricia tree</dt>
                            <dd>Merkle Patricia trees provide a
                              cryptographically authenticated data structure
                              that can be used to store all (key, value)
                              bindings. They are fully deterministic, meaning
                              that a Patricia tree with the same (key,value)
                              bindings is guaranteed to be exactly the same down
                              to the last byte and therefore have the same root
                              hash, provide O(log(n)) efficiency for inserts,
                              lookups and deletes, and are much easier to
                              understand and code than more complex
                              comparison-based alternatives like red-black
                              trees.</dd>
                            <dt>DAG</dt>
                            <dd>DAG stands for Directed Acyclic Graph. It is a
                              graph, a set of nodes and links between nodes,
                              that has very special properties. Ethereum uses a
                              DAG in Ethash, the Ethereum Proof of Work (POW)
                              algorithm.The Ethash DAG takes a long time to be
                              generated, which is done by a Miner node into a
                              cache file for each Epoch. The file data is then
                              used when a value from this graph is required by
                              the algorithm.</dd>
                            <dt>uncle rate</dt>
                            <dd>The number of uncles produced per block.</dd>
                            <dt>issuance</dt>
                            <dd>The minting and granting of new cryptocurrency
                              to a miner who has found a new block.</dd>
                            <dt>presale</dt>
                            <dd>Sale of cryptocurrency before the actual launch
                              of the network.</dd>
                            <dt>static node</dt>
                            <dd>A feature supported by Geth, the Golang Ethereum
                              client, which makes it possible to always connect
                              to specific peers. Static nodes are re-connected
                              on disconnects. For details, see the <a class="reference internal"
                                href="index.html#cr-static-nodes"><span>section
                                  on static nodes</span></a>.</dd>
                            <dt>bootnode</dt>
                            <dd>The nodes which can be used to initiate the
                              discovery process when running a node. The
                              endpoints of these nodes are recorded in the
                              Ethereum source code.</dd>
                            <dt>exchange</dt>
                            <dd>An online marketplace which facilitates the
                              exchange of crypto or fiat currencies based on the
                              market exchange rate.</dd>
                            <dt>compiler</dt>
                            <dd>A program that translates pieces of code written
                              in high level languages into low level executable
                              code.</dd>
                            <dt>genesis block</dt>
                            <dd>The first block in a blockchain.</dd>
                            <dt>network id</dt>
                            <dd>A number which identifies a particular version
                              of the Ethereum network.</dd>
                            <dt>block header</dt>
                            <dd>The data in a block which is unique to its
                              content and the circumstances in which it was
                              created. It includes the hash of the previous
                              block’s header, the version of the software the
                              block is mined with, the timestamp and the merkle
                              root hash of the contents of the block.</dd>
                            <dt>pending transaction</dt>
                            <dd>A transaction that is not yet confirmed by the
                              Ethereum network.</dd>
                            <dt>block propagation</dt>
                            <dd>The process of transmitting a confirmed block to
                              all other nodes in the network.</dd>
                            <dt>sidechain</dt>
                            <dd>A blockchain that branches off a main blockchain
                              and checks in periodically with the main
                              blockchain. Besides that it runs independently
                              from the main chain, and any security compromises
                              in the sidechain will not affect the main chain.</dd>
                            <dt>pegging</dt>
                            <dd>Locking down the exchange rate of the
                              coins/tokens in two chains (usually a main and a
                              side chain) in a certain direction.</dd>
                            <dt>2-way pegging</dt>
                            <dd>Locking down the exchange rate of the
                              coins/tokens in two chains (usually a main and a
                              side chain) in both directions.</dd>
                            <dt>trustless</dt>
                            <dd>Refers to the ability of a network to
                              trustworthily mediate transactions without any of
                              the involved parties needing to trust anyone else.</dd>
                            <dt>faucet</dt>
                            <dd>A website that dispenses (normally testnet)
                              cryptocurrencies for free.</dd>
                            <dt>checksum</dt>
                            <dd>A count of the number of bits in a transmission
                              that is included with the unit so that the
                              receiving end can verify that the entirety of the
                              message has been transmitted.</dd>
                            <dt>ICAP</dt>
                            <dd>Interexchange Client Address Protocol, an
                              IBAN-compatible system for referencing and
                              transacting to client accounts aimed to streamline
                              the process of transferring funds, worry-free
                              between exchanges and, ultimately, making KYC and
                              AML concerns a thing of the past.</dd>
                            <dt>private key</dt>
                            <dd>A private key is a string of characters known
                              only to the owner, that is paired with a public
                              key to set off algorithms for text encryption and
                              decryption.</dd>
                            <dt>public key</dt>
                            <dd>A string of characters derived from a private
                              key that can be made public. The public key can be
                              used to verify the authenticity of any signature
                              created using the private key.</dd>
                            <dt>encryption</dt>
                            <dd>Encryption is the conversion of electronic data
                              into a form unreadable by anyone except the owner
                              of the correct decryption key. It can further be
                              described as a process by which a document
                              (plaintext) is combined with a shorter string of
                              data, called a key (e.g. <code class="docutils literal"><span
                                  class="pre">c85ef7d79691fe79573b1a7064c19c1a9819ebdbd1faaab1a8ec92344438aaf4</span></code>),
                              to produce an output (ciphertext) which can be
                              “decrypted” back into the original plaintext by
                              someone else who has the key, but which is
                              incomprehensible and computationally infeasible to
                              decrypt for anyone who does not have the key.</dd>
                            <dt>digital signature</dt>
                            <dd>A mathematical scheme for demonstrating the
                              authenticity of a digital message or documents.</dd>
                            <dt>port</dt>
                            <dd>A network port is a communication endpoint used
                              by a one of the existing standards of establishing
                              a network conversation (e.g. TCP, UDP).</dd>
                            <dt>RPC</dt>
                            <dd>Remote Procedure Call, a protocol that a program
                              uses to request a service from a program located
                              in another computer in a network without having to
                              understand the network details.</dd>
                            <dt>IPC</dt>
                            <dd>Interprocess communication (IPC) is a set of
                              programming interfaces that allow a programmer to
                              coordinate activities among different program
                              processes that can run concurrently in an
                              operating system.</dd>
                            <dt>attach</dt>
                            <dd>The command used to initiate the Ethereum
                              Javascript console.</dd>
                            <dt>daemon</dt>
                            <dd>A computer program that runs as a background
                              process instead of in direct control by an
                              interactive user.</dd>
                            <dt>system service</dt>
                            <dd>See base layer service</dd>
                            <dt>base layer service</dt>
                            <dd>Services such as SWARM and Whisper which are
                              built into the Ethereum platform.</dd>
                            <dt>js</dt>
                            <dd>Javascript.</dd>
                            <dt>syncing</dt>
                            <dd>The process of downloading the entire
                              blockchain.</dd>
                            <dt>fast sync</dt>
                            <dd>Instead of processing the entire block-chain one
                              link at a time, and replay all transactions that
                              ever happened in history, fast syncing downloads
                              the transaction receipts along the blocks, and
                              pulls an entire recent state database.</dd>
                            <dt>ASIC</dt>
                            <dd>Application-specific integrated circuit, in this
                              case referring to an integrated circuit custom
                              built for cryptocurrency mining.</dd>
                            <dt>memory-hard</dt>
                            <dd>Memory hard functions are processes that
                              experience a drastic decrease in speed or
                              feasibility when the amount of available memory
                              even slightly decreases.</dd>
                            <dt>keyfile</dt>
                            <dd>Every account’s private key/address pair exists
                              as a single keyfile. These are JSON text files
                              which contains the encrypted private key of the
                              account, which can only be decrypted with the
                              password entered during account creation.</dd>
                            <dt>ICAP format</dt>
                            <dd>The format of the IBANs defined using the <a class="reference external"
                                href="https://github.com/ethereumjs/ethereumjs-icap">Inter-exchange
                                Client Address Protocol</a>.</dd>
                            <dt>block(chain) explorer</dt>
                            <dd>A website that allows easy searching and
                              extraction of data from the blockchain.</dd>
                            <dt>geth</dt>
                            <dd>Ethereum client implemented in the Golang
                              programming language, based on the protocol as
                              defined in the Ethereum Yellow Paper.</dd>
                            <dt>eth</dt>
                            <dd>Ethereum client implemented in the C++
                              programming language, based on the protocol as
                              defined in the Ethereum Yellow Paper.</dd>
                            <dt>ethereumjs</dt>
                            <dd>Ethereum client implemented in the
                              Javascript/Node programming language, based on the
                              protocol as defined in the Ethereum Yellow Paper.</dd>
                            <dt>pyethereum</dt>
                            <dd>Ethereum client implemented in the Python
                              programming language, based on the protocol as
                              defined in the Ethereum Yellow Paper.</dd>
                            <dt>ethereumj</dt>
                            <dd>Ethereum client implemented in the Java
                              programming language, based on the protocol as
                              defined in the Ethereum Yellow Paper.</dd>
                            <dt>ethereumh</dt>
                            <dd>Ethereum client implemented in the Haskell
                              programming language, based on the protocol as
                              defined in the Ethereum Yellow Paper.</dd>
                            <dt>parity</dt>
                            <dd>Ethereum client implemented in the Rust
                              programming language, based on the protocol as
                              defined in the Ethereum Yellow Paper.</dd>
                            <dt>difficulty</dt>
                            <dd>In very general terms, the amount of effort
                              required to mine a new block. With the launch of
                              Homestead, the <a class="reference external" href="https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2.mediawiki">difficulty
                                adjustment algorithm will change</a>.</dd>
                            <dt>account</dt>
                            <dd>Accounts are a central part of the Ethereum
                              network and are an essential part of any
                              transaction or contract. In Ethereum, there are
                              two types of accounts: Externally Owned accounts
                              (EOA) and Contract accounts.</dd>
                            <dt>HLL (obsolete)</dt>
                            <dd>Acronym for Higher Level Language, which is what
                              Serpent and Solidity are. HLL is what early Ðapp
                              developers called Ethereum programming languages
                              that did not touch the low level elements. This
                              phrase has been phased out.</dd>
                            <dt>CLL (obsolete)</dt>
                            <dd>Acronym for C Like Language, which Mutan was.
                              This acronym has been phased out.</dd>
                            <dt>ES1, ES2, and ES3 (obsolete)</dt>
                            <dd>“Ethereum Script” versions 1,2 and 3. There were
                              early versions of what would become the Ethereum
                              Virtual Machine (EVM).</dd>
                            <dt>log event</dt>
                            <dd>Contracts are triggered by transactions executed
                              as part of the block verification. If conceived of
                              as a function call, contract execution is
                              asynchronous, and therefore they have no return
                              value. Instead contracts communicate to the
                              outside world with log events. The log events are
                              part of the transaction receipt which is produced
                              when the transaction is executed. The receipts are
                              stored in the receipt trie, the integrity of which
                              is guaranteed by the fact that the current root of
                              the receipt trie is part of the block header
                              alongside the roots of state and state-trie. In a
                              broad sense from the external perspective receipts
                              are part of the Ethereum system state except that
                              they are not readable contracts internally.</dd>
                          </dl>
                        </div>
                      </blockquote>
                    </div>
                    <span id="document-about"></span>
                    <div class="section" id="the-homestead-documentation-initiative">
                      <h2>The Homestead Documentation Initiative<a class="headerlink"
                          href="#the-homestead-documentation-initiative" title="Permalink to this headline">¶</a></h2>
                      <p><a class="reference external" href="https://gitter.im/ethereum/homestead-guide?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge"><img
                            alt="Gitter" src="images/homestead-guide.svg"></a></p>
                      <div class="section" id="purpose-and-audience">
                        <h3>Purpose and Audience<a class="headerlink" href="#purpose-and-audience"
                            title="Permalink to this headline">¶</a></h3>
                        <p>This guide should serve to be an entry level for all
                          Ethereum users and developers. The goal is to create
                          documentation with information, short tutorials, and
                          examples that will cover all of the basic and
                          intermediate functionality of using Ethereum to
                          interact with dapps or develop a dapp.</p>
                        <p>Any information that is overly specific, technical,
                          or not necessary to accomplish the documentation’s
                          goal will remain on the Ethereum Github Wiki. It may
                          be referenced in this guide if necessary.</p>
                        <p>Although much of the information will be similar
                          between the Frontier Guide and the Homestead Guide,
                          efforts need to be made to make sure the information
                          ported over is still accurate. This document is client
                          agnostic, and examples and tutorials may be based on
                          any client that the author decides to write on, as
                          long as a distinction is made as to what client is
                          being used in the examples/tutorials.</p>
                        <p>Although overly specific and technical documentation
                          will not be included in the first iterations of this
                          guide, community use and popularity of this guide will
                          dictate future decisions to move Github wiki
                          documentation to this format.</p>
                        <p>Examples of overly specific and technical
                          documentation include:</p>
                        <ul class="simple">
                          <li>ETHash, CASPER, ABI, RLP, or other technical
                            specs.</li>
                          <li>Full API specs for protocols. Caveat: If an
                            example, information, or tutorial needs to reference
                            API calls for a client or interface in order to
                            fulfill its example it is acceptable to reference
                            the specific call. Be sure to make a reference where
                            the user can find remaining pieces of the specific
                            documentation that may be on the GitHub Wiki.</li>
                        </ul>
                      </div>
                      <div class="section" id="resources-for-exemplary-documentation">
                        <h3>Resources for Exemplary Documentation<a class="headerlink"
                            href="#resources-for-exemplary-documentation" title="Permalink to this headline">¶</a></h3>
                        <p>Here are some examples of previous Ethereum
                          documentation + good examples of documentation.</p>
                        <ul class="simple">
                          <li>Solidity Docs - <a class="reference external" href="https://ethereum.github.io/solidity/docs/home/">https://ethereum.github.io/solidity/docs/home/</a></li>
                          <li>Frontier Guide - <a class="reference external" href="https://ethereum.gitbooks.io/frontier-guide/content/">https://ethereum.gitbooks.io/frontier-guide/content/</a></li>
                          <li>Gav’s TurboEthereum Guide - <a class="reference external"
                              href="https://gavofyork.gitbooks.io/turboethereum/content/">https://gavofyork.gitbooks.io/turboethereum/content/</a></li>
                          <li>Ancient EthereumBuilder’s Guide - <a class="reference external"
                              href="https://ethereumbuilders.gitbooks.io/guide/content/en/index.html">https://ethereumbuilders.gitbooks.io/guide/content/en/index.html</a></li>
                          <li>Other Ethereum Links: <a class="reference external"
                              href="https://souptacular.gitbooks.io/ethereum-tutorials-and-tips-by-hudson/content/giant_ethereum_resource_list.html">https://souptacular.gitbooks.io/ethereum-tutorials-and-tips-by-hudson/content/giant_ethereum_resource_list.html</a></li>
                          <li>Django Docs - <a class="reference external" href="https://docs.djangoproject.com/en/1.9/">https://docs.djangoproject.com/en/1.9/</a></li>
                        </ul>
                      </div>
                      <div class="section" id="restructured-text-markup-sphinx">
                        <h3>Restructured Text Markup, Sphinx<a class="headerlink"
                            href="#restructured-text-markup-sphinx" title="Permalink to this headline">¶</a></h3>
                        <ul class="simple">
                          <li>Best Cheat Sheet - <a class="reference external"
                              href="https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst">https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst</a></li>
                          <li>Quick Reference - <a class="reference external" href="http://docutils.sourceforge.net/docs/user/rst/quickref.html">http://docutils.sourceforge.net/docs/user/rst/quickref.html</a></li>
                          <li>Official Cheat Sheet - <a class="reference external"
                              href="http://docutils.sourceforge.net/docs/user/rst/cheatsheet.txt">http://docutils.sourceforge.net/docs/user/rst/cheatsheet.txt</a>
                            -&gt; <a class="reference external" href="http://docutils.sourceforge.net/docs/user/rst/cheatsheet.html">http://docutils.sourceforge.net/docs/user/rst/cheatsheet.html</a></li>
                          <li>RST Primer <a class="reference external" href="http://sphinx-doc.org/rest.html">http://sphinx-doc.org/rest.html</a></li>
                          <li><a class="reference external" href="http://sphinx-doc.org/markup/inline.html">http://sphinx-doc.org/markup/inline.html</a></li>
                        </ul>
                      </div>
                      <div class="section" id="compilation-and-deployment">
                        <h3>Compilation and Deployment<a class="headerlink" href="#compilation-and-deployment"
                            title="Permalink to this headline">¶</a></h3>
                        <p>We use <cite>make</cite> with the autogenerated
                          read-the-docs <cite>Makefile</cite> to build the doc.</p>
                        <div class="highlight-bash">
                          <div class="highlight">
                            <pre>git clone https://github.com/ethereum/homestead-guide
<span class="nb">cd </span>homestead-guide
make html
</pre></div>
                        </div>
                      </div>
                      <div class="section" id="processing-tips">
                        <h3>Processing Tips<a class="headerlink" href="#processing-tips"
                            title="Permalink to this headline">¶</a></h3>
                        <p>Fix section delimiter lines (always use 80-long ones
                          to have correct length, unless the title is greater
                          than 80 chars in length)</p>
                        <div class="highlight-bash">
                          <div class="highlight">
                            <pre><span class="k">for </span>f in <span class="sb">`</span>ls <span
class="nb">source</span>/*/*.rst<span class="sb">`</span><span class="p">;</span> <span
class="k">do </span>cat <span class="nv">$f</span><span class="p">|</span>perl -pe <span
class="s1">'s/\=+$/================================================================================/'</span> &gt; <span
class="nv">$f</span>.o<span class="p">;</span> mv <span class="nv">$f</span>.o <span
class="nv">$f</span><span class="p">;</span> <span class="k">done</span><span class="p">;</span> <span
class="k">done</span>
<span class="k">for </span>f in <span class="sb">`</span>ls <span class="nb">source</span>/*/*.rst<span
class="sb">`</span><span class="p">;</span> <span class="k">do </span>cat <span
class="nv">$f</span><span class="p">|</span>perl -pe <span class="s1">'s/\*+$/********************************************************************************/'</span> &gt; <span
class="nv">$f</span>.o<span class="p">;</span> mv <span class="nv">$f</span>.o <span
class="nv">$f</span><span class="p">;</span> <span class="k">done</span>
<span class="k">for </span>f in <span class="sb">`</span>ls <span class="nb">source</span>/*/*.rst<span
class="sb">`</span><span class="p">;</span> <span class="k">do </span>cat <span
class="nv">$f</span><span class="p">|</span>perl -pe <span class="s1">'s/\-+$/--------------------------------------------------------------------------------/'</span> &gt; <span
class="nv">$f</span>.o<span class="p">;</span> mv <span class="nv">$f</span>.o <span
class="nv">$f</span><span class="p">;</span> <span class="k">done</span>
<span class="k">for </span>f in <span class="sb">`</span>ls <span class="nb">source</span>/*/*.rst<span
class="sb">`</span><span class="p">;</span> <span class="k">do </span>cat <span
class="nv">$f</span><span class="p">|</span>perl -pe <span class="s1">'s/\++$/++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++/'</span> &gt; <span
class="nv">$f</span>.o<span class="p">;</span> mv <span class="nv">$f</span>.o <span
class="nv">$f</span><span class="p">;</span> <span class="k">done</span>
<span class="k">for </span>f in <span class="sb">`</span>ls <span class="nb">source</span>/*/*.rst<span
class="sb">`</span><span class="p">;</span> <span class="k">do </span>cat <span
class="nv">$f</span><span class="p">|</span>perl -pe <span class="s1">'s/\#+$/################################################################################/'</span> &gt; <span
class="nv">$f</span>.o<span class="p">;</span> mv <span class="nv">$f</span>.o <span
class="nv">$f</span><span class="p">;</span> <span class="k">done</span>
</pre></div>
                        </div>
                      </div>
                      <div class="section" id="referencing-old-documentation">
                        <h3>Referencing Old Documentation<a class="headerlink" href="#referencing-old-documentation"
                            title="Permalink to this headline">¶</a></h3>
                        <p>old-docs-for-reference folder has all of the Frontier
                          Gitbook and Ethereum Wiki doc. Feel free to copy/paste
                          information from those documents that is still
                          relevant.</p>
                      </div>
                      <div class="section" id="migrate-and-convert-old-wiki-content-using-pandoc">
                        <h3>Migrate and Convert Old Wiki Content Using Pandoc<a
                            class="headerlink" href="#migrate-and-convert-old-wiki-content-using-pandoc"
                            title="Permalink to this headline">¶</a></h3>
                        <p>If you still want to clone the absolute latest
                          Ethereum Wiki and Frontier Guide docs:</p>
                        <div class="highlight-bash">
                          <div class="highlight">
                            <pre>git clone git@github.com:ethereum/go-ethereum.wiki.git
git clone git@github.com:ethereum/wiki.wiki.git

mkdir main-wiki.rst
mkdir go-ethereum-wiki.rst

<span class="k">for </span>f in <span class="sb">`</span>ls wiki.wiki/*.md<span
class="sb">`</span><span class="p">;</span> <span class="k">do </span>pandoc <span
class="nv">$f</span> -o main-wiki.rst/<span class="sb">`</span>basename <span class="nv">$f</span> .md<span
class="sb">`</span>.rst<span class="p">;</span> <span class="k">done</span>
<span class="k">for </span>f in <span class="sb">`</span>ls go-ethereum.wiki/*.md<span
class="sb">`</span><span class="p">;</span> <span class="k">do </span>pandoc <span
class="nv">$f</span> -o go-ethereum-wiki.rst/<span class="sb">`</span>basename <span
class="nv">$f</span> .md<span class="sb">`</span>.rst<span class="p">;</span> <span
class="k">done</span>
</pre></div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="section" id="improve-the-documentation">
                  <h1>Improve the Documentation<a class="headerlink" href="#improve-the-documentation"
                      title="Permalink to this headline">¶</a></h1>
                  <p>See <a class="reference external" href="https://ethereum-homestead.readthedocs.org/en/latest/about.html">this
                      page</a> to help us improve the documentation.</p>
                </div>
              </div>
            </div>
            <footer>
              <hr>
              <div role="contentinfo">
                <p> © Copyright 2016, Ethereum community. <span class="commit">
                    Revision <code>41fc2c03</code>. </span> </p>
              </div>
              Built with <a href="http://sphinx-doc.org/">Sphinx</a> using a <a
                href="https://github.com/snide/sphinx_rtd_theme">theme</a>
              provided by <a href="https://readthedocs.org">Read the Docs</a>.
            </footer>
          </div>
        </div>
      </section>
    </div>
    <div class="rst-versions" data-toggle="rst-versions" role="note" aria-label="versions">
      <span class="rst-current-version" data-toggle="rst-current-version"> <span
          class="fa fa-book"> Read the Docs</span> v: latest <span class="fa fa-caret-down"></span>
      </span>
      <div class="rst-other-versions">
        <dl>
          <dt>Versions</dt>
          <dd><a href="/en/latest/">latest</a></dd>
        </dl>
        <dl>
          <dt>Downloads</dt>
          <dd><a href="//readthedocs.org/projects/ethereum-homestead/downloads/pdf/latest/">pdf</a></dd>
          <dd><a href="//readthedocs.org/projects/ethereum-homestead/downloads/htmlzip/latest/">htmlzip</a></dd>
          <dd><a href="//readthedocs.org/projects/ethereum-homestead/downloads/epub/latest/">epub</a></dd>
        </dl>
        <dl>
          <dt>On Read the Docs</dt>
          <dd> <a href="//readthedocs.org/projects/ethereum-homestead/?fromdocs=ethereum-homestead">Project
              Home</a> </dd>
          <dd> <a href="//readthedocs.org/builds/ethereum-homestead/?fromdocs=ethereum-homestead">Builds</a>
          </dd>
        </dl>
        <hr> Free document hosting provided by <a href="http://www.readthedocs.org">Read
          the Docs</a>. </div>
    </div>
    <script type="text/javascript">
        var DOCUMENTATION_OPTIONS = {
            URL_ROOT:'./',
            VERSION:'0.1',
            COLLAPSE_INDEX:false,
            FILE_SUFFIX:'.html',
            HAS_SOURCE:  true
        };
    </script>
    <script type="text/javascript" src="static/jquery.js"></script>
    <script type="text/javascript" src="static/underscore.js"></script>
    <script type="text/javascript" src="static/doctools.js"></script>
    <script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    <script type="text/javascript">
      jQuery(function () {
          SphinxRtdTheme.StickyNav.enable();
      });
  </script>
  </body>
</html>
