<!DOCTYPE html>
<html>
  <head>
    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
    <title>BEP03</title>
  </head>
  <body> <sub style="margin: 1em 0px 0.1em; font-weight: normal; letter-spacing: -1px;">
      Переклад українською - <a href="mailto:ac2epsilon@gmail.com">Арсеній
        Чеботарьов</a> - Ніжин 2017</sub><br>
    <p>
      <meta http-equiv="content-type" content="text/html; charset=utf-8">
    </p>
    <div id="header" style="margin: 0px; width: 700px; border-bottom: 2px solid rgb(238, 238, 238); color: rgb(51, 51, 51); font-family: &quot;Trebuchet MS&quot;, sans-serif; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial;">
      <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;"><a
          href="http://bittorrent.org/index.html" style="color: rgb(102, 102, 102); text-decoration: none; border: 0px;">BitTorrent<span
            style="font-weight: bold; color: rgb(0, 153, 255);">.org <br>
          </span></a></h1>
      <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;"><a
          href="http://bittorrent.org/index.html" style="color: rgb(102, 102, 102); text-decoration: none; border: 0px;"><span
            style="font-weight: bold; color: rgb(0, 153, 255);">BEP03 The
            BitTorrent Protocol Specification<br>
          </span></a></h1>
    </div>
    <div id="second" style="color: rgb(51, 51, 51); font-family: &quot;Trebuchet MS&quot;, sans-serif; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-style: initial; text-decoration-color: initial;">
      <table class="docinfo" frame="void" rules="none" style="border: 0px; margin-left: 4em;">
        <colgroup><col class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;"><col
            class="docinfo-content"></colgroup>
        <tbody valign="top">
          <tr class="bep field">
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">BEP:</th>
            <td class="field-body" style="font-size: 9pt; padding: 10px;">3</td>
          </tr>
          <tr class="title field">
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Назва:</th>
            <td class="field-body" style="font-size: 9pt; padding: 10px;">The
              BitTorrent Protocol Specification</td>
          </tr>
          <tr>
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Версія:</th>
            <td style="font-size: 9pt; padding: 10px;">0e08ddf84d8d3bf101cdf897fc312f2774588c9e</td>
          </tr>
          <tr class="last-modified field">
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Останні
              зміни:</th>
            <td class="field-body" style="font-size: 9pt; padding: 10px;">Sat
              Feb 4 12:58:40 2017 +0100</td>
          </tr>
          <tr>
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Автор:</th>
            <td style="font-size: 9pt; padding: 10px;">Bram Cohen &lt;<a class="reference external"
                href="mailto:bram%40bittorrent.com" style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">bram<span>@</span>bittorrent<span>.</span>com</a>&gt;</td>
          </tr>
          <tr>
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Статус:</th>
            <td style="font-size: 9pt; padding: 10px;">Final</td>
          </tr>
          <tr class="type field">
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Тип:</th>
            <td class="field-body" style="font-size: 9pt; padding: 10px;">Стандартний</td>
          </tr>
          <tr class="created field">
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Створено:</th>
            <td class="field-body" style="font-size: 9pt; padding: 10px;">10-Jan-2008</td>
          </tr>
          <tr class="post-history field">
            <th class="docinfo-name" style="margin: 0px; font-size: 1.2em; text-align: right; vertical-align: middle;">Історія:</th>
            <td class="field-body" style="font-size: 9pt; padding: 10px;">24-Jun-2009
              (<a class="reference external" href="mailto:arvid%40bittorrent.com"
                style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">arvid<span>@</span>bittorrent<span>.</span>com</a>),
              прояснено кодування рядків в торент файлах. 20-Oct-2012 (<a class="reference external"
                href="mailto:arvid%40bittorrent.com" style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">arvid<span>@</span>bittorrent<span>.</span>com</a>),
              прояснено, що інфор-хеш є дайджестом b-енкодінгу&nbsp; файла
              .torrent. Додані на деякі нові BEP та покращене форматування.
              11-Oct-2013 (<a class="reference external" href="mailto:arvid%40bittorrent.com"
                style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">arvid<span>@</span>bittorrent<span>.</span>com</a>),
              скореговано прийнятий та де-факто розміри для повідомлень запитів
              04-Feb-2017 (<a class="reference external" href="mailto:the8472.bep%40infinite-source.de"
                style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">the8472<span>.</span>bep<span>@</span>infinite-source<span>.</span>de</a>),
              подальше роз'яснення інфо-хешу, додані ресурси для нових
              реалізаторів</td>
          </tr>
        </tbody>
      </table>
      <p style="font-size: 1.3em; line-height: 1.5em;">BitTorrent is a protocol
        for distributing files. It identifies content by URL and is designed to
        integrate seamlessly with the web. Its advantage over plain HTTP is that
        when multiple downloads of the same file happen concurrently, the
        downloaders upload to each other, making it possible for the file source
        to support very large numbers of downloaders with only a modest increase
        in its load.</p>
      <div class="section" id="a-bittorrent-file-distribution-consists-of-these-entities">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">A
          BitTorrent file distribution consists of these entities:</h1>
        <ul class="simple">
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">An
            ordinary web server</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">A
            static 'metainfo' file</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">A
            BitTorrent tracker</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">An
            'original' downloader</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">The
            end user web browsers</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">The
            end user downloaders</li>
        </ul>
        <p style="font-size: 1.3em; line-height: 1.5em;">There are ideally many
          end users for a single file.</p>
      </div>
      <div class="section" id="to-start-serving-a-host-goes-through-the-following-steps">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">To
          start serving, a host goes through the following steps:</h1>
        <ol class="arabic simple">
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Start
            running a tracker (or, more likely, have one running already).</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Start
            running an ordinary web server, such as apache, or have one already.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Associate
            the extension .torrent with mimetype application/x-bittorrent on
            their web server (or have done so already).</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Generate
            a metainfo (.torrent) file using the complete file to be served and
            the URL of the tracker.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Put
            the metainfo file on the web server.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Link
            to the metainfo (.torrent) file from some other web page.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Start
            a downloader which already has the complete file (the 'origin').</li>
        </ol>
      </div>
      <div class="section" id="to-start-downloading-a-user-does-the-following">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">To
          start downloading, a user does the following:</h1>
        <ol class="arabic simple">
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Install
            BitTorrent (or have done so already).</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Surf
            the web.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Click
            on a link to a .torrent file.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Select
            where to save the file locally, or select a partial download to
            resume.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Wait
            for download to complete.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Tell
            downloader to exit (it keeps uploading until this happens).</li>
        </ol>
      </div>
      <div class="section" id="bencoding">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">bencoding</h1>
        <ul class="simple">
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Strings
            are length-prefixed base ten followed by a colon and the string. For
            example<span>&nbsp;</span><tt class="docutils literal">4:spam</tt><span>&nbsp;</span>corresponds
            to 'spam'.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Integers
            are represented by an 'i' followed by the number in base 10 followed
            by an 'e'. For example<span>&nbsp;</span><tt class="docutils literal">i3e</tt>corresponds
            to 3 and<span>&nbsp;</span><tt class="docutils literal"><span class="pre">i-3e</span></tt><span>&nbsp;</span>corresponds
            to -3. Integers have no size limitation.<span>&nbsp;</span><tt class="docutils literal"><span
                class="pre">i-0e</span></tt><span>&nbsp;</span>is invalid. All
            encodings with a leading zero, such as<span>&nbsp;</span><tt class="docutils literal">i03e</tt>,
            are invalid, other than<span>&nbsp;</span><tt class="docutils literal">i0e</tt>,
            which of course corresponds to 0.</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Lists
            are encoded as an 'l' followed by their elements (also bencoded)
            followed by an 'e'. For example<span>&nbsp;</span><tt class="docutils literal">l4:spam4:eggse</tt><span>&nbsp;</span>corresponds
            to ['spam', 'eggs'].</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">Dictionaries
            are encoded as a 'd' followed by a list of alternating keys and
            their corresponding values followed by an 'e'. For example,<span>&nbsp;</span><tt
              class="docutils literal">d3:cow3:moo4:spam4:eggse</tt><span>&nbsp;</span>corresponds
            to {'cow': 'moo', 'spam': 'eggs'} and<span>&nbsp;</span><tt class="docutils literal">d4:spaml1:a1:bee</tt><span>&nbsp;</span>corresponds
            to {'spam': ['a', 'b']}. Keys must be strings and appear in sorted
            order (sorted as raw strings, not alphanumerics).</li>
        </ul>
      </div>
      <div class="section" id="metainfo-files">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">metainfo
          files</h1>
        <p style="font-size: 1.3em; line-height: 1.5em;">Metainfo files (also
          known as .torrent files) are bencoded dictionaries with the following
          keys:</p>
        <dl class="docutils">
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">announce</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">The
            URL of the tracker.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">info</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">This
            maps to a dictionary, with keys described below.</dd>
        </dl>
        <p style="font-size: 1.3em; line-height: 1.5em;">All strings in a
          .torrent file that contains text must be UTF-8 encoded.</p>
        <div class="section" id="info-dictionary">
          <h2 style="margin: 0px; padding: 0px 0px 0.5em; font-size: 1.6em; font-weight: normal; border: 0px;">info
            dictionary</h2>
          <p style="font-size: 1.3em; line-height: 1.5em;">The<span>&nbsp;</span><tt
              class="docutils literal">name</tt><span>&nbsp;</span>key maps to a
            UTF-8 encoded string which is the suggested name to save the file
            (or directory) as. It is purely advisory.</p>
          <p style="font-size: 1.3em; line-height: 1.5em;"><tt class="docutils literal">piece
              length</tt><span>&nbsp;</span>maps to the number of bytes in each
            piece the file is split into. For the purposes of transfer, files
            are split into fixed-size pieces which are all the same length
            except for possibly the last one which may be truncated.<span>&nbsp;</span><tt
              class="docutils literal">piece length</tt><span>&nbsp;</span>is
            almost always a power of two, most commonly 2 18 = 256 K (BitTorrent
            prior to version 3.2 uses 2 20 = 1 M as default).</p>
          <p style="font-size: 1.3em; line-height: 1.5em;"><tt class="docutils literal">pieces</tt><span>&nbsp;</span>maps
            to a string whose length is a multiple of 20. It is to be subdivided
            into strings of length 20, each of which is the SHA1 hash of the
            piece at the corresponding index.</p>
          <p style="font-size: 1.3em; line-height: 1.5em;">There is also a key<span>&nbsp;</span><tt
              class="docutils literal">length</tt><span>&nbsp;</span>or a key<span>&nbsp;</span><tt
              class="docutils literal">files</tt>, but not both or neither. If<span>&nbsp;</span><tt
              class="docutils literal">length</tt><span>&nbsp;</span>is present
            then the download represents a single file, otherwise it represents
            a set of files which go in a directory structure.</p>
          <p style="font-size: 1.3em; line-height: 1.5em;">In the single file
            case,<span>&nbsp;</span><tt class="docutils literal">length</tt><span>&nbsp;</span>maps
            to the length of the file in bytes.</p>
          <p style="font-size: 1.3em; line-height: 1.5em;">For the purposes of
            the other keys, the multi-file case is treated as only having a
            single file by concatenating the files in the order they appear in
            the files list. The files list is the value<span>&nbsp;</span><tt class="docutils literal">files</tt><span>&nbsp;</span>maps
            to, and is a list of dictionaries containing the following keys:</p>
          <p style="font-size: 1.3em; line-height: 1.5em;"><tt class="docutils literal">length</tt><span>&nbsp;</span>-
            The length of the file, in bytes.</p>
          <p style="font-size: 1.3em; line-height: 1.5em;"><tt class="docutils literal">path</tt><span>&nbsp;</span>-
            A list of UTF-8 encoded strings corresponding to subdirectory names,
            the last of which is the actual file name (a zero length list is an
            error case).</p>
          <p style="font-size: 1.3em; line-height: 1.5em;">In the single file
            case, the name key is the name of a file, in the muliple file case,
            it's the name of a directory.</p>
        </div>
      </div>
      <div class="section" id="trackers">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">trackers</h1>
        <p style="font-size: 1.3em; line-height: 1.5em;">Tracker GET requests
          have the following keys:</p>
        <dl class="docutils">
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">info_hash</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">
            <p class="first" style="font-size: inherit; line-height: inherit;">The
              20 byte sha1 hash of the bencoded form of the info value from the
              metainfo file. This value will almost certainly have to be
              escaped.</p>
            <p class="last" style="font-size: inherit; line-height: inherit;">Note
              that this is a substring of the metainfo file. The info-hash must
              be the hash of the encoded form as found in the .torrent file,
              which is identical to bdecoding the metainfo file, extracting the
              info dictionary and encoding it<span>&nbsp;</span><em>if and only
                if</em><span>&nbsp;</span>the bdecoder fully validated the input
              (e.g. key ordering, absence of leading zeros). Conversely that
              means clients must either reject invalid metainfo files or extract
              the substring directly. They must not perform a decode-encode
              roundtrip on invalid data.</p>
          </dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">peer_id</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">A
            string of length 20 which this downloader uses as its id. Each
            downloader generates its own id at random at the start of a new
            download. This value will also almost certainly have to be escaped.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">ip</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">An
            optional parameter giving the IP (or dns name) which this peer is
            at. Generally used for the origin if it's on the same machine as the
            tracker.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">port</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">The
            port number this peer is listening on. Common behavior is for a
            downloader to try to listen on port 6881 and if that port is taken
            try 6882, then 6883, etc. and give up after 6889.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">uploaded</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">The
            total amount uploaded so far, encoded in base ten ascii.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">downloaded</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">The
            total amount downloaded so far, encoded in base ten ascii.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">left</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">The
            number of bytes this peer still has to download, encoded in base ten
            ascii. Note that this can't be computed from downloaded and the file
            length since it might be a resume, and there's a chance that some of
            the downloaded data failed an integrity check and had to be
            re-downloaded.</dd>
          <dt style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">event</dt>
          <dd style="margin-bottom: 7px; font-size: 1.2em; line-height: 1.5em;">This
            is an optional key which maps to<span>&nbsp;</span><tt class="docutils literal">started</tt>,<span>&nbsp;</span><tt
              class="docutils literal">completed</tt>, or<span>&nbsp;</span><tt
              class="docutils literal">stopped</tt><span>&nbsp;</span>(or<span>&nbsp;</span><tt
              class="docutils literal">empty</tt>, which is the same as not
            being present). If not present, this is one of the announcements
            done at regular intervals. An announcement using<span>&nbsp;</span><tt
              class="docutils literal">started</tt><span>&nbsp;</span>is sent
            when a download first begins, and one using<span>&nbsp;</span><tt class="docutils literal">completed</tt><span>&nbsp;</span>is
            sent when the download is complete. No<span>&nbsp;</span><tt class="docutils literal">completed</tt><span>&nbsp;</span>is
            sent if the file was complete when started. Downloaders send an
            announcement using<span>&nbsp;</span><tt class="docutils literal">stopped</tt><span>&nbsp;</span>when
            they cease downloading.</dd>
        </dl>
        <p style="font-size: 1.3em; line-height: 1.5em;">Tracker responses are
          bencoded dictionaries. If a tracker response has a key<span>&nbsp;</span><tt
            class="docutils literal">failure reason</tt>, then that maps to a
          human readable string which explains why the query failed, and no
          other keys are required. Otherwise, it must have two keys:<span>&nbsp;</span><tt
            class="docutils literal">interval</tt>, which maps to the number of
          seconds the downloader should wait between regular rerequests, and<span>&nbsp;</span><tt
            class="docutils literal">peers</tt>.<span>&nbsp;</span><tt class="docutils literal">peers</tt><span>&nbsp;</span>maps
          to a list of dictionaries corresponding to<span>&nbsp;</span><tt class="docutils literal">peers</tt>,
          each of which contains the keys<span>&nbsp;</span><tt class="docutils literal">peer
            id</tt>,<span>&nbsp;</span><tt class="docutils literal">ip</tt>, and<tt
            class="docutils literal">port</tt>, which map to the peer's
          self-selected ID, IP address or dns name as a string, and port number,
          respectively. Note that downloaders may rerequest on nonscheduled
          times if an event happens or they need more peers.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">More commonly is that
          trackers return a compact representation of the peer list, see<span>&nbsp;</span><a
            class="reference external" href="http://bittorrent.org/beps/bep_0023.html"
            style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">BEP
            23</a>.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">If you want to make any
          extensions to metainfo files or tracker queries, please coordinate
          with Bram Cohen to make sure that all extensions are done compatibly.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">It is common to
          announce over a<span>&nbsp;</span><a class="reference external" href="http://bittorrent.org/beps/bep_0015.html"
            style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">UDP
            tracker protocol</a><span>&nbsp;</span>as well.</p>
      </div>
      <div class="section" id="peer-protocol">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">peer
          protocol</h1>
        <p style="font-size: 1.3em; line-height: 1.5em;">BitTorrent's peer
          protocol operates over TCP or<span>&nbsp;</span><a class="reference external"
            href="http://bittorrent.org/beps/bep_0029.html" style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">uTP</a>.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Peer connections are
          symmetrical. Messages sent in both directions look the same, and data
          can flow in either direction.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">The peer protocol
          refers to pieces of the file by index as described in the metainfo
          file, starting at zero. When a peer finishes downloading a piece and
          checks that the hash matches, it announces that it has that piece to
          all of its peers.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Connections contain two
          bits of state on either end: choked or not, and interested or not.
          Choking is a notification that no data will be sent until unchoking
          happens. The reasoning and common techniques behind choking are
          explained later in this document.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Data transfer takes
          place whenever one side is interested and the other side is not
          choking. Interest state must be kept up to date at all times -
          whenever a downloader doesn't have something they currently would ask
          a peer for in unchoked, they must express lack of interest, despite
          being choked. Implementing this properly is tricky, but makes it
          possible for downloaders to know which peers will start downloading
          immediately if unchoked.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Connections start out
          choked and not interested.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">When data is being
          transferred, downloaders should keep several piece requests queued up
          at once in order to get good TCP performance (this is called
          'pipelining'.) On the other side, requests which can't be written out
          to the TCP buffer immediately should be queued up in memory rather
          than kept in an application-level network buffer, so they can all be
          thrown out when a choke happens.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">The peer wire protocol
          consists of a handshake followed by a never-ending stream of
          length-prefixed messages. The handshake starts with character ninteen
          (decimal) followed by the string 'BitTorrent protocol'. The leading
          character is a length prefix, put there in the hope that other new
          protocols may do the same and thus be trivially distinguishable from
          each other.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">All later integers sent
          in the protocol are encoded as four bytes big-endian.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">After the fixed headers
          come eight reserved bytes, which are all zero in all current
          implementations. If you wish to extend the protocol using these bytes,
          please coordinate with Bram Cohen to make sure all extensions are done
          compatibly.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Next comes the 20 byte
          sha1 hash of the bencoded form of the info value from the metainfo
          file. (This is the same value which is announced as<span>&nbsp;</span><tt
            class="docutils literal">info_hash</tt><span>&nbsp;</span>to the
          tracker, only here it's raw instead of quoted here). If both sides
          don't send the same value, they sever the connection. The one possible
          exception is if a downloader wants to do multiple downloads over a
          single port, they may wait for incoming connections to give a download
          hash first, and respond with the same one if it's in their list.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">After the download hash
          comes the 20-byte peer id which is reported in tracker requests and
          contained in peer lists in tracker responses. If the receiving side's
          peer id doesn't match the one the initiating side expects, it severs
          the connection.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">That's it for
          handshaking, next comes an alternating stream of length prefixes and
          messages. Messages of length zero are keepalives, and ignored.
          Keepalives are generally sent once every two minutes, but note that
          timeouts can be done much more quickly when data is expected.</p>
      </div>
      <div class="section" id="peer-messages">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">peer
          messages</h1>
        <p style="font-size: 1.3em; line-height: 1.5em;">All non-keepalive
          messages start with a single byte which gives their type.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">The possible values
          are:</p>
        <ul class="simple">
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">0 -
            choke</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">1 -
            unchoke</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">2 -
            interested</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">3 -
            not interested</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">4 -
            have</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">5 -
            bitfield</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">6 -
            request</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">7 -
            piece</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">8 -
            cancel</li>
        </ul>
        <p style="font-size: 1.3em; line-height: 1.5em;">'choke', 'unchoke',
          'interested', and 'not interested' have no payload.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">'bitfield' is only ever
          sent as the first message. Its payload is a bitfield with each index
          that downloader has sent set to one and the rest set to zero.
          Downloaders which don't have anything yet may skip the 'bitfield'
          message. The first byte of the bitfield corresponds to indices 0 - 7
          from high bit to low bit, respectively. The next one 8-15, etc. Spare
          bits at the end are set to zero.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">The 'have' message's
          payload is a single number, the index which that downloader just
          completed and checked the hash of.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">'request' messages
          contain an index, begin, and length. The last two are byte offsets.
          Length is generally a power of two unless it gets truncated by the end
          of the file. All current implementations use 2^14 (16 kiB), and close
          connections which request an amount greater than that.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">'cancel' messages have
          the same payload as request messages. They are generally only sent
          towards the end of a download, during what's called 'endgame mode'.
          When a download is almost complete, there's a tendency for the last
          few pieces to all be downloaded off a single hosed modem line, taking
          a very long time. To make sure the last few pieces come in quickly,
          once requests for all pieces a given downloader doesn't have yet are
          currently pending, it sends requests for everything to everyone it's
          downloading from. To keep this from becoming horribly inefficient, it
          sends cancels to everyone else every time a piece arrives.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">'piece' messages
          contain an index, begin, and piece. Note that they are correlated with
          request messages implicitly. It's possible for an unexpected piece to
          arrive if choke and unchoke messages are sent in quick succession
          and/or transfer is going very slowly.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Downloaders generally
          download pieces in random order, which does a reasonably good job of
          keeping them from having a strict subset or superset of the pieces of
          any of their peers.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">Choking is done for
          several reasons. TCP congestion control behaves very poorly when
          sending over many connections at once. Also, choking lets each peer
          use a tit-for-tat-ish algorithm to ensure that they get a consistent
          download rate.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">The choking algorithm
          described below is the currently deployed one. It is very important
          that all new algorithms work well both in a network consisting
          entirely of themselves and in a network consisting mostly of this one.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">There are several
          criteria a good choking algorithm should meet. It should cap the
          number of simultaneous uploads for good TCP performance. It should
          avoid choking and unchoking quickly, known as 'fibrillation'. It
          should reciprocate to peers who let it download. Finally, it should
          try out unused connections once in a while to find out if they might
          be better than the currently used ones, known as optimistic unchoking.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">The currently deployed
          choking algorithm avoids fibrillation by only changing who's choked
          once every ten seconds. It does reciprocation and number of uploads
          capping by unchoking the four peers which it has the best download
          rates from and are interested. Peers which have a better upload rate
          but aren't interested get unchoked and if they become interested the
          worst uploader gets choked. If a downloader has a complete file, it
          uses its upload rate rather than its download rate to decide who to
          unchoke.</p>
        <p style="font-size: 1.3em; line-height: 1.5em;">For optimistic
          unchoking, at any one time there is a single peer which is unchoked
          regardless of its upload rate (if interested, it counts as one of the
          four allowed downloaders.) Which peer is optimistically unchoked
          rotates every 30 seconds. To give them a decent chance of getting a
          complete piece to upload, new connections are three times as likely to
          start as the current optimistic unchoke as anywhere else in the
          rotation.</p>
      </div>
      <div class="section" id="resources">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">Ресурси</h1>
        <ul class="simple">
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">The<span>&nbsp;</span><a
              class="reference external" href="http://bittorrent.org/bittorrentecon.pdf"
              style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">BitTorrent
              Economics Paper</a><span>&nbsp;</span>outlines some request and
            choking algorithms clients should implement for optimal performance</li>
          <li style="margin: 0.4em 0px; font-size: 10pt; line-height: 12pt;">When
            developing a new implementation the Wireshark protocol analyzer and
            its<span>&nbsp;</span><a class="reference external" href="https://wiki.wireshark.org/BitTorrent"
              style="color: rgb(102, 119, 136); text-decoration: none; border-bottom: 1px dotted rgb(102, 119, 136);">dissectors
              for bittorrent</a><span>&nbsp;</span>can be useful to debug and
            compare with existing ones.</li>
        </ul>
      </div>
      <div class="section" id="copyright">
        <h1 style="margin: 1em 0px 0.1em; font-size: 2em; font-weight: normal; letter-spacing: -1px;">Copyright</h1>
        <p style="font-size: 1.3em; line-height: 1.5em;">Цей документ був
          розміщений в публічному домені.</p>
      </div>
    </div>
    <br class="Apple-interchange-newline">
    <p></p>
  </body>
</html>
