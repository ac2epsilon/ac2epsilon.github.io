<!DOCTYPE html>
<!-- saved from url=(0115)https://willowtreeapps.com/ideas/android-fundamentals-working-with-the-recyclerview-adapter-and-viewholder-pattern/ -->
<html class="gr__willowtreeapps_com" data-react-helmet="lang" lang="en-US">
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover">
    <style>@-webkit-keyframes fadeInOut{0%{opacity:0}10%{opacity:1}80%{opacity:1}to{opacity:0}}@keyframes fadeInOut{0%{opacity:0}10%{opacity:1}80%{opacity:1}to{opacity:0}}@-webkit-keyframes fadeOut{0%{opacity:1}10%{opacity:1}80%{opacity:0}to{opacity:0}}@keyframes fadeOut{0%{opacity:1}10%{opacity:1}80%{opacity:0}to{opacity:0}}@-webkit-keyframes progress{0%{background-position:100% 0}50%{background-position:50% 0}to{background-position:0 0}}@keyframes progress{0%{background-position:100% 0}50%{background-position:50% 0}to{background-position:0 0}}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}@-webkit-keyframes slideUp{0%{-webkit-transform:translateY(2rem);transform:translateY(2rem)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideUp{0%{-webkit-transform:translateY(2rem);transform:translateY(2rem)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes slideUpNew{0%{-webkit-transform:translateY(1.5rem);transform:translateY(1.5rem)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes slideUpNew{0%{-webkit-transform:translateY(1.5rem);transform:translateY(1.5rem)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes swipeRight{0%{left:0}to{-webkit-transform:translateX(100%);transform:translateX(100%)}}@keyframes swipeRight{0%{left:0}to{-webkit-transform:translateX(100%);transform:translateX(100%)}}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes rotate{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@-webkit-keyframes slideRight{0%{left:0}to{left:55%}}@keyframes slideRight{0%{left:0}to{left:55%}}@-webkit-keyframes slideLeft{0%{left:55%}to{left:0}}@keyframes slideLeft{0%{left:55%}to{left:0}}@-webkit-keyframes slideRightShort{0%{left:0}to{left:25%}}@keyframes slideRightShort{0%{left:0}to{left:25%}}@-webkit-keyframes slideLeftShort{0%{left:25%}to{left:0}}@keyframes slideLeftShort{0%{left:25%}to{left:0}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}body{line-height:1;margin-top:0;-webkit-tap-highlight-color:transparent}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}body *+*{margin-top:18px;margin-top:1.125rem}#root{margin-top:0}blockquote{font-weight:400;font-style:italic;line-height:1.16;text-align:center;font-size:30px;font-size:1.875rem}*+blockquote,blockquote+*{margin-top:72px;margin-top:4.5rem}blockquote,figcaption{font-family:Helvetica Neue,Helvetica,Arial,sans-serif}.fonts-loaded blockquote,.fonts-loaded figcaption{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}code{padding:4.8px;padding:.3rem;background:#f8f8f8}pre>code{padding:36px;padding:2.25rem;display:block;overflow:auto}input,textarea{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;border-style:solid;border-radius:0;box-sizing:border-box;box-shadow:none;outline:none;resize:none;background-color:inherit;-webkit-appearance:none;font-size:16px;font-size:1rem;padding:16px;padding:1rem;border-width:4px;border-width:.25rem}.fonts-loaded input,.fonts-loaded textarea{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}input:-webkit-autofill,input:-webkit-autofill:focus,input:-webkit-autofill:hover{background-color:#fff;-webkit-transition:background-color 5000s ease-in-out 0s;transition:background-color 5000s ease-in-out 0s}textarea{overflow:auto}button,input[type=submit]{border:0;cursor:pointer;-webkit-appearance:none;font-size:16px;font-size:1rem;padding:16px;padding:1rem}abbr.required{font-size:20.8px;font-size:1.3rem;text-decoration:none}.h1,h1{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:40px;font-size:2.5rem;font-weight:600;line-height:1;letter-spacing:normal;text-transform:none;word-break:normal;word-wrap:normal}.fonts-loaded .h1,.fonts-loaded h1{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.h1+*,h1+*{margin-top:6.4px;margin-top:.4rem}*+.h1,*+h1{margin-top:48px;margin-top:3rem}.h2,h2{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:35.2px;font-size:2.2rem;font-weight:600;line-height:1;letter-spacing:normal;text-transform:none;word-break:normal;word-wrap:normal}.fonts-loaded .h2,.fonts-loaded h2{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.h2+*,h2+*{margin-top:6.4px;margin-top:.4rem}*+.h2,*+h2{margin-top:48px;margin-top:3rem}.h3,h3{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:30px;font-size:1.875rem;font-weight:600;line-height:1;letter-spacing:normal;text-transform:none;word-break:normal;word-wrap:normal}.fonts-loaded .h3,.fonts-loaded h3{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.h3+*,h3+*{margin-top:6.4px;margin-top:.4rem}*+.h3,*+h3{margin-top:48px;margin-top:3rem}.h4,h4{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:24px;font-size:1.5rem;font-weight:600;line-height:1;letter-spacing:normal;text-transform:none;word-break:normal;word-wrap:normal}.fonts-loaded .h4,.fonts-loaded h4{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.h4+*,h4+*{margin-top:6.4px;margin-top:.4rem}*+.h4,*+h4{margin-top:48px;margin-top:3rem}.h5,h5{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:20.8px;font-size:1.3rem;font-weight:600;line-height:1;letter-spacing:normal;text-transform:none;word-break:normal;word-wrap:normal}.fonts-loaded .h5,.fonts-loaded h5{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.h5+*,h5+*{margin-top:6.4px;margin-top:.4rem}*+.h5,*+h5{margin-top:48px;margin-top:3rem}.h6,h6{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:17.6px;font-size:1.1rem;font-weight:600;line-height:1;letter-spacing:normal;text-transform:none;word-break:normal;word-wrap:normal}.fonts-loaded .h6,.fonts-loaded h6{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.h6+*,h6+*{margin-top:6.4px;margin-top:.4rem}*+.h6,*+h6{margin-top:48px;margin-top:3rem}img{max-width:100%;height:auto;vertical-align:middle}.page-container{position:relative;width:100%;top:60px;top:3.75rem}.header-container{height:60px;height:3.75rem}a{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:600;text-decoration:none;color:#1c77c3}.fonts-loaded a{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}a:focus,a:hover{color:#0f416a}ol,ul{list-style-position:outside;padding-left:32px;padding-left:2rem}li{padding-left:16px;padding-left:1rem}ol{list-style-type:decimal}ul{list-style-type:disc}table{overflow-x:scroll;border-style:solid;width:100%}th{text-align:left;font-weight:500;background:#efefef}td,th{padding:8px;padding:.5rem}td{border-bottom-color:#efefef;border-bottom-width:1px;border-bottom-width:.0625rem;border-bottom-style:solid}html{font-size:100%}body{font-size:16px;font-size:1rem;color:#223547;line-height:1.75;overflow-wrap:break-word;word-wrap:break-word;word-break:break-word;background:#fff}.root{font-family:Times New Roman,Times,serif}.fonts-loaded .root{font-family:Source Serif Pro,Times New Roman,Times,serif}em{font-style:italic}b,strong{font-weight:700}code,pre{font-family:Consolas,Liberation Mono,Menlo,Courier,monospace;font-weight:400;font-size:14px;font-size:.875rem}hr{border-style:solid}.is-hidden{display:none}.banded-section{position:relative}.banded-section:after{content:"";display:table;clear:both}.banded-section+.banded-section{margin-top:0}.banded-section>.banded-section-content{max-width:1438.971px;max-width:89.9357rem;margin-left:auto;margin-right:auto;padding-top:12px;padding-top:.75rem;box-sizing:border-box}.banded-section>.banded-section-content:after{content:"";display:table;clear:both}.banded-section .banded-section-content+.banded-section-content{padding-top:12px;padding-top:.75rem}.banded-section-full>.banded-section-content{padding:0;max-width:none}.banded-section-wide>.banded-section-content{width:93%;padding:16px 0;padding:1rem 0;max-width:1381px;max-width:86.3125rem}.banded-section-tall>.banded-section-content{padding:40px 0;padding:2.5rem 0}.banded-section-banner>.banded-section-content{max-width:none;padding:16px 0;padding:1rem 0}.banded-section-medium>.banded-section-content{width:87.90827%;padding-top:48px;padding-top:3rem;padding-bottom:48px;padding-bottom:3rem;max-width:1265px;max-width:79.0625rem}.banded-section-small>.banded-section-content{width:87.90827%;padding:40px 0;padding:2.5rem 0;max-width:700px;max-width:43.75rem}.banded-section-narrow>.banded-section-content{width:63.72481%;padding:70px 0;padding:4.375rem 0;max-width:917px;max-width:57.3125rem}.banded-section-rectangle>.banded-section-content{width:63.72481%;padding:35px 0;padding:2.1875rem 0;max-width:917px;max-width:57.3125rem}.banded-section-long-rectangle>.banded-section-content{width:73.28353%;padding:8.75px 0;padding:.54688rem 0;max-width:1054.549px;max-width:65.90937rem}.banded-section.banded-section-no-bottom-padding>.banded-section-content{padding-bottom:0}.banded-section-dark{background:#252525;color:#fff}.banded-section-grey{background:#f8f8f8;color:#4a4a4a;border-bottom:none}.banded-section-light{background:#fff;color:#4a4a4a;border-bottom:none}.banded-section-teal{background:#529da8;color:#fff;border-bottom:none}.banded-section-blue{background:#4357ad;color:#fff;border-bottom:none}.banded-section-transparent{background:none;border-bottom:none}.banded-section-dark-green-blue{background:#124a55;color:#fff;border-bottom:none}.banded-section-medium-grey{background:#f4f4f4;color:#4a4a4a;border-bottom:none}.banded-section-dark-blue{background:#094074;color:#fff;border-bottom:none}.banded-section-dark-blue-grey{background:#223547;color:#fff}.banded-section>.banded-section-content-no-padding{padding-top:0;padding-bottom:0}.button{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;display:inline-block;background:none;padding:16px 40px;padding:1rem 2.5rem;color:#fff;text-decoration:none;border-radius:.25rem;letter-spacing:2px;letter-spacing:.125rem;text-transform:uppercase;line-height:1;text-align:center;-webkit-transition:all .25s ease-out;transition:all .25s ease-out;background-color:#1bd9c4;border-color:#1bd9c4;font-weight:500;font-size:16px;font-size:1rem;box-shadow:0 .625rem 2.5rem 0 rgba(0,0,0,.06)}.fonts-loaded .button{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.button:focus,.button:hover{-webkit-transform:translateY(-.625rem);transform:translateY(-.625rem);text-decoration:none;outline:0}.border-button{border-width:2px;border:.125rem solid #223547;color:#223547;background-color:transparent}.button.light-button{border-color:#fff;color:#fff;background-color:#fff}.button.light-button.border-button{background-color:transparent;color:#fff}.button-is-saving{position:relative}.button-is-saving .button-label{opacity:0}.button-is-saving:after{content:"";position:absolute;top:50%;left:50%;margin:-12px 0 0 -12px;margin:-.75rem 0 0 -.75rem;height:12px;height:.75rem;width:12px;width:.75rem;border-width:4px;border:.25rem solid #fff;border-right-color:transparent;border-radius:50%;display:inline-block;-webkit-animation:rotate .8s infinite linear;animation:rotate .8s infinite linear}.button-is-saving.border-button:after{border-color:#223547;border-right-color:transparent}.button-is-saving.light-button:after{border-color:#ccc;border-right-color:transparent}.button-is-saved{position:relative}.button-is-saved .button-label{opacity:0;-webkit-animation:fadeIn;animation:fadeIn;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-delay:.75s;animation-delay:.75s}.button-is-saved:after{opacity:0;content:"\2713";position:absolute;top:50%;left:50%;font-size:32px;font-size:2rem;margin:-16px 0 0 -16px;margin:-1rem 0 0 -1rem;-webkit-animation:fadeInOut;animation:fadeInOut;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-iteration-count:1;animation-iteration-count:1}.client-list-cta{visibility:visible}.client-list-cta,.client-list .columned-list{text-align:center}.client-list-header-container{text-align:left;padding-bottom:40px;padding-bottom:2.5rem;padding-top:36px;padding-top:2.25rem;width:100%;color:#223547;font-size:16px;font-size:1rem;font-weight:600;line-height:38px;line-height:2.375rem}.client-list-headline{display:inline-block;padding-right:16px;padding-right:1rem;font-size:30px;font-size:1.875rem;line-height:1.27}.client-list-headline:before{content:"";display:block;width:80px;width:5rem;height:5px;height:.3125rem;background:#1bd9c4;margin-bottom:35px;margin-bottom:2.1875rem}.client-list-logo-link{display:block;position:relative;padding:16px;padding:1rem;min-width:96px;min-width:6rem}.client-list-logo{text-align:center;box-sizing:border-box;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.client-list-logo .hover-text{line-height:1;position:absolute;opacity:0;color:#707070;text-decoration:underline;top:50%;left:50%;-webkit-transform:translateY(-50%) translateX(-50%);transform:translateY(-50%) translateX(-50%)}.client-list-logo .hover-text+*{margin-top:0}.client-list-logo .image-container{margin-left:auto;margin-right:auto;min-width:96px;min-width:6rem;max-width:112px;max-width:7rem}.hamburger-label{vertical-align:middle;padding-left:16px;padding-left:1rem;display:inline-block;margin-top:0;position:absolute;left:-10000px;left:-625rem;top:auto;width:1px;height:1px;overflow:hidden}.hamburger{padding:0;display:inline-block;cursor:pointer;color:#223547;line-height:1}.hamburger-box{width:20px;width:1.25rem;height:14px;height:.875rem;display:inline-block;position:relative;vertical-align:middle}.hamburger-inner{display:block;top:50%;margin-top:-1px;margin-top:-.0625rem;-webkit-transition-duration:.1s;transition-duration:.1s;-webkit-transition-timing-function:cubic-bezier(.55,.055,.675,.19);transition-timing-function:cubic-bezier(.55,.055,.675,.19)}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{width:20px;width:1.25rem;height:2px;height:.125rem;background-color:#223547;position:absolute;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-transition-duration:.15s;transition-duration:.15s;-webkit-transition-timing-function:ease;transition-timing-function:ease}.hamburger-inner:after,.hamburger-inner:before{content:"";display:block}.hamburger-inner:before{top:-6px;top:-.375rem;-webkit-transition:top .1s ease .14s,opacity .1s ease;transition:top .1s ease .14s,opacity .1s ease}.hamburger-inner:after{bottom:-6px;bottom:-.375rem;-webkit-transition:bottom .1s ease .14s,-webkit-transform .1s cubic-bezier(.55,.055,.675,.19);transition:bottom .1s ease .14s,-webkit-transform .1s cubic-bezier(.55,.055,.675,.19);transition:bottom .1s ease .14s,transform .1s cubic-bezier(.55,.055,.675,.19);transition:bottom .1s ease .14s,transform .1s cubic-bezier(.55,.055,.675,.19),-webkit-transform .1s cubic-bezier(.55,.055,.675,.19)}.hamburger-is-active .hamburger-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-transition-delay:.14s;transition-delay:.14s;-webkit-transition-timing-function:cubic-bezier(.215,.61,.355,1);transition-timing-function:cubic-bezier(.215,.61,.355,1)}.hamburger-is-active .hamburger-inner:before{top:0;opacity:0;-webkit-transition:top .1s ease,opacity .1s ease .14s;transition:top .1s ease,opacity .1s ease .14s}.hamburger-is-active .hamburger-inner:after{bottom:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg);-webkit-transition:bottom .1s ease,-webkit-transform .1s cubic-bezier(.215,.61,.355,1) .14s;transition:bottom .1s ease,-webkit-transform .1s cubic-bezier(.215,.61,.355,1) .14s;transition:bottom .1s ease,transform .1s cubic-bezier(.215,.61,.355,1) .14s;transition:bottom .1s ease,transform .1s cubic-bezier(.215,.61,.355,1) .14s,-webkit-transform .1s cubic-bezier(.215,.61,.355,1) .14s}.header-container{width:100%;background-color:#fff}.header-container .banded-section{height:100%}.header-background-underlay{display:none}.header-container.navigation-is-active{top:0;background-color:transparent;color:#223547}.header-container.navigation-is-active+.page-container{opacity:0}.mobile-menu-no-scroll{overflow:hidden}.header-logo-container{width:50%;display:inline-block;vertical-align:middle}.header-logo-link{display:block;max-width:144px;max-width:9rem;background-image:url("/img/logo-black.png");background-position:0;background-repeat:no-repeat;background-size:contain;text-indent:-159984px;text-indent:-9999rem}.header-container+*{margin-top:0}.header-skip-link{position:absolute;left:-10000px;left:-625rem;top:auto;width:1px;height:1px;overflow:hidden}.header-skip-link:focus{position:absolute;height:auto;width:auto;top:16px;top:1rem;left:16px;left:1rem}.header-skip-link+*{margin-top:0}.hero-container{margin-top:0;overflow:hidden;padding:6.8818% 0}.hero-container+*{margin-top:0}.hero-container .banded-section{position:relative}.hero-media{position:absolute;right:0;bottom:0;max-width:70%;margin-top:0}.hero-media .image-hero-size:after{content:"";display:block;position:absolute;left:0;right:0;top:0;bottom:0;background:-webkit-linear-gradient(left,rgba(27,217,196,.5),rgba(27,217,196,0) 50%);background:linear-gradient(90deg,rgba(27,217,196,.5) 0,rgba(27,217,196,0) 50%)}.hero-content-container{max-width:1438.971px;max-width:89.9357rem;margin:0 auto;position:relative;min-height:220px;min-height:13.75rem}.hero-content-container:after{content:"";display:table;clear:both}.hero-content{margin:0;position:relative;z-index:1;-webkit-animation-name:slideUp;animation-name:slideUp;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-duration:1s;animation-duration:1s}.hero-content,.hero-headline{-webkit-backface-visibility:hidden;backface-visibility:hidden}.hero-headline{-webkit-animation:slideUpNew;animation:slideUpNew;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-delay:0s;animation-delay:0s;font-size:40px;font-size:2.5rem;word-wrap:normal;word-break:normal;line-height:1.25;text-transform:lowercase;color:#223547;padding-left:30px;padding-left:1.875rem}.hero-headline:before{content:"";display:block;width:80px;width:5rem;height:5px;height:.3125rem;background:#1bd9c4;margin-bottom:10px;margin-bottom:.625rem}.hero-additional-content{margin-top:36px;margin-top:2.25rem;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center}.hero-content-center{text-align:center}.hero-short .hero-content-container{min-height:50px;min-height:3.125rem}.root:not(.page-theme-home) .hero-headline{white-space:pre}.root:not(.page-theme-home) .hero-video *+*{margin-top:0}.root:not(.page-theme-home) .hero-video .image-hero-size:first-of-type{visibility:hidden}.root:not(.page-theme-home) .hero-video .image-hero-size+div{max-height:362px;overflow:hidden}.root:not(.page-theme-home) .hero-video .image-hero-size+div .image-hero-size{visibility:visible;position:relative;padding-bottom:56.25%;height:0;overflow:hidden;max-width:100%}.root:not(.page-theme-home) .hero-video .image-hero-size+div .image-hero-size .image-iframe{position:absolute;bottom:0;left:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover;font-family:object-fit\: cover}.image-container .image{-o-object-fit:cover;object-fit:cover;-o-object-position:center;object-position:center;font-family:"object-fit: cover; object-position: center"}.image-container>.media-body{position:absolute}.image-container.image-centered{margin-left:auto;margin-right:auto}.image-container .image-iframe{-o-object-fit:fill;object-fit:fill;font-family:object-fit\: fill}.image-banner-size{position:relative}.image-banner-size:before{display:block;content:"";width:100%;padding-top:42.85714%}.image-banner-size>.image,.image-banner-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-banner-size .image{width:100%}.image-banner-centered-size{position:relative}.image-banner-centered-size:before{display:block;content:"";width:100%;padding-top:50.47868%}.image-banner-centered-size>.image,.image-banner-centered-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-banner-centered-size .image{width:100%}.image-banner-wide-size{position:relative}.image-banner-wide-size:before{display:block;content:"";width:100%;padding-top:24.36732%}.image-banner-wide-size>.image,.image-banner-wide-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-banner-wide-size .image{width:100%}.image-banner-full-size{position:relative}.image-banner-full-size:before{display:block;content:"";width:100%;padding-top:66.80556%}.image-banner-full-size>.image,.image-banner-full-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-banner-full-size .image{width:100%}.image-thumbnail-size{position:relative;width:62px;width:3.875rem}.image-thumbnail-size:before{display:block;content:"";width:100%;padding-top:100%}.image-thumbnail-size>.image,.image-thumbnail-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-award-size{position:relative;width:44.96px;width:2.81rem}.image-award-size:before{display:block;content:"";width:100%;padding-top:100%}.image-award-size>.image,.image-award-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-rectangle-size{position:relative}.image-rectangle-size:before{display:block;content:"";width:100%;padding-top:67.62821%}.image-rectangle-size>.image,.image-rectangle-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-portrait-size{position:relative}.image-portrait-size:before{display:block;content:"";width:100%;padding-top:107.7951%}.image-portrait-size>.image,.image-portrait-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-carousel-size{position:relative}.image-carousel-size:before{display:block;content:"";width:100%;padding-top:56.71429%}.image-carousel-size>.image,.image-carousel-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-micro-size{position:relative;max-width:20px;max-width:1.25rem}.image-micro-size:before{display:block;content:"";width:100%;padding-top:100%}.image-micro-size>.image,.image-micro-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-logo-size{position:relative;width:100%}.image-logo-size:before{display:block;content:"";width:100%;padding-top:100%}.image-logo-size>.image,.image-logo-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-client-size{position:relative}.image-client-size:before{display:block;content:"";width:100%;padding-top:48.75%}.image-client-size>.image,.image-client-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-client-size .image{-o-object-fit:contain;object-fit:contain;font-family:object-fit\: contain}.image-client-summary-size{position:relative}.image-client-summary-size:before{display:block;content:"";width:100%;padding-top:100%}.image-client-summary-size>.image,.image-client-summary-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.image-widescreen-size{position:relative}.image-widescreen-size:before{display:block;content:"";width:100%;padding-top:56.25%}.image-widescreen-size>.image,.image-widescreen-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.basic-card-image .image-container .image{-o-object-fit:scale;object-fit:scale;font-family:object-fit\: scale}.image-certification-size{position:relative;width:216px;width:13.5rem}.image-certification-size:before{display:block;content:"";width:100%;padding-top:100%}.image-certification-size>.image,.image-certification-size>noscript>.image{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%}.navigation-toggle-container{margin-top:0;display:inline-block;width:50%;text-align:right;vertical-align:top}.navigation-items{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;list-style:none;list-style-position:outside;padding-left:0}.fonts-loaded .navigation-items{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.navigation-items li{padding-left:0}.navigation-items+*{margin-top:54px;margin-top:3.375rem}.navigation-item .navigation-link{color:#223547;display:block;text-decoration:none;-webkit-transition:color .25s ease-out;transition:color .25s ease-out;font-size:22px;font-size:1.375rem;font-weight:500}.navigation-item .navigation-link:focus,.navigation-item .navigation-link:hover{color:#9ab5ce}.navigation-item .is-active-navigation-link .navigation-border{display:inline-block}.navigation-item .is-active-navigation-link .navigation-border,.navigation-item .is-active-navigation-link .navigation-border:focus,.navigation-item .is-active-navigation-link .navigation-border:hover{text-decoration:none;border-bottom:2px solid}.navigation-container{display:none;padding:18px 40px;padding:1.125rem 2.5rem}.navigation-container:target,.navigation-is-open.navigation-container{display:block}.social-container{text-align:left;list-style:none;list-style-position:outside;padding-left:0}.social-container li{padding-left:0}.social-item{display:inline-block;vertical-align:middle}.social-item+.social-item{margin-top:0}.social-item+.social-item .image{padding-left:32px;padding-left:2rem}.social-item .image{margin:auto;display:block}.social-site-header{text-align:left;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between}.social-item-icon{height:21px;height:1.3125rem}.category-theme-mobile-strategy .content-object-summary-divider{background-color:#124a55}.category-theme-mobile-strategy.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-mobile-strategy,.headline-hero-category-mobile-strategy{color:#083c46}.content-object-summary-light .article-category-mobile-strategy,.content-object-summary-light .headline-hero-category-mobile-strategy{color:#fff}.page-theme-mobile-strategy-category .article-footer:before,.page-theme-mobile-strategy-category .article-header:after,.page-theme-mobile-strategy-category .headline-hero:after{background-color:#124a55}.category-theme-app-development .content-object-summary-divider{background-color:#4357ad}.category-theme-app-development.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-app-development,.headline-hero-category-app-development{color:#2b3f93}.content-object-summary-light .article-category-app-development,.content-object-summary-light .headline-hero-category-app-development{color:#fff}.page-theme-app-development-category .article-footer:before,.page-theme-app-development-category .article-header:after,.page-theme-app-development-category .headline-hero:after{background-color:#4357ad}.category-theme-product-design .content-object-summary-divider{background-color:#058092}.category-theme-product-design.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-product-design,.headline-hero-category-product-design{color:#058092}.content-object-summary-light .article-category-product-design,.content-object-summary-light .headline-hero-category-product-design{color:#fff}.page-theme-product-design-category .article-footer:before,.page-theme-product-design-category .article-header:after,.page-theme-product-design-category .headline-hero:after{background-color:#058092}.category-theme-emerging-tech-prototyping .content-object-summary-divider{background-color:#54b4cf}.category-theme-emerging-tech-prototyping.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-emerging-tech-prototyping,.headline-hero-category-emerging-tech-prototyping{color:#2a9fbf}.content-object-summary-light .article-category-emerging-tech-prototyping,.content-object-summary-light .headline-hero-category-emerging-tech-prototyping{color:#fff}.page-theme-emerging-tech-prototyping-category .article-footer:before,.page-theme-emerging-tech-prototyping-category .article-header:after,.page-theme-emerging-tech-prototyping-category .headline-hero:after{background-color:#54b4cf}.category-theme-web-development .content-object-summary-divider{background-color:#4357ad}.category-theme-web-development.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-web-development,.headline-hero-category-web-development{color:#2b3f93}.content-object-summary-light .article-category-web-development,.content-object-summary-light .headline-hero-category-web-development{color:#fff}.page-theme-web-development-category .article-footer:before,.page-theme-web-development-category .article-header:after,.page-theme-web-development-category .headline-hero:after{background-color:#4357ad}.category-theme-mobile-marketing .content-object-summary-divider{background-color:#1578a2}.category-theme-mobile-marketing.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-mobile-marketing,.headline-hero-category-mobile-marketing{color:#1578a2}.content-object-summary-light .article-category-mobile-marketing,.content-object-summary-light .headline-hero-category-mobile-marketing{color:#fff}.page-theme-mobile-marketing-category .article-footer:before,.page-theme-mobile-marketing-category .article-header:after,.page-theme-mobile-marketing-category .headline-hero:after{background-color:#1578a2}.category-theme-careers .content-object-summary-divider{background-color:#8b741a}.category-theme-careers.content-object-summary-light .content-object-summary-divider{background-color:#fff}.article-category-careers,.headline-hero-category-careers{color:#8b741a}.content-object-summary-light .article-category-careers,.content-object-summary-light .headline-hero-category-careers{color:#fff}.page-theme-careers-category .article-footer:before,.page-theme-careers-category .article-header:after,.page-theme-careers-category .headline-hero:after{background-color:#8b741a}.card-content-about,.card-content-careers,.card-content-contact,.card-content-home,.card-content-ideas,.card-content-work,.page-theme-about .navigation-is-active,.page-theme-about .page-theme-hero,.page-theme-about .page-theme-hero-media,.page-theme-about .page-theme-hero-media:after,.page-theme-careers .navigation-is-active,.page-theme-careers .page-theme-hero,.page-theme-careers .page-theme-hero-media,.page-theme-careers .page-theme-hero-media:after,.page-theme-contact .navigation-is-active,.page-theme-contact .page-theme-hero,.page-theme-contact .page-theme-hero-media,.page-theme-contact .page-theme-hero-media:after,.page-theme-home .navigation-is-active,.page-theme-home .page-theme-hero,.page-theme-home .page-theme-hero-media,.page-theme-home .page-theme-hero-media:after,.page-theme-ideas .navigation-is-active,.page-theme-ideas .page-theme-hero,.page-theme-ideas .page-theme-hero-media,.page-theme-ideas .page-theme-hero-media:after,.page-theme-work .navigation-is-active,.page-theme-work .page-theme-hero,.page-theme-work .page-theme-hero-media,.page-theme-work .page-theme-hero-media:after{background-color:transparent}.card-content-404,.card-content-500,.page-theme-404,.page-theme-404 .header-background-underlay,.page-theme-404 .navigation-is-active,.page-theme-404 .page-theme-header-container,.page-theme-404 .page-theme-hero,.page-theme-404 .page-theme-hero-media,.page-theme-404 .page-theme-hero-media:after,.page-theme-500,.page-theme-500 .header-background-underlay,.page-theme-500 .navigation-is-active,.page-theme-500 .page-theme-header-container,.page-theme-500 .page-theme-hero,.page-theme-500 .page-theme-hero-media,.page-theme-500 .page-theme-hero-media:after{background-color:#1c77c3}.page-theme-404 .header-logo-link,.page-theme-500 .header-logo-link{background-image:url("/img/logo-white.png")}.page-theme-404 .hamburger-inner,.page-theme-404 .hamburger-inner:after,.page-theme-404 .hamburger-inner:before,.page-theme-500 .hamburger-inner,.page-theme-500 .hamburger-inner:after,.page-theme-500 .hamburger-inner:before{background-color:#fff}.page-theme-404 .navigation-link,.page-theme-500 .navigation-link{color:#fff}.page-theme-404 .navigation-link:focus,.page-theme-404 .navigation-link:hover,.page-theme-500 .navigation-link:focus,.page-theme-500 .navigation-link:hover{color:#dadada;color:hsla(0,0%,100%,.5)}.page-theme-ideas .hero-container{padding-right:4.58787%}.page-theme-home .hero-container{padding:0;position:relative}.page-theme-home .hero-container+.section-padding-s{padding-top:0}.page-theme-home .hero-content{position:absolute;left:0;right:0;bottom:16px;bottom:1rem;padding:0 4.58787%;max-width:1438.971px;max-width:89.9357rem}.page-theme-home .hero-content-container{height:100%;position:static;padding-top:50px;padding-top:3.125rem}.page-theme-home .hero-headline{padding-left:0}.page-theme-home .hero-headline:before{display:none}.page-theme-home .hero-content-center{width:auto}.page-theme-home .hero-media{width:100%;height:100%;max-width:none;left:0;top:0;bottom:0;right:0}.page-theme-home .hero-media:after{display:block;content:"";position:absolute;left:0;right:0;top:0;bottom:0;background:-webkit-linear-gradient(top,hsla(0,0%,97%,0),#f8f8f8);background:linear-gradient(180deg,hsla(0,0%,97%,0) 0,#f8f8f8)}.page-theme-home .hero-media .image-hero-size:after{display:none}.page-theme-home .hero-media .image-container{position:absolute;width:100%;height:100%;top:0}.page-theme-home .hero-media .image-container img{display:block;width:100%}.page-theme-home .hero-video *+*{margin-top:0}.page-theme-home .hero-video .image-hero-size{position:relative;padding-bottom:56.25%;height:0;overflow:hidden;max-width:100%}.page-theme-home .hero-video .image-hero-size:first-of-type{display:none}.page-theme-home .hero-video .image-hero-size+div .image-hero-size{display:block}.page-theme-home .hero-video .image-hero-size .image-iframe{position:absolute;top:0;left:0;width:100%;height:100%;-o-object-fit:cover;object-fit:cover;font-family:object-fit\: cover}.page-theme-mobile-strategy .navigation-is-active,.page-theme-mobile-strategy .page-theme-header-container{background-color:#fff}.page-theme-mobile-strategy .service-theme-header{background-color:#124a55;border-color:#083c46}.page-theme-mobile-strategy .service-theme-secondary-services-flag .card-list-flag{background-color:#124a55}.page-theme-app-development .navigation-is-active,.page-theme-app-development .page-theme-header-container{background-color:#fff}.page-theme-app-development .service-theme-header{background-color:#4357ad;border-color:#2b3f93}.page-theme-app-development .service-theme-secondary-services-flag .card-list-flag{background-color:#4357ad}.page-theme-product-design .navigation-is-active,.page-theme-product-design .page-theme-header-container{background-color:#fff}.page-theme-product-design .service-theme-header{background-color:#058092;border-color:#058092}.page-theme-product-design .service-theme-secondary-services-flag .card-list-flag{background-color:#058092}.page-theme-emerging-tech-prototyping .navigation-is-active,.page-theme-emerging-tech-prototyping .page-theme-header-container{background-color:#fff}.page-theme-emerging-tech-prototyping .service-theme-header{background-color:#54b4cf;border-color:#2a9fbf}.page-theme-emerging-tech-prototyping .service-theme-secondary-services-flag .card-list-flag{background-color:#54b4cf}.page-theme-web-development .navigation-is-active,.page-theme-web-development .page-theme-header-container{background-color:#fff}.page-theme-web-development .service-theme-header{background-color:#4357ad;border-color:#2b3f93}.page-theme-web-development .service-theme-secondary-services-flag .card-list-flag{background-color:#4357ad}.page-theme-mobile-marketing .navigation-is-active,.page-theme-mobile-marketing .page-theme-header-container{background-color:#fff}.page-theme-mobile-marketing .service-theme-header{background-color:#1578a2;border-color:#1578a2}.page-theme-mobile-marketing .service-theme-secondary-services-flag .card-list-flag{background-color:#1578a2}.small-cta-text{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:14px;font-size:.875rem;font-weight:600;line-height:1.14}.fonts-loaded .small-cta-text{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.large-cta-text{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-weight:600;font-size:18px;font-size:1.125rem;line-height:25px;line-height:1.5625rem}.fonts-loaded .large-cta-text{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}.control-cta-text{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;font-size:1rem;font-weight:600;letter-spacing:2px;letter-spacing:.125rem}.fonts-loaded .control-cta-text{font-family:Avenir Next,Helvetica Neue,Helvetica,Arial,sans-serif}@media (min-width:40em){.client-list-cta{visibility:hidden}.client-list .columned-list{text-align:left}.client-list-logo-link:focus .hover-text,.client-list-logo-link:hover .hover-text{opacity:1;-webkit-transition:opacity 1s linear;transition:opacity 1s linear}.client-list-logo-link:focus .image,.client-list-logo-link:hover .image{opacity:0;-webkit-transition:opacity .5s linear;transition:opacity .5s linear}.hero-headline{max-width:40%;font-size:3.75rem;line-height:1}.hero-additional-content{-webkit-box-pack:start;justify-content:flex-start}.image-certification-size{width:11.5rem}.social-site-footer{display:inline-block;vertical-align:baseline;direction:ltr;margin-left:2rem}.social-site-header{display:none}.page-theme-ideas .hero-content:not(.hero-content-center){display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.page-theme-home .hero-content,.page-theme-ideas .hero-content{margin:0 auto}.page-theme-home .hero-content:not(.hero-content-center){display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.page-theme-home .hero-content-container{padding-top:0}.page-theme-home .hero-headline{max-width:60%}.page-theme-home .hero-content-center .hero-additional-content,.page-theme-home .hero-content-center .hero-headline{margin-left:auto;margin-right:auto}.large-cta-text{line-height:2.375rem;font-size:1.875rem}}@media (min-width:60em){.h1,h1{font-size:4rem}.h2,h2{font-size:2.75rem}.h3,h3{font-size:2.5rem}.h4,h4{font-size:1.875rem}.h5,h5{font-size:1.125rem}.h6,h6{font-size:1rem}.page-container{top:0}.header-container{height:6.3rem}body .header-background-underlay,body .header-container,body .header-container .banded-section,body .header-logo-container{-webkit-transition:all .1s linear;transition:all .1s linear}body .header-container,body .header-container .banded-section,body .header-logo-container{-webkit-transform:translate(0);transform:translate(0);-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}body.animate-offset .header-container{-webkit-transform:translateY(-25px);transform:translateY(-25px)}body.animate-offset .header-container .banded-section{-webkit-transform:translateY(10px);transform:translateY(10px)}body.animate-offset .header-container .header-background-underlay{opacity:1}body.animate-offset .header-logo-container{-webkit-transform:scale(.8);transform:scale(.8)}.banded-section-wide>.banded-section-content{padding:2rem 0}.banded-section-tall>.banded-section-content{padding:5rem 0}.banded-section-banner>.banded-section-content{padding:2rem 0}.banded-section-small>.banded-section-content{padding:5rem 0;width:48.64489%}.banded-section-narrow>.banded-section-content{padding:8.75rem 0}.banded-section-rectangle>.banded-section-content{padding:4.375rem 0}.banded-section-long-rectangle>.banded-section-content{padding:1.09375rem 0}.banded-section>.banded-section-content-no-padding{padding-top:0;padding-bottom:0}.client-list-header-container{margin-left:4rem;width:60.76389%}.client-list-headline:before{margin-bottom:3rem;margin-left:-1.875rem}.client-list-logo-link{padding:2rem}.header-container{background-color:transparent}.header-background-underlay{position:absolute;display:block;top:0;left:0;height:100%;width:100%;opacity:0;background-color:#fff}.header-container.navigation-is-active+.page-container{opacity:1}.mobile-menu-no-scroll{overflow:scroll}.header-logo-container{width:35%}.header-skip-link:focus{top:2rem;left:2rem}.header-container,.header-container.navigation-is-active{width:100%}.header-container+.page-container,.header-container.navigation-is-active+.page-container{display:block}.header-logo-link{min-height:2.75rem;max-width:12.5rem}.hero-container{padding:1.875rem 0 1.25rem;padding-top:8.175rem}.hero-media{overflow:hidden;-webkit-transition:none;transition:none}.hero-content-container{min-height:22.625rem}.hero-content{box-sizing:border-box;position:relative;max-width:none;padding:0 4.58787%}.hero-headline{font-size:5.625rem;padding-left:6.25rem;padding-top:4.375rem;padding-bottom:2.1875rem}.hero-headline:before{margin-bottom:3rem;margin-left:-1.875rem}.hero-content-center{text-align:center;width:70%}.hero-content-center .hero-headline{font-size:5.625rem}.hero-short .hero-content-container{min-height:6.25rem}.navigation-toggle-container{display:none}.navigation-container,.navigation-container:target,.navigation-is-open.navigation-container{display:inline-block;width:65%;text-align:right;padding:0;margin-top:0;vertical-align:middle}.navigation-item{display:inline-block}.navigation-item .navigation-link{font-size:1rem}.navigation-item+.navigation-item{margin-top:0}.navigation-item+.navigation-item .navigation-link{margin-left:2rem}.page-theme-404 .header-background-underlay,.page-theme-404 .navigation-is-active,.page-theme-404 .page-theme-header-container,.page-theme-500 .header-background-underlay,.page-theme-500 .navigation-is-active,.page-theme-500 .page-theme-header-container{background-color:#1c77c3}.page-theme-home .hero-container{min-height:25rem;max-height:28.125rem}.page-theme-home .hero-content{padding:0;width:80%}.page-theme-home .hero-headline{max-width:58%;font-size:5rem;margin-left:4rem}.page-theme-home .hero-additional-content{max-width:40%}.large-cta-text{line-height:1.27;font-size:2.5rem}}@media (min-width:60em) and (max-height:40em){.page-theme-home .hero-headline{font-size:5rem}}@media (min-width:70em){.page-theme-home .hero-container{min-height:28.125rem;max-height:31.25rem}.page-theme-home .hero-headline{font-size:6.25rem}}@media (min-width:82em){.page-theme-home .hero-container{min-height:32.8125rem;max-height:35.9375rem}.page-theme-home .hero-container+.section-padding-s{padding-top:1rem}.page-theme-home .hero-headline{font-size:7.5rem}}@media (min-width:100em){html{font-size:110%}}
/*# sourceMappingURL=critical.bdd4bda63678c4047dc53f456529c64b.css.map*/</style>
    <link rel="stylesheet" href="./RecyclerView_Adapter_ViewHolder_files/app.c7bc45cfde7cb588d31f60f80bb2f8da.css"
      as="style" type="text/css" media="screen" onload="this.rel='stylesheet'">
    <noscript></noscript>
  </head>
  <body class="animate-offset" data-gr-c-s-loaded="true"> <sub><a id="firstLine"
        name="firstLine"></a>Переклад українською - <a href="mailto:ac2epsilon@gmail.com">Арсеній
        Чеботарьов</a> - Ніжин 2015-2018</sub><a href="https://willowtreeapps.com/ideas/android-fundamentals-working-with-the-recyclerview-adapter-and-viewholder-pattern/#main"
      class="header-skip-link" data-reactid="6">Skip to content</a><span class="headline-hero-category headline-hero-category-app-development"
      data-reactid="62">p Development</span>
    <div id="root">
      <div class="fonts-loaded" data-reactroot="" data-reactid="1" data-react-checksum="-495818370">
        <div data-reactid="2">
          <div class="root page-theme-article page-theme-app-development-category"
            data-reactid="3">
            <h4><br>
            </h4>
            <h4>Робота з&nbsp; RecyclerView, Adapter, та шаблоном ViewHolder</h4>
            <h6><span class="headline-hero-date" data-reactid="64"><time datetime="2016-11-18"
                  data-reactid="65">November 18, 2016</time></span></h6>
            <div class="page-container" id="main" data-reactid="54">
              <article data-reactid="56">
                <div class="banded-section banded-section-light banded-section-small"
                  data-reactid="57">
                  <div class="banded-section-content" data-reactid="58">
                    <header class="headline-hero" data-reactid="59"> </header>
                    В світі мобільної розробки, незалежно від платформи, списки,
                    що відображають дані користувачеві, є загально уживаними в
                    багатьох проектах. Платформа Android надає нам два типи
                    елементів, що можуть застосовуватись для відображення
                    спискових даних&nbsp; — це <a href="https://developer.android.com/reference/android/widget/ListView.html"><code>ListView</code></a>
                    та <a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html"><code>RecyclerView</code></a>.
                    <div class="article-body" data-reactid="69">
                      <div data-reactid="70">
                        <div data-reactid="71">
                          <p>Мій товариш та член нашої команди, Brandon Carter,
                            написав <a href="http://willowtreeapps.com/blog/performance-listviews/">пост
                              щодо створення продуктивних ListView</a> , що
                            вкрай рекомендований до читання, якщо ви
                            використовуєте ListView в вашому проекті. Однак
                            сьогодні ми збираємось сфокусувуатись на більш
                            просунутому елементі Android
                            для перегляду спісків, <code>RecyclerView</code>.</p>
                          <p><code>RecyclerView</code> є дуже потужним та
                            гнучким інструментом, доступним розробникам Android.
                            Завдяки цьому дуже важливо, щоб ви застосовували
                            його відповідно, щоб наш код посідав гарний баланс
                            між власною оптимізацією, та будути як можливо
                            стислішим. Далі іде туторіал щодо того, як я
                            реалізую шаблон RecyclerView, Adapter, та
                            ViewHolder. В кінці кінців мій план складаєтсья у
                            створенні серії туторіалів, що почнуться з
                            використання простого шаблону, показаного нижче, та
                            потім перейде до використання більш просунутих та
                            складних використань цього шаблону в наступних
                            прикладах.</p>
                          <p>Я створив демо проект (звісно з вікритим кодом!),
                            на який ви можете посилатись по ходу читання. Демо
                            проект може бути знайдений на GitHub&nbsp; <a href="https://github.com/willowtreeapps/SimpleRecyclerViewDemo">https://github.com/willowtreeapps/SimpleRecyclerViewDemo</a></p>
                          <p>Налаштуйте ваші думки та пальці, оскільки цей пост
                            насичений кодуванням. Скзавши це, стрибаємо до діла
                            та створимо дещо неймовірне <code>RecyclerView</code>.
                            Та, якщо ви ще не готові, створіть простий проект
                            Android з пустою Activity.</p>
                          <hr>
                          <h3>Простий шаблон RecyclerView / Adapter / ViewHolder</h3>
                          <p>Спершу окреслимо наш кінечний продукт.</p>
                          <ul>
                            <li>Створити список, що міститиме деяке число
                              простих текстових елементів.</li>
                            <li>Ці текстові елеенти будуть відтворювати
                              наступний текст: “This is item {itemIndex}”, де
                              itemIndex є індексом ViewModel, що міститься в
                              нашому списку.</li>
                          </ul>
                          <h4>Налаштування проекту</h4>
                          <p>Ми повинні налаштовувати наш проект, задовільнивши
                            залежність RecyclerView, підключивши відповідну
                            бібліотеку. В нашому файлі рівня застосування
                            build.gradle додайте наступну залежність: <code>com.android.support:recyclerview-v7:24.2.1</code>.</p>
                          <p><em><strong>Підказка</strong>: Остання версія буде
                              підказана Android Studio. (прим.перекл.)<br>
                            </em></p>
                          <p>Базові залежності повинні виглядати схоже на
                            наступне:</p>
                          <pre><code>dependencies {
    def VERSION_ANDROID_SUPPORT = <span class="hljs-string">'24.2.1'</span>
    ...
    compile <span class="hljs-string">"com.android.support:appcompat-v7:<span class="hljs-variable">$VERSION_ANDROID_SUPPORT</span>"</span>
    compile <span class="hljs-string">"com.android.support:recyclerview-v7:<span
class="hljs-variable">$VERSION_ANDROID_SUPPORT</span>"</span>
    ...
}
</code></pre>
                          <p><strong><em>*Зауваження:</em></strong> <em>Персонально
                              я визначаю змінну, коли це потрібно для декількох
                              залежностей.</em></p>
                          <h4>Додавання віджету RecyclerView Widget до Activity</h4>
                          <p>Now that we have the RecyclerView dependency added
                            to our project, let’s add the view widget to our
                            Activity. In your activity layout file located in
                            the layout resource folder, add the following code:</p>
                          <p><strong><em>*Note:</em></strong> <em>The view id
                              is important as we will need to reference it later
                              when instantiating our RecyclerView.</em></p>
                          <pre><code>&lt;?xml version=<span class="hljs-string">"1.0"</span> encoding=<span
class="hljs-string">"utf-8"</span>?&gt;
<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">FrameLayout</span> <span
class="hljs-attr">xmlns:android</span>=<span class="hljs-string">"http://schemas.android.com/apk/res/android"</span>
    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">"http://schemas.android.com/tools"</span>
    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"match_parent"</span>
    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">".MainActivity"</span>&gt;</span>


    <span class="hljs-tag">&lt;<span class="hljs-name">android.support.v7.widget.RecyclerView</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/simple_recyclerview"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"match_parent"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"match_parent"</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">FrameLayout</span>&gt;</span>
</span></code></pre>
                          <h4>Creating the Item Layout</h4>
                          <p>In the layout resource folder create a layout file
                            named “item_simple_itemview.xml” and then add a
                            TextView with the id <code>@+id/simple\_text</code>.</p>
                          <pre><code>&lt;?xml version=<span class="hljs-string">"1.0"</span> encoding=<span
class="hljs-string">"utf-8"</span>?&gt;
<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">FrameLayout</span> <span
class="hljs-attr">xmlns:android</span>=<span class="hljs-string">"http://schemas.android.com/apk/res/android"</span>
    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">"http://schemas.android.com/tools"</span>
    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"wrap_content"</span>
    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
    <span class="hljs-attr">android:layout_margin</span>=<span class="hljs-string">"8dp"</span>&gt;</span>

    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span>
        <span class="hljs-attr">android:id</span>=<span class="hljs-string">"@+id/simple_text"</span>
        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">"wrap_content"</span>
        <span class="hljs-attr">tools:text</span>=<span class="hljs-string">"This is some temp text"</span> /&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">FrameLayout</span>&gt;</span>
</span></code></pre>
                          <p><em><strong>*Note</strong>: The view id is
                              extremely important as we will need to reference
                              it later when setting the text to be displayed.</em></p>
                          <p>That’s all we need as far as XML files are
                            concerned, now on to the fun stuff!</p>
                          <h4>Creating the ViewModel</h4>
                          <p>First, we need to create a common object that will
                            hold our data. Let’s call it <code>SimpleViewModel</code>.</p>
                          <pre><code><span class="hljs-keyword">public</span> <span
class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SimpleViewModel</span> </span>{
    <span class="hljs-keyword">private</span> String simpleText;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">SimpleViewModel</span><span
class="hljs-params">(@NonNull <span class="hljs-keyword">final</span> String simpleText)</span> </span>{
        setSimpleText(simpleText);
    }
    
    <span class="hljs-meta">@NonNull</span>
    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span
class="hljs-title">getSimpleText</span><span class="hljs-params">()</span> </span>{
        <span class="hljs-keyword">return</span> simpleText;
    }

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span
class="hljs-title">setSimpleText</span><span class="hljs-params">(@NonNull <span
class="hljs-keyword">final</span> String simpleText)</span> </span>{
        <span class="hljs-keyword">this</span>.simpleText = simpleText;
    }
}
</code></pre>
                          <p><em><strong>*Note</strong>: I have purposefully
                              created this data object using a getter and setter
                              so that its contents, the String, cannot be
                              directly modified. It also sets us up for the
                              future as the next installment of this series will
                              utilize this class.</em></p>
                          <h4>Creating the Adapter</h4>
                          <p>Next, we will need an adapter. The adapter is the
                            piece that will connect our data to our <code>RecyclerView</code>
                            and determine the <a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewHolder.html"><code>ViewHolder</code></a>(s)
                            which will need to be used to display that data. At
                            WillowTree, we advocate the <a href="https://en.wikipedia.org/wiki/Separation_of_concerns">separation
                              of concerns principle</a> and consider it best
                            practice to make the adapter as “dumb” as possible.
                            No work performed on the data should live in the
                            adapter. Instead, as will be demonstrated in our
                            project here, we will handle all data manipulation
                            outside of our adapter in our <code>SimpleViewModel</code>
                            class.</p>
                          <p>Let’s create a class called <code>SimpleAdapter</code>
                            which extends <a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html"><code>RecyclerView.Adapter</code></a>.</p>
                          <pre><code><span class="hljs-keyword">public</span> <span
class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SimpleAdapter</span> <span
class="hljs-keyword">extends</span> <span class="hljs-title">RecyclerView</span>.<span
class="hljs-title">Adapter</span> </span>{
    …
}
</code></pre>
                          <p>If using an IDE such as Android Studio, you will
                            immediately notice a red squiggly line which lets us
                            know that there are a basic set of method overrides
                            that will need to be added to your adapter for it to
                            work. These required methods are as follows:</p>
                          <ul>
                            <li>onCreateViewHolder(ViewGroup parent, int
                              viewType)</li>
                            <li>onBindViewHolder(RecyclerView.ViewHolder holder,
                              int position)</li>
                            <li>getItemCount()</li>
                          </ul>
                          <p>We will need to add one more method override in our
                            project, <code>getItemViewType(int)</code>.</p>
                          <p><em><strong>*Hint</strong>: In Android Studio you
                              can use the keyboard shortcut CTRL + RETURN to
                              open a context menu which will allow you to find
                              and insert an overridden method.</em></p>
                          <h4><a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onCreateViewHolder%28android.view.ViewGroup,%20int%29">onCreateViewHolder(ViewGroup,
                              int)</a></h4>
                          <p>This method is called right when the adapter is
                            created and is used to initialize your
                            ViewHolder(s).</p>
                          <p>One of the interesting things and, in my opinion,
                            one of the more powerful features that come baked
                            into the <code>RecyclerView</code>, is that the <code>getItemViewType(int
                              position)</code> method allows us to return the
                            actual layout id that the Android framework saves
                            for us as a layout resource. The javadoc for this
                            method reads:</p>
                          <p><em>“… Unlike ListView adapters, types need not be
                              contiguous. Consider using id resources to
                              uniquely identify item view types.”</em></p>
                          <p>Returning the layout id resource in this method is
                            very powerful because it allows us to use the
                            resource id with the LayoutInflater in the
                            onCreateViewHolder() method and then return the
                            ViewHolder.</p>
                          <pre><code><span class="hljs-meta">@Override</span>
<span class="hljs-keyword">public</span> RecyclerView.<span class="hljs-function">ViewHolder <span
class="hljs-title">onCreateViewHolder</span><span class="hljs-params">(<span class="hljs-keyword">final</span> ViewGroup parent, <span
class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> viewType)</span> </span>{
    <span class="hljs-keyword">final</span> View view = LayoutInflater.from(parent.getContext()).inflate(viewType, parent, <span
class="hljs-keyword">false</span>);
    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> SimpleViewHolder(view);
}
</code></pre>
                          <h4><a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#onBindViewHolder%28VH,%20int%29">onBindViewHolder(RecyclerView.ViewHolder,
                              int)</a></h4>
                          <p>This method is called for each ViewHolder to bind
                            it to the adapter. This is where we will pass our
                            data to our ViewHolder.</p>
                          <pre><code><span class="hljs-meta">@Override</span>
<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span
class="hljs-title">onBindViewHolder</span><span class="hljs-params">(<span class="hljs-keyword">final</span> RecyclerView.ViewHolder holder, <span
class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> position)</span> </span>{
    ((SimpleViewHolder) holder).bindData(models.get(position));
}
</code></pre>
                          <h4><a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#getItemCount%28%29">getItemCount()</a></h4>
                          <p>This method returns the size of the collection that
                            contains the items we want to display</p>
                          <pre><code><span class="hljs-meta">@Override</span>
<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span
class="hljs-title">getItemCount</span><span class="hljs-params">()</span> </span>{
    <span class="hljs-keyword">return</span> models.size();
}
</code></pre>
                          <h4><a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html#getItemViewType%28int%29">getItemViewType(int)</a></h4>
                          <p>This method returns an <code>Integer</code> which
                            represents the view type. Since the Android system
                            stores a static reference to each layout as an <code>Integer</code>
                            in the “R” (resources) class, we can simply return
                            the layout resource id to be used in the <code>onCreateViewHolder()</code>
                            method.</p>
                          <pre><code><span class="hljs-meta">@Override</span>
<span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span
class="hljs-title">getItemViewType</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span
class="hljs-keyword">int</span> position)</span> </span>{
    <span class="hljs-keyword">return</span> R.layout.item_simple_itemview;
}
</code></pre>
                          <p>Well there it is! We now have a fully functioning
                            RecyclerView Adapter ready to do its thing. Next up,
                            the SimpleViewHolder .</p>
                          <h4>Creating the ViewHolder</h4>
                          <p>Now that we have the <code>SimpleAdapter</code>
                            and <code>SimpleViewModel</code> set up, let’s go
                            ahead and create our <code>SimpleViewHolder</code>.</p>
                          <p>A ViewHolder is more than just a dumb object that
                            only holds the item’s views. It is the very object
                            that represents each item in our collection and will
                            be used to display it. This powerful object is the
                            reason I was driven to write this tutorial! Often, I
                            see many examples which use the adapter’s
                            onBindViewHolder() method to do the work on the view
                            holder. As I mentioned earlier, we like to <a href="https://en.wikipedia.org/wiki/Separation_of_concerns">separate
                              our concerns</a> and thus, the adapter should
                            actually be the “dumb” object, only connecting the
                            RecyclerView and its data via the view holder.</p>
                          <p>So, with that said, let us create our <code>SimpleViewHolder</code>
                            and add a method called <code>bindData(SimpleViewModel
                              viewModel)</code>. As with the <code>SimpleAdapter</code>,
                            you will notice that upon first creating the <code>SimpleViewHolder</code>
                            there will again be a red squiggly line informing
                            you that you will need to add a constructor to your
                            class. This constructor will take the parent View of
                            the item layout allowing you to setup any views you
                            will need to use when displaying your data. For our
                            project, we only have a <a href="https://developer.android.com/reference/android/widget/TextView.html"><code>TextView</code></a>
                            so let’s go ahead and set that up:</p>
                          <pre><code><span class="hljs-keyword">public</span> <span
class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SimpleViewHolder</span> <span
class="hljs-keyword">extends</span> <span class="hljs-title">RecyclerView</span>.<span
class="hljs-title">ViewHolder</span> </span>{
    <span class="hljs-keyword">private</span> TextView simpleTextView;

    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">SimpleViewHolder</span><span
class="hljs-params">(<span class="hljs-keyword">final</span> View itemView)</span> </span>{
        <span class="hljs-keyword">super</span>(itemView);
        simpleTextView = (TextView) itemView.findViewById(R.id.simple_text);
    }
}
</code></pre>
                          <p>Now that we have the basics implemented we will
                            need to add an additional method that we can use to
                            bind our data to that <code>TextView</code>. Go
                            ahead and name that method “bindData” and have it
                            accept our <code>SimpleViewModel</code> as its
                            parameter. Finally, in our <code>bindData(SimpleViewModel)</code>
                            method, let’s set the <code>TextView</code>’s text
                            by retrieving the data from our <code>SimpleViewModel</code>
                            via the <code>getSimpleText()</code> method. Our <code>bindView</code>
                            method should now look something like this:</p>
                          <pre><code><span class="hljs-keyword">public</span> <span
class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SimpleViewHolder</span> <span
class="hljs-keyword">extends</span> <span class="hljs-title">RecyclerView</span>.<span
class="hljs-title">ViewHolder</span> </span>{
    …
    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span
class="hljs-title">bindData</span><span class="hljs-params">(<span class="hljs-keyword">final</span> SimpleViewModel viewModel)</span> </span>{
        simpleTextView.setText(viewModel.getSimpleText());
    }
}
</code></pre>
                          <p>That’s it for our <code>SimpleViewModel</code>!
                            Now, on to hooking everything up in the <code>Activity</code>.</p>
                          <p>We almost have a complete project that implements
                            the RecyclerView, Adapter, and ViewHolder pattern,
                            which separates each concern into its own object.
                            All we have left to do is to wire everything up in
                            the main Activity. So, onward!</p>
                          <h4>Hooking Everything Up in the Activity</h4>
                          <p>This <code>Activity</code> will be the screen that
                            will display our RecyclerView and all of its
                            containing data to our users. It is important to
                            note here that unlike our <code>SimpleAdapter</code>
                            and <code>SimpleViewHolder</code>, the <code>Activity</code>
                            does <em>not require</em> any overridden methods.
                            However, we do need to add one method override for
                            all of this to work—the override <a href="https://developer.android.com/reference/android/app/Activity.html#onCreate%28android.os.Bundle%29"><code>onCreate(Bundle
                                savedInstanceState)</code></a>. In the <code>onCreate</code>
                            method, we need to add a call to the super method
                            and also add the <a href="https://developer.android.com/reference/android/app/Activity.html#setContentView%28int%29"><code>setContentView(int
                                layoutResID)</code></a> method passing in our
                            Activity’s layout resource id.</p>
                          <pre><code><span class="hljs-keyword">public</span> <span
class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span
class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>{
    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span
class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>{
        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }
    …
}
</code></pre>
                          <p>For this tutorial, we will initialize the <code>SimpleAdapter</code>
                            and <code>RecyclerView</code> in our <code>onCreate()</code>
                            method. Earlier, when we created our <code>SimpleAdapter</code>,
                            we set it up so that we would need to pass in a list
                            of <code>SimpleViewModel</code> objects, so let’s
                            go ahead and create a private helper method to do
                            that now.</p>
                          <pre><code><span class="hljs-function"><span class="hljs-keyword">private</span> List&lt;SimpleViewModel&gt; <span
class="hljs-title">generateSimpleList</span>(<span class="hljs-params"></span>) </span>{
    List&lt;SimpleViewModel&gt; simpleViewModelList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();

    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span
class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; i++) {
        simpleViewModelList.<span class="hljs-keyword">add</span>(<span class="hljs-keyword">new</span> SimpleViewModel(String.format(Locale.US, <span
class="hljs-string">"This is item %d"</span>, i)));
    }
    
    <span class="hljs-keyword">return</span> simpleViewModelList;
}
</code></pre>
                          <p>All we are doing here is generating 100 <code>SimpleViewModel</code>
                            objects, that pass in a <code>String</code> of “<code>This
                              is item %d</code>” and adding each of those to <code>List&lt;SimpleViewModel&gt;</code>
                            which will then be returned to the caller.</p>
                          <p>Now that we have our helper method, move to the <code>onCreate()</code>
                            method and instantiate a new <code>SimpleAdapter</code>
                            that passes in our <code>List&lt;SimpleViewModel&gt;</code>
                            generated from the <code>generateSimpleList()</code>
                            helper method.</p>
                          <pre><code>SimpleAdapter adapter = new SimpleAdapter(<span
class="hljs-name">generateSimpleList</span>())<span class="hljs-comment">;</span>
</code></pre>
                          <p>After that, we will need to instantiate our <code>RecyclerView</code>
                            using the id resource that we created in our <code>Activity</code>’s
                            XML layout file:</p>
                          <pre><code>RecyclerView recyclerView = 
(<span class="hljs-name">RecyclerView</span>)findViewById(<span class="hljs-name">R</span>.id.simple_recyclerview)<span
class="hljs-comment">;</span>
</code></pre>
                          <p>Now that we have a <code>RecyclerView</code>,
                            there are a few more things we will need to do to
                            make it work. One of the most important being the <a
                              href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.html"><code>LayoutManager</code></a>.
                            The Android framework provides a few predefined
                            layout managers that we can use to determine how our
                            data will be displayed— <a href="https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.html"><code>LinearLayoutManager</code></a>,
                            <a href="https://developer.android.com/reference/android/support/v7/widget/GridLayoutManager.html"><code>GridLayoutManager</code></a>,
                            and <a href="https://developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.html"><code>StaggeredGridLayoutManager</code></a>.
                            Since we want to display our data as a linear
                            vertical list, we will use <code>LinearLayoutManager</code>.
                            There are multiple ways that you can set the <code>LayoutManager</code>
                            on your <code>RecyclerView</code> —in the XML or
                            programmatically in the Java code. We will go ahead
                            and set our <code>LinearLayoutManager</code> in our
                            Java code:</p>
                          <pre><code>recyclerView.setLayoutManager(<span class="hljs-keyword">new</span> LinearLayoutManager(<span
class="hljs-keyword">this</span>));
</code></pre>
                          <p><em><strong>*Note</strong>: To learn more about
                              RecyclerView.LayoutManager you can visit the
                              official documentation <a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.html">here</a>.</em></p>
                          <p>This next step, setting whether or not the <code>RecyclerView</code>
                            has a fixed size, isn’t required but I like to do it
                            because it helps the Android framework optimize the
                            <code>RecyclerView</code> by letting it know in
                            advance the the <code>RecyclerView</code> size will
                            not be affected by the <code>Adapter</code>
                            contents. You can read more about this very useful
                            method in the <strong><a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html#setHasFixedSize%28boolean%29">official
                                Android documentation</a></strong>. With that
                            said, let’s go ahead and implement <a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html#setHasFixedSize%28boolean%29">setHasFixedSize(boolean)</a>like
                            so:</p>
                          <pre><code>recyclerView.setHasFixedSize(<span class="hljs-literal">true</span>);
</code></pre>
                          <p>Finally, we will need to attach our <code>SimpleAdapter</code>
                            to the <code>RecyclerView</code>. We do this by
                            using the <a href="https://developer.android.com/reference/android/support/v7/widget/RecyclerView.html#setAdapter%28android.support.v7.widget.RecyclerView.Adapter%29"><code>setAdapter(Adapter)</code></a>&nbsp;method:</p>
                          <pre><code><span class="hljs-selector-tag">recyclerView</span><span
class="hljs-selector-class">.setAdapter</span>(<span class="hljs-selector-tag">adapter</span>);
</code></pre>
                          <p>That’s it! Now our complete Activity class should
                            look something like this:</p>
                          <pre><code><span class="hljs-keyword">public</span> <span
class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span
class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>{
    <span class="hljs-meta">@Override</span>
    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span
class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>{
        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        SimpleAdapter adapter = <span class="hljs-keyword">new</span> SimpleAdapter(generateSimpleList());
        RecyclerView recyclerView = (RecyclerView)findViewById(R.id.simple_recyclerview);
        recyclerView.setHasFixedSize(<span class="hljs-keyword">true</span>);
        recyclerView.setLayoutManager(<span class="hljs-keyword">new</span> LinearLayoutManager(<span
class="hljs-keyword">this</span>));
        recyclerView.setAdapter(adapter);
    }

    <span class="hljs-function"><span class="hljs-keyword">private</span> List&lt;SimpleViewModel&gt; <span
class="hljs-title">generateSimpleList</span><span class="hljs-params">()</span> </span>{
        List&lt;SimpleViewModel&gt; simpleViewModelList = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();

        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span
class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span>; i++) {
            simpleViewModelList.add(<span class="hljs-keyword">new</span> SimpleViewModel(String.format(Locale.US, <span
class="hljs-string">"This is item %d"</span>, i)));
        }

        <span class="hljs-keyword">return</span> simpleViewModelList;
    }
}
</code></pre>
                          <p>Go ahead and run your project in the emulator or on
                            your physical device and you will see a list of
                            items, each displaying the text “This is item
                            {index}” where {index} will be the index number of
                            the item in our list. You should see something
                            similar to the animated gif below.</p>
                          <p><img src="./RecyclerView_Adapter_ViewHolder_files/blog-post-image_recyclerviews_rf.gif"
                              alt="blog-post-image recyclerviews rf"></p>
                          <p><em>An animation/gif of what our completed project
                              should look like.</em></p>
                          <p>I look forward to seeing you for the next
                            installment of the RecyclerView tutorial where we
                            kick it up a notch and create a slightly more
                            complex project that expands on what we’ve learned
                            here. We will be implementing multiple ViewHolders,
                            the onClickListener interface, and modifying the
                            item data when tapping an item, exciting stuff to be
                            sure!</p>
                          <p>If you have any questions or suggestions, leave a
                            comment below or reach out to us directly and we
                            will be happy to help in any way that we can.</p>
                          <p>Have a great day!</p>
                        </div>
                      </div>
                    </div>
                    <footer class="article-footer" data-reactid="72">
                      <div class="article-authors" data-reactid="73">
                        <ul class="profile-list" data-reactid="74">
                          <li class="profile-list-item" data-reactid="75">
                            <div class="vcard profile profile-stack profile-circle profile-detail"
                              data-automation="5udIAbCug8Y8yYMSaM8w0u" data-reactid="76">
                              <div class="media media-stack" data-reactid="77">
                                <div class="media-item" data-reactid="78">
                                  <div class="profile-image" data-reactid="79">
                                    <div class="image-container image-thumbnail-size"
                                      data-reactid="80"><img class="image image-is-loaded"
                                        src="./RecyclerView_Adapter_ViewHolder_files/headshot_rich_friedel.jpg"
                                        alt="headshot rich friedel" width="124"
                                        height="124"></div>
                                  </div>
                                </div>
                                <div class="media-body" data-reactid="82"><span
                                    class="fn n" data-reactid="83"><span class="given-name"
                                      data-reactid="84">Rich</span><!-- react-text: 85 -->
                                    <!-- /react-text --><span class="family-name"
                                      data-reactid="86">Friedel</span></span>
                                  <div class="note detail" data-reactid="87">Software
                                    Engineer</div>
                                </div>
                              </div>
                            </div>
                          </li>
                        </ul>
                      </div>
                    </footer>
                  </div>
                </div>
                <div class="banded-section banded-section-light banded-section-full"
                  data-reactid="88">
                  <div class="banded-section-content" data-reactid="89">
                    <section class="card-list" data-reactid="90">
                      <div class="card-list-flag-container card-list-flag-center"
                        data-reactid="91">
                        <h3 class="card-list-flag" data-reactid="92"><span data-automation="related-content"
                            data-reactid="93">Related</span></h3>
                      </div>
                      <a data-automation="featured-content" class="content-object-link"
                        href="https://willowtreeapps.com/ideas/what-you-need-to-know-about-apples-new-app-store-standards"
                        data-reactid="94">
                        <div class="card card-columned card-align-middle" data-automation="article"
                          data-reactid="95">
                          <div class="card-content card-content-image arrow-animation-container"
                            data-reactid="96">
                            <div class="image-container image-rectangle-size" data-reactid="97"><img
                                class="image image-is-loaded" src="./RecyclerView_Adapter_ViewHolder_files/Artboard2.png"
                                alt="Apple is cracking down on template-based apps in an effort to raise the standard of quality. Read why, and how to know if you're at risk."
                                data-automation="related-content-image-6apIV1ETN6uKwssK4M4e0w"
                                width="719" height="487"></div>
                          </div>
                          <div class="card-content card-content-text arrow-animation-container"
                            data-reactid="99">
                            <div class="content-object-summary category-theme-app-development content-object-summary-default content-object-summary-align-left"
                              data-automation="article" data-reactid="100"><span
                                class="content-object-summary-metadata" data-automation="undefined-metadata"
                                data-reactid="101"><span class="content-object-summary-metadata-intro"
                                  data-reactid="102">Ideas</span><span class="content-object-summary-metadata-item article-category-app-development"
                                  data-reactid="103">App Development</span><span
                                  class="content-object-summary-metadata-item article-category-product-design"
                                  data-reactid="104">Product Design</span></span>
                              <h2 class="content-object-summary-headline h2" data-automation="undefined-headline"
                                data-reactid="105">What you need to know about
                                Apple's new App Store standards</h2>
                              <span class="content-object-summary-metadata" data-reactid="106"><time
                                  datetime="2017-12-15T00:00-05:00" data-automation="undefined-time"
                                  class="content-object-summary-time" data-reactid="107">December
                                  15, 2017</time></span>
                              <p class="content-object-summary-description" data-reactid="108">For
                                the past year, Apple has signaled its intent to
                                clean up the App Store. While...</p>
                              <span class="content-object-summary-divider" data-reactid="109"></span><span
                                class="content-object-summary-link" data-automation="undefined-summary-link"
                                data-reactid="110">Read the article</span></div>
                          </div>
                        </div>
                      </a></section>
                  </div>
                </div>
              </article>
              <div class="banded-section banded-section-dark-blue-grey banded-section-wide footer-container"
                data-reactid="111">
                <div class="banded-section-content banded-section-content-no-padding"
                  data-reactid="112">
                  <footer class="footer" data-reactid="113">
                    <div class="footer-content-left" data-reactid="114">
                      <p class="footer-copyright" data-automation="footer-copyright"
                        data-reactid="115"><!-- react-text: 116 -->© WillowTree,
                        Inc.
                        <!-- /react-text --><!-- react-text: 117 -->2018<!-- /react-text --></p>
                      <div class="locations-cards-navigation-container" data-reactid="118">
                        <div class="locations-cards-container" data-reactid="119">
                          <div class="address-text" data-automation="46H93wKsTKYoggkqucUcKW"
                            data-reactid="120">
                            <h4 class="address-text-headline" data-reactid="121">Virginia</h4>
                            <div class="address-text-part address-street" data-reactid="122">107
                              5th Street SE</div>
                            <div class="address-text-part" data-reactid="123"><span
                                class="address-text-part-locality" data-reactid="124"><!-- react-text: 125 -->Charlottesville<!-- /react-text --><!-- react-text: 126 -->,<!-- /react-text --></span><span
                                class="address-text-part-region" data-reactid="127"><!-- react-text: 128 -->
                                <!-- /react-text --><!-- react-text: 129 -->VA<!-- /react-text --></span><span
                                class="address-text-part-postal-code" data-reactid="130"><!-- react-text: 131 -->
                                <!-- /react-text --><!-- react-text: 132 -->22902<!-- /react-text --></span></div>
                            <div class="address-text-part" data-reactid="133"><span
                                class="address-text-part-country-code" data-reactid="134"><!-- react-text: 135 -->
                                <!-- /react-text --><!-- react-text: 136 -->USA<!-- /react-text --></span></div>
                          </div>
                          <div class="address-text" data-automation="z4YptYvXc4OqqKqaUwuqM"
                            data-reactid="137">
                            <h4 class="address-text-headline" data-reactid="138">North
                              Carolina</h4>
                            <div class="address-text-part address-street" data-reactid="139">324
                              Blackwell Street, Suite 1040</div>
                            <div class="address-text-part" data-reactid="140"><span
                                class="address-text-part-locality" data-reactid="141"><!-- react-text: 142 -->Durham<!-- /react-text --><!-- react-text: 143 -->,<!-- /react-text --></span><span
                                class="address-text-part-region" data-reactid="144"><!-- react-text: 145 -->
                                <!-- /react-text --><!-- react-text: 146 -->NC<!-- /react-text --></span><span
                                class="address-text-part-postal-code" data-reactid="147"><!-- react-text: 148 -->
                                <!-- /react-text --><!-- react-text: 149 -->27701<!-- /react-text --></span></div>
                            <div class="address-text-part" data-reactid="150"><span
                                class="address-text-part-country-code" data-reactid="151"><!-- react-text: 152 -->
                                <!-- /react-text --><!-- react-text: 153 -->USA<!-- /react-text --></span></div>
                            <a class="address-text-part-link" href="https://willowtreeapps.com/locations/durham-office"
                              data-reactid="154">Directions</a></div>
                          <div class="address-text" data-automation="3ajVAFxWkwaSki2eiEEY6o"
                            data-reactid="155">
                            <h4 class="address-text-headline" data-reactid="156">New
                              York</h4>
                            <div class="address-text-part address-street" data-reactid="157">125
                              Park Avenue, 25th Floor</div>
                            <div class="address-text-part" data-reactid="158"><span
                                class="address-text-part-locality" data-reactid="159"><!-- react-text: 160 -->New
                                York<!-- /react-text --><!-- react-text: 161 -->,<!-- /react-text --></span><span
                                class="address-text-part-region" data-reactid="162"><!-- react-text: 163 -->
                                <!-- /react-text --><!-- react-text: 164 -->NY<!-- /react-text --></span><span
                                class="address-text-part-postal-code" data-reactid="165"><!-- react-text: 166 -->
                                <!-- /react-text --><!-- react-text: 167 -->10017<!-- /react-text --></span></div>
                            <div class="address-text-part" data-reactid="168"><span
                                class="address-text-part-country-code" data-reactid="169"><!-- react-text: 170 -->
                                <!-- /react-text --><!-- react-text: 171 -->USA<!-- /react-text --></span></div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="footer-content-right" data-reactid="172">
                      <nav class="footer-navigation-container" role="navigation"
                        data-reactid="173">
                        <ul class="footer-navigation" data-reactid="174">
                          <li class="footer-navigation-item" data-reactid="175"><a
                              class="footer-navigation-link" data-automation="secondary-navigation-privacy-policy"
                              href="https://willowtreeapps.com/privacy-policy" data-reactid="176">Privacy
                              Policy</a></li>
                          <li class="footer-navigation-item" data-reactid="177"><a
                              class="footer-navigation-link" data-automation="secondary-navigation-media-inquiries"
                              href="https://willowtreeapps.com/contact" data-reactid="178">Media
                              Inquiries</a></li>
                        </ul>
                      </nav>
                      <div class="footer-social-container" data-reactid="179">
                        <ul class="social-container social-site-footer" data-reactid="180">
                          <li class="social-item" data-reactid="181"><a href="https://www.facebook.com/willowtreeapps"
                              data-automation="social-facebook-footer" data-reactid="182"><img
                                class="image" src="./RecyclerView_Adapter_ViewHolder_files/icn-facebook.svg"
                                alt="facebook" data-reactid="183"></a></li>
                          <li class="social-item" data-reactid="184"><a href="https://twitter.com/willowtreeapps"
                              data-automation="social-twitter-footer" data-reactid="185"><img
                                class="image" src="./RecyclerView_Adapter_ViewHolder_files/icn-twitter.svg"
                                alt="twitter" data-reactid="186"></a></li>
                          <li class="social-item" data-reactid="187"><a href="https://www.linkedin.com/company/willowtree-apps-inc"
                              data-automation="social-linkedin-footer" data-reactid="188"><img
                                class="image" src="./RecyclerView_Adapter_ViewHolder_files/icn-linkedin.svg"
                                alt="linkedin" data-reactid="189"></a></li>
                          <li class="social-item" data-reactid="190"><a href="https://dribbble.com/willowtree"
                              data-automation="social-dribbble-footer" data-reactid="191"><img
                                class="image" src="./RecyclerView_Adapter_ViewHolder_files/icn-dribbble.svg"
                                alt="dribble" data-reactid="192"></a></li>
                          <li class="social-item" data-reactid="193"><a href="https://willowtreeapps.com/feed"
                              data-automation="social-rss-footer" target="_blank"
                              data-reactid="194"><img class="image social-item-icon"
                                src="./RecyclerView_Adapter_ViewHolder_files/icn-rss.svg"
                                alt="rss" data-reactid="195"></a></li>
                        </ul>
                      </div>
                    </div>
                  </footer>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Google Tag Manager --> <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NTVVV9&gtm_auth=7DZwxCZfCl70TuoF_yeoCQ&gtm_preview=env-6&gtm_cookies_win=x%27"
style="display:none;visibility:hidden" width="0" height="0"></iframe></noscript>
    <!-- End Google Tag Manager -->
    <script type="text/javascript" charset="utf-8">
      window.willowtreePassthrough = {
        initialReduxState: '%7B%22about%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22article%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Atrue%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%7B%22id%22%3A%22cvMzdj3YIgYMCsGYYWa0m%22%2C%22type%22%3A%22article%22%2C%22title%22%3A%22Android%20Fundamentals%3A%20Working%20with%20the%20RecyclerView%2C%20Adapter%2C%20and%20ViewHolder%20Pattern%22%2C%22date%22%3A%7B%22display%22%3A%22November%2018%2C%202016%22%2C%22timestamp%22%3A%222016-11-18%22%7D%2C%22excerpt%22%3A%22In%20the%20mobile%20development%20world%2C%20regardless%20of%20the%20platform%2C%20lists%20that%20display...%22%2C%22slug%22%3A%22android-fundamentals-working-with-the-recyclerview-adapter-and-viewholder-pattern%22%2C%22featuredImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/png%22%2C%22id%22%3A%2269V0MT5xCgoOIo0ieWeoSu%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/69V0MT5xCgoOIo0ieWeoSu/8f6565befa73277a0c33e8ce28e33df3/blog-featured-hero_effective-code-reviews_EL.png%22%2C%22alt%22%3A%22blog-featured-image%20effective-code-reviews%20EL-510x296-1%22%2C%22height%22%3A600%2C%22width%22%3A1400%7D%2C%22categories%22%3A%5B%7B%22id%22%3A%22rSEJ2b0GCOSq2UaomUOKo%22%2C%22type%22%3A%22category%22%2C%22slug%22%3A%22app-development%22%2C%22title%22%3A%22App%20Development%22%2C%22department%22%3A%22Software%20Engineering%22%2C%22featuredImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%2239iTil6Z8coiC4qwoI6AeS%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/39iTil6Z8coiC4qwoI6AeS/2ba0079ff86d1633fb42d8cd6576e664/IMG_6761.jpg%22%2C%22alt%22%3A%22Durham%20Engineering%206%22%2C%22height%22%3A2400%2C%22width%22%3A3600%7D%2C%22active%22%3Atrue%7D%5D%2C%22meta%22%3A%7B%22title%22%3A%22Android%20Fundamentals%3A%20Working%20with%20the%20RecyclerView%2C%20Adapter%2C%20and%20ViewHolder%20Pattern%22%2C%22description%22%3A%22In%20the%20mobile%20development%20world%2C%20regardless%20of%20the%20platform%2C%20lists%20that%20display%20data%20to%20the%20user%20are%20commonly%20used%20in%20many%20projects.%20The%20Android%20platform...%22%2C%22shareImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/png%22%2C%22id%22%3A%2269V0MT5xCgoOIo0ieWeoSu%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/69V0MT5xCgoOIo0ieWeoSu/8f6565befa73277a0c33e8ce28e33df3/blog-featured-hero_effective-code-reviews_EL.png%22%2C%22alt%22%3A%22blog-featured-image%20effective-code-reviews%20EL-510x296-1%22%2C%22height%22%3A600%2C%22width%22%3A1400%7D%7D%2C%22authors%22%3A%5B%7B%22id%22%3A%225udIAbCug8Y8yYMSaM8w0u%22%2C%22type%22%3A%22people%22%2C%22slug%22%3A%22rich-friedel%22%2C%22jobTitle%22%3A%22Software%20Engineer%22%2C%22firstName%22%3A%22Rich%22%2C%22lastName%22%3A%22Friedel%22%2C%22headshot%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%222VVBxdMyas06mW6EWW4wgy%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/2VVBxdMyas06mW6EWW4wgy/960f7416dfe03de9e031528488b08f2f/headshot_rich_friedel.jpg%22%2C%22alt%22%3A%22headshot%20rich%20friedel%22%2C%22height%22%3A340%2C%22width%22%3A340%7D%2C%22socialLinks%22%3A%5B%5D%7D%5D%2C%22body%22%3A%22In%20the%20mobile%20development%20world%2C%20regardless%20of%20the%20platform%2C%20lists%20that%20display%20data%20to%20the%20user%20are%20commonly%20used%20in%20many%20projects.%20The%20Android%20platform%20gives%20us%20two%20different%20types%20of%20views%20that%20can%20be%20leveraged%20to%20display%20lists%20of%20data%u2014the%5Cn%5B%60ListView%60%5D%28https%3A//developer.android.com/reference/android/widget/ListView.html%29%20and%20the%20%5B%60RecyclerView%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.html%29.%5Cn%5CnMy%20friend%20and%20team%20member%2C%20Brandon%20Carter%2C%20wrote%20a%20%5Bpost%20about%20creating%20performant%20ListViews%5D%28http%3A//willowtreeapps.com/blog/performance-listviews/%29%20%2C%20which%20I%20highly%20recommend%20reading%20if%20you%20need%20to%20use%20a%20ListView%20in%20your%20project.%20Today%2C%20however%2C%20we%20are%20going%20to%20focus%20on%20the%20more%20advanced%20Android%20view-type%20to%20present%20lists%u2014the%20%60RecyclerView%60.%5Cn%5Cn%60RecyclerView%60%20is%20a%20very%20powerful%20and%20flexible%20tool%20available%20to%20Android%20developers.%20Because%20of%20this%2C%20it%27s%20crucial%20that%20we%20implement%20it%20properly%20so%20our%26nbsp%3Bcode%20strikes%20a%20good%20balance%20between%20being%20as%20optimized%20and%20concise%20as%20possible.%20The%20following%20is%20a%20tutorial%20on%20how%20I%20like%20to%20implement%20the%20RecyclerView%2C%20Adapter%2C%20and%20ViewHolder%20pattern.%20Ultimately%2C%20my%20plan%20is%20to%20make%20this%20a%20multipart%20series%20of%20tutorials%20which%20will%20begin%20by%20using%20the%20simple%20pattern%20shown%20below%20and%20then%20move%20on%20to%20using%20a%20more%20advanced%20and%20complex%20usage%20of%20this%20pattern%20in%20future%20installments.%5Cn%5CnI%20have%20created%20a%20companion%20demo%20project%20%28open%20source%20of%20course%21%29%20that%20you%20can%20reference%20as%20you%20read%20through%20this%20post.%20The%20demo%20project%20can%20be%20found%20on%20GitHub%20at%20%5Bhttps%3A//github.com/willowtreeapps/SimpleRecyclerViewDemo%5D%28https%3A//github.com/willowtreeapps/SimpleRecyclerViewDemo%29%5Cn%5CnGet%20your%20mind%20and%20fingers%20ready%20because%26nbsp%3Bthese%20posts%20will%20be%20code%20heavy.%20That%20said%2C%20let%27s%20jump%20in%20and%20begin%20creating%20awesome%20%60RecyclerView%60%20stuff.%20And%2C%20if%20you%20haven%u2019t%20already%2C%20go%20ahead%20and%20create%20a%20basic%20Android%20project%20with%20an%20empty%20Activity.%5Cn%5Cn*%20*%20*%5Cn%5Cn%23%23%23%20A%20Simple%20RecyclerView%20/%20Adapter%20/%20ViewHolder%20Pattern%5Cn%5CnFirst%2C%20we%20will%20need%20a%20goal%20for%20our%20end%20product.%5Cn%5Cn-%20Create%20a%20list%20containing%20some%20number%20of%20simple%20text%20items.%5Cn-%20These%20text%20items%20will%20display%20the%20following%20text%3A%20%u201CThis%20is%20item%20%7BitemIndex%7D%u201D%20where%20itemIndex%20is%20the%20index%20of%20the%20ViewModel%20contained%20in%20our%20list.%5Cn%5Cn%23%23%23%23%20Project%20Setup%5CnWe%20need%20to%20begin%20setting%20up%20our%20project%20by%20making%20sure%20that%20the%20RecyclerView%20dependency%20is%20included%20in%20our%20project%20libraries.%20In%20your%20app-level%20build.gradle%20file%20add%20the%20following%20dependency%3A%20%60com.android.support%3Arecyclerview-v7%3A24.2.1%60.%5Cn%5Cn*__Hint__%3A%20You%20can%20find%20the%20most%20recent%20up-to-date%20version%20at%20the%20official%20%5BAndroid%20Support%20Library%20Features%20page%5D%28https%3A//developer.android.com/topic/libraries/support-library/features.html%23v7-recyclerview%29.*%5Cn%5CnThe%20basic%20dependencies%20should%20now%20look%20something%20like%20the%20following%3A%5Cn%5Cn%20%20%20%20dependencies%20%7B%5Cn%20%20%20%20%20%20%20%20def%20VERSION_ANDROID_SUPPORT%20%3D%20%2724.2.1%27%5Cn%20%20%20%20%20%20%20%20...%5Cn%20%20%20%20%20%20%20%20compile%20%5C%22com.android.support%3Aappcompat-v7%3A%24VERSION_ANDROID_SUPPORT%5C%22%5Cn%20%20%20%20%20%20%20%20compile%20%5C%22com.android.support%3Arecyclerview-v7%3A%24VERSION_ANDROID_SUPPORT%5C%22%5Cn%20%20%20%20%20%20%20%20...%5Cn%20%20%20%20%7D%5Cn%5Cn**_%5C%5C*Note%3A_**%20_Personally%2C%20I%20like%20to%20define%20a%20variable%20if%20there%20will%20be%20multiple%20dependencies%20that%20will%20need%20it._%5Cn%5Cn%5Cn%23%23%23%23%20Adding%20the%20RecyclerView%20Widget%20to%20the%20Activity%5CnNow%20that%20we%20have%20the%20RecyclerView%20dependency%20added%20to%20our%20project%2C%20let%u2019s%20add%20the%20view%20widget%20to%20our%20Activity.%20In%20your%20activity%20layout%20file%20located%20in%20the%20layout%20resource%20folder%2C%20add%20the%20following%20code%3A%5Cn%5Cn**_%5C%5C*Note%3A_**%20_The%20view%20id%20is%20important%20as%20we%20will%20need%20to%20reference%20it%20later%20when%20instantiating%20our%20RecyclerView._%5Cn%5Cn%20%20%20%20%3C%3Fxml%20version%3D%5C%221.0%5C%22%20encoding%3D%5C%22utf-8%5C%22%3F%3E%5Cn%20%20%20%20%3CFrameLayout%20xmlns%3Aandroid%3D%5C%22http%3A//schemas.android.com/apk/res/android%5C%22%5Cn%20%20%20%20%20%20%20%20xmlns%3Atools%3D%5C%22http%3A//schemas.android.com/tools%5C%22%5Cn%20%20%20%20%20%20%20%20android%3Alayout_width%3D%5C%22match_parent%5C%22%5Cn%20%20%20%20%20%20%20%20android%3Alayout_height%3D%5C%22match_parent%5C%22%5Cn%20%20%20%20%20%20%20%20tools%3Acontext%3D%5C%22.MainActivity%5C%22%3E%5Cn%20%20%20%20%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%3Candroid.support.v7.widget.RecyclerView%5Cn%20%20%20%20%20%20%20%20%20%20%20%20android%3Aid%3D%5C%22@+id/simple_recyclerview%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20android%3Alayout_width%3D%5C%22match_parent%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20android%3Alayout_height%3D%5C%22match_parent%5C%22%20/%3E%5Cn%20%20%20%20%3C/FrameLayout%3E%5Cn%5Cn%5Cn%23%23%23%23%20Creating%20the%20Item%20Layout%5CnIn%20the%20layout%20resource%20folder%20create%20a%20layout%20file%20named%20%u201Citem%5C%5C_simple%5C%5C_itemview.xml%u201D%20and%20then%20add%20a%20TextView%20with%20the%20id%20%60@+id/simple%5C%5C_text%60.%5Cn%5Cn%20%20%20%20%3C%3Fxml%20version%3D%5C%221.0%5C%22%20encoding%3D%5C%22utf-8%5C%22%3F%3E%5Cn%20%20%20%20%3CFrameLayout%20xmlns%3Aandroid%3D%5C%22http%3A//schemas.android.com/apk/res/android%5C%22%5Cn%20%20%20%20%20%20%20%20xmlns%3Atools%3D%5C%22http%3A//schemas.android.com/tools%5C%22%5Cn%20%20%20%20%20%20%20%20android%3Alayout_width%3D%5C%22wrap_content%5C%22%5Cn%20%20%20%20%20%20%20%20android%3Alayout_height%3D%5C%22wrap_content%5C%22%5Cn%20%20%20%20%20%20%20%20android%3Alayout_margin%3D%5C%228dp%5C%22%3E%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%3CTextView%5Cn%20%20%20%20%20%20%20%20%20%20%20%20android%3Aid%3D%5C%22@+id/simple_text%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20android%3Alayout_width%3D%5C%22wrap_content%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20android%3Alayout_height%3D%5C%22wrap_content%5C%22%5Cn%20%20%20%20%20%20%20%20%20%20%20%20tools%3Atext%3D%5C%22This%20is%20some%20temp%20text%5C%22%20/%3E%5Cn%20%20%20%20%3C/FrameLayout%3E%5Cn%5Cn*__*Note__%3A%20The%20view%20id%20is%20extremely%20important%20as%20we%20will%20need%20to%20reference%20it%20later%20when%20setting%20the%20text%20to%20be%20displayed.*%5Cn%5CnThat%u2019s%20all%20we%20need%20as%20far%20as%20XML%20files%20are%20concerned%2C%20now%20on%20to%20the%20fun%20stuff%21%5Cn%5Cn%23%23%23%23%20Creating%20the%20ViewModel%5CnFirst%2C%20we%20need%20to%20create%20a%20common%20object%20that%20will%20hold%20our%20data.%20Let%u2019s%20call%20it%20%60SimpleViewModel%60.%5Cn%5Cn%20%20%20%20public%20class%20SimpleViewModel%20%7B%5Cn%20%20%20%20%20%20%20%20private%20String%20simpleText%3B%5Cn%5Cn%20%20%20%20%20%20%20%20public%20SimpleViewModel%28@NonNull%20final%20String%20simpleText%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20setSimpleText%28simpleText%29%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20@NonNull%5Cn%20%20%20%20%20%20%20%20public%20String%20getSimpleText%28%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20simpleText%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20%20%20public%20void%20setSimpleText%28@NonNull%20final%20String%20simpleText%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20this.simpleText%20%3D%20simpleText%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5Cn*__*Note__%3A%20I%20have%20purposefully%20created%20this%20data%20object%20using%20a%20getter%20and%20setter%20so%20that%20its%20contents%2C%20the%20String%2C%20cannot%20be%20directly%20modified.%20It%20also%20sets%20us%20up%20for%20the%20future%20as%20the%20next%20installment%20of%20this%20series%20will%20utilize%20this%20class.*%5Cn%5Cn%23%23%23%23%20Creating%20the%20Adapter%5CnNext%2C%20we%20will%20need%20an%20adapter.%20The%20adapter%20is%20the%20piece%20that%20will%20connect%20our%20data%20to%20our%20%60RecyclerView%60%20and%20determine%20the%20%5B%60ViewHolder%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.ViewHolder.html%29%28s%29%20which%20will%20need%20to%20be%20used%20to%20display%20that%20data.%20At%20WillowTree%2C%20we%20advocate%20the%20%5Bseparation%20of%20concerns%20principle%5D%28https%3A//en.wikipedia.org/wiki/Separation_of_concerns%29%20and%20consider%20it%20best%20practice%20to%20make%20the%20adapter%20as%20%u201Cdumb%u201D%20as%20possible.%20No%20work%20performed%20on%20the%20data%20should%20live%20in%20the%20adapter.%20Instead%2C%20as%20will%20be%20demonstrated%20in%20our%20project%20here%2C%20we%20will%20handle%20all%20data%20manipulation%20outside%20of%20our%20adapter%20in%20our%20%60SimpleViewModel%60%20class.%5Cn%5CnLet%u2019s%20create%20a%20class%20called%20%60SimpleAdapter%60%20which%20extends%20%5B%60RecyclerView.Adapter%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html%29.%5Cn%5Cn%20%20%20%20public%20class%20SimpleAdapter%20extends%20RecyclerView.Adapter%20%7B%5Cn%20%20%20%20%20%20%20%20%u2026%5Cn%20%20%20%20%7D%5Cn%5CnIf%20using%20an%20IDE%20such%20as%20Android%20Studio%2C%20you%20will%20immediately%20notice%20a%20red%20squiggly%20line%20which%20lets%20us%20know%20that%20there%20are%20a%20basic%20set%20of%20method%20overrides%20that%20will%20need%20to%20be%20added%20to%20your%20adapter%20for%20it%20to%20work.%20These%20required%20methods%20are%20as%20follows%3A%5Cn%5Cn-%20onCreateViewHolder%28ViewGroup%20parent%2C%20int%20viewType%29%5Cn-%20onBindViewHolder%28RecyclerView.ViewHolder%20holder%2C%20int%20position%29%5Cn-%20getItemCount%28%29%5Cn%5CnWe%20will%20need%20to%20add%20one%20more%20method%20override%20in%20our%20project%2C%20%60getItemViewType%28int%29%60.%5Cn%5Cn*__*Hint__%3A%20In%20Android%20Studio%20you%20can%20use%20the%20keyboard%20shortcut%20CTRL%20+%20RETURN%20to%20open%20a%20context%20menu%20which%20will%20allow%20you%20to%20find%20and%20insert%20an%20overridden%20method.*%5Cn%5Cn%23%23%23%23%20%5BonCreateViewHolder%28ViewGroup%2C%20int%29%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html%23onCreateViewHolder%28android.view.ViewGroup%2C%2520int%29%29%5CnThis%20method%20is%20called%20right%20when%20the%20adapter%20is%20created%20and%20is%20used%20to%20initialize%20your%20ViewHolder%28s%29.%5Cn%5CnOne%20of%20the%20interesting%20things%20and%2C%20in%20my%20opinion%2C%20one%20of%20the%20more%20powerful%20features%20that%20come%20baked%20into%20the%20%60RecyclerView%60%2C%20is%20that%20the%20%60getItemViewType%28int%20position%29%60%20method%20allows%20us%20to%20return%20the%20actual%20layout%20id%20that%20the%20Android%20framework%20saves%20for%20us%20as%20a%20layout%20resource.%20The%20javadoc%20for%20this%20method%20reads%3A%5Cn%5Cn_%u201C...%20Unlike%20ListView%20adapters%2C%20types%20need%20not%20be%20contiguous.%20Consider%20using%20id%20resources%20to%20uniquely%20identify%20item%20view%20types.%u201D_%5Cn%5CnReturning%20the%20layout%20id%20resource%20in%20this%20method%20is%20very%20powerful%20because%20it%20allows%20us%20to%20use%20the%20resource%20id%20with%20the%20LayoutInflater%20in%20the%20onCreateViewHolder%28%29%20method%20and%20then%20return%20the%20ViewHolder.%5Cn%5Cn%20%20%20%20@Override%5Cn%20%20%20%20public%20RecyclerView.ViewHolder%20onCreateViewHolder%28final%20ViewGroup%20parent%2C%20final%20int%20viewType%29%20%7B%5Cn%20%20%20%20%20%20%20%20final%20View%20view%20%3D%20LayoutInflater.from%28parent.getContext%28%29%29.inflate%28viewType%2C%20parent%2C%20false%29%3B%5Cn%20%20%20%20%20%20%20%20return%20new%20SimpleViewHolder%28view%29%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%23%23%23%23%20%5BonBindViewHolder%28RecyclerView.ViewHolder%2C%20int%29%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html%23onBindViewHolder%28VH%2C%2520int%29%29%5CnThis%20method%20is%20called%20for%20each%20ViewHolder%20to%20bind%20it%20to%20the%20adapter.%20This%20is%20where%20we%20will%20pass%20our%20data%20to%20our%20ViewHolder.%5Cn%5Cn%20%20%20%20@Override%5Cn%20%20%20%20public%20void%20onBindViewHolder%28final%20RecyclerView.ViewHolder%20holder%2C%20final%20int%20position%29%20%7B%5Cn%20%20%20%20%20%20%20%20%28%28SimpleViewHolder%29%20holder%29.bindData%28models.get%28position%29%29%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%23%23%23%23%20%5BgetItemCount%28%29%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html%23getItemCount%28%29%29%5CnThis%20method%20returns%20the%20size%20of%20the%20collection%20that%20contains%20the%20items%20we%20want%20to%20display%5Cn%5Cn%20%20%20%20@Override%5Cn%20%20%20%20public%20int%20getItemCount%28%29%20%7B%5Cn%20%20%20%20%20%20%20%20return%20models.size%28%29%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%23%23%23%23%20%5BgetItemViewType%28int%29%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.Adapter.html%23getItemViewType%28int%29%29%5CnThis%20method%20returns%20an%20%60Integer%60%20which%20represents%20the%20view%20type.%20Since%20the%20Android%20system%20stores%20a%20static%20reference%20to%20each%20layout%20as%20an%20%60Integer%60%20in%20the%20%u201CR%u201D%20%28resources%29%20class%2C%20we%20can%20simply%20return%20the%20layout%20resource%20id%20to%20be%20used%20in%20the%20%60onCreateViewHolder%28%29%60%20method.%5Cn%5Cn%20%20%20%20@Override%5Cn%20%20%20%20public%20int%20getItemViewType%28final%20int%20position%29%20%7B%5Cn%20%20%20%20%20%20%20%20return%20R.layout.item_simple_itemview%3B%5Cn%20%20%20%20%7D%5Cn%5CnWell%20there%20it%20is%21%20We%20now%20have%20a%20fully%20functioning%20RecyclerView%20Adapter%20ready%20to%20do%20its%20thing.%20Next%20up%2C%20the%20SimpleViewHolder%20.%5Cn%5Cn%23%23%23%23%20Creating%20the%20ViewHolder%5CnNow%20that%20we%20have%20the%20%60SimpleAdapter%60%20and%20%60SimpleViewModel%60%20set%20up%2C%20let%u2019s%20go%20ahead%20and%20create%20our%20%60SimpleViewHolder%60.%5Cn%5CnA%20ViewHolder%20is%20more%20than%20just%20a%20dumb%20object%20that%20only%20holds%20the%20item%u2019s%20views.%20It%20is%20the%20very%20object%20that%20represents%20each%20item%20in%20our%20collection%20and%20will%20be%20used%20to%20display%20it.%20This%20powerful%20object%20is%20the%20reason%20I%20was%20driven%20to%20write%20this%20tutorial%21%20Often%2C%20I%20see%20many%20examples%20which%20use%20the%20adapter%u2019s%20onBindViewHolder%28%29%20method%20to%20do%20the%20work%20on%20the%20view%20holder.%20As%20I%20mentioned%20earlier%2C%20we%20like%20to%20%5Bseparate%20our%20concerns%5D%28https%3A//en.wikipedia.org/wiki/Separation_of_concerns%29%20and%20thus%2C%20the%20adapter%20should%20actually%20be%20the%20%u201Cdumb%u201D%20object%2C%20only%20connecting%20the%20RecyclerView%20and%20its%20data%20via%20the%20view%20holder.%5Cn%5CnSo%2C%20with%20that%20said%2C%20let%20us%20create%20our%20%60SimpleViewHolder%60%20and%20add%20a%20method%20called%20%60bindData%28SimpleViewModel%20viewModel%29%60.%20As%20with%20the%20%60SimpleAdapter%60%2C%20you%20will%20notice%20that%20upon%20first%20creating%20the%20%60SimpleViewHolder%60%20there%20will%20again%20be%20a%20red%20squiggly%20line%20informing%20you%20that%20you%20will%20need%20to%20add%20a%20constructor%20to%20your%20class.%20This%20constructor%20will%20take%20the%20parent%20View%20of%20the%20item%20layout%20allowing%20you%20to%20setup%20any%20views%20you%20will%20need%20to%20use%20when%20displaying%20your%20data.%20For%20our%20project%2C%20we%20only%20have%20a%20%5B%60TextView%60%5D%28https%3A//developer.android.com/reference/android/widget/TextView.html%29%20so%20let%u2019s%20go%20ahead%20and%20set%20that%20up%3A%5Cn%5Cn%20%20%20%20public%20class%20SimpleViewHolder%20extends%20RecyclerView.ViewHolder%20%7B%5Cn%20%20%20%20%20%20%20%20private%20TextView%20simpleTextView%3B%5Cn%20%20%20%5Cn%20%20%20%20%20%20%20%20public%20SimpleViewHolder%28final%20View%20itemView%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super%28itemView%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20simpleTextView%20%3D%20%28TextView%29%20itemView.findViewById%28R.id.simple_text%29%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5CnNow%20that%20we%20have%20the%20basics%20implemented%20we%20will%20need%20to%20add%20an%20additional%20method%20that%20we%20can%20use%20to%20bind%20our%20data%20to%20that%20%60TextView%60.%20Go%20ahead%20and%20name%20that%20method%20%u201CbindData%u201D%20and%20have%20it%20accept%20our%20%60SimpleViewModel%60%20as%20its%20parameter.%20Finally%2C%20in%20our%20%60bindData%28SimpleViewModel%29%60%20method%2C%20let%u2019s%20set%20the%20%60TextView%60%u2019s%20text%20by%20retrieving%20the%20data%20from%20our%20%60SimpleViewModel%60%20via%20the%20%60getSimpleText%28%29%60%20method.%20Our%20%60bindView%60%20method%20should%20now%20look%20something%20like%20this%3A%5Cn%5Cn%20%20%20%20public%20class%20SimpleViewHolder%20extends%20RecyclerView.ViewHolder%20%7B%5Cn%20%20%20%20%20%20%20%20%u2026%5Cn%20%20%20%20%20%20%20%20public%20void%20bindData%28final%20SimpleViewModel%20viewModel%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20simpleTextView.setText%28viewModel.getSimpleText%28%29%29%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5CnThat%u2019s%20it%20for%20our%20%60SimpleViewModel%60%21%20Now%2C%20on%20to%20hooking%20everything%20up%20in%20the%20%60Activity%60.%5Cn%5CnWe%20almost%20have%20a%20complete%20project%20that%20implements%20the%20RecyclerView%2C%20Adapter%2C%20and%20ViewHolder%20pattern%2C%20which%20separates%20each%20concern%20into%20its%20own%20object.%20All%20we%20have%20left%20to%20do%20is%20to%20wire%20everything%20up%20in%20the%20main%20Activity.%20So%2C%20onward%21%5Cn%5Cn%23%23%23%23%20Hooking%20Everything%20Up%20in%20the%20Activity%5CnThis%20%60Activity%60%20will%20be%20the%20screen%20that%20will%20display%20our%20RecyclerView%20and%20all%20of%20its%20containing%20data%20to%20our%20users.%20It%20is%20important%20to%20note%20here%20that%20unlike%20our%20%60SimpleAdapter%60%20and%20%60SimpleViewHolder%60%2C%20the%20%60Activity%60%20does%20_not%20require_%20any%20overridden%20methods.%20However%2C%20we%20do%20need%20to%20add%20one%20method%20override%20for%20all%20of%20this%20to%20work%u2014the%20override%20%5B%60onCreate%28Bundle%20savedInstanceState%29%60%5D%28https%3A//developer.android.com/reference/android/app/Activity.html%23onCreate%28android.os.Bundle%29%29.%20In%20the%20%60onCreate%60%20method%2C%20we%20need%20to%20add%20a%20call%20to%20the%20super%20method%20and%20also%20add%20the%20%5B%60setContentView%28int%20layoutResID%29%60%5D%28https%3A//developer.android.com/reference/android/app/Activity.html%23setContentView%28int%29%29%20method%20passing%20in%20our%20Activity%u2019s%20layout%20resource%20id.%5Cn%5Cn%20%20%20%20public%20class%20MainActivity%20extends%20AppCompatActivity%20%7B%5Cn%20%20%20%20%20%20%20%20@Override%5Cn%20%20%20%20%20%20%20%20protected%20void%20onCreate%28Bundle%20savedInstanceState%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super.onCreate%28savedInstanceState%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20setContentView%28R.layout.activity_main%29%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%u2026%5Cn%20%20%20%20%7D%5Cn%5CnFor%20this%20tutorial%2C%20we%20will%20initialize%20the%20%60SimpleAdapter%60%20and%20%60RecyclerView%60%20in%20our%20%60onCreate%28%29%60%20method.%20Earlier%2C%20when%20we%20created%20our%20%60SimpleAdapter%60%2C%20we%20set%20it%20up%20so%20that%20we%20would%20need%20to%20pass%20in%20a%20list%20of%20%60SimpleViewModel%60%20objects%2C%20so%20let%u2019s%20go%20ahead%20and%20create%20a%20private%20helper%20method%20to%20do%20that%20now.%5Cn%5Cn%20%20%20%20private%20List%3CSimpleViewModel%3E%20generateSimpleList%28%29%20%7B%5Cn%20%20%20%20%20%20%20%20List%3CSimpleViewModel%3E%20simpleViewModelList%20%3D%20new%20ArrayList%3C%3E%28%29%3B%5Cn%5Cn%20%20%20%20%20%20%20%20for%20%28int%20i%20%3D%200%3B%20i%20%3C%20100%3B%20i++%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20simpleViewModelList.add%28new%20SimpleViewModel%28String.format%28Locale.US%2C%20%5C%22This%20is%20item%20%25d%5C%22%2C%20i%29%29%29%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%5Cn%20%20%20%20%20%20%20%20return%20simpleViewModelList%3B%5Cn%20%20%20%20%7D%5Cn%5CnAll%20we%20are%20doing%20here%20is%20generating%20100%20%60SimpleViewModel%60%20objects%2C%20that%20pass%20in%20a%20%60String%60%20of%20%u201C%60This%20is%20item%20%25d%60%u201D%20and%20adding%20each%20of%20those%20to%20%60List%3CSimpleViewModel%3E%60%20which%20will%20then%20be%20returned%20to%20the%20caller.%5Cn%5CnNow%20that%20we%20have%20our%20helper%20method%2C%20move%20to%20the%20%60onCreate%28%29%60%20method%20and%20instantiate%20a%20new%20%60SimpleAdapter%60%20that%20passes%20in%20our%20%60List%3CSimpleViewModel%3E%60%20generated%20from%20the%20%60generateSimpleList%28%29%60%20helper%20method.%5Cn%5Cn%20%20%20%20SimpleAdapter%20adapter%20%3D%20new%20SimpleAdapter%28generateSimpleList%28%29%29%3B%5Cn%5CnAfter%20that%2C%20we%20will%20need%20to%20instantiate%20our%20%60RecyclerView%60%20using%20the%20id%20resource%20that%20we%20created%20in%20our%20%60Activity%60%u2019s%20XML%20layout%20file%3A%5Cn%5Cn%20%20%20%20RecyclerView%20recyclerView%20%3D%20%5Cn%20%20%20%20%28RecyclerView%29findViewById%28R.id.simple_recyclerview%29%3B%5Cn%5CnNow%20that%20we%20have%20a%20%60RecyclerView%60%2C%20there%20are%20a%20few%20more%20things%20we%20will%20need%20to%20do%20to%20make%20it%20work.%20One%20of%20the%20most%20important%20being%20the%20%5B%60LayoutManager%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.html%29.%20The%20Android%20framework%20provides%20a%20few%20predefined%20layout%20managers%20that%20we%20can%20use%20to%20determine%20how%20our%20data%20will%20be%20displayed%u2014%20%5B%60LinearLayoutManager%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.html%29%2C%20%5B%60GridLayoutManager%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/GridLayoutManager.html%29%2C%20and%20%5B%60StaggeredGridLayoutManager%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/StaggeredGridLayoutManager.html%29.%20Since%20we%20want%20to%20display%20our%20data%20as%20a%20linear%20vertical%20list%2C%20we%20will%20use%20%60LinearLayoutManager%60.%20There%20are%20multiple%20ways%20that%20you%20can%20set%20the%20%60LayoutManager%60%20on%20your%20%60RecyclerView%60%20%u2014in%20the%20XML%20or%20programmatically%20in%20the%20Java%20code.%20We%20will%20go%20ahead%20and%20set%20our%20%60LinearLayoutManager%60%20in%20our%20Java%20code%3A%5Cn%5Cn%20%20%20%20recyclerView.setLayoutManager%28new%20LinearLayoutManager%28this%29%29%3B%5Cn%5Cn*__*Note__%3A%20To%20learn%20more%20about%20RecyclerView.LayoutManager%20you%20can%20visit%20the%20official%20documentation%20%5Bhere%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.LayoutManager.html%29.*%5Cn%5CnThis%20next%20step%2C%20setting%20whether%20or%20not%20the%20%60RecyclerView%60%20has%20a%20fixed%20size%2C%20isn%u2019t%20required%20but%20I%20like%20to%20do%20it%20because%20it%20helps%20the%20Android%20framework%20optimize%20the%20%60RecyclerView%60%20by%20letting%20it%20know%20in%20advance%20the%20the%20%60RecyclerView%60%20size%20will%20not%20be%20affected%20by%20the%20%60Adapter%60%20contents.%20You%20can%20read%20more%20about%20this%20very%20useful%20method%20in%20the%20**%5Bofficial%20Android%20documentation%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.html%23setHasFixedSize%28boolean%29%29**.%20With%20that%20said%2C%20let%u2019s%20go%20ahead%20and%20implement%20%5BsetHasFixedSize%28boolean%29%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.html%23setHasFixedSize%28boolean%29%29like%20so%3A%5Cn%5Cn%20%20%20%20recyclerView.setHasFixedSize%28true%29%3B%5Cn%5CnFinally%2C%20we%20will%20need%20to%20attach%20our%20%60SimpleAdapter%60%20to%20the%20%60RecyclerView%60.%20We%20do%20this%20by%20using%20the%20%5B%60setAdapter%28Adapter%29%60%5D%28https%3A//developer.android.com/reference/android/support/v7/widget/RecyclerView.html%23setAdapter%28android.support.v7.widget.RecyclerView.Adapter%29%29%26nbsp%3Bmethod%3A%5Cn%5Cn%20%20%20%20recyclerView.setAdapter%28adapter%29%3B%5Cn%5CnThat%u2019s%20it%21%20Now%20our%20complete%20Activity%20class%20should%20look%20something%20like%20this%3A%5Cn%5Cn%20%20%20%20public%20class%20MainActivity%20extends%20AppCompatActivity%20%7B%5Cn%20%20%20%20%20%20%20%20@Override%5Cn%20%20%20%20%20%20%20%20protected%20void%20onCreate%28Bundle%20savedInstanceState%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20super.onCreate%28savedInstanceState%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20setContentView%28R.layout.activity_main%29%3B%5Cn%5Cn%20%20%20%20%20%20%20%20%20%20%20%20SimpleAdapter%20adapter%20%3D%20new%20SimpleAdapter%28generateSimpleList%28%29%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20RecyclerView%20recyclerView%20%3D%20%28RecyclerView%29findViewById%28R.id.simple_recyclerview%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20recyclerView.setHasFixedSize%28true%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20recyclerView.setLayoutManager%28new%20LinearLayoutManager%28this%29%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20recyclerView.setAdapter%28adapter%29%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20%20%20private%20List%3CSimpleViewModel%3E%20generateSimpleList%28%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20List%3CSimpleViewModel%3E%20simpleViewModelList%20%3D%20new%20ArrayList%3C%3E%28%29%3B%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20for%20%28int%20i%20%3D%200%3B%20i%20%3C%20100%3B%20i++%29%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20simpleViewModelList.add%28new%20SimpleViewModel%28String.format%28Locale.US%2C%20%5C%22This%20is%20item%20%25d%5C%22%2C%20i%29%29%29%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%5Cn%20%20%20%20%20%20%20%20%20%20%20%20return%20simpleViewModelList%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%7D%5Cn%5CnGo%20ahead%20and%20run%20your%20project%20in%20the%20emulator%20or%20on%20your%20physical%20device%20and%20you%20will%20see%20a%20list%20of%20items%2C%20each%20displaying%20the%20text%20%u201CThis%20is%20item%20%7Bindex%7D%u201D%20where%20%7Bindex%7D%20will%20be%20the%20index%20number%20of%20the%20item%20in%20our%20list.%20You%20should%20see%20something%20similar%20to%20the%20animated%20gif%20below.%5Cn%5Cn%21%5Bblog-post-image%20recyclerviews%20rf%5D%28//images.contentful.com/3cttzl4i3k1h/6faEAh4264uASMiIUKC0K4/0633e8bcbafe4acba08c7fe46bf9c1d8/blog-post-image_recyclerviews_rf.gif%29%5Cn%5Cn_An%20animation/gif%20of%20what%20our%20completed%20project%20should%20look%20like._%5Cn%5CnI%20look%20forward%20to%20seeing%20you%20for%20the%20next%20installment%20of%20the%20RecyclerView%20tutorial%20where%20we%20kick%20it%20up%20a%20notch%20and%20create%20a%20slightly%20more%20complex%20project%20that%20expands%20on%20what%20we%u2019ve%20learned%20here.%20We%20will%20be%20implementing%20multiple%20ViewHolders%2C%20the%20onClickListener%20interface%2C%20and%20modifying%20the%20item%20data%20when%20tapping%20an%20item%2C%20exciting%20stuff%20to%20be%20sure%21%5Cn%5CnIf%20you%20have%20any%20questions%20or%20suggestions%2C%20leave%20a%20comment%20below%20or%20reach%20out%20to%20us%20directly%20and%20we%20will%20be%20happy%20to%20help%20in%20any%20way%20that%20we%20can.%5Cn%5CnHave%20a%20great%20day%21%22%2C%22tags%22%3A%5B%5D%7D%5D%2C%22slug%22%3A%22android-fundamentals-working-with-the-recyclerview-adapter-and-viewholder-pattern%22%2C%22relatedContent%22%3A%5B%7B%22id%22%3A%226apIV1ETN6uKwssK4M4e0w%22%2C%22type%22%3A%22article%22%2C%22title%22%3A%22What%20you%20need%20to%20know%20about%20Apple%27s%20new%20App%20Store%20standards%22%2C%22date%22%3A%7B%22display%22%3A%22December%2015%2C%202017%22%2C%22timestamp%22%3A%222017-12-15T00%3A00-05%3A00%22%7D%2C%22excerpt%22%3A%22For%20the%20past%20year%2C%20Apple%20has%20signaled%20its%20intent%20to%20clean%20up%20the%20App%20Store.%20While...%22%2C%22slug%22%3A%22what-you-need-to-know-about-apples-new-app-store-standards%22%2C%22featuredImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/png%22%2C%22id%22%3A%221s6OwDCAwYkUwqseOgyWaa%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/1s6OwDCAwYkUwqseOgyWaa/ef619b54cb979f9d8c4fa4f72b7114e3/Artboard2.png%22%2C%22alt%22%3A%22Apple%20is%20cracking%20down%20on%20template-based%20apps%20in%20an%20effort%20to%20raise%20the%20standard%20of%20quality.%20Read%20why%2C%20and%20how%20to%20know%20if%20you%27re%20at%20risk.%22%2C%22height%22%3A1200%2C%22width%22%3A2800%7D%2C%22categories%22%3A%5B%7B%22id%22%3A%22rSEJ2b0GCOSq2UaomUOKo%22%2C%22type%22%3A%22category%22%2C%22slug%22%3A%22app-development%22%2C%22title%22%3A%22App%20Development%22%2C%22department%22%3A%22Software%20Engineering%22%2C%22featuredImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%2239iTil6Z8coiC4qwoI6AeS%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/39iTil6Z8coiC4qwoI6AeS/2ba0079ff86d1633fb42d8cd6576e664/IMG_6761.jpg%22%2C%22alt%22%3A%22Durham%20Engineering%206%22%2C%22height%22%3A2400%2C%22width%22%3A3600%7D%2C%22active%22%3Atrue%7D%2C%7B%22id%22%3A%223qXWeZIm3SKa6qqOuKKCMq%22%2C%22type%22%3A%22category%22%2C%22slug%22%3A%22product-design%22%2C%22title%22%3A%22Product%20Design%22%2C%22department%22%3A%22User%20Experience%20Design%22%2C%22featuredImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%223iv1iaMPhSWOcosew0ewsi%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/3iv1iaMPhSWOcosew0ewsi/03c3a4bfe672ab3d973509b8af63dc1b/IMG_3843-74.jpg%22%2C%22alt%22%3A%22Product%20%28UX%29%20designer%20at%20work%22%2C%22height%22%3A3265%2C%22width%22%3A4898%7D%2C%22active%22%3Atrue%7D%5D%2C%22meta%22%3A%7B%22title%22%3A%22What%20you%20need%20to%20know%20about%20Apple%27s%20new%20App%20Store%20standards%22%2C%22description%22%3A%22Apple%20is%20cracking%20down%20on%20template-based%20apps%20in%20an%20effort%20to%20raise%20the%20standard%20of%20quality.%20Read%20why%2C%20and%20how%20to%20know%20if%20you%27re%20at%20risk.%22%2C%22shareImage%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/png%22%2C%22id%22%3A%221s6OwDCAwYkUwqseOgyWaa%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/1s6OwDCAwYkUwqseOgyWaa/ef619b54cb979f9d8c4fa4f72b7114e3/Artboard2.png%22%2C%22alt%22%3A%22Apple%20is%20cracking%20down%20on%20template-based%20apps%20in%20an%20effort%20to%20raise%20the%20standard%20of%20quality.%20Read%20why%2C%20and%20how%20to%20know%20if%20you%27re%20at%20risk.%22%2C%22height%22%3A1200%2C%22width%22%3A2800%7D%7D%2C%22authors%22%3A%5B%7B%22id%22%3A%221QJiy9TGBWueKEi6yqMUku%22%2C%22type%22%3A%22people%22%2C%22slug%22%3A%22giacherio%22%2C%22jobTitle%22%3A%22Product%20Designer%22%2C%22firstName%22%3A%22Paul%22%2C%22lastName%22%3A%22Giacherio%22%2C%22headshot%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%223Viqobgn0AyCoGm444O8Wo%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/3Viqobgn0AyCoGm444O8Wo/216db30b4378e7d7b286fdbee986983d/Paul.jpg%22%2C%22alt%22%3A%22Product%20Designer%20at%20WillowTree%2C%20Inc.%22%2C%22height%22%3A170%2C%22width%22%3A170%7D%2C%22socialLinks%22%3A%5B%5D%7D%5D%2C%22body%22%3A%22For%20the%20past%20year%2C%20Apple%20has%20signaled%20its%20intent%20to%20clean%20up%20the%20App%20Store.%20While%20Apple%20has%20always%20maintained%20a%20rigorous%20app%20acceptance%20process%2C%20years%20of%20meteoric%20growth%20has%20naturally%20resulted%20in%20a%20glut%20of%20outdated%2C%20abandoned%20apps%20in%20the%20store.%20%5Cn%5CnSince%20last%20September%2C%20Apple%20has%20been%20working%20to%20weed%20out%20these%20apps%20from%20the%20more%20than%202%20million%20titles%20currently%20available.%20Following%20this%20year%u2019s%20WWDC%20developer%20conference%2C%20Apple%20updated%20their%20App%20Store%20guidelines%2C%20allowing%20the%20company%20to%20ban%20apps%20created%20by%20a%20%u201Ccommercialized%20template%20or%20app%20generation%20service.%u201D%5Cn%5CnWhile%20the%20change%20was%20initially%20seen%20as%20an%20extension%20of%20a%20general%20cleanup%2C%20the%20change%20has%20broader%20implications%20which%20are%20now%20now%20being%20realized.%20Earlier%20this%20month%2C%20many%20small%20development%20firms%20have%20been%20given%20a%20deadline%20of%20January%201%2C%202018%2C%20after%20which%20apps%20they%20submit%20will%20be%20rejected.%20%5Cn%21%5Bdivider%20600%5D%28//images.contentful.com/3cttzl4i3k1h/6L4Z75p3hKOCecAmM6sSGu/2e35d9bff602495019f2e52190c527b8/divider_600.png%29%5Cn%23%23%23%23%20Who%27s%20affected%3F%5CnIn%20the%20near%20term%2C%20app%20makers%20who%20service%20small%20businesses%20will%20take%20the%20hit.%20These%20companies%20that%20provide%20templates%20and%20off-the-shelf%20industry%20solutions%20are%20most%20vulnerable%20to%20the%20new%20scrutiny%20%28and%20are%20its%20intended%20targets%29.%20%5Cn%5CnWhile%20these%20companies%20rarely%20produce%20chart-topping%20titles%2C%20they%20often%20service%20small%20companies%20and%20audiences%20who%20lack%20the%20budget%20and%20time%20to%20build%20custom%20apps%20%28think%20local%20restaurants%2C%20venues%2C%20and%20retailers%29.%20%5Cn%21%5Bdivider%20600%5D%28//images.contentful.com/3cttzl4i3k1h/6L4Z75p3hKOCecAmM6sSGu/2e35d9bff602495019f2e52190c527b8/divider_600.png%29%5Cn%23%23%23%23%20What%27s%20behind%20the%20new%20standards%3F%5CnWhile%20damaging%20to%20some%2C%20the%20change%20makes%20sense%20for%20Apple.%20Apple%u2019s%20dedication%20to%20perfecting%20user%20experience%20puts%20the%20new%20restrictions%20in%20a%20different%20light.%20Discoverability%20within%20the%20App%20Store%20is%20a%20well%20documented%20problem.%20With%20more%20than%202%20million%20current%20apps%2C%20finding%20what%20you%u2019re%20looking%20for%20can%20be%20a%20daunting%20task%2C%20and%20every%20successful%20app%20is%20likely%20to%20spawn%20a%20slew%20of%20sub-par%20imitators.%20%5Cn%5CnApp%20discovery%20was%20a%20key%20driver%20behind%20the%20App%20Store%20redesign%20in%20iOS%2011%2C%20and%20removing%20low-volume%20apps%20from%20the%20mix%20can%20only%20help.%20By%20raising%20the%20submission%20standards%2C%20you%20continually%20improve%20the%20overall%20quality%20of%20the%20apps%20available%20in%20the%20store.%20%5Cn%21%5Bdivider%20600%5D%28//images.contentful.com/3cttzl4i3k1h/6L4Z75p3hKOCecAmM6sSGu/2e35d9bff602495019f2e52190c527b8/divider_600.png%29%5Cn%23%23%23%23%20Good%20UX%20wins%20the%20day%5CnFrom%20our%20perspective%2C%20these%20movements%20reinforce%20what%20we%20already%20know%20about%20design%20and%20user%20experience%3B%20good%20UX%20design%20is%20a%20competitive%20advantage.%20From%20Apple%u2019s%20perspective%2C%20they%20are%20making%20a%20clear%20statement%20about%20the%20quality%20of%20the%20apps%20associated%20with%20their%20brand.%20They%20don%u2019t%20want%20your%20app%20and%20the%20apps%20of%20your%2010%20closest%20competitors%20to%20be%20carbon%20copies%20of%20one%20another.%20%5Cn%5CnApple%20wants%20App%20Store%20apps%20to%20represent%20only%20best-of-breed%20experiences%2C%20and%20it%u2019s%20not%20surprising.%20You%20don%u2019t%20have%20to%20look%20very%20hard%20to%20recognize%20Apple%u2019s%20obsession%20with%20crafting%20superior%20experiences.%20Apple%20Watch%2C%20AirPods%20and%20the%20new%20iPhone%20X%20are%20industry-leading%20products%2C%20which%20further%20position%20Apple%20as%20a%20luxury%20brand.%20They%20recognize%20that%20user%20experience%20is%20their%20competitive%20advantage%2C%20and%20they%20are%20constantly%20working%20to%20improve%20that%20position.%5Cn%5CnLong%20term%2C%20the%20change%20will%20better%20serve%20the%20app%20ecosystem%20overall.%20App%20store%20growth%20isn%u2019t%20slowing%2C%20and%20an%20improved%20focus%20on%20quality%20design%20will%20ensure%20that%20future%20titles%20will%20meet%20their%20high%20standards.%20With%20users%20spending%20more%20than%2090%25%20of%20their%20time%20in%20apps%20as%20opposed%20to%20the%20mobile%20web%2C%20it%u2019s%20increasingly%20vital%20to%20differentiate%20your%20app.%20A%20dedication%20to%20creating%20quality%20experiences%20ultimately%20serves%20the%20needs%20of%20users%20and%20businesses%20alike.%22%2C%22tags%22%3A%5B%5D%7D%5D%7D%2C%22articleCategories%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22articles%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22page%22%3A1%2C%22total%22%3A0%2C%22content%22%3A%5B%5D%7D%2C%22careers%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%2C%22jobs%22%3A%5B%5D%2C%22relatedContent%22%3A%5B%5D%7D%2C%22contact%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22contactForm%22%3A%7B%22isSaving%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22errors%22%3A%7B%7D%7D%2C%22newsletterForm%22%3A%7B%22isSaving%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22errors%22%3A%7B%7D%7D%2C%22errors%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22errors%22%3A%5B%7B%22id%22%3A%2255PWHZyHpYM0myumU4w8U%22%2C%22type%22%3A%22errorPage%22%2C%22meta%22%3A%7B%22title%22%3A%22WillowTree%20%7C%20Error%20404%20-%20Not%20Found%22%2C%22description%22%3A%22We%20can%27t%20find%20what%20you%27re%20looking%20for%2C%20maybe%20we%20can%20build%20it%20for%20you%3F%22%7D%2C%22statusCode%22%3A404%2C%22title%22%3A%22404%22%2C%22heroDescription%22%3A%22We%20can%27t%20find%20what%20you%27re%20looking%20for%2C%20maybe%20we%20can%20build%20it%20for%20you%3F%22%2C%22heroHeadline%22%3A%22Error%20404%22%2C%22heroCallToAction%22%3A%22Let%27s%20Start%20Again%22%7D%2C%7B%22id%22%3A%2223I4tPFUY4G0q06gqqqosG%22%2C%22type%22%3A%22errorPage%22%2C%22meta%22%3A%7B%22title%22%3A%22WillowTree%20%7C%20Error%20500%20-%20Internal%20Server%20Error%22%2C%22description%22%3A%22I%27m%20sorry%20Dave%2C%20I%27m%20afraid%20I%20can%27t%20do%20that.%22%7D%2C%22statusCode%22%3A500%2C%22title%22%3A%22500%22%2C%22heroDescription%22%3A%22Sorry%2C%20something%20went%20wrong%21%20Please%20try%20again.%22%2C%22heroHeadline%22%3A%22Error%20500%22%2C%22heroCallToAction%22%3A%22Let%27s%20Start%20Again%22%7D%5D%7D%2C%22fonts%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isLoaded%22%3Afalse%7D%2C%22genericPage%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%2C%22slug%22%3Anull%7D%2C%22home%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22ideas%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22ideasFilter%22%3A%7B%22selected%22%3A%5B%5D%7D%2C%22job%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22slug%22%3Anull%2C%22content%22%3A%7B%7D%7D%2C%22privacy%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22project%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%2C%22slug%22%3Anull%7D%2C%22resize%22%3A%7B%22breakpoint%22%3A%22mobile%22%7D%2C%22service%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%2C%22slug%22%3Anull%7D%2C%22services%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22serviceDetail%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%2C%22slug%22%3Anull%7D%2C%22servicesPage%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22work%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Afalse%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%5D%7D%2C%22locations%22%3A%7B%22isLoading%22%3Afalse%2C%22isError%22%3Afalse%2C%22isSuccess%22%3Atrue%2C%22isNotFound%22%3Afalse%2C%22content%22%3A%5B%7B%22id%22%3A%2246H93wKsTKYoggkqucUcKW%22%2C%22type%22%3A%22location%22%2C%22location%22%3A%22Charlottesville%22%2C%22streetAddress%22%3A%22107%205th%20Street%20SE%22%2C%22city%22%3A%22Charlottesville%22%2C%22state%22%3A%22Virginia%22%2C%22zipCode%22%3A%2222902%22%2C%22country%22%3A%22USA%22%2C%22phoneNumbers%22%3A%5B%7B%22tel%22%3A%2218883299875%22%2C%22display%22%3A%221-888-329-9875%22%7D%2C%7B%22tel%22%3A%2214343265320%22%2C%22display%22%3A%221-434-326-5320%22%7D%5D%2C%22image%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%225bktWSQXny6O6mUyIGIqiU%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/5bktWSQXny6O6mUyIGIqiU/e8a7b37cc75c43c0dc5963090fb855eb/Charlottesville_Office.jpg%22%2C%22alt%22%3A%22Downtown%20Charlottesville%22%2C%22height%22%3A533%2C%22width%22%3A800%7D%2C%22order%22%3A1%7D%2C%7B%22id%22%3A%22z4YptYvXc4OqqKqaUwuqM%22%2C%22type%22%3A%22location%22%2C%22location%22%3A%22Durham%22%2C%22streetAddress%22%3A%22324%20Blackwell%20Street%2C%20Suite%201040%22%2C%22city%22%3A%22Durham%22%2C%22state%22%3A%22North%20Carolina%22%2C%22zipCode%22%3A%2227701%22%2C%22country%22%3A%22USA%22%2C%22phoneNumbers%22%3A%5B%7B%22tel%22%3A%2219192304096%22%2C%22display%22%3A%221-919-230-4096%22%7D%5D%2C%22image%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%22gy8L0X3lEASqkM2AQI6Gw%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/gy8L0X3lEASqkM2AQI6Gw/0587c2677ba0ac2a66aebf093768015a/Durham_Office.jpg%22%2C%22alt%22%3A%22WillowTree%27s%20Durham%2C%20North%20Carolina%20office%20is%20located%20in%20the%20historic%20American%20Tobacco%20Campus.%22%2C%22height%22%3A533%2C%22width%22%3A800%7D%2C%22order%22%3A2%2C%22pageName%22%3A%22durham-office%22%2C%22linkNameText%22%3A%22Directions%22%7D%2C%7B%22id%22%3A%223ajVAFxWkwaSki2eiEEY6o%22%2C%22type%22%3A%22location%22%2C%22location%22%3A%22New%20York%22%2C%22streetAddress%22%3A%22125%20Park%20Avenue%2C%2025th%20Floor%22%2C%22city%22%3A%22New%20York%22%2C%22state%22%3A%22New%20York%22%2C%22zipCode%22%3A%2210017%22%2C%22country%22%3A%22USA%22%2C%22phoneNumbers%22%3A%5B%7B%22tel%22%3A%2212125200969%22%2C%22display%22%3A%221-212-520-0969%22%7D%5D%2C%22image%22%3A%7B%22type%22%3A%22image%22%2C%22mimeType%22%3A%22image/jpeg%22%2C%22id%22%3A%223ioBTeUj28AmAiAk068wQa%22%2C%22url%22%3A%22//images.contentful.com/3cttzl4i3k1h/3ioBTeUj28AmAiAk068wQa/7b38ba14a84d94938e346ed9fab673a7/NY_Office.jpg%22%2C%22alt%22%3A%22Park%20Avenue%20in%20New%20York%20City.%22%2C%22height%22%3A534%2C%22width%22%3A800%7D%2C%22order%22%3A3%7D%5D%7D%7D',
        appConfig: "%7B%22baseUrl%22%3A%22https%3A//willowtreeapps.com%22%2C%22host%22%3A%22willowtreeapps.com%22%2C%22env%22%3A%22production%22%2C%22tag_env%22%3A%22production%22%2C%22redux%22%3A%7B%22logActions%22%3Afalse%7D%2C%22crm%22%3A%22accelo%22%2C%22accelo%22%3A%7B%22endpoint%22%3A%22https%3A//willowtree.accelo.com/forms/public/request%22%2C%22requestId%22%3A3%2C%22requestIdTest%22%3A%226%22%2C%22requestTitle%22%3A%22Contact%20Form%20Submittal%22%2C%22acceloNewsletterRequestTitle%22%3A%22Newsletter%20Form%20Submittal%22%2C%22acceloNewsletterRequestId%22%3A%229%22%2C%22acceloNewsletterFirstName%22%3A%22Newsletter%22%2C%22acceloNewsletterLastName%22%3A%22Newsletter%22%2C%22acceloNewsletterCompany%22%3A%22Willowtree%22%7D%2C%22bugsnag%22%3A%7B%22notifyDev%22%3Afalse%2C%22key%22%3A%22bf89ff6f85f44e1bfd7ec39efe5f5372%22%2C%22releaseStage%22%3A%22production%22%2C%22appVersion%22%3A%22wta-v127%22%2C%22hostname%22%3A%22willowtreeapps.com%22%7D%2C%22blog%22%3A%7B%22postsPerPage%22%3A12%7D%2C%22contentful%22%3A%7B%22defaultLimit%22%3A1000%7D%2C%22press%22%3A%7B%22numItems%22%3A6%7D%2C%22jobvite%22%3A%7B%22jobBoardSourceType%22%3A%22CareerSite%22%2C%22sourcePassthroughMaxAge%22%3A14400%7D%2C%22heroVideoTimeout%22%3A3000%7D"
      };
    </script>
    <script src="./RecyclerView_Adapter_ViewHolder_files/vendor.86a16f231906e660ed30.js"
defer="defer"></script>
    <script src="./RecyclerView_Adapter_ViewHolder_files/app.d29bbcd0f1564a860e3c.js"
defer="defer"></script>
    <!-- Google Tag Manager -->
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl+ '&gtm_auth=7DZwxCZfCl70TuoF_yeoCQ&gtm_preview=env-6&gtm_cookies_win=x';f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-NTVVV9');</script>
    <!-- End Google Tag Manager -->
    <script>
  (function(w, d){
   var id='embedly-platform', n = 'script';
   if (!d.getElementById(id)){
     w.embedly = w.embedly || function() {(w.embedly.q = w.embedly.q || []).push(arguments);};
     var e = d.createElement(n); e.id = id; e.async=1;
     e.src = ('https:' === document.location.protocol ? 'https' : 'http') + '://cdn.embedly.com/widgets/platform.js';
     var s = d.getElementsByTagName(n)[0];
     s.parentNode.insertBefore(e, s);
   }
  })(window, document);
</script> <!-- Build Info: wta | Deploy 205f8082 | v127 -->
    <div style="display: none; visibility: hidden;">
      <script type="text/javascript" id="inspectletjs">window.__insp=window.__insp||[];__insp.push(["wid",1510913394]);(function(){function a(){var b=document.createElement("script");b.type="text/javascript";b.async=!0;b.id="inspsync";b.src=("https:"==document.location.protocol?"https":"http")+"://cdn.inspectlet.com/inspectlet.js";var a=document.getElementsByTagName("script")[0];a.parentNode.insertBefore(b,a)}window.attachEvent?window.attachEvent("onload",a):window.addEventListener("load",a,!1)})();</script></div>
    <div style="display: none; visibility: hidden;">
      <script type="text/javascript">ga(function(){a:{try{var b=ga.getAll(),d;var a=0;for(d=b.length;a<d;a+=1)if(b[a].get("trackingId")===google_tag_manager["GTM-NTVVV9"].macro('gtm4')){var c=b[a].get("clientId").split(".")[0];break a}}catch(e){}c=null}c&&__insp.push(["identify",c])});</script></div>
    <script type="text/javascript" id="">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","https://connect.facebook.net/en_US/fbevents.js");fbq("init","909433989176047");fbq("track","PageView");</script>
    <noscript><img style="display:none" src="https://www.facebook.com/tr?id=909433989176047&ev=PageView&noscript=1"
width="1" height="1"></noscript>
    <div style="display: none; visibility: hidden;">
      <script>(function(h,l,a){function q(){if(!h.querySelector||!h.body.getBoundingClientRect)return!1;a.dataLayerName=a.dataLayerName||"dataLayer";a.distances=a.distances||{};u();r(l,"scroll",y(u,500))}function v(k,a,f,b,d){var e;for(e=0;e<a.length;e++){var c=parseInt(a[e],10),g="%"!==f?c+d:c/100*b+d;c+=f;g<=b+d&&(k[c]=g)}return k}function w(a,g){var k=parseInt(a,10),b=g/k,d=[],e;for(e=1;e<b+1;e++)d.push(e*k);return d}function u(){var k=x(a.bottom),g=x(a.top);var f=h.body;var b=h.documentElement;f=Math.max(f.scrollHeight,
f.offsetHeight,b.clientHeight,b.scrollHeight,b.offsetHeight);g&&(f-=g);k&&(f=k-(g||0));f-=5;b=g||0;var d=z()||{},e=[],c=[],m;if(a.distances.percentages&&(a.distances.percentages.each&&(e=e.concat(a.distances.percentages.each)),a.distances.percentages.every))for(m=0;m<a.distances.percentages.every.length;m++)e=w(a.distances.percentages.every[m],100),e=c.concat(e);if(a.distances.pixels&&(a.distances.pixels.each&&(c=c.concat(a.distances.pixels.each)),a.distances.pixels.every))for(m=0;m<a.distances.pixels.every.length;m++){var A=
w(a.distances.pixels.every[m],f);c=c.concat(A)}d=v(d,e,"%",f,b);f=d=v(d,c,"px",f,b);b=void 0!==l.pageXOffset;d="CSS1Compat"===(h.compatMode||"");b=b?l.pageYOffset:d?h.documentElement.scrollTop:h.body.scrollTop;b=parseInt(b,10);d=parseInt;c="CSS1Compat"===h.compatMode?h.documentElement:h.body;c=c.clientHeight;b+=d(c,10);for(var p in f)if(d=f[p],b>d&&!n[p]&&d<(k||Infinity)&&d>(g||0))if(n[p]=!0,d=p,c=l.GoogleAnalyticsObject,"undefined"===typeof l[a.dataLayerName]||a.forceSyntax)if("function"===typeof l[c]&&
"function"===typeof l[c].getAll&&2!==a.forceSyntax)l[c]("send","event",a.category,d,a.label,{nonInteraction:1});else"undefined"!==typeof l._gaq&&1!==a.forceSyntax&&l._gaq.push(["_trackEvent",a.category,d,a.label,0,!0]);else l[a.dataLayerName].push({event:"scrollTracking",attributes:{distance:d,label:a.label}})}function x(a){if("number"===typeof a||parseInt(a,10))return parseInt(a,10);try{var k=1===a.nodeType?a:h.querySelector(a);return t(k)}catch(f){}}function y(a,g){var k,b,d,e=null,c=0,h=function(){c=
new Date;e=null;d=a.apply(k,b)};return function(){var f=new Date;c||(c=f);var m=g-(f-c);k=this;b=arguments;0>=m?(clearTimeout(e),e=null,c=f,d=a.apply(k,b)):e||(e=setTimeout(h,m));return d}}function r(a,g,f){if(a.addEventListener)a.addEventListener(g,f);else if(a.attachEvent)a.attachEvent("on"+g,function(b){f.call(a,b)});else if("undefined"===typeof a["on"+g]||null===a["on"+g])a["on"+g]=function(b){f.call(a,b)}}function t(a){a=a.getBoundingClientRect().top;var k=void 0!==l.pageYOffset?l.pageYOffset:
(h.documentElement||h.body.parentNode||h.body).scrollTop;return a+k}var n={};!a.distances.percentages||!a.distances.percentages.every||a.distances.percentages.every instanceof Array||(a.distances.percentages.every=[a.distances.percentages.every]);!a.distances.pixels||!a.distances.pixels.every||a.distances.pixels.every instanceof Array||(a.distances.pixels.every=[a.distances.pixels.every]);var z=function(a){function g(){var d,e,c;f={};if(a.each)for(c=0;c<a.each.length;c++){var b=a.each[c];n[b]||(d=
h.querySelector(b))&&(f[b]=t(d))}if(a.every)for(c=0;c<a.every.length;c++){b=a.every[c];var g=h.querySelectorAll(b);if(g.length&&!n[b+":"+(g.length-1)])for(e=0;e<g.length;e++){var k=b+":"+e;n[k]||(d=g[e],f[k]=t(d))}}}if(a){var f={},b=0;g();return function(){var a={},e;b++;10<b&&(g(),b=0);for(e in f)a[e]=f[e];return a}}}(a.distances.elements);"loading"!==h.readyState?q():h.addEventListener?r(h,"DOMContentLoaded",q):r(l,"load",q)})(document,window,{forceSyntax:!1,dataLayerName:!1,distances:{percentages:{each:[10,
90],every:[25]},pixels:{each:[],every:[]},elements:{each:[],every:[]}},top:null,bottom:null,category:"Scroll Tracking",label:document.location.pathname});</script></div>
    <script type="text/javascript" id="">ga(function(){var a=ga.getAll()[0].get("name");ga(a+".require","Clearbit",{mapping:{companyName:"dimension6",companyDomain:"dimension15",companyTags:"dimension8",companySector:"dimension13",companyIndustryGroup:"dimension12",companyIndustry:"dimension11",companySubIndustry:"dimension10",companyType:"dimension14",companyEmployeesRange:"dimension7",companyAlexaRank:"dimension18",companyCity:"dimension19",companyState:"dimension20",companyTech:"dimension9"}})});</script>
    <script type="text/javascript" id="" src="./RecyclerView_Adapter_ViewHolder_files/ga.js"></script><iframe
      name="_hjRemoteVarsFrame" title="_hjRemoteVarsFrame" id="_hjRemoteVarsFrame"
      src="./RecyclerView_Adapter_ViewHolder_files/rcj-99d43ead6bdf30da8ed5ffcb4f17100c.html"
      style="display: none !important; width: 1px !important; height: 1px !important; opacity: 0 !important; pointer-events: none !important;"></iframe>
    <div id="ads"></div>
    <script src="./RecyclerView_Adapter_ViewHolder_files/saved_resource" type="text/javascript"></script>
    <script src="./RecyclerView_Adapter_ViewHolder_files/saved_resource%281%29"
type="text/javascript"></script><img src="./RecyclerView_Adapter_ViewHolder_files/seg"
      alt="" style="display: none;" border="0" width="1" height="1"><img src="./RecyclerView_Adapter_ViewHolder_files/pixel"
      alt="" style="display: none;" border="0" width="1" height="1">
  </body>
</html>
