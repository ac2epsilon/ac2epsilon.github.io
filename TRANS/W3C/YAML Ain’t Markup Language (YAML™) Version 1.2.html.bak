<!DOCTYPE html>
<html  xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta  charset="UTF-8" />
    <title>YAML Ain’t Markup Language (YAML™) Version 1.2</title>
    <link  type="text/css"  href="YAML_files/single_html.css"  rel="stylesheet" />
    <meta  content="DocBook XSL Stylesheets V1.73.2"  name="generator" />
  </head>
  <body>
    <address> Переклад українською - <a  href="mailto:ac2epsilon@gmail.com">Арсеній
        Чеботарьов</a> - Ніжин 2016</address>
    <div  lang="en"  xml:lang="en"  class="book">
      <div  class="titlepage">
        <div>
          <div>
            <h1  class="title"> YAML Ain’t Markup Language (<span  class="trademark">YAML</span>™)
              Version 1.2 </h1>
          </div>
          <div>
            <h2  class="subtitle">Редакція 3, оновлено 2009-10-01</h2>
          </div>
          <div>
            <div  class="authorgroup">
              <div  class="author">
                <h3  class="author"><span  class="firstname">Oren</span> <span
                     class="surname">Ben-Kiki</span></h3>
                <code  class="email">&lt;<a  href="mailto:oren@ben-kiki.org"  class="email">oren@ben-kiki.org</a>&gt;</code>
              </div>
              <div  class="author">
                <h3  class="author"><span  class="firstname">Clark</span> <span
                     class="surname">Evans</span></h3>
                <code  class="email">&lt;<a  href="mailto:cce@clarkevans.com"  class="email">cce@clarkevans.com</a>&gt;</code>
              </div>
              <div  class="author">
                <h3  class="author"><span  class="firstname">Ingy</span> <span
                     class="surname">döt Net</span></h3>
                <code  class="email">&lt;<a  href="mailto:ingy@ingy.net"  class="email">ingy@ingy.net</a>&gt;</code>
              </div>
            </div>
          </div>
          <div>
            <p  class="releaseinfo"> <span  class="emphasis"><em>Остання
                  (оновлена) версія:</em></span><br />
              HTML: <a  target="_top"  href="http://yaml.org/spec/1.2/spec.html"
                 class="ulink">http://yaml.org/spec/1.2/spec.html</a><br />
              PDF: <a  target="_top"  href="http://yaml.org/spec/1.2/spec.pdf"
                 class="ulink">http://yaml.org/spec/1.2/spec.pdf</a><br />
              PS: <a  target="_top"  href="http://yaml.org/spec/1.2/spec.ps"  class="ulink">http://yaml.org/spec/1.2/spec.ps</a><br />
              Errata: <a  target="_top"  href="http://yaml.org/spec/1.2/errata.html"
                 class="ulink">http://yaml.org/spec/1.2/errata.html</a><br />
              <span  class="emphasis"><em>Попередня (оригінашльна) версія:</em></span>
              <a  target="_top"  href="http://yaml.org/spec/1.2/2009-07-21/spec.html"
                 class="ulink">http://yaml.org/spec/1.2/2009-07-21/spec.html</a>
            </p>
          </div>
          <div>
            <p  class="copyright">Copyright © 2001-2009 Oren Ben-Kiki, Clark
              Evans, Ingy döt Net</p>
          </div>
          <div>
            <div  class="legalnotice"> <a  id="id2709007">Цей документ може
                бути вільно скопійований, в разі, якщо він не модифікований.</a>
            </div>
          </div>
          <div>
            <div  class="abstract">
              <p  class="title"> <b>Статус цього документу</b> </p>
              <p>Цей документ відображує третю версію мови серіалізації даних
                YAML. Вміст специфікації  прибув як результат консенсусу його
                авторів, та через зворотній зв'язок в списці розсилки  <a  target="_top"
                   href="http://lists.sourceforge.net/lists/listinfo/yaml-core"
                   class="ulink">yaml-core</a>. Ми заохочуємо реалізаторів: будь
                ласка, оновлюйте ваше програмне забезпечення для підтримки цієї
                версії. </p>
              <p>Первинною ціллю цієї ревізії є приведення YAML у відповідність
                до JSON, як офіційної підмножини. YAML 1.2 є сумісним з 1.1 для
                більшості практичних застосувань - це мінорна ревізія. Очікуване
                джерело несумісності з попередніми версіями YAML, особливо їх
                syck реалізації, є зміна до неявних правил типів. Ми видалили
                унікальні неявні правила типізації, та оновили ці правила, щоб
                підлаштувати їх до вироблених JSON. В цій версії YAML, логічні
                значення можуть бути серіалізовані як '<span  class="quote"><strong
                     class="userinput"><code>true</code></strong></span>' або '<span
                   class="quote"><strong  class="userinput"><code>false</code></strong></span>';
пустий
                скаляр як '<span  class="quote"><strong  class="userinput"><code>null</code></strong></span>'.
Незалапковані
                числові значення є надмножиною числових значень JSON. Інші зміни
                в специфікації були видаленням переносів рядка Unicode та
                виправлення багів при виробництві. Ми також визначили три
                вбудовані неявні набори правил типізації: нетипизовані, суворий
                JSON, та більш гнучний набір правил YAML, що поширює типізацію
                JSON. </p>
              <p>Різниця між піздніми чернетками 1.0, що реалізує syck 0.55, та
                ревізією 1.1 цієї спацифікації є значно більш екстенсивною. Ми
                полагодили питання з синтаксисом теггінгу. Зокрема, було
                перевизначено поодинокий наголос для приватних типів, та
                введений механізм єдиного префіксу. Ця ревізія також ладнає
                багато наріжних промислових випадків, та вводить репозитарій
                типів. Таким чином, є декілька несумісностей, між syck та цією
                ревізією, також. </p>
              <p> Останні відомі помилки в цій специфікації доступні на <a  target="_top"
                   href="http://yaml.org/spec/1.2/errata.html"  class="ulink">http://yaml.org/spec/1.2/errata.html</a>.
                Будь ласка, повідомляйте про помилки в цьому документі до списку
                розсилки <a  target="_top"  href="file:///home/TRANS/W3C/YAML%C2%A0Ain%E2%80%99t%C2%A0Markup%C2%A0Language%C2%A0%28YAML%E2%84%A2%29%20Version%C2%A01.2.html"
                   class="ulink"> yaml-core</a>. Ця ревізія містить виправлення
                для всіх помилок, відомих на 2009-10-01. </p>
              Ми бажаємо подякувати реалізаторів, що невпинно відсліджували
              ранішні версії цієї специфікації, та нашу неймовірну спільноту,
              ций зворотній зв'язок, обоє, валідовав та прояснював наш напрямок.
            </div>
          </div>
          <div>
            <div  class="abstract">
              <p  class="title"> <b>Загальні положення</b> </p>
              <p> <span  class="trademark">YAML</span>™ (в ритмі з '<span  class="quote">camel</span>')
є
                дружньою до людей, між-мовною, базованою на Unicode мовою
                серіалізації даних, розробленою коло загальних природних типів
                даних <span  style="font-style: italic;">еджайл</span> мов
                програмування. Він широко корисний для потреб програування, від
                файлів конфігурації до інтернет повідомлень, персістенсу
                об'єктів та аудиту даних. Разом зі <a  target="_top"  href="http://www.unicode.org/"
                   class="ulink">стандартом Unicode для символів</a>, ця
                специфікація провадить всю інформацію, потрібну для розуміння
                YAML версії 1.2, та щоб створювати програми, що обробляє YAML.</p>
            </div>
          </div>
        </div>
        <hr /> </div>
      <div  class="toc">
        <p><b>Вміст</b> </p>
        <dl>
          <dt> <span  class="chapter"> <a  href="#Introduction">1. Вступ</a> </span>
          </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2708649">1.1. Цілі</a> </span>
              </dt>
              <dt> <span  class="sect1"> <a  href="#id2708710">1.2.
                    Попередникі</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2759572">1.3. Відношення
                    до JSON</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2759732">1.4. Відношення
                    до XML</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2759768">1.5.
                    Термінологія</a> </span> </dt>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Preview">2. Огляд</a> </span>
          </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2759963">2.1. Колекції</a>
                </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2760395">2.2. Структури</a>
                </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2760844">2.3. Сталяри</a>
                </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2761292">2.4. Теги</a> </span>
              </dt>
              <dt> <span  class="sect1"> <a  href="#id2761803">2.5.
                    Повономірний приклад</a></span></dt>
            </dl>
          </dd>
        </dl>
        <dl>
          <dt> <span  class="chapter"> <a  href="#Processing">3. Обробка YAML
                інформації</a> </span> </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2762107">3.1. Процеси</a>
                </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2762313">3.1.1.
                        Зкидання</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2763035">3.1.2.
                        Завантаження</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2763452">Модель
                    інформації</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2763754">3.2.1. Граф
                        представлення</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2764044">3.2.1.1.
                            Вузли</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2764295">3.2.1.2.
                            Теги</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2764652">3.2.1.3.
Порівняння
                            вузлів</a> </span> </dt>
                    </dl>
                  </dd>
                  <dt> <span  class="sect2"> <a  href="#id2765410">3.2.2.
                        Дерево серіалізації</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2765608">3.2.2.1.
Порядок
                            ключів</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2765878">3.2.2.2.
                            Якоря та псевдоними</a> </span> </dt>
                    </dl>
                  </dd>
                  <dt> <span  class="sect2"> <a  href="#id2766150">3.2.3.
                        Потік презентації</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2766446">3.2.3.1.
Стилі
                            вузлів</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2766934">3.2.3.2.
Скалярні
                            формати</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2767100">3.2.3.3.
                            Коментарі</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2767222">3.2.3.4.
                            Директиви</a> </span> </dt>
                    </dl>
                  </dd>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2767381">3.3.
                    Завантаження точок відмови</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2767852">3.3.1.
                        Гарно-сформовані потоки та ідентифіковані псевдоними</a>
                    </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2768011">3.3.2.
                        Розрішені теги</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2769212">3.3.3.
                        Розпізнані та валідні теги</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2769542">3.3.4.
                        Доступні теги</a> </span> </dt>
                </dl>
              </dd>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Syntax">4. Синтаксичні
                домовленості</a> </span> </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2769866">4.1. Параметри
                    продукції</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2770517">4.2.
                    Домовленості іменування продукції</a> </span> </dt>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Characters">5. Символи</a> </span>
          </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2770814">5.1. Набори
                    символів</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2771184">5.2. Кодування
                    символів</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2772075">5.3.
                    Індикативні символи</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2774608">5.4. Символи
                    переносу рядка</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2775170">5.5. Проміжні
                    символи</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2775468">5.6.
                    Різні символи</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2776092">5.7. Екрановані
                    символи</a> </span> </dt>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Basic">6. Basic Structures</a>
            </span> </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2777534">6.1.
                    Indentation Spaces</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2778241">6.2. Separation
                    Spaces</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2778481">6.3. Line
                    Prefixes</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2778853">6.4. Empty
                    Lines</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2779048">6.5. Line
                    Folding</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2780069">6.6. Comments</a>
                </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2780810">6.7. Separation
                    Lines</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2781147">6.8. Directives</a>
                </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2781553">6.8.1. “<span
                           class="quote"><strong  class="userinput"><code>YAML</code></strong></span>”
                        Directives</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2782090">6.8.2. “<span
                           class="quote"><strong  class="userinput"><code>TAG</code></strong></span>”
                        Directives</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2782457">6.8.2.1.
                            Tag Handles</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2783273">6.8.2.2.
                            Tag Prefixes</a> </span> </dt>
                    </dl>
                  </dd>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2783797">6.9. Node
                    Properties</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2784064">6.9.1. Node
                        Tags</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2785586">6.9.2. Node
                        Anchors</a> </span> </dt>
                </dl>
              </dd>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Flow">7. Flow Styles</a> </span>
          </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2786196">7.1. Alias
                    Nodes</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2786563">7.2. Empty
                    Nodes</a> </span> </dt>
              <dt> <span  class="sect1"> <a  href="#id2786942">7.3. Flow
                    Scalar Styles</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2787109">7.3.1.
                        Double-Quoted Style</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2788097">7.3.2.
                        Single-Quoted Style</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2788859">7.3.3.
                        Plain Style</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2790088">7.4. Flow
                    Collection Styles</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2790320">7.4.1. Flow
                        Sequences</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2790832">7.4.2. Flow
                        Mappings</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2792977">7.5. Flow Nodes</a>
                </span> </dt>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Block">8. Block Styles</a> </span>
          </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2793652">8.1. Block
                    Scalar Styles</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2793718">8.1.1.
                        Block Scalar Headers</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2793979">8.1.1.1.
                            Block Indentation Indicator</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2794534">8.1.1.2.
                            Block Chomping Indicator</a> </span> </dt>
                    </dl>
                  </dd>
                  <dt> <span  class="sect2"> <a  href="#id2795688">8.1.2.
                        Literal Style</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2796251">8.1.3.
                        Folded Style</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2797293">8.2. Block
                    Collection Styles</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2797382">8.2.1.
                        Block Sequences</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2798057">8.2.2.
                        Block Mappings</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2799181">8.2.3.
                        Block Nodes</a> </span> </dt>
                </dl>
              </dd>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#YAML">9. YAML Character
                Stream</a> </span> </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2800132">9.1. Documents</a>
                </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2800168">9.1.1.
                        Document Prefix</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2800401">9.1.2.
                        Document Markers</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2800967">9.1.3. Bare
                        Documents</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2801301">9.1.4.
                        Explicit Documents</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2801522">9.1.5.
                        Directives Documents</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2801681">9.2. Streams</a>
                </span> </dt>
            </dl>
          </dd>
          <dt> <span  class="chapter"> <a  href="#Schema">10. Recommended
                Schemas</a> </span> </dt>
          <dd>
            <dl>
              <dt> <span  class="sect1"> <a  href="#id2802346">10.1. Failsafe
                    Schema</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2802427">10.1.1.
                        Tags</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2802432">10.1.1.1.
                            <em  class="firstterm"></em>Generic Mapping</a> </span>
                      </dt>
                      <dt> <span  class="sect3"> <a  href="#id2802662">10.1.1.2.
                            <em  class="firstterm"></em>Generic Sequence</a> </span>
                      </dt>
                      <dt> <span  class="sect3"> <a  href="#id2802842">10.1.1.3.
                            <em  class="firstterm"></em>Generic String</a> </span>
                      </dt>
                    </dl>
                  </dd>
                  <dt> <span  class="sect2"> <a  href="#id2803036">10.1.2. Tag
                        Resolution</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2803231">10.2. JSON
                    Schema</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2803311">10.2.1.
                        Tags</a> </span> </dt>
                  <dd>
                    <dl>
                      <dt> <span  class="sect3"> <a  href="#id2803362">10.2.1.1.
                            <em  class="firstterm"></em>Null</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2803629">10.2.1.2.
                            <em  class="firstterm"></em>Boolean</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2803828">10.2.1.3.
                            <em  class="firstterm"></em>Integer</a> </span> </dt>
                      <dt> <span  class="sect3"> <a  href="#id2804092">10.2.1.4.
                            <em  class="firstterm"></em>Floating Point</a> </span>
                      </dt>
                    </dl>
                  </dd>
                  <dt> <span  class="sect2"> <a  href="#id2804356">10.2.2. Tag
                        Resolution</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2804923">10.3. Core
                    Schema</a> </span> </dt>
              <dd>
                <dl>
                  <dt> <span  class="sect2"> <a  href="#id2805019">10.3.1.
                        Tags</a> </span> </dt>
                  <dt> <span  class="sect2"> <a  href="#id2805071">10.3.2. Tag
                        Resolution</a> </span> </dt>
                </dl>
              </dd>
              <dt> <span  class="sect1"> <a  href="#id2805770">10.4. Other
                    Schemas</a> </span> </dt>
            </dl>
          </dd>
          <dt> <span  class="appendix"> <a  href="#id2806177">Index</a> </span>
          </dt>
        </dl>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Глава 1. Вступ</h2>
            </div>
          </div>
        </div>
        <span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                 class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                       class="firstterm"><span  class="quote">YAML Ain't Markup
                        Language</span>' ("YAML не мова розмітки", скорочено
                      YAML) є мовою сериалізації, розробленою бути дружньою до
                      людей, та добре робити з сучасними мовами програмування
                      для загальних щоденних завдань. Ця специфікація обоє, є
                      вступом до мови  YAML, та концепцій, що підтримують її, та
                      також повною специфікацією інформації, потрібною для
                      розробки  <a  href="#application//"  class="link">застосувань</a>
                      для обробки YAML. </span></span></span></span></span></span></span>
        <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                   class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm">Вікриті, взаємодіючі та легко
                        зрозумілі інструменти мають просунуті можливості
                        обчислень. YAML був розроблений з початку, щоб бути
                        корисним та дружнім до людей, що роблять з даними. Він
                        використовує <a  href="#printable%20character//"  class="link">друковані</a>
                        символі Unicode, <a  href="#indicator//"  class="link">деякі</a><span
                           style="text-decoration: underline;"> </span>з яких
                        провадять структурну інформацію, та залишок містять самі
                        дані. YAML досягає унікальної ясності, мінімізуючі
                        кількість структурних символів, та дозвоялючі даним
                        показувати себе в природний та значущий спосіб.
                        Наприклад, <a  href="#space/indentation/"  class="link">відступи</a>
                        можуть бути застосовані для структури, <a  href="#:%20mapping%20value//"
                           class="link">двокрапка</a> розділяти <a  href="#key:%20value%20pair//"
                           class="link">пари ключ: значення</a>, та <a  href="#-%20block%20sequence%20entry//"
                           class="link">тире</a> використовуються для створення
                        маркованих <a  href="#sequence//"  class="link">списків</a>.
                      </span></span></span></span></span></span></span></p>
        <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                   class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm">Є миріади різновидів <a  href="#native%20data%20structure//"
                           class="link">структур даних</a>, але вони можуть бути
                        адекватно <a  href="#represent//"  class="link">представлені</a>
                        за допомогою трьох базових примітивів: <a  href="#mapping//"
                           class="link">відображень</a> (хеш таблиць/словники),
                        <a  href="#sequence//"  class="link">послідовностей</a>
                        (масиси/списки) та <a  href="#scalar//"  class="link">скалярів</a>
                        (рядки/числа). YAML надає ці примітиви, та додає просту
                        систему типізації та механізм <a  href="#alias//"  class="link">псевдонимів</a>
                        для формування повної мови для <a  href="#serialize//"
                           class="link">сериалізації</a> любої <a  href="#native%20data%20structure//"
                           class="link">природної структури даних</a>. Хоча
                        більшість мов програмування можуть використовувати YAML
                        для серіалізації даних, YAML переважає в роботі з тими
                        мовами, що фундаментально побудовані коло ціх трьох
                        примітивів. Це включає нову хвилю еджайл мов, таких як
                        Perl, Python, PHP, Ruby та Javascript. </span></span></span></span></span></span></span></p>
        <span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                 class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                       class="firstterm">Є сотні різних мов програмування, але
                      тільки декілька мов для зберігання та передачі даних.
                      Навіть хоча його потенціал є віртуально необмеженим, YAML
                      був специфічно створений для роботи з загальними випадками
                      застосувань, такими як: файли конфігурації, фільтри
                      журналів, міжпроцесні повідомлення, поділення даних між
                      мовами, персистентність об'єктів та налагодження складних
                      структур даних. Коли дані легко переглядати та розуміти,
                      програмування стає простішим завданням. </span></span></span></span></span></span></span>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both;"  class="title"><span  class="firstterm"><span
                       class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                             class="firstterm"><span  class="firstterm"><span  class="firstterm"><a
                                   id="id2708649">1.1. Цілі</a></span></span></span></span></span></span></span></h2>
              </div>
            </div>
          </div>
          <p> <span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"><a  id="id2708649">Цілі розробки
                            для YAML, за зниженням приоритетів, наступні:</a></span></span></span></span></span></span></span>
          </p>
          <div  class="orderedlist">
            <ol  type="1">
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"><a  id="id2708649"> YAML просто
                                читається людьми. </a></span></span></span></span></span></span></span></li>
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"><a  id="id2708649"> YAML дані є
                                портованими між мовами програмування. </a></span></span></span></span></span></span></span></li>
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"><a  id="id2708649"> YAML
                                співпадає з </a><a  href="#native%20data%20structure//"
                                 class="link">природними структурами даних</a> <em>еджайл</em>
                              мов. </span></span></span></span></span></span></span></li>
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"> YAML має узгоджену модель для
                              підтримки базових інструментів. </span></span></span></span></span></span></span></li>
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"> YAML підтримує одно-проходну
                              обробку. </span></span></span></span></span></span></span></li>
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"> YAML виразний та розширюваний.
                            </span></span></span></span></span></span></span></li>
              <li><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                         class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                               class="firstterm"> YAML просто реалізувати за
                              застосовувати</span></span></span></span></span></span></span></li>
            </ol>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both;"  class="title"><span  class="firstterm"><span
                       class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                             class="firstterm"><span  class="firstterm"><span  class="firstterm"><a
                                   id="id2708710">1.2. Попередникі</a></span></span></span></span></span></span></span></h2>
              </div>
            </div>
          </div>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"><a  id="id2708710">Початковий
                            напрямок YAML був встановлений через дискусію щодо
                            мови сериалізації та розмітки даних серед членів </a><a
                             target="_top"  href="http://www.docuverse.com/smldev/"
                             class="ulink">SML-DEV members</a>. Піздніше він
                          напряму вібрав досвід від </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">Perl </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">модуля Ingy döt Net <a  target="_top"
                             href="http://search.cpan.org/dist/Data-Denter/"  class="ulink">Data::Denter</a>.
                          Після цього YAML змужнів через ідеї та підтримку від
                          спільноти користувачів.  </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"> YAML інтегрує та будується коло
                          концепцій, викладених в <a  target="_top"  href="http://cm.bell-labs.com/cm/cs/cbook/index.html"
                             class="ulink">C</a>, <a  target="_top"  href="http://java.sun.com/"
                             class="ulink">Java</a>, <a  target="_top"  href="http://www.perl.org/"
                             class="ulink">Perl</a>, <a  target="_top"  href="http://www.python.org/"
                             class="ulink">Python</a>, <a  target="_top"  href="http://www.ruby-lang.org/"
                             class="ulink">Ruby</a>, <a  target="_top"  href="http://www.ietf.org/rfc/rfc0822.txt"
                             class="ulink">RFC0822</a> (MAIL), <a  target="_top"
                             href="http://www.ics.uci.edu/pub/ietf/html/rfc1866.txt"
                             class="ulink">RFC1866</a> (HTML), <a  target="_top"
                             href="http://www.ietf.org/rfc/rfc2045.txt"  class="ulink">RFC2045</a>
                          (MIME), <a  target="_top"  href="http://www.ietf.org/rfc/rfc2396.txt"
                             class="ulink">RFC2396</a> (URI), <a  target="_top"
                             href="http://www.w3.org/TR/REC-xml.html"  class="ulink">XML</a>,
                          <a  target="_top"  href="http://www.saxproject.org/"  class="ulink">SAX</a>,
                          <a  target="_top"  href="http://www.w3.org/TR/SOAP"  class="ulink">SOAP</a>,
                          та <a  target="_top"  href="http://www.json.org/"  class="ulink">JSON</a>.
                        </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">Синтаксис YAML був вмотивований
                          Internet Mail (RFC0822), та залишається частково
                          сумісним з цім стандартом. Більше того, завдячуючи
                          MIME (RFC2045), високорівневий результат YAML є <a  href="#stream//"
                             class="link">потік</a> незалежних <a  href="#document//"
                             class="link">документів</a>, ідеальних для
                          побудованих на повідомленнях розгалужених системах
                          обробки.  </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"> YAML має <a  href="#space/indentation/"
                             class="link">базовану на відступах</a> оглядовість,
                          що подібна до Python (без невизнеченостей, щодо <a  href="#tab//"
                             class="link">табуляцій</a>). <a  href="#style/block/"
                             class="link">Відступлені блоки</a> спрощують просту
                          інспекцію структури даних.  <a  href="#style/block/literal"
                             class="link">Літеральний стиль</a> </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">YAML застосовує це, дозволяючі
                          чисте змішування форматованого тексту в </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"><a  href="#space/indentation/"  class="link">відступлені</a>
                          структурі, без проблематичного <a  href="#escaping/in%20double-quoted%20scalars/"
                             class="link">екранування</a>. YAML також дозволяє
                          використання традиційної, базованої на <a  href="#indicator//"
                             class="link">індикаторах</a> оглядовості, подібної
                          до  JSON та Perl. Такий <a  href="#style/flow/"  class="link">потоковий
                            вміст</a> може бути вільно вкладений в <a  href="#style/block/"
                             class="link">відступлені блоки</a>. </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"><a  href="#style/flow/double-quoted"
                             class="link">Дволапковий стиль</a> </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">YAML використовує знайомі зі </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">C-стилю <a  href="#escaping/in%20double-quoted%20scalars/"
                             class="link">екрановані послідовності</a>. Це
                          дозволяє ASCII кодування для <a  href="#printable%20character//"
                             class="link">недрукованих</a> або 8-біт (ISO
                          8859-1) символів, таких, як <a  href="#ns-esc-8-bit"
                             class="link">"<span  class="quote"><strong  class="userinput"><code>\x3B</code></strong></span>"</a>.
                          <a  href="#printable%20character//"  class="link">Недруковані</a>
                          16-біт Unicode та 32-біт (ISO/IEC 10646) символи
                          підтримуються за допомогою <a  href="#escaping/in%20double-quoted%20scalars/"
                             class="link">екранованих послідовностей</a>, як <a
                             href="#ns-esc-16-bit"  class="link">"<span  class="quote"><strong
                                 class="userinput"><code>\u003B</code></strong></span>"</a>
                          та <a  href="#ns-esc-32-bit"  class="link">"<span  class="quote"><strong
                                 class="userinput"><code>\U0000003B</code></strong></span>"</a>.
                        </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">Мотивоване нормалізацією кінця
                          рядка HTML, YAML <span  style="text-decoration: underline;"><a
                               href="#line%20folding//"  class="link"> згортання
                              рядків</a> застосовує інтуітивний метод обробки <a
                               href="#line%20break//"  class="link">переносів
                              рядка</a>. Поодинокий <a  href="#line%20break//"
                               class="link">перенос рядка </a> <a  href="#line%20folding//"
                               class="link">згортається</a> в один <a  href="#space//"
                               class="link">проміжок</a>, тоді як <a  href="#empty%20line//"
                               class="link">порожні рядки</a> інтерпретуються як
                            символи <a  href="#line%20break//"  class="link">переносу
                              рядків</a>. Цей прийом дозволяє параграфам бути
                            огрнутими в слова, без впливу на <a  href="#scalar/canonical%20form/"
                               class="link">канонічну форму</a>  <a  href="#scalar//"
                               class="link">скалярного вмісту</a>. </span></span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">Базова система типів YAML базується
                          на потребає еджайл мов, як Perl, Python, та Ruby. YAML
                          напряму підтримує обоє, <a  href="#collection//"  class="link">колекції</a>
                          (<a  href="#mapping//"  class="link">мапи,</a> <a  href="#sequence//"
                             class="link">послідовності</a>) та <a  href="#scalar//"
                             class="link">скаляри</a>. Підтримка для ціх
                          загальних типів дозволяє програмістам використовувати
                          <a  href="#native%20data%20structure//"  class="link">природні
                            структури даних</a> </span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">своєї мови програмування</span></span></span></span></span></span></span><span
               class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"> для YAML маніпуляцій, замість
                          вимагати окремої об'єктної моделі документа (DOM). </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm">Як XML SOAP, YAML підтримує <a  href="#serialize//"
                             class="link">сериалізацію</a> графа <a  href="#native%20data%20structure//"
                             class="link">природних струкур даних</a> через
                          механізм <a  href="#alias//"  class="link">псевдонимів</a>.
                          Також, як SOAP, YAML провадить визначені <a  href="#application//"
                             class="link">застосуванням</a> <a  href="#tag//"  class="link">типи</a>
                          даних. Це дозволяє YAML <a  href="#represent//"  class="link">представляти</a>
                          багаті структури даних, потрібні для сучасних
                          розподілених обчислень. YAML провадить глобально
                          унікальні <a  href="#tag/global/"  class="link">імена
                            типів</a>, використовуючи механіз просторів імен,
                          надихнутий домовленістю Java з DNS-базованими іменами
                          пакунків, та XML URI-базованими просторами імен. На
                          додаток, YAML дозволяє приватні  <a  href="#tag/local/"
                             class="link">типи</a> , специфічні для одного <a  href="#application//"
                             class="link">застосування</a>. </span></span></span></span></span></span></span></p>
          <p><span  class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                     class="firstterm"><span  class="firstterm"><span  class="firstterm"><span
                           class="firstterm"> YAML був розроблений підтримувати
                          інкрементальні інтерфейси, що включають обоє, вхідні
                          ("<span  class="quote"><strong  class="userinput"><code>getNextEvent()</code></strong></span>")
                          та вихідні ("<span  class="quote"><strong  class="userinput"><code>sendNextEvent()</code></strong></span>")
однопроходні
                          інтерфейси. Разом, це дозволяє YAML підтримувати
                          обробку великих <a  href="#document//"  class="link">документів </a>
                          (як журналів транзакцій) або постійні <a  href="#stream//"
                             class="link">потоки</a> (як потоки з продукуючої
                          машини). </span></span></span></span></span></span></span></p>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">1.3. Відношення до JSON</h2>
              </div>
            </div>
          </div>
          <p>Обоє, JSON та YAML, націлені бути читаємі людьми форматами обміни
            даними. Однак, JSON та YAML мають різні приорітети. Головна ціль
            JSON в першу чергу простота та універсальність. Таким чином, JSON є
            тривіальним до генерації та розбору, ціною зменьшення читаємості
            людьми.  Він також використовує інформаційну модель найменьшого
            загального дільника, що гарантує, що дані JSON можуть бути просто
            оброблені в кожному сучасному програмному оточенні. </p>
          <p>На відміну, найбільш гололвні цілі YAML є читабельність людьми та
            підтримка серіалізації довільних природних структур даних. Таким
            чином, YAML дозволяє екстремально читабельні файли, які, тим не
            менш, більш складно генерувати та розбирати. На додаток, YAML сміє
            виходити за типи даних найменьшого дільника, вимагаючи більш складну
            обробку на перетині між різними оточеннями програмування.</p>
          <p> YAML може, таким чином, розглядатись як природна супермножина
            JSON, пропонуючи покращену читабельність для людей, та більш повну
            інформаційну модель. Це також відбувається і на практиці; кожний
            файл JSON є також і валідним файлом YAML. Це спрощує міграцію з JSON
            на YAML якщо/коли стають потрібними додаткові можливості.</p>
          <p> JSON <a  target="_top"  href="http://www.ietf.org/rfc/rfc4627.txt"
               class="ulink">RFC4627</a> потребує, щоб ключам меппінгу тільки “<span
               class="quote">СЛІДУЄ</span>” бути унікальними, тоді як YAML
            наполягає, що вони “<span  class="quote">МУСЯТЬ</span>” бути.
            Технічно, YAML, таким чином, сумісний зі специфікацією JSON,
            обираючи трактовку дублікатів як помилку. На практичці, оскільки
            JSON мовчазний до семантики таких дублікатів, потрабельними є тільки
            файли JSON з унікальними ключами, які є, таким чином, валідними
            файлами YAML. </p>
          <p>Може бути корисним визначити проміжний формат між YAML та JSON.
            Такий формат може бути тривіальним до розбору (але не дуже
            читабельним для людей), як JSON. В той же час, він дозволятиме
            серіалізацію довільних природних структур даних, як YAML. Такий
            формат може також виступати як  "канонічний формат" YAML. Визначення
            такого формату “<span  class="quote">YSON</span>” (YSON є Serialized
            Object Notation) може бути зроблене або розширенням специфікації
            JSON, або обмеженням специфікації YAML. Таке визначення за межами
            розгляду цієї специфікації. </p>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">1.4. Відношення до XML</h2>
              </div>
            </div>
          </div>
          <p>Новоприбулі до YAML часто шукають його відповідність до eXtensible
            Markup Language (XML). Хоча дві мови можуть насправді конкурувати в
            декількох сферах застосування, насправді між ними немає залежності.
          </p>
          <p> YAML є в основному мовою серіалізації даних. XML був розроблений,
            щоб бути зворотньо сумісним зі Standard Generalized Markup Language
            (SGML), що був розроблений для підтримки структурованої
            документації. Таким чином, XML має багато накладених на нього
            обмежень дизайну, які YAML не поділяє. XML є піонером в багатьох
            сферах, YAML є результатом уроків, отриманих від XML та інших
            технологій. </p>
          <p>Треба зазначити, що є триваючі зусилля по визначенню стандартного
            відображення XML/YAML. Це загалом потребує, щоб була використана
            підмножина кожної мови. Для додаткової інформації по використанню
            обох, XML та YAML, будь ласка завітайте на <a  target="_top"  href="http://yaml.org/xml"
               class="ulink">http://yaml.org/xml</a>. </p>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">1.5. Термінологія</h2>
              </div>
            </div>
          </div>
          <p> Ця специфікація використовує ключові слова на основі <a  target="_top"
               href="http://www.ietf.org/rfc/rfc2119.txt"  class="ulink">RFC2119</a>
            для вказання рівня вимог. Зокрема, наступні слова використовуються
            для опису дій процесора YAML: </p>
          <div  class="variablelist">
            <dl>
              <dt> <span  class="term">Може</span> </dt>
              <dd> Слово <span  class="emphasis"><em>може</em></span>, або
                прикметник <span  class="emphasis"><em>опціонально</em></span>,
                означає, що сумісним процесорам YAML дозволяється, але вони <em
                   class="firstterm">не потребують</em> поводитись, як описано.
              </dd>
              <dt> <span  class="term">Слідує</span> </dt>
              <dd> Слово <span  class="emphasis"><em>слідує</em></span>, або
                прикметник <span  class="emphasis"><em>рекомендовано</em></span>,
                означає, що можуть бути причини для YAML процесора відхилятись
                від описаної поведінки, але таке відхилення може пошкодити
                взаємооперабельності, та повинно бути оприлюднено за допомогою
                відповідного повідомлення. </dd>
              <dt> <span  class="term">Має</span> </dt>
              <dd> Слово <span  class="emphasis"><em>має</em></span>, або
                термін <em  class="firstterm">вимагає</em> або <em  class="firstterm">буде</em>,
                означає, що описана поведінка є абсолютною вимогою специфікації.
              </dd>
            </dl>
          </div>
        </div>
        <p>Залишок документацї організований настунпим чином. Глава <a  title="Chapter 2. Preview"
             href="#Preview"  class="link">2</a> провадить короткий огляд
          головних можливостей YAML. Глава <a  title="Chapter 3. Processing YAML Information"
             href="#Processing"  class="link">3</a> описує інфораційну модель
          YAML, та процеси конвертації з та в цю модель, та такстовий формат
          YAML. Більшість документу, глави від <a  title="Chapter 4. Syntax Conventions"
             href="#Syntax"  class="link">4</a> до <a  title="Chapter 9. YAML Character Stream"
             href="#YAML"  class="link">9</a>, формально визначають цей
          текстовий формат. Нарешті, глава<a  title="Chapter 4. Syntax Conventions"
             href="#Syntax"  class="link">10</a>рекомендує базові схеми YAML. </p>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Глава 2. Огляд</h2>
            </div>
          </div>
        </div>
        <p>Цей розділ провадить швидкий погляд на виразну потужність YAML. Не
          очікується, що читач з першого разу розкусить всі приклади. Скоріше ці
          розділи використовуються як мотивація для залишку специфікацїі. </p>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">2.1. Колекції</h2>
              </div>
            </div>
          </div>
          <p> YAML <span  class="link">блокові колекції використовують відступи
              для поля зору, та починають кожне входження з нового рядка. </span><span
               class="link">Блокові послідовності вказують кожне входження за
              допомогою мінуса та проміжку</span> ( <span  class="link">“<span
                 class="quote"><strong  class="userinput"><code>- </code></strong></span>”</span>).
            Відображення (мапи) викоритстовують двокрапку та проміжок  (<span  class="link">“<span
                 class="quote"><strong  class="userinput"><code>: </code></strong></span>”</span>)
            для позначання кожної пари ключ: значення. Коментарі починаються з
            октохорпа (також відомий як “решітка<span  class="quote"></span>”,
            “бімоль”, “фунт”, або “знак нумерації” - <span  class="link"> “<span
                 class="quote"><strong  class="userinput"><code>#</code></strong></span>”</span>).
            </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody>
              <tr>
                <td  width="50%">
                  <div  class="example">
                    <p  class="title"><b>Приклад 2.1. Послідовність скалярів<br />
                        (гравців в мяч) </b></p>
                    <div  class="example-contents">
                      <pre  class="programlisting"><span  class="database">- Mark McGwire<br />- Sammy Sosa
- Ken Griffey
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.2. 
              Мапа скалярів на скаляри<br />
              (статистика гравців)
            </b></p><div  class="example-contents"><pre  class="programlisting"><span
 class="database">hr:  65    # Home runs<br />avg: 0.278 # Batting average
rbi: 147   # Runs Batted In
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
            <tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.3. 
              Мапа скалярів на послідовності (клуби в кожній лізі)
            </b></p><div  class="example-contents"><pre  class="programlisting"><span
 class="database">american:<br />  - Boston Red Sox
  - Detroit Tigers
  - New York Yankees
national:
  - New York Mets
  - Chicago Cubs
  - Atlanta Braves
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.4. Послідовність мап<br />
              (статистика гравців)
            </b></p><div  class="example-contents"><pre  class="programlisting"><span
 class="database">-<br />  name: Mark McGwire
  hr:   65
  avg:  0.278
-
  name: Sammy Sosa
  hr:   63
  avg:  0.288
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
          <p>
        YAML також має стилі потоку, використовуючи явні індикатори, скоріше, ніж відступи, для вказання поля зору. Послідовність потоку записується як розділений комами список в квадратних дужках. В подібній манері поточна мапа використовує дужки. </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.5. послідовність послідовностей</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">- [name        , hr, avg  ]<br />- [Mark McGwire, 65, 0.278]
- [Sammy Sosa  , 63, 0.288]


</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.6. Мапа мап<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">Mark McGwire: {hr: 65, avg: 0.278}<br />Sammy Sosa: {
    hr: 63,
    avg: 0.288
  }
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">2.2. Структури</h2>
              </div>
            </div>
          </div>
          <p>
        YAML використовує три мінуси (<a  href="#marker/directives%20end/"  class="link">“<span
 class="quote"><strong  class="userinput"><code>---</code></strong></span>”</a>) для розділення директив від вмісту документу. Це також служить сигналом початку документу, якщо директиви відсутні. Три крапки (
        <a  href="#marker/document%20end/"  class="link">“<span  class="quote"><strong
 class="userinput"><code>...</code></strong></span>”</a>) вказують на кінець документу без початку нового, для використання в комунікаційних каналах.
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.7. 
              Два документи в потоці<br />
              (кожний починається з коментаря)
            </b></p><div  class="example-contents"><pre  class="programlisting"><span
 class="database"># Ranking of 1998 home runs<br />---
- Mark McGwire
- Sammy Sosa
- Ken Griffey

# Team ranking
---
- Chicago Cubs
- St Louis Cardinals
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.8. 
              Гра в потоці гри з Game
            </b></p><div  class="example-contents"><pre  class="programlisting"><span
 class="database">---<br />time: 20:03:20
player: Sammy Sosa
action: strike (miss)
...
---
time: 20:03:47
player: Sammy Sosa
action: grand slam
...
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
          <p>Повторювані вузли (об'єкти) спершу ідентифікуються через якір (помічени як амперсанд - <span
 class="link">“<span  class="quote"><strong  class="userinput"><code>&</code></strong></span>”</span>), та після цього отримують псевдонім (посилається як зірочка - <span
 class="link">“<span  class="quote"><strong  class="userinput"><code>*</code></strong></span>”</span>).
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.9. 
              Єдиний документ з двома коментарями</b></p><div  class="example-contents"><pre
 class="programlisting"><span  class="database">---<br />hr: # 1998 hr ranking
  - Mark McGwire
  - Sammy Sosa
rbi:
  # 1998 rbi ranking
  - Sammy Sosa
  - Ken Griffey
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.10. Вузол для “<span
 class="quote"><strong  class="userinput"><code>Sammy Sosa</code></strong></span>”<br />з'являється в документі двічі</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">---<br />hr:
  - Mark McGwire
  # Following node labeled SS
  - &SS Sammy Sosa
rbi:
  - *SS # Subsequent occurrence
  - Ken Griffey
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
          <p>
        Знак запитання та проміжок (<span  class="link">“<span  class="quote"><strong
 class="userinput"><code>? </code></strong></span>”</span>) вказує на складний ключ мапи. В блоці колекції пари ключ: значення<span
 class="link"> можуть починатись зразу за мінусом, </span>двокрапкою або знаком запитання.
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.11. Мапа між послідовностями</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">? - Detroit Tigers<br />  - Chicago cubs
:
  - 2001-07-23

? [ New York Yankees,
    Atlanta Braves ]
: [ 2001-07-02, 2001-08-12,
    2001-08-14 ]
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.12. Компактна вкладена мапа</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">---<br /># Products purchased
- item    : Super Hoop
  quantity: 1
- item    : Basketball
  quantity: 4
- item    : Big Shoes
  quantity: 1

</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">2.3. Скаляри</h2>
              </div>
            </div>
          </div>
          <p>
        <a  href="#scalar//"  class="link">Скалярний вміст може бути записаний в блочній нотації, з використанням літерального стилю </a>(позначається <a
 href="#%7C%20literal%20style//"  class="link">“<span  class="quote"><strong  class="userinput"><code>|</code></strong></span>”</a>), де всі переноси рядка є значущіми. Альтернативно, вони можуть бути записині в згорнутому стилі <a
 href="#%3E%20folded%20style//"  class="link">(позначеному
        “<span  class="quote"><strong  class="userinput"><code>></code></strong></span>”</a>), де кожний перенос рядка згортаєтся до проміжка, за винятком, коли він завершується на порожній, або більш відступлений, рядок. </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.13. 
              В літералах нові рядкі зберігаються</b></p><div  class="example-contents"><pre
 class="programlisting"><span  class="database"># ASCII Art<br />--- |
  \//||\/||
  // ||  ||__
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.14. В згорнутих скалярах нові рядки стають проміжками</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">--- ><br />  Mark McGwire's
  year was crippled
  by a knee injury.
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
            <tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.15. 
              Згорнуті нові рядки зберігаються для "більш відступлених" та порожніх рядків</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">><br /> Sammy Sosa completed another
 fine season with great stats.

   63 Home Runs
   0.288 Batting Average

 What a year!
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.16. 
              Відступ визначає поле зору
               
            </b></p><div  class="example-contents"><pre  class="programlisting"><span
 class="database">name: Mark McGwire<br />accomplishment: >
  Mark set a major league
  home run record in 1998.
stats: |
  65 Home Runs
  0.278 Batting Average

</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
          <p>
        Поточні скаляри YAML включають плаский стиль
        (більше прикладів далі), та стиль подвійних лапок. Стиль з подвійними лапками провадить екрановані послідовності. Стиль з одинарними лапками корисний, коли екранування непотрібне.
        Всі поточні скаляри можуть долати декілька рядків; переноси рядків завжди згортаються.</p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.17. Квотовані скаляри<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">unicode: "Sosa did fine.\u263A"<br />control: "\b1998\t1999\t2000\n"
hex esc: "\x0d\x0a is \r\n"

single: '"Howdy!" he cried.'
quoted: ' # Not a ''comment''.'
tie-fighter: '|\-*-/|'
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.18. Багаторядкові поточні скаляри<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">plain:<br />  This unquoted scalar
  spans many lines.

quoted: "So does this
  quoted scalar.\n"

</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">2.4. Теги</h2>
              </div>
            </div>
          </div>
          <p>В YAML вузли без тегів набувають тип в залежності від застосування. Приклади в цій специфікації загалом використовують типи <span
 class="link">
        <strong  class="userinput"><code>seq</code></strong></span>, <span  class="link">
        <strong  class="userinput"><code>map</code></strong></span> та <span  class="link">
        <strong  class="userinput"><code>str</code></strong></span> з безпечної до збою схеми<span
 class="link"></span>. Декілька прикладів також використовують типи <span  class="link"><strong
 class="userinput"><code>int</code></strong></span>, <span  class="link"><strong
 class="userinput"><code>float</code></strong></span>, та <span  class="link"><strong
 class="userinput"><code>null</code></strong></span> зі схеми <span  class="link">JSON</span>. Репозитарій включає додаткові типи, такі як <span
 class="ulink"><strong  class="userinput"><code>binary</code></strong></span>, <span
 class="ulink"><strong  class="userinput"><code>omap</code></strong></span>,
        <span  class="ulink"><strong  class="userinput"><code>set</code></strong></span> та інші .
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.19. Цілі</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">canonical: 12345<br />decimal: +12345
octal: 0o14
hexadecimal: 0xC

</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.20. Плаваюча крапка</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">canonical: 1.23015e+3<br />exponential: 12.3015e+02
fixed: 1230.15
negative infinity: -.inf
not a number: .NaN
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
            <tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.21. Різне</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">null:<br />booleans: [ true, false ]
string: '012345'
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.22. Мітки часу<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">canonical: 2001-12-15T02:59:43.1Z<br />iso8601: 2001-12-14t21:59:43.10-05:00
spaced: 2001-12-14 21:59:43.10 -5
date: 2002-12-14
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
          <p>Явна типізація позначається тегом, з використанням символа наголосу (<a
 href="#%21%20tag%20indicator//"  class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a>). Глобальні теги є URI, та можуть бути вказані в скороченій нотації тегу з використанням держака. Також можуть використовуватись специфічні до застосування локальні теги.
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.23. Різні явні теги</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">---<br />not-date: !!str 2002-04-28

picture: !!binary |
 R0lGODlhDAAMAIQAAP//9/X
 17unp5WZmZgAAAOfn515eXv
 Pz7Y6OjuDg4J+fn5OTk6enp
 56enmleECcgggoBADs=

application specific tag: !something |
 The semantics of the tag
 above may be different for
 different documents.

</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.24. Глобальні теги<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">%TAG ! tag:clarkevans.com,2002:<br />--- !shape
  # Використовуйте держак ! для
  # tag:clarkevans.com,2002:circle
- !circle
  center: &ORIGIN {x: 73, y: 129}
  radius: 7
- !line
  start: *ORIGIN
  finish: { x: 89, y: 102 }
- !label
  start: *ORIGIN
  color: 0xFFEEBB
  text: Pretty vector drawing.
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.25. Невпорядкована мапа<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database"># Множини представлені як мапа<br /># де кожний ключ асоційований зі 
# значенням null
--- !!set
? Mark McGwire
? Sammy Sosa
? Ken Griff
</span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.26. Впорядкована мапа<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database"># Впорядковані мапи представлені як<br /># послідовність мапінгів, де кожна
# мапа має один ключ
--- !!omap
- Mark McGwire: 65
- Sammy Sosa: 63
- Ken Griffy: 58
</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">2.5. Повномірний приклад</h2>
              </div>
            </div>
          </div>
          <p>
        Нижче два повномірні приклади YAML. Зліва простий інвойс; зправа простий файл журнала.
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.27. Інвойс</b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">--- !<tag:clarkevans.com,2002:invoice><br />invoice: 34843
date   : 2001-01-23
bill-to: &id001
    given  : Chris
    family : Dumars
    address:
        lines: |
            458 Walkman Dr.
            Suite #292
        city    : Royal Oak
        state   : MI
        postal  : 48046
ship-to: *id001
product:
    - sku         : BL394D
      quantity    : 4
      description : Basketball
      price       : 450.00
    - sku         : BL4438H
      quantity    : 1
      description : Super Hoop
      price       : 2392.00
tax  : 251.42
total: 4443.52
comments:
    Late afternoon is best.
    Backup contact is Nancy
    Billsmer @ 338-4338.
</tag:clarkevans.com,2002:invoice></span></pre></div></div><br  class="example-break" />
        </td>
              <td  width="50%">
          <div  class="example"><p  class="title"><b>Приклад 2.28. Файл журнала<br /></b></p><div
 class="example-contents"><pre  class="programlisting"><span  class="database">---<br />Time: 2001-11-23 15:01:42 -5
User: ed
Warning:
  This is an error message
  for the log file
---
Time: 2001-11-23 15:02:31 -5
User: ed
Warning:
  A slightly different error
  message.
---
Date: 2001-11-23 15:03:17 -5
User: ed
Fatal:
  Unknown variable "bar"
Stack:
  - file: TopClass.py
    line: 23
    code: |
      x = MoreObject("345\n")
  - file: MoreClass.py
    line: 58
    code: |-
      foo = bar



</span></pre></div></div><br  class="example-break" />
        </td>
            </tr>
          </tbody></table>
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Глава 3. Обробка YAML інформації</h2>
            </div>
          </div>
        </div>
        <p>
      YAML є і текстови форматом, і методом представлення любих природних структур даних в цьому форматі. Таким чином ця специфікація визначає дві концепції: клас об'єктів даних, що називається представленнями YAML, та синтаксис для презентації представлень YAML як послідовностей символів, що називається потоком YAML. YAML <em
 class="firstterm">процесор</em> є інструментом для перетворення інформації між ціма доповнюючими переглядами. Очікується, що цей YAML процесор робить свою роботу в інтересах іншого модуля, що називаєтсья <em
 class="firstterm">застосуванням</em>. Ця глава описує інформаційну структуру, що має повадити YAML процесор до, або отримати від застосування.
    </p>
        <p>Інформація YAML використовується в два способи: для машинної обробки, та для споживання людьми. Виклик примирення ціх двох перспектив найкраще вирішений в трьох окремих стадіях трансляції: репрезентація, сериалізація та презентація. Репрезентація визначає, як YAML
бачить природні структури даних для досягнення портабельності між програмними оточеннями. <span
 class="link"> Серіалізація турбується про преретворення </span>YAML репрезентації в послідовну форму, тобто в форму з обмеженнями послідовного доступу. Презентація має справу з форматуванням YAML серіалізації, як послідовності символів в дружній до людей манері. </p>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">3.1. Процеси</h2>
              </div>
            </div>
          </div>
          <p>Трансляція між природними структурами даних та символьним потоком виконується в декілька логічно окремих стадій, кожна з гарно визначеними вхідними та вихідними моделями даних,  як показано на наступній діаграмі:
      </p>
          <div  class="figure">
            
            <p  class="title">
              <b>Малюнок 3.1. Огляд обробки</b>
            </p>
            <div  class="figure-contents">
              <div  class="mediaobject">
                <img  alt="Processing Overview"  src="file:///home/TRANS/W3C/YAML_files/overview2.png" />
              </div>
            </div>
          </div>
          <br  class="figure-break" />
          <p>YAML процесор не має показувати стадії серіалізації або репрезентації. Він може напряму транслювати між природними структурами даних та символьним потоком (<span
 class="link">dump</span> та <span  class="link">load</span> в діаграмі вище). Однак така пряма трансляція повинна мати місце, так що природні структури даних конструюватимуться тільки з інформації, доступної в репрезентації. Зокрема, порядок ключів мапи, коментарі та держаки тегів не повинні бути посилані впродовж композиції.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.1.1. Зкидання</h3>
                </div>
              </div>
            </div>
            <p>
          <em  class="firstterm">Зкидання</em> природних струкдур даних до символьного потоку робиться з використанням наступних трьох стадій:
        </p>
            <div  class="variablelist">
              <dl>
                <dt>
                  <span  class="term">Представлення природних структур даних</span>
                </dt>
                <dd>
                  <p>
                YAML <em  class="firstterm">представляє </em>любі <em  class="firstterm">природні структури даних</em> з використанням трьох типів вузлів: послідовність
                - впорядкована серія елементів; <span  class="link">мапа (відображення) </span>- невпорядкована асоціація унікальних ключів на значення; та скаляр - любі величини з прозорою структурою, що представлені як послідовність символів Unicode.
                В комбінації ці примітиви генерують направлені графи структур. Ці примітиви були обрані, бо є обоє, потужними та знайомими: послідовність відповідає до масивів Perl та списків Python, мапи відповідають до хеш таблиць Perl да словників Python. Скаляри представляють рядки, цілі, дати, та інші атомарні типі даних.
              </p>
                  <p>
                Кожний вузол YAML потребує, на додаток до його властивості та  вмісту, тег, що вказує на його тип даних. Специфікатори типів є або глобальними URI, або локальними в полі зору окремого застосування.
Наприклад, ціле представлене в YAML скаляром, плюс глобальний тег “<span  class="quote"><strong
 class="userinput"><code>tag:yaml.org,2002:int</code></strong></span>”. Подібно, об'єкт інвойсу власний для окремої організації, може бути представлений як мапа, разом з локальним тегом “<span
 class="quote"><strong  class="userinput"><code>!invoice</code></strong></span>”. Ця проста модель може представляти любу структуру даних, незалежно від мови програмування.
              </p>
                </dd>
                <dt>
                  <span  class="term">Граф серіалізації та репрезентації</span>
                </dt>
                <dd>
              Для середовищ послідовного доступу, таких, як API повідомлень зворотніх викликів, репрезентація YAML має бути <em
 class="firstterm">серіалізована </em>до впорядкованого дерева. Оскільки в YAML репрезентації ключі мапи є неупорядкованими, та вузли можуть бути посилані більше ніж один раз
              (мають більше ніж одну входящу “стрілку”), процес серіалізації потрібен для накладання ключів мепунгу, та для заміни другого та наступних посилань на обраний ключ на заміщення, названі псевдонимами. YAML не задає, як обираються ці <em
 class="firstterm">деталі серіалізації</em>. Це покладається на процесор YAML, запропонувати дружній для людей порядок ключей та імена якорів, можливо з допомогою застосування. Результат цього процесу, дерево серіалізації YAML, може потім бути пройденим для продукування послідовності повідомлень викликів для однопроходної обробки даних YAML.
            </dd>
                <dt>
                  <span  class="term">Презентування дерева серіалізації</span>
                </dt>
                <dd>
              Фінальний процес вивода є <em  class="firstterm">презентація </em>сериалізацій YAML як символьного потока в дружній до людей маенрі. Щоб максимізувати читабельність для людей, YAML пропонує багатий набір стилістичних опцій, що ідуть значно далі за мінімальні функціональні потреби простого сховища даних. Таким чином,  процесор YAML потребує вводити різні <em
 class="firstterm">деталі презентації</em> при створенні потока, як вибір стилів вузлів, як форматувати скалярний вміст, кількість відступів, які держаки тегів використовувати, теги вузлів, що треба залишити невизначеними, набір директив для провадження, та, можливо, навіть, які коментарі вказати. Доки деяке з цього може бути зроблене за допомогою застосування, загалом цей процес слідує бути направлений перевагами користувача.</dd>
              </dl>
            </div>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.1.2. Завантаження</h3>
                </div>
              </div>
            </div>
            <p>
          <em  class="firstterm">Завантаження </em><span  class="link">природних структур даних з символьного потоку робиться з використанням трьох наступних стадій</span>:
        </p>
            <div  class="variablelist">
              <dl>
                <dt>
                  <span  class="term">Розбір потоку презентації</span>
                </dt>
                <dd><em  class="firstterm">Розбір </em>з зворотнім процесом до презентації, він сприймає потік символів, та продукує послідовність подій. Розбір відкидає всі деталі, введені в процесі презентації, повідомляючи тільки про події сериалізації. Розбір може схибити через хворобливо-сформований ввід. </dd>
                <dt>
                  <span  class="term">Композиція графа репрезентації</span>
                </dt>
                <dd><em  class="firstterm">Композиція </em>приймає послідовності подій сериалізації, та продукує граф репрезентації. Композиція видкидає всі деталі, введені в процесі сериалізації, продукучи тільки граф репрезентації. Композиція може схибити через любу з ряди декількох причин, детальованих нижче.</dd>
              </dl>
            </div>
            <div  class="variablelist">
              <dl>
                <dt>
                  <span  class="term">Побудова природних  структур даних</span>
                </dt>
                <dd>
              Завершальний процес вводу є <em  class="firstterm">побудова </em><a
 href="#native%20data%20structure//"  class="link">природних структур даних з</a> YAML репрезентації. Побудова має базоватись тільки на інформації, доступної в репрезентації, та не додаткових деталях сериалізації або презентації, таких, як коментарі, дирактиви,порядок ключив мапи, стилів вузла, формату скалярного вмісту, рівня вкладеності, тощо. Побудова може схибити через надоступність потрібних природних типів даних.
            </dd>
              </dl>
            </div>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">3.2. Інформаційні моделі</h2>
              </div>
            </div>
          </div>
          <p>Цей розділ вказує формальні деталі результатів наведених вище процесів. Щоб максимізувати портабельність даних між програмними мовами та реалізаціями, користувачам YAML слідує бути поміркованими щодо різниці між властивостямисериалізації або презентації, та тими, що є частиною YAML репрезентації. Таким чином, коли накладання порядку на ключі мапи є необхідним для вирівняння репрезентацій YAML до носія послідовного доступу, ця деталь серіалізації не має використана для передачі інформації рівня застосування. В подібний спосіб, хоча техніка відступів та вибір стилю вузла необхідні для читабельності людьми, ці деталі презентації на є ні частиною сериалізації YAML, ні репрезентації YAML. Ретельно розділяючи властивості, необхідні для серіалізації та презентації, YAML <span
 class="link">репрезентаця інформації застосування буде узгодженою</span> та портабельною між різноманітними програмними оточеннями.
      </p>
          <p>Наступна діаграма підсумовує три <em  class="firstterm">інфораційні моделі</em>. Цілі стрілки позначають композицію, прозорі стрілки позначають наслідування,
        “<span  class="quote"><strong  class="userinput"><code>1</code></strong></span>” та “<span
 class="quote"><strong  class="userinput"><code>*</code></strong></span>” позначають відношення “одне” та
        “багато”. Поєдине “<span  class="quote"><strong  class="userinput"><code>+</code></strong></span>” позначає деталі сериалізації, подвійне “<span
 class="quote"><strong  class="userinput"><code>++</code></strong></span>” позначає деталі презентації.
      </p>
          <div  class="figure">
            
            <p  class="title">
              <b>Малюнок 3.2. Інформаційні моделі</b>
            </p>
            <div  class="figure-contents">
              <div  class="mediaobject">
                <img  alt="Information Models"  src="file:///home/TRANS/W3C/YAML_files/model2.png" />
              </div>
            </div>
          </div>
          <br  class="figure-break" />
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.2.1. Граф репрезентації</h3>
                </div>
              </div>
            </div>
            <p>
          YAML <em  class="firstterm">репрезентація </em>природних структур даних є кореневий, пов'язаний, направлений граф помічених вузлів. Під “направленим графом” ми маємо на увазі набір вузлів та направлених ребер (“стрілок”), де кожне ребро пов'язує один вузол з іншим (дивіться <a
 target="_top"  href="http://www.nist.gov/dads/HTML/directedGraph.html"  class="ulink">формальне визначення</a>). Всі вузли мають бути досяжні з <em
 class="firstterm">кореневого вузла</em> через такі ребра. Зауважте, що граф YAML маоже включати цикли, та вузол може мати більше одного вхідного ребра. </p>
            <p>
          <a  href="#node//"  class="link">Вузли, що визначені в термінах інших вузлів є колекціями</a>; вузли, що є незалежними від любих інших вузлів, є скаляри. YAML підтримує дві різновиди вузлів колекцій: <a
 href="#sequence//"  class="link">послідовності та мапи</a>. Вузли мап є дещо замудрований, оскільки їх ключі не впорядковані та мають бути унікальними.
        </p>
            <div  class="figure">
              
              <p  class="title">
                <b>Малюнок 3.3. Модель репрезентації</b>
              </p>
              <div  class="figure-contents">
                <div  class="mediaobject">
                  <img  alt="Representation Model"  src="file:///home/TRANS/W3C/YAML_files/represent2.png" />
                </div>
              </div>
            </div>
            <br  class="figure-break" />
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.1.1. Вузли</h4>
                  </div>
                </div>
              </div>
              <p><em  class="firstterm">Вузол </em><a  href="#representation//"
 class="link">YAML представляє єдину природну структуру даних. Такі вузли мають </a><em
 class="firstterm">вміст</em> трьох <em  class="firstterm">різновидів</em>: скаляр, послідовність та мапа. На додаток, кожний вузол має тег, що прислуговується до обмеження набору можливих значень може мати вміст.
          </p>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Скаляр</span>
                  </dt>
                  <dd>
                Вміст <em  class="firstterm">скалярного вузла </em>є прозорими даними, що може бути представлений як послідовність з нуля або більше символів Unicode.
              </dd>
                  <dt>
                    <span  class="term">Послідовності</span>
                  </dt>
                  <dd>Вміст вузла <em  class="firstterm">послідовності </em> є впорядкована серія з нуля або більше вузлів. Зокрема, послідовність може містити один і той же вузол більше одного разу. Він навіть може містити самого себе (напряму або ні).
              </dd>
                </dl>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Мапи</span>
                  </dt>
                  <dd>
                Вміст вузла <em  class="firstterm">мапи</em> є невпорядкованим набором <em>пар</em> <em
 class="firstterm">ключ: значення</em><em  class="firstterm"></em>, з обмеженням, що кожний ключ э уныкальним. YAML
                не накладаэ ынших обмежень на вузли. Зокрема, ключі можуть бути довільними вузлами, той же вузол може бути використаний як значення до декількох пар ключ: значення, та мапа може навіть містити себе як ключ або значення (напряму або ні).
              </dd>
                </dl>
              </div>
              <p>Коли це доречно, є зручним розглядати послідовності та мапи разом, як <em
 class="firstterm">колекції</em>. З цього боку зору, послідовності трактуються як мапи з цілими ключами, починаючи з нуля. Маючи унифіковані колекції для послідовностей та мап корисне обоє, для теоретичного аналізу, та для створення практичних інструметів YAML та API. Ця стратегія також використовується мовою програмування Javascript.
          </p>
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.1.2. Теги</h4>
                  </div>
                </div>
              </div>
              <p>
            YAML <span  class="link">представляє інформацію про типи прородних структур даних за допомогою простого ідентифікатора, що називається </span><em
 class="firstterm">тег</em>. <em  class="firstterm">Глобальні теги </em>є <span
 class="ulink">URI, і, таким чином, глобально унікальний між всіма застосуваннями. Схема </span>“<span
 class="quote"><strong  class="userinput"><code>tag:</code></strong></span>” <span
 class="ulink">URI рекомендована для всіх глобальних </span>YAML тегів. С іншого боку, <em
 class="firstterm">локальні теги</em> специфічіні для окремого застосування.
            Локальні теги починаються з <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>!</code></strong></span>”</em>, не є URI, та не очікуються бути глобально уніклаьними. YAML провадить директиву <span
 class="link">“<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>”, щоб зробити нотацію тегів менш балакучою</span>; він також пропонує просту міграцію з локальних до глобальних тегів. Щоб забезпечити це, локальні теги обмежені до набору символів URI, та використовують URI
екранування символів.
          </p>
              <p>
            YAML не нав'язує жодного спеціального відношення між різними тегами, що починаються з однокового суб-рядка. Завершення тегів з фрагментами URI (що містять “<span
 class="quote"><strong  class="userinput"><code>#</code></strong></span>”) не є виключеннями; теги, що розділяють той же базовий URI, але різні в частині фрагменту, розглядаються як різні, незалежні теги. За домовленостю,
            фрагменти використовуються для ідентифікації різних “<span  class="quote">варіантів</span>” тегу, тоді як “<span
 class="quote"><strong  class="userinput"><code>/</code></strong></span>” використовується для визначення складених до “простору імен” ієрархій. Однак, це не більше, ніж домовленість, та кожний тег може використовувати власні правила. Наприклад, теги            Perl можуть використовувати “<span
 class="quote"><strong  class="userinput"><code>::</code></strong></span>” для вираження ієрархій простоів імен, Java теги можуть використовувати “<span
 class="quote"><strong  class="userinput"><code>.</code></strong></span>”, і так далі.
          </p>
              <p>Теги YAML використовуються для асоціації мета інфорацїі з кожним вузлом. Зокрема, кожний тег має вказувати очікуваний різновид вузла (скаляр, послідовніст або мапа). Скалярни теги мають також провадити механізм для конвертації форматованого вмісту до канонічної форми для підтримки перевірки на еквівалентність. Більше того, тег може провадити додаткову інформацію, таку, як набір дозволених значень вмісту для валідації,
            механіз для розрішення тегів, або любі інші дані, що застосовні до всіх вузлів тегу.
          </p>
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.1.3. Порівняння вузлів</h4>
                  </div>
                </div>
              </div>
              <p>оскільки YAML мапи потрубують унікальнсоті ключів, репрезентації мають включати механизм для перевірки унікальності вузлів. Це не-тривіально, оскільки YAML
            дозволяє різні шляхи для форматування скалярний вміст. Наприклад, Наприклад, ціле одинадціть може бути записане як “<span
 class="quote"><strong  class="userinput"><code>0o13</code></strong></span>” (восьмирічне) або
            “<span  class="quote"><strong  class="userinput"><code>0xB</code></strong></span>” (шестнідцятирічне). Якщо обоє нотації використовуються як ключі в одній мапі, тільки YAML <span
 class="link">процесор, що різпізнає цілі формати, буде коректно відмічати помилку дублікації ключів</span>.
          </p>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Канонична форма</span>
                  </dt>
                  <dd>
                YAML підтримує потребу для скалярної еквівалентності, вимагаючи, що кожний скалний тег має вказувати механізм для продукування <em
 class="firstterm">канонічної форми</em> для любого форматованого вмісту. Ця форма є рядком символів Unicode, що також представляє той самий вміст,
                та може бути використаний для перевірки на еквівалентність. Хоча ця вимога сильніша, ніж гарно визначений оператор еквівалентності, він має інші застосування, як продукування цифрових підписів.
              </dd>
                  <dt>
                    <span  class="term">Еквівалентність</span>
                  </dt>
                  <dd>
                    <p>Два вузли мають мати той самий тег та вміст, щоб бути <em>еквівалентними</em>. Оскікльи кожний тег стосується точно одного різновиду, це включає, що два вузли мають мати той же різновид, щоб бути еквівалентними. Два скаляри є еквівалентними, тільки коли їх теги та канонічні форми еквіваленті з точністю до символа. Еквівалентність колекцій визначається рекурсивно. Дві послідовності еквівалентні, такль коли вони мають той же тег та довжину, та кожний вузол в одній післідовності еквівелентний до відповідного вузла в іншій послідовності. Дві мапи еквівалентні, якщо вони мають однаковий тег, та однаковий набр ключів, та кожний ключ в цьому наборі асоційований з еквівалентними значеннями в обох мапах.
                </p>
                    <p>Різні схеми URI можуть визначати різні правила для тестування еквівалентності URI. Оскільки від YAML процесор не можна розумно очікувати підтримки їх всіх, він має обмежитись простим посимвольним порівнянням тегів для забезпечення узгодженості. Це також відбувається, як метод порівняння, визначений в “<span
 class="quote"><strong  class="userinput"><code>tag:</code></strong></span>” URI схемі. Теги в потоці YAML мають, таким чином, бути представлені в канонічним шляхом, так, щоб таке порівняння давало коректні результати. 
                </p>
                  </dd>
                  <dt>
                    <span  class="term">Ідентичність</span>
                  </dt>
                  <dd>
                Два вузли є <em  class="firstterm">ідентичними, </em>тільки якщо вони представляють ту ж природну структуру даних. Типово, це відповідає одній адресі даних. Ідентичність на слідує плутати з еквівалентністю;
                два еквіваленті вузли не потребують бути ідентичними. Процесор YAML може трактувати еквіваленті скаляри, як би вони були ідентичними. На відміну, відокремлення ідентичності для двох різних, але еквівалентних, колекцій, має бути збережена. </dd>
                </dl>
              </div>
            </div>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.2.2. Дерево серіалізації</h3>
                </div>
              </div>
            </div>
            <p>Щоб виразити YAML <a  href="#representation//"  class="link">репрезентацію з використанням послідовного </a>API,
необхідно накласти порядок на ключі мапи та задіяти  вузли псевдонимів, щоб визначити подальше з'явлення вже зустрінутих вузлів. Результатом цього процесу є <em
 class="firstterm">дерево серіалізації</em>, де кожний вузол має впорядкований набір дітей. Це дерево може бу обійдене для послідовного, базованого на подіях, API. <a
 href="#construct//"  class="link">Побудова природних структур даних  з послідовного інтерфейсу не повинне використовувати порядок ключів або імена якорів для збереження даних застосування</a>.
        </p>
            <div  class="figure">
              
              <p  class="title">
                <b>Малюнок 3.4. Модель серіалізації</b>
              </p>
              <div  class="figure-contents">
                <div  class="mediaobject">
                  <img  alt="Serialization Model"  src="file:///home/TRANS/W3C/YAML_files/serialize2.png" />
                </div>
              </div>
            </div>
            <br  class="figure-break" />
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.2.1. Порядок ключів</h4>
                  </div>
                </div>
              </div>
              <p>В моделі репрезентації ключі мап не мають порядку. Щоб серіалізувати мапу, необхідно накласти на ключі <em
 class="firstterm">порядок</em>. Цей порядок є деталями сериалізації, та не слідує використовуватись при композиції графа репрезентації
            (і, таким, чином, зберігання даних застосування). В кожному випадку, де порядок вузлів має значення,
має використовуватись             послідовність. Наприклад, впорядкована мапа може бути представлена як послідовність мап, де кожна мапа є подинокою парою ключ: значення<a
 href="#key:%20value%20pair//"  class="link"></a>. YAML
провадить зручну компактну нотацію для йього випадку.</p>
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.2.2. Якоря та псевдоними</h4>
                  </div>
                </div>
              </div>
              <p>
            В графі репрезентації вузол може з'являтись більше ніж в одній колекції. При сериалізації ції даних перхе входження вузла <em
 class="firstterm">ідентифікується</em> <em  class="firstterm">якорем</em>. Кожне наступне входження серіалізується як вузол псевдоніму, що посилається на вузол. Іншими словами, імена якорів є деталлю серіалізації, та відкидається, коли композиція завершена. Коли відбувається композиція <span
 class="link">графу репрезентації з подій сериалізації</span>, вузол псевдоніма посилається на найбільш останній вузол в сериалізації, що має вказаний вузол. Таким чином, якоря не повинні бути унікальними в сериалізації. На додаток, якір не обов'язково має вузол псевдоніму, що посилається на нього. Таким чином можливо провадити якір для всіх вузлів в сериалізації.
          </p>
            </div>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.2.3. Потік сериалізації</h3>
                </div>
              </div>
            </div>
            <p><em  class="firstterm">Презентація </em>YAML є потоком символів Unicode, з використанням стилів, форматів скалярного вмісту, коментарів, директив та інших деталей презентації, щоб представити YAML сериалізацію в читабельному людиной вигляді. Хоча YAML поцесор може провадити ці деталі при розборі, вони не повинні відображуватись в результуючій сериалізації. YAML дозволяє декілька дерев сериалізації, що містяться в одному потоку символів YAML, як послідовність документів, розділених маркерами. Документи, що з'являються в одному потоку, є незалежними; тобто, вузол не може з'являтись в більше ніж одному дереві сериалізації або графі репрезентації.
        </p>
            <div  class="figure">
              
              <p  class="title">
                <b>Малюнок 3.5. Модель репрезентації</b>
              </p>
              <div  class="figure-contents">
                <div  class="mediaobject">
                  <img  alt="Presentation Model"  src="file:///home/TRANS/W3C/YAML_files/present2.png" />
                </div>
              </div>
            </div>
            <br  class="figure-break" />
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.3.1. Стилі вузлів</h4>
                  </div>
                </div>
              </div>
              <p>Кожний вузол представлений в деякому <em  class="firstterm">стилі</em>, в залежності від різновиду. Стиль вузла є деталлю презентації, та не відображується в дереві серіалізації або графі репрезентації. Є дві групи стилів. Блочні стилі використовують відступи для позначення структури; на відміну, поточні структури покладаються лише на явні індикатори.
          </p>
              <p>
            YAML провадить багатий набір <em  class="firstterm">скалярних стилів</em>. Блочні скалярні стилі включають літеральний стиль та згорнутий стиль. <span
 class="link">Поточні скалярні стилі включають звичайний стиль, та два квотованих стилі</span>, стиль з поодинокими та подвійними лапками. Ці стилі пропонують диапазон компромісів між потужністю виразності та читабельності.
          </p>
              <p>Звичайно блокові послідовності та мапи починаються на наступному рядку. В деяких випадках YAML також дозволяє, щоб вкладені блочні колекції починались на тому ж рядку, для компактнішою нотації. На додаток, YAML провадить компактну нотацію для поточних мап з поодинокою парою <a
 href="#key:%20value%20pair//"  class="link">ключ: значення</a>, вкладених в поточну послідовність. Це дозволяє природну нотацію “впорядковану мапу”.
          </p>
              <div  class="figure">
                
                <p  class="title">
                  <b>Малюнок 3.6. Комбінації різновид/стиль</b>
                </p>
                <div  class="figure-contents">
                  <div  class="mediaobject">
                    <img  alt="Kind/Style Combinations"  src="file:///home/TRANS/W3C/YAML_files/styles2.png" />
                  </div>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.3.2. Скалярні формати</h4>
                  </div>
                </div>
              </div>
              <p>
            YAML дозволяє скаляри, представлені в декількох <em  class="firstterm">фоматах</em>. Наприклад, ціле “<span
 class="quote"><strong  class="userinput"><code>11</code></strong></span>” може також бути записаним як
            “<span  class="quote"><strong  class="userinput"><code>0xB</code></strong></span>”. Теги мають вказувати механізм для конвертації форматованого вмісту до канонічної форми для використання в перевірці на еквівалентність. Як стиль вузла, формат є деталлю презентації, та не відзеркалюється в дереві серіалізації ти графі репрезентації.
          </p>
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.3.3. Коментарі</h4>
                  </div>
                </div>
              </div>
              <p>
            <a  href="#comment//"  class="link">Коментарі є деталлю презентації, та не мають впливати на дерево сериалізації або граф репрезентації</a>. Зокрема, коментарі не асоційовані з окремим вузлом. Звичайне призначення коментарів є комунікація між людьми з підтримки файлу. Типовий приклад є коментарі в файлі конфігурації. Коментарі не мають з'являтись в скалярах, але можуть перемежатись зі скалярами в колекціях.
          </p>
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">3.2.3.4. Директиви</h4>
                  </div>
                </div>
              </div>
              <p>Кожний документ може бути асоційований з набором директив. Директива має ім'я та опціональну послідовність параметрів. Директиви є інструкціями для YAML процесора, та як всі інші деталі репрезентації, не відображуються в дереві серіалізації YAML або графі репрезентації. Ця версія YAML визначає дві дерективи,
            <span  class="link">“<span  class="quote"><strong  class="userinput"><code>YAML</code></strong></span>”</span> та <span
 class="link">“<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>”</span>.
Всі інші директиви зарезервовані для майбутніх версій YAML.
          </p>
            </div>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">3.3. Завантаження точок відмови</h2>
              </div>
            </div>
          </div>
          <p>Процес завантаження природних структур даних з YAML потоку має декілька потенціальних <em
 class="firstterm">точок відмови</em>. Символьний потік може бути хворобливо-сформованим, псевдоніми можуть бути невизначеними, невказані теги можуть бути нерозрішеними, теги можуть бути нерозпізнаними, вміст може бути недійсним, та природний тип може бути недоступним. Кожне з ціх збоїв призведе до неповного завантаження.
      </p>
          <p><em  class="firstterm">Часткова репрезентація </em>не має розрішувати тег для кожного вузла, та канонічна форма форматованого вмісту скаляра не обов'язково повинна бути доступною. Ця слабша репрезентація корисна для випадків неповного знання щодо типів документа.
        На відміну, <em  class="firstterm">повна репрезентація </em>задає тег для кожного вузла, та провадить канонічну форму форматованого склярного вмісту, дозволяючи тестування на еквівалентність. Повна репрезентація потрібна для побудови природних структур даних.
      </p>
          <div  class="figure">
            
            <p  class="title">
              <b>Малюнок 3.7. Завантаження точок відмови</b>
            </p>
            <div  class="figure-contents">
              <div  class="mediaobject">
                <img  alt="Loading Failure Points"  src="file:///home/TRANS/W3C/YAML_files/validity2.png" />
              </div>
            </div>
          </div>
          <br  class="figure-break" />
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.3.1. Гарно сформовані потоки та ідентифіковані псевдоними</h3>
                </div>
              </div>
            </div>
            <p>Гарно сформований потік символів має співпадати з BNF продукцією, вказаною в наступних главах. Успішне завантаження також потребує, щоб кожний псевдонім посилався на попередній вузол, ідентифікований якорем. YAML процесор повинен відкидати <em
 class="firstterm">хворобливо-сформовані потоки</em>
          та <em  class="firstterm">неідентифіковані псевдоніми</em>. YAML процесор може відновлюватись після синтаксичних помилок, можливо ігноруючи окремі частини вводу, але він має мати механізм для повідомлення про таки помилки.
        </p>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.3.2. Розрішені теги</h3>
                </div>
              </div>
            </div>
            <p>Типово, більшість тегів не є явно визначеними в символьному потоці. В процесі розбору, вузли, що не мають явного тегу отримують <em
 class="firstterm">неспецифічний тег</em>: <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>!</code></strong></span>”</em> для непростих скалярів, та <em
 class="firstterm">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>”</em>
для всіх інших вузлів. <span  class="link">Композиція повної репрезентації потребує кожний такий неспецифічний тег, щоб він був </span><em
 class="firstterm">розрішений </em>до
          <em  class="firstterm">специфічного тегу</em>,
          чи буде це локальний або глобальний тег. </p>
            <p>Розрішення тегу вузла мають залежати тільки від наступних трьох параметрів: (1) неспицефічний тег вузла, (2) шлях від кореня до вузла, та (3) вміст (і таким чином різновид) вузла. Коли вузол має більше ніж одне входження (з використанням псевдонимів), розрішення тегу має залешати тільки від шляха першого (з якорем) входження вузла.
        </p>
            <p>Зауважте, що розрішення вузла має не приймати до уваги такі деталі презентації, як коментарі, відступи та стиль вузла. Також розрішення має не приймати до уваги вміст будь-яких інших вузлів, за винятком вмісту ключових вузлів, напряму разом з шляхом від кореня до розрішуваного вузла. Нарешті, розрішення має не приймати до уваги вміст сестринських вузлів в колекції, або вміст вузла значення, асоційованого з ключевий вузлом, що розрішується.
        </p>
            <p>Ці правила гарантують, що розрішення тегу може бути виконане, як тільки вузол перший раз зустрінеться в потоці, типово перед тим, як вміст буде розібраний. Також розрішення тегу потребує посилання тільки на відносно малу кількість попередньо розібраних вузлів. Таким чином, в більшості випадків розрішення тегів в однопрохідних процесорах є обоє, можливим і практичним.
        </p>
            <p>
          Процесорам YAML слідує розрішувати вузли, що мають неспицефічний тег “<span
 class="quote"><strong  class="userinput"><code>!</code></strong></span>” як “<span
 class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>”,
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>” або
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong></span>”, в залежності від їх різновиду. Ця <em
 class="firstterm">домовленість про розрішення тегів</em> дозволяє автору символьного потоку YAML ефективно “відключти” процес розрішення тегу. Явно вказуючи властивість неспецифічного тегу “<span
 class="quote"><strong  class="userinput"><code>!</code></strong></span>”, вузол буде потім розрішений до заурядних послідовності, мапи або рядка, згідно з їх різновидом. </p>
            <p>
          <span  class="link">Правила розрішення специфічних до застосування тегів повинні бути обмежені до розрішення неспицефічного тегу </span>“<span
 class="quote"><strong  class="userinput"><code>?</code></strong></span>”, більш загально до розрішення звичайних скалярів. Вони можуть бути порівняні з набором регулярних виразів, щоб запровадити автоматичне розрішення цілих, з плаваючою крапкою, проміжків часу, та подібних типів. Застосування може також порівняти вміст вузлів мапи з набором очікуваних ключів, щоб автоматично розрізнити точки, комплексні числа, та подібні типи. Розрішені типи вузлів послодовності, такі, як “впорядкована мапа”, також можливі.
        </p>
            <p>При цьому розрішення є спецефічним до застосування. Процесорам YAML слідує, таким чином, провадити механізм, що дозволятиме застосуванням перекривати та розширювати ці правила зрорішення тегів по замовчанню.
        </p>
            <p>Якщо документ містить <em  class="firstterm">нерозрішені теги</em>, процесор           YAML не в змозі скомпонувати повний граф репрезентації. В такому випадку процесор YAML може скомпонувати часткое представлення, базуючись на різновиді кожного вузла, та дозволяючи неспецифічні теги. </p>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.3.3. Розпізнані та валідні теги</h3>
                </div>
              </div>
            </div>
            <p>Щоб бути <em  class="firstterm">валідним</em>, вузол має мати тег, що є <em
 class="firstterm">розпізнаним</em> процесором YAML, та його вміст має задовільняти обмеженням, що накладає тег. Якщо документ містить скалярнй вузол з <em
 class="firstterm">нерозпізненим тегом</em> або <em  class="firstterm">невалідним вмістом</em>, може бути скомпоноване тільки часткове представлення. На відміну, процесор YAML завжди може скомпонувати повне представлення для нерозпізнаної або невалідної колекції, оскільки еквівалентність колекції не залежить від знання типу даних колекції. Однак таке повне представлення не може бути використане для побудови природної структури даних.
        </p>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">3.3.4. Доступні теги</h3>
                </div>
              </div>
            </div>
            <p>В даному оточенні обробки немає потреби мати <em  class="firstterm">доступний</em> природний тип, відповідний до даного тега. Якщо тег вузла <em
 class="firstterm">недоступний</em>, процесор YAML не буде в змозі побудувати природну структуру даних для нього.  В цьому випадку повна репрезентація все одно може при цьому скомпонована, та застосування може побажати використати цю репрезентацію напряму. </p>
          </div>
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Глава 4. Синтаксичні домовленості</h2>
            </div>
          </div>
        </div>
        <p>Наступні глави формально визначають синтаксис символьих потоків YAML, з використаннями параметризованих продукцій BNF. Кожна BNF продукція є одночасно поіменованою, та пронумерованою, для простішого посилання. Коли можливо, базові структури специфіковані перед більш складними структурами, з використанням їх в стилі “знизу догори<span
 class="quote"></span>”.
    </p>
        <p>Порядок альтернатив в продукції є важливим. Наступні альтернативи розглядаються тільки в випадку, коли попередні схиблять. Дивіться приклад продукції <a
 href="#b-break"><strong  class="userinput"><code>b-break</code></strong></a>.
      На додаток співпадіння продукцій очікується як жадібне. Шаблони: опціональне
      (<strong  class="userinput"><code>?</code></strong>), нуль-або-більше (<strong
 class="userinput"><code>*</code></strong>) та одне-або-більше (<strong  class="userinput"><code>+</code></strong>) завжди співпадають з такою кількістю вводу, наскільки це можливо.
    </p>
        <p>Продукції супроводжуються прикладами, що йдуть пліч-о-пліч за еквівлентом тексту  YAML, в форматі пояснення. Цей формат використовує тільки поточні колекції, скаляри в двох лапках, та яінв теги для кожного вузла.
    </p>
        <p>Референсна реалізація з використанням продукцій доступна як <a  target="_top"
 href="http://hackage.haskell.org/cgi-bin/hackage-scripts/package/YamlReference"
 class="ulink">YamlReference</a> пакунок Haskell. Ця референсна реалізація також доступна як інтерактивне веб застосування на <a
 target="_top"  href="http://dev.yaml.org/ypaste"  class="ulink">http://dev.yaml.org/ypaste</a>.
    </p>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">4.1. Параметри продукції</h2>
              </div>
            </div>
          </div>
          <p>Синтаксис YAML розроблений для максимальної читабельності людьми. Це потребує, щоб розбір залежав від оточуючого тексту. Для компактності нотації ця залежність виражена з використанням параметризованих BNF продукцій.
      </p>
          <p>Ця контекстна чутливість є причиною бульшості складності визначення синтаксису YAML. Вона ще ускладнюється через боротьбу з людяною схильністю дивитись наперед при інтерпретації тексту. Ці ускладнення, звичайно, є джерелом більшості потужності YAML для представлення даних в дуже читабельний для людей спосіб.
      </p>
          <p>Продукції використовують любі з наступних параметрів:
      </p>
          <div  class="variablelist">
            <dl>
              <dt>
                <span  class="term">
            Indentation: <code  class="varname">n</code> or <code  class="varname">m</code>
          </span>
              </dt>
              <dd>
            Багато подукцій використовують параметр явного рівня відступу. Це менш елегантно, ніж концептуальні токени Python “<span
 class="quote">indent</span>” та
            “<span  class="quote">undent</span>”. Однак це необхідне для формального вираження правил відступів YAML.
          </dd>
            </dl>
          </div>
          <div  class="variablelist">
            <dl>
              <dt>
                <span  class="term">Context: <code  class="varname">c</code></span>
              </dt>
              <dd>
                <p>Цей параметр дозволяє продукціям змінити їх поведінку згідно до оточення. YAML підтримує дві групи <em
 class="firstterm">контекстів</em>, роблячи різницю між блоковими стилями та поточними стилями.
            </p>
                <p>В блочних стилях відступ використовується для окреслення структури. Щоб захопити відчуття відступу людини, правило потребує спеціального трактування символа <span
 class="link">“<span  class="quote"><strong  class="userinput"><code>-</code></strong></span>”</span>, використовуючи блочні послідовності. Таким чином, в деяких випадках продукції мають поводитись по різному в блочних послідовностях (<em
 class="firstterm">контекст в-блоці</em>) та за ними
              (<em  class="firstterm">контекст за-блоком</em>).
            </p>
                <p>В поточних стилях для задання структури використовуються явні індикатори. Ці стилі можуть розглядатись як природне розширення JSON для пориття помічених, одно-лапкових та звичайних скалярів. Оскільки останній не має окреслюючих індикаторів, вони є предметом для деяких обмежень, щоб уникнути неоднозначностей. Ці обмеження залежать від того, де вони з'являються: як неявні ключі напряму в блоці мапи (<em
 class="firstterm">блок-ключ</em>); як неявні ключі в потоці мапи (<em  class="firstterm">потік-ключ</em>); як значення у потоковій колекції (<em
 class="firstterm">в-потоці</em>); або як значення за межами (<em  class="firstterm">за-потоком</em>).
            </p>
              </dd>
              <dt>
                <span  class="term">(Block) Chomping: <code  class="varname">t</code></span>
              </dt>
              <dd>Блочні скаляри пропонують три можливі механізми для відсікання любих кінцевих переносів рядка: <span
 class="link">очищеня</span>, відсікання та збереження. На відміну від попередніх параметрів, це керує тільки інтерпретацією; переноси рядка валідні в усіх випадках.
          </dd>
            </dl>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">4.2. Домовленості іменування продукції</h2>
              </div>
            </div>
          </div>
          <p>
        Щоб спростити слідувати комбінаціям продукції, імена продукції використовують домовленість іменування в угорському стилі. Кожна продукція отримує префікс, базуючись на типі символів, з яких вона починається та якими завершується.
      </p>
          <div  class="variablelist">
            <dl>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>e-</code>
                  </strong>
                </span>
              </dt>
              <dd>
            Продукція не співпадає з символами.
          </dd>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>c-</code>
                  </strong>
                </span>
              </dt>
              <dd>Продукція починається та завершуєтся специальним символом.
          </dd>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>b-</code>
                  </strong>
                </span>
              </dt>
              <dd>
            Продукція співпадає з поодиноким переносом рядка.
          </dd>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>nb-</code>
                  </strong>
                </span>
              </dt>
              <dd>Продукція починається та завершується на непереносний символ.
          </dd>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>s-</code>
                  </strong>
                </span>
              </dt>
              <dd>
            Продукція починається та завершується на проміжний символ.
          </dd>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>ns-</code>
                  </strong>
                </span>
              </dt>
              <dd>Продукція починається та завершується на непроміжний символ.
          </dd>
              <dt>
                <span  class="term">
                  <strong  class="userinput">
                    <code>l-</code>
                  </strong>
                </span>
              </dt>
              <dd>
            Продукція співпадає з повним рядком або рядками.
          </dd>
              <dt>
                <span  class="term">
            <code  class="varname">X</code><strong  class="userinput"><code>-</code></strong><code
 class="varname">Y</code><strong  class="userinput"><code>-</code></strong>
          </span>
              </dt>
              <dd>Продукція починається з символ <code  class="varname">X</code><strong
 class="userinput"><code>-</code></strong> та завершуєстья символом <code  class="varname">Y</code><strong
 class="userinput"><code>-</code></strong>,
            де <code  class="varname">X</code><strong  class="userinput"><code>-</code></strong> та
            <code  class="varname">Y</code><strong  class="userinput"><code>-</code></strong> є любим з префіксів вище.
          </dd>
              <dt>
                <span  class="term">
            <code  class="varname">X</code><strong  class="userinput"><code>+</code></strong>,
            <code  class="varname">X</code><strong  class="userinput"><code>-</code></strong><code
 class="varname">Y</code><strong  class="userinput"><code>+</code></strong>
          </span>
              </dt>
              <dd>
            Продукція як вище, з додатковою властивістю, рівень відступу співпавшого вмісту більше ніж вказаний параметр <code
 class="varname">n</code>.
          </dd>
            </dl>
          </div>
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Глава 5. Символи</h2>
            </div>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.1. Набір символів</h2>
              </div>
            </div>
          </div>
          <p>Щоб забезпечити читабельність, потоки YAML використовують тільки <em
 class="firstterm">друковану </em>підмножину набору символів Unicode. Допустимий диапазон симиволів явно виключає контрольний блок C0 
        <strong  class="userinput"><code>#x0-#x1F</code></strong> (за виключенням TAB
        <strong  class="userinput"><code>#x9</code></strong>, LF <strong  class="userinput"><code>#xA</code></strong>, та CR
        <strong  class="userinput"><code>#xD</code></strong>, які дозволені), DEL
        <strong  class="userinput"><code>#x7F</code></strong>, контрольний блок C1
        <strong  class="userinput"><code>#x80-#x9F</code></strong> (за виключенням NEL
        <strong  class="userinput"><code>#x85</code></strong>, який дозволений), сурогатний блок
        <strong  class="userinput"><code>#xD800-#xDFFF</code></strong>, <strong
 class="userinput"><code>#xFFFE</code></strong>,
        та <strong  class="userinput"><code>#xFFFF</code></strong>.
      </p>
          <p>На вході процесор YAML має сприймати всі символи Unicode, за винятком тих, що виключені вище.
      </p>
          <p>На виході процесор YAML <a  href="#processor//"  class="link">має продукувати тільки допустимі символи</a>. Любі виключені символи мають бути представлені з використанням екранованих послідовностей. На додаток, любі дозволені символи, що відомі як недруковані, також повинні бути екрановані. Це не є обов'язковим, оскільки повна реалізація буде потребувати екстенсивних таблиць властивостей символів.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[1]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-printable</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              #x9 | #xA | #xD | [#x20-#x7E]   
                  /* 8 bit */<br />
            | #x85 | [#xA0-#xD7FF] | [#xE000-#xFFFD] /* 16 bit */<br />
            | [#x10000-#x10FFFF]      
                     
                /* 32 bit */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>Для забезпечення сумісності з <span  class="link">JSON</span>, процесори YAML мають дозволяти всі не-контрольні символи в квотованих (заточених в лапки) скалярах. Для забезпечення читабельності, недруковані символи повинні бути екрановані на виході, навіть в таких скалярах. Зауважте, що квотовані скаляри JSON не можуть перетинати декілька рядків або містити табуляцію, але квотовані скаляри YAML можуть.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[2]</td>
                    <td  valign="top"  align="right"  class="productionlhs">nb-json</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            #x9 | [#x20-#x10FFFF]
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.2. Character Encodings</h2>
              </div>
            </div>
          </div>
          <p>
        All characters mentioned in this specification are Unicode code points.
        Each such code point is written as one or more bytes depending on the
        <em  class="firstterm">character encoding</em>
        used. Note that in UTF-16, characters above
        <strong  class="userinput"><code>#xFFFF</code></strong> are written as four bytes, using a
        surrogate pair.
      </p>
          <p>
        The character encoding is a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be used
        to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <p>
        On input, a YAML <a  href="#processor//"  class="link">processor</a> must
        support the UTF-8 and UTF-16 character encodings. For <a  href="#JSON%20compatibility//"
 class="link">JSON compatibility</a>, the UTF-32
        encodings must also be supported.
      </p>
          <p>
        If a character <a  href="#stream//"  class="link">stream</a> begins with a
        <em  class="firstterm">byte order mark</em>, the
        character encoding will be taken to be as as indicated by the byte
        order mark. Otherwise, the <a  href="#stream//"  class="link">stream</a>
        must begin with an ASCII character. This allows the encoding to be
        deduced by the pattern of null (<strong  class="userinput"><code>#x00</code></strong>)
        characters.
      </p>
          <p>
        To make it easier to concatenate <a  href="#stream//"  class="link">streams</a>, byte order marks may appear at the
        start of any <a  href="#document//"  class="link">document</a>. However
        all <a  href="#document//"  class="link">documents</a> in the same
        <a  href="#stream//"  class="link">stream</a> must use the same character
        encoding.
      </p>
          <p>
        To allow for <a  href="#JSON%20compatibility//"  class="link">JSON
        compatibility</a>, byte order marks are also allowed inside
        <a  href="#style/flow/double-quoted"  class="link">quoted scalars</a>. For readability,
        such <a  href="#content//"  class="link">content</a> byte order marks
        should be <a  href="#escaping/in%20double-quoted%20scalars/"  class="link">escaped</a> on output.
      </p>
          <p>
        The encoding can therefore be deduced by matching the first few bytes
        of the <a  href="#stream//"  class="link">stream</a> with the following
        table rows (in order):
      </p>
          <div  class="informaltable">
            <table  border="0"  style="width: 0%">
              <colgroup>
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
              </colgroup>
              <tbody>
                <tr>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <span  class="emphasis"><b>Byte0 </b></span></td>
                  <td  width="50%"> <span  class="emphasis"><b>Byte1 </b></span></td>
                  <td  width="50%"> <span  class="emphasis"><b>Byte2 </b></span></td>
                  <td  width="50%"> <span  class="emphasis"><b>Byte3 </b></span></td>
                  <td  width="50%"> <span  class="emphasis"><b>Encoding</b></span></td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> Explicit BOM</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFE</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFF</code></strong></td>
                  <td  width="50%"> UTF-32BE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> ASCII first character</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <span  class="emphasis"><em>any</em></span></td>
                  <td  width="50%"> UTF-32BE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> Explicit BOM</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFF</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFE</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> UTF-32LE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> ASCII first character</em></span></td>
                  <td  width="50%"> <span  class="emphasis"><em>any</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> UTF-32LE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> Explicit BOM</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFE</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFF</code></strong></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> UTF-16BE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> ASCII first character</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <span  class="emphasis"><em>any</em></span></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> UTF-16BE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> Explicit BOM</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFF</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xFE</code></strong></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> UTF-16LE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> ASCII first character</em></span></td>
                  <td  width="50%"> <span  class="emphasis"><em>any</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#x00</code></strong></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> UTF-16LE</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> Explicit BOM</em></span></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xEF</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xBB</code></strong></td>
                  <td  width="50%"> <strong  class="userinput"><code>#xBF</code></strong></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> UTF-8</td>
                </tr>
                <tr>
                  <td  width="50%"> <span  class="emphasis"><em> Default</em></span></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> <br /></td>
                  <td  width="50%"> UTF-8</td>
                </tr>
              </tbody>
            </table>
          </div>
          <p>
        The recommended output encoding is UTF-8. If another encoding is used,
        it is recommended that an explicit byte order mark be used, even if the
        first <a  href="#stream//"  class="link">stream</a> character is ASCII.
      </p>
          <p>
        For more information about the byte order mark and the Unicode
        character encoding schemes see the <a  target="_top"  href="http://www.unicode.org/unicode/faq/utf_bom.html"
 class="ulink">Unicode
        FAQ</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[3]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-byte-order-mark</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            #xFEFF
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        In the examples, byte order mark characters are displayed as
        “<span  class="quote"><strong  class="userinput"><code>⇔</code></strong></span>”.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.1. Byte Order Mark</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">⇔</code># Comment only.</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-byte-order-mark"  class="link">c-byte-order-mark</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"># This stream contains no<br /># documents, only comments.
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.2. Invalid Byte Order Mark</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="screen"><span  class="database">- Invalid use of BOM<br /><code  class="filename">⇔</code>
- Inside a document.
</span></pre>
            </td>
                  <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br /> A <code  class="filename">BOM</code> must not appear
 inside a document.
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.3. Indicator Characters</h2>
              </div>
            </div>
          </div>
          <p>
        <em  class="firstterm">Indicators</em> are characters that
        have special semantics.
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[4]</td><td  valign="top"
 align="right"  class="productionlhs">c-sequence-entry</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">-</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#-%20block%20sequence%20entry//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>-</code></strong></span>”</a> (<strong  class="userinput"><code>#x2D</code></strong>,
          hyphen) denotes a <a  href="#style/block/sequence"  class="link">block sequence</a> entry.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[5]</td><td  valign="top"
 align="right"  class="productionlhs">c-mapping-key</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">?</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#?%20mapping%20key//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>?</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x3F</code></strong>, question mark) denotes a <a
 href="#key//"  class="link">mapping key</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[6]</td><td  valign="top"
 align="right"  class="productionlhs">c-mapping-value</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">:</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#:%20mapping%20value//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>:</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x3A</code></strong>, colon) denotes a <a
 href="#value//"  class="link">mapping value</a>.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.3. Block Structure Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">sequence<span  class="property">:</span><br /><code
 class="filename">-</code> one
<code  class="filename">-</code> two
mapping<span  class="property">:</span>
  <code  class="literal">?</code> sky
  <span  class="property">:</span> blue
  sea <span  class="property">:</span> green
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-sequence-entry"  class="link">c-sequence-entry</a></code>
  <code  class="literal"><a  href="#c-mapping-key"  class="link">c-mapping-key</a></code> <span
 class="property"><a  href="#c-mapping-value"  class="link">c-mapping-value</a></span>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "sequence"
  : !!seq [ !!str "one", !!str "two" ],
  ? !!str "mapping"
  : !!map {
    ? !!str "sky" : !!str "blue",
    ? !!str "sea" : !!str "green",
  },
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[7]</td><td  valign="top"
 align="right"  class="productionlhs">c-collect-entry</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">,</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#,%20end%20flow%20entry//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>,</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x2C</code></strong>, comma) ends a <a
 href="#style/flow/collection"  class="link">flow collection</a>
          entry.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[8]</td><td  valign="top"
 align="right"  class="productionlhs">c-sequence-start</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">[</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#[%20start%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>[</code></strong></span>”</a> (<strong  class="userinput"><code>#x5B</code></strong>,
          left bracket) starts a <a  href="#style/flow/sequence"  class="link">flow sequence</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[9]</td><td  valign="top"
 align="right"  class="productionlhs">c-sequence-end</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">]</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#]%20end%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>]</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x5D</code></strong>, right bracket) ends a <a
 href="#style/flow/sequence"  class="link">flow
          sequence</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[10]</td><td  valign="top"
 align="right"  class="productionlhs">c-mapping-start</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">{</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#%7B%20start%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>{</code></strong></span>”</a> (<strong  class="userinput"><code>#x7B</code></strong>,
          left brace) starts a <a  href="#style/flow/mapping"  class="link">flow mapping</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[11]</td><td  valign="top"
 align="right"  class="productionlhs">c-mapping-end</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">}</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#%7D%20end%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>}</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x7D</code></strong>, right brace) ends a <a
 href="#style/flow/mapping"  class="link">flow
          mapping</a>.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.4. Flow Collection Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">sequence: <code  class="filename">[</code> one<span
 class="property">,</span> two<span  class="property">,</span> <code  class="filename">]</code><br />mapping: <code
 class="literal">{</code> sky: blue<span  class="property">,</span> sea: green <code
 class="literal">}</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-sequence-start"  class="link">c-sequence-start</a></code> <code
 class="filename"><a  href="#c-sequence-end"  class="link">c-sequence-end</a></code>
  <code  class="literal"><a  href="#c-mapping-start"  class="link">c-mapping-start</a></code>  <code
 class="literal"><a  href="#c-mapping-end"  class="link">c-mapping-end</a></code>
  <span  class="property"><a  href="#c-collect-entry"  class="link">c-collect-entry</a></span>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "sequence"
  : !!seq [ !!str "one", !!str "two" ],
  ? !!str "mapping"
  : !!map {
    ? !!str "sky" : !!str "blue",
    ? !!str "sea" : !!str "green",
  },
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[12]</td><td  valign="top"
 align="right"  class="productionlhs">c-comment</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">#</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          An <a  href="##%20comment//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>#</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x23</code></strong>, octothorpe, hash, sharp, pound, number
          sign) denotes a <a  href="#comment//"  class="link">comment</a>.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.5. Comment Indicator</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">#</code> Comment only.</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-comment"  class="link">c-comment</a></code>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"># This stream contains no<br /># documents, only comments.
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[13]</td><td  valign="top"
 align="right"  class="productionlhs">c-anchor</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">&</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          An <a  href="#anchor//"  class="link">“<span  class="quote"><strong  class="userinput"><code>&</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x26</code></strong>, ampersand) denotes a <a
 href="#anchor//"  class="link">node’s anchor property</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[14]</td><td  valign="top"
 align="right"  class="productionlhs">c-alias</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">*</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          An <a  href="#*%20alias//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>*</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x2A</code></strong>, asterisk) denotes an <a
 href="#alias//"  class="link">alias node</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[15]</td><td  valign="top"
 align="right"  class="productionlhs">c-tag</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">!</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          The <a  href="#%21%20tag%20indicator//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>!</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x21</code></strong>, exclamation) is heavily overloaded for
          specifying <a  href="#tag//"  class="link">node tags</a>. It is used to
          denote <a  href="#tag/handle/"  class="link">tag
          handles</a> used in <a  href="#directive/TAG/"  class="link">tag directives</a> and <a
 href="#tag/property/"  class="link">tag properties</a>; to denote <a  href="#tag/local/"
 class="link">local tags</a>; and as the
          <a  href="#tag/non-specific/"  class="link">non-specific
          tag</a> for non-<a  href="#style/flow/plain"  class="link">plain scalars</a>.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.6. Node Property Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">anchored: <code  class="filename">!</code>local <code
 class="literal">&</code>anchor value<br />alias: <span  class="property">*</span>anchor
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-tag"  class="link">c-tag</a></code> <code
 class="literal"><a  href="#c-anchor"  class="link">c-anchor</a></code> <span  class="property"><a
 href="#c-alias"  class="link">c-alias</a></span>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "anchored"
  : !local &A1 "value",
  ? !!str "alias"
  : *A1,
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[16]</td><td  valign="top"
 align="right"  class="productionlhs">c-literal</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">|</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#%7C%20literal%20style//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>|</code></strong></span>”</a>
          (<strong  class="userinput"><code>7C</code></strong>, vertical bar) denotes a <a
 href="#style/block/literal"  class="link">literal block
          scalar</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[17]</td><td  valign="top"
 align="right"  class="productionlhs">c-folded</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">></span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#%3E%20folded%20style//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>></code></strong></span>”</a> (<strong  class="userinput"><code>#x3E</code></strong>,
          greater than) denotes a <a  href="#style/block/folded"  class="link">folded block scalar</a>.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.7. Block Scalar Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">literal: <code  class="filename">|</code><br />  some
  text
folded: <code  class="literal">></code>
  some
  text
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-literal"  class="link">c-literal</a></code> <code
 class="literal"><a  href="#c-folded"  class="link">c-folded</a></code>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "literal"
  : !!str "some\ntext\n",
  ? !!str "folded"
  : !!str "some text\n",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[18]</td><td  valign="top"
 align="right"  class="productionlhs">c-single-quote</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">'</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          An <a  href="#%27%20single-quoted%20style//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>'</code></strong></span>”</a> (<strong  class="userinput"><code>#x27</code></strong>,
          apostrophe, single quote) surrounds a <a  href="#style/flow/single-quoted"
 class="link">single-quoted flow
          scalar</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[19]</td><td  valign="top"
 align="right"  class="productionlhs">c-double-quote</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">"</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#%22%20double-quoted%20style//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>"</code></strong></span>”</a> (<strong  class="userinput"><code>#x22</code></strong>,
          double quote) surrounds a <a  href="#style/flow/double-quoted"  class="link">double-quoted flow scalar</a>.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.8. Quoted Scalar Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">single: <code  class="filename">'</code>text<code
 class="filename">'</code><br />double: <code  class="literal">"</code>text<code
 class="literal">"</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-single-quote"  class="link">c-single-quote</a></code> <code
 class="literal"><a  href="#c-double-quote"  class="link">c-double-quote</a></code>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "single"
  : !!str "text",
  ? !!str "double"
  : !!str "text",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[20]</td><td  valign="top"
 align="right"  class="productionlhs">c-directive</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">%</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          A <a  href="#%%20directive//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>%</code></strong></span>”</a>
          (<strong  class="userinput"><code>#x25</code></strong>, percent) denotes a <a
 href="#directive//"  class="link">directive</a> line.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.9. Directive Indicator</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">%</code>YAML 1.2<br />--- text
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-directive"  class="link">c-directive</a></code>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "text"
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[21]</td><td  valign="top"
 align="right"  class="productionlhs">c-reserved</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">@</span>” | “<span  class="quote">`</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          The <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>@</code></strong></span>”</em> (<strong
 class="userinput"><code>#x40</code></strong>,
          at) and <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>`</code></strong></span>”</em> (<strong
 class="userinput"><code>#x60</code></strong>,
          grave accent) are <em  class="firstterm">reserved</em> for future use.
        </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.10. Invalid use of Reserved Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="screen"><span  class="database">commercial-at: <code  class="filename">@</code>text<br />grave-accent: <code
 class="filename">`</code>text
</span></pre>
            </td>
                  <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br /> <code  class="filename">Reserved indicators</code> can't
 start a plain scalar.
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        Any indicator character:
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[22]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-indicator</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#c-sequence-entry">“<span  class="quote">-</span>”</a>
            | <a  href="#c-mapping-key">“<span  class="quote">?</span>”</a>
            | <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
            | <a  href="#c-collect-entry">“<span  class="quote">,</span>”</a>
            | <a  href="#c-sequence-start">“<span  class="quote">[</span>”</a>
            | <a  href="#c-sequence-end">“<span  class="quote">]</span>”</a>
            | <a  href="#c-mapping-start">“<span  class="quote">{</span>”</a>
            | <a  href="#c-mapping-end">“<span  class="quote">}</span>”</a><br />
            | <a  href="#c-comment">“<span  class="quote">#</span>”</a>
            | <a  href="#c-anchor">“<span  class="quote">&</span>”</a>
            | <a  href="#c-alias">“<span  class="quote">*</span>”</a>
            | <a  href="#c-tag">“<span  class="quote">!</span>”</a>
            | <a  href="#c-literal">“<span  class="quote">|</span>”</a>
            | <a  href="#c-folded">“<span  class="quote">></span>”</a>
            | <a  href="#c-single-quote">“<span  class="quote">'</span>”</a>
            | <a  href="#c-double-quote">“<span  class="quote">"</span>”</a><br />
            | <a  href="#c-directive">“<span  class="quote">%</span>”</a>
            | <a  href="#c-reserved">“<span  class="quote">@</span>”
            | “<span  class="quote">`</span>”</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        The <a  href="#[%20start%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>[</code></strong></span>”</a>, <a  href="#]%20end%20flow%20sequence//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>]</code></strong></span>”</a>, <a
 href="#%7B%20start%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>{</code></strong></span>”</a>, <a  href="#%7D%20end%20flow%20mapping//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>}</code></strong></span>”</a> and <a
 href="#,%20end%20flow%20entry//"  class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> indicators denote structure in
        <a  href="#style/flow/collection"  class="link">flow
        collections</a>. They are therefore forbidden in some cases, to
        avoid ambiguity in several constructs. This is handled on a
        case-by-case basis by the relevant productions.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[23]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-flow-indicator</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#c-collect-entry">“<span  class="quote">,</span>”</a>
            | <a  href="#c-sequence-start">“<span  class="quote">[</span>”</a>
            | <a  href="#c-sequence-end">“<span  class="quote">]</span>”</a>
            | <a  href="#c-mapping-start">“<span  class="quote">{</span>”</a>
            | <a  href="#c-mapping-end">“<span  class="quote">}</span>”</a><br />
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.4. Line Break Characters</h2>
              </div>
            </div>
          </div>
          <p>
        YAML recognizes the following ASCII <em  class="firstterm">line
        break</em> characters.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[24]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-line-feed</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            #xA    /* LF */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[25]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-carriage-return</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            #xD    /* CR */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[26]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-line-feed">b-line-feed</a>
            | <a  href="#b-carriage-return">b-carriage-return</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        All other characters, including the form feed
        (<strong  class="userinput"><code>#x0C</code></strong>), are considered to be non-break
        characters. Note that these include the <em  class="firstterm">non-ASCII line breaks</em>: next line
        (<strong  class="userinput"><code>#x85</code></strong>), line separator
        (<strong  class="userinput"><code>#x2028</code></strong>) and paragraph separator
        (<strong  class="userinput"><code>#x2029</code></strong>).
      </p>
          <p>
         <a  href="#YAML%201.1%20processing//"  class="link">YAML version 1.1</a> did support the above non-ASCII
        line break characters; however, JSON does not. Hence, to ensure
        <a  href="#JSON%20compatibility//"  class="link">JSON compatibility</a>,
        YAML treats them as non-break characters as of version 1.2. In theory
        this would cause incompatibility with <a  href="#YAML%201.1%20processing//"
 class="link">version 1.1</a>; in practice these characters were
        rarely (if ever) used. YAML 1.2 <a  href="#processor//"  class="link">processors</a> <a
 href="#parse//"  class="link">parsing</a> a <a  href="#YAML%201.1%20processing//"
 class="link">version 1.1</a> <a  href="#document//"  class="link">document</a> should therefore treat these line
        breaks as non-break characters, with an appropriate warning.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[27]</td>
                    <td  valign="top"  align="right"  class="productionlhs">nb-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#c-printable">c-printable</a>
            - <a  href="#b-char">b-char</a>
            - <a  href="#c-byte-order-mark">c-byte-order-mark</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        Line breaks are interpreted differently by different systems, and have
        several widely used formats.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[28]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-break</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              ( <a  href="#b-carriage-return">b-carriage-return</a>
            <a  href="#b-line-feed">b-line-feed</a> ) /* DOS, Windows */<br />
            | <a  href="#b-carriage-return">b-carriage-return</a>
                     
                  /* MacOS upto 9.x */<br />
            | <a  href="#b-line-feed">b-line-feed</a>
                     
                     
              /* UNIX, MacOS X */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        Line breaks inside <a  href="#scalar//"  class="link">scalar content</a>
        must be <em  class="firstterm">normalized</em> by the YAML <a  href="#processor//"
 class="link">processor</a>. Each such line break must be
        <a  href="#parse//"  class="link">parsed</a> into a single line feed
        character. The original line break format is a <a  href="#presentation/detail/"
 class="link">presentation detail</a>
        and must not be used to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[29]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-as-line-feed</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-break">b-break</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        Outside <a  href="#scalar//"  class="link">scalar content</a>, YAML allows
        any line break to be used to terminate lines.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[30]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-non-content</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-break">b-break</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        On output, a YAML <a  href="#processor//"  class="link">processor</a> is
        free to emit line breaks using whatever convention is most appropriate.
      </p>
          <p>
        In the examples, line breaks are sometimes displayed using the
        “<span  class="quote"><strong  class="userinput"><code>↓</code></strong></span>” glyph for clarity.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.11. Line Break Characters</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">|<br />  Line break (no glyph)
  Line break (glyphed)<code  class="filename">↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#b-break"  class="link">b-break</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "line break (no glyph)\n\
      line break (glyphed)\n"
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.5. White Space Characters</h2>
              </div>
            </div>
          </div>
          <p>
        YAML recognizes two <em  class="firstterm">white
        space</em> characters: <em  class="firstterm">space</em>
        and <em  class="firstterm">tab</em>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[31]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-space</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            #x20 /* SP */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[32]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-tab</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            #x9  /* TAB */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[33]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-white</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-space">s-space</a> | <a  href="#s-tab">s-tab</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        The rest of the (<a  href="#printable%20character//"  class="link">printable</a>) non-<a
 href="#line%20break//"  class="link">break</a> characters are considered to be non-space
        characters.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[34]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#nb-char">nb-char</a> - <a  href="#s-white">s-white</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        In the examples, tab characters are displayed as the glyph
        “<span  class="quote"><strong  class="userinput"><code>→</code></strong></span>”. Space characters are sometimes displayed as
        the glyph “<span  class="quote"><strong  class="userinput"><code>·</code></strong></span>” for clarity.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.12. Tabs and Spaces</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"># Tabs and spaces<br />quoted:<code
 class="filename">·</code>"Quoted <code  class="literal">→</code>"
block:<code  class="literal">→</code>|
<code  class="filename">··</code>void main() {
<code  class="filename">··</code><code  class="literal">→</code>printf("Hello, world!\n");
<code  class="filename">··</code>}
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-space"  class="link">s-space</a></code> <code
 class="literal"><a  href="#s-tab"  class="link">s-tab</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "quoted"
  : "Quoted \t",
  ? !!str "block"
  : "void main() {\n\
    \tprintf(\"Hello, world!\\n\");\n\
    }\n",
}
</span></pre>

          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.6. Miscellaneous Characters</h2>
              </div>
            </div>
          </div>
          <p>
        The YAML syntax productions make use of the following additional
        character classes:
      </p>
          <div  class="itemizedlist">
            <ul  type="disc">
              <li>
          A decimal digit for numbers:
        </li>
            </ul>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[35]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-dec-digit</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            [#x30-#x39] /* 0-9 */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="itemizedlist">
            <ul  type="disc">
              <li>
          A hexadecimal digit for <a  href="#escaping/in%20double-quoted%20scalars/"
 class="link">escape sequences</a>:
        </li>
            </ul>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[36]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-hex-digit</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#ns-dec-digit">ns-dec-digit</a><br />
            | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="itemizedlist">
            <ul  type="disc">
              <li>
          ASCII letter (alphabetic) characters:
        </li>
            </ul>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[37]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-ascii-letter</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="itemizedlist">
            <ul  type="disc">
              <li>
          Word (alphanumeric) characters for identifiers:
        </li>
            </ul>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[38]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-word-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-dec-digit">ns-dec-digit</a>
            | <a  href="#ns-ascii-letter">ns-ascii-letter</a>
            | “<span  class="quote">-</span>”
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="itemizedlist">
            <ul  type="disc">
              <li>
                <p>
            URI characters for <a  href="#tag//"  class="link">tags</a>, as
            specified in <a  target="_top"  href="http://www.ietf.org/rfc/rfc2396.txt"
 class="ulink">RFC2396</a>, with the
            addition of the “<span  class="quote"><strong  class="userinput"><code>[</code></strong></span>” and “<span
 class="quote"><strong  class="userinput"><code>]</code></strong></span>” for
            presenting IPv6 addresses as proposed in <a  target="_top"  href="http://www.ietf.org/rfc/rfc2732.txt"
 class="ulink">RFC2732</a>.
          </p>
                <p>
            By convention, any URI characters other than the allowed printable
            ASCII characters are first <em  class="firstterm">encoded</em> in UTF-8, and then each byte
            is <em  class="firstterm">escaped</em> using the <em  class="firstterm">“<span
 class="quote"><strong  class="userinput"><code>%</code></strong></span>”</em> character. The YAML <a
 href="#processor//"  class="link">processor</a> must not expand such
            escaped characters. <a  href="#tag//"  class="link">Tag</a> characters
            must be preserved and compared exactly as <a  href="#present//"  class="link">presented</a> in the YAML <a
 href="#stream//"  class="link">stream</a>, without any processing.
          </p>
              </li>
            </ul>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[39]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-uri-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              “<span  class="quote">%</span>” <a  href="#ns-hex-digit">ns-hex-digit</a>
            <a  href="#ns-hex-digit">ns-hex-digit</a>
            | <a  href="#ns-word-char">ns-word-char</a> | “<span  class="quote">#</span>”<br />
            | “<span  class="quote">;</span>” | “<span  class="quote">/</span>” | “<span
 class="quote">?</span>”
            | “<span  class="quote">:</span>” | “<span  class="quote">@</span>” | “<span
 class="quote">&</span>”
            | “<span  class="quote">=</span>” | “<span  class="quote">+</span>” | “<span
 class="quote">$</span>”
            | “<span  class="quote">,</span>”<br />
            | “<span  class="quote">_</span>” | “<span  class="quote">.</span>” | “<span
 class="quote">!</span>”
            | “<span  class="quote">~</span>” | “<span  class="quote">*</span>” | “<span
 class="quote">'</span>”
            | “<span  class="quote">(</span>” | “<span  class="quote">)</span>” | “<span
 class="quote">[</span>”
            | “<span  class="quote">]</span>”
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="itemizedlist">
            <ul  type="disc">
              <li>
          The <a  href="#c-tag"  class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a> character is used
          to indicate the end of a <a  href="#tag/handle/named"  class="link">named tag handle</a>; hence its use in
          <a  href="#tag/shorthand/"  class="link">tag shorthands</a>
          is restricted. In addition, such <a  href="#tag/shorthand/"  class="link">shorthands</a> must not contain the
          <a  href="#[%20start%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>[</code></strong></span>”</a>, <a  href="#]%20end%20flow%20sequence//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>]</code></strong></span>”</a>, <a
 href="#%7B%20start%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>{</code></strong></span>”</a>, <a  href="#%7D%20end%20flow%20mapping//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>}</code></strong></span>”</a> and <a
 href="#,%20end%20flow%20entry//"  class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> characters. These
          characters would cause ambiguity with <a  href="#style/flow/collection"
 class="link">flow collection</a>
          structures.
        </li>
            </ul>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[40]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-tag-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-uri-char">ns-uri-char</a>
            - <a  href="#c-tag">“<span  class="quote">!</span>”</a>
            - <a  href="#c-flow-indicator">c-flow-indicator</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">5.7. Escaped Characters</h2>
              </div>
            </div>
          </div>
          <p>
        All non-<a  href="#printable%20character//"  class="link">printable</a>
        characters must be <em  class="firstterm">escaped</em>. YAML escape sequences use the
        <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>\</code></strong></span>”</em> notation common to most modern
        computer languages. Each escape sequence must be <a  href="#parse//"  class="link">parsed</a> into the appropriate Unicode
        character. The original escape sequence is a <a  href="#presentation/detail/"
 class="link">presentation detail</a>
        and must not be used to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <p>
        Note that escape sequences are only interpreted in <a  href="#style/flow/double-quoted"
 class="link">double-quoted
        scalars</a>. In all other <a  href="#style/scalar/"  class="link">scalar styles</a>, the “<span
 class="quote"><strong  class="userinput"><code>\</code></strong></span>”
        character has no special meaning and non-<a  href="#printable%20character//"
 class="link">printable</a> characters are not available.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[41]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-escape</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            “<span  class="quote">\</span>”
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        YAML escape sequences are a superset of C’s escape sequences:
      </p>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[42]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-null</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">0</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII null (<strong  class="userinput"><code>#x0</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[43]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-bell</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">a</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII bell (<strong  class="userinput"><code>#x7</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[44]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-backspace</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">b</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII backspace (<strong  class="userinput"><code>#x8</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[45]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-horizontal-tab</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                “<span  class="quote">t</span>”
                | #x9
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII horizontal tab (<strong  class="userinput"><code>#x9</code></strong>) character.
          This is useful at the start or the end of a line to force a leading
          or trailing tab to become part of the <a  href="#content//"  class="link">content</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[46]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-line-feed</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">n</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII line feed (<strong  class="userinput"><code>#xA</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[47]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-vertical-tab</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                “<span  class="quote">v</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII vertical tab (<strong  class="userinput"><code>#xB</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[48]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-form-feed</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">f</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII form feed (<strong  class="userinput"><code>#xC</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[49]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-carriage-return</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                “<span  class="quote">r</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII carriage return (<strong  class="userinput"><code>#xD</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[50]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-escape</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">e</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII escape (<strong  class="userinput"><code>#x1B</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[51]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-space</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                #x20
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII space (<strong  class="userinput"><code>#x20</code></strong>) character. This is
          useful at the start or the end of a line to force a leading or
          trailing space to become part of the <a  href="#content//"  class="link">content</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[52]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-double-quote</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                <a  href="#c-double-quote">“<span  class="quote">"</span>”</a>
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII double quote (<strong  class="userinput"><code>#x22</code></strong>).
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[53]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-slash</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">/</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII slash (<strong  class="userinput"><code>#x2F</code></strong>),
          for <a  href="#JSON%20compatibility//"  class="link">JSON
          compatibility</a>.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[54]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-backslash</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                <a  href="#c-escape">“<span  class="quote">\</span>”</a>
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped ASCII back slash (<strong  class="userinput"><code>#x5C</code></strong>).
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[55]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-next-line</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">N</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped Unicode next line (<strong  class="userinput"><code>#x85</code></strong>) character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[56]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-non-breaking-space</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                “<span  class="quote">_</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped Unicode non-breaking space (<strong  class="userinput"><code>#xA0</code></strong>)
          character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[57]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-line-separator</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                “<span  class="quote">L</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped Unicode line separator (<strong  class="userinput"><code>#x2028</code></strong>)
          character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[58]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-paragraph-separator</td><td  valign="top"
 align="center"  class="productionseperator"><code>::=</code></td><td  valign="top"
 class="productionrhs">
                “<span  class="quote">P</span>”
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped Unicode paragraph separator (<strong  class="userinput"><code>#x2029</code></strong>)
          character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[59]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-8-bit</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">x</span>”<br />
                ( <a  href="#ns-hex-digit">ns-hex-digit</a> × 2 )
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped 8-bit Unicode character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[60]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-16-bit</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">u</span>”<br />
                ( <a  href="#ns-hex-digit">ns-hex-digit</a> × 4 )
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped 16-bit Unicode character.
        </td>
            </tr>
          </tbody></table>
          <table  border="0"  summary="Simple list"  class="simplelist">
            <tbody><tr>
              <td  width="50%">
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset"><tbody><tr><td><table
 width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"  class="productionset"><tbody><tr><td
 valign="top"  align="left"  class="productioncounter">[61]</td><td  valign="top"
 align="right"  class="productionlhs">ns-esc-32-bit</td><td  valign="top"  align="center"
 class="productionseperator"><code>::=</code></td><td  valign="top"  class="productionrhs">
                “<span  class="quote">U</span>”<br />
                ( <a  href="#ns-hex-digit">ns-hex-digit</a> × 8 )
              </td><td  class="productioncomment"> <br /></td></tr></tbody></table></td></tr></tbody></table>
        </td>
              <td  width="50%">
          Escaped 32-bit Unicode character.
        </td>
            </tr>
          </tbody></table>
          <p>
        Any escaped character:
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[62]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-ns-esc-char</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#c-escape">“<span  class="quote">\</span>”</a><br />
            ( <a  href="#ns-esc-null">ns-esc-null</a>
            | <a  href="#ns-esc-bell">ns-esc-bell</a>
            | <a  href="#ns-esc-backspace">ns-esc-backspace</a><br />
            | <a  href="#ns-esc-horizontal-tab">ns-esc-horizontal-tab</a>
            | <a  href="#ns-esc-line-feed">ns-esc-line-feed</a><br />
            | <a  href="#ns-esc-vertical-tab">ns-esc-vertical-tab</a>
            | <a  href="#ns-esc-form-feed">ns-esc-form-feed</a><br />
            | <a  href="#ns-esc-carriage-return">ns-esc-carriage-return</a>
            | <a  href="#ns-esc-escape">ns-esc-escape</a>
            | <a  href="#ns-esc-space">ns-esc-space</a><br />
            | <a  href="#ns-esc-double-quote">ns-esc-double-quote</a>
            | <a  href="#ns-esc-slash">ns-esc-slash</a>
            | <a  href="#ns-esc-backslash">ns-esc-backslash</a><br />
            | <a  href="#ns-esc-next-line">ns-esc-next-line</a>
            | <a  href="#ns-esc-non-breaking-space">ns-esc-non-breaking-space</a><br />
            | <a  href="#ns-esc-line-separator">ns-esc-line-separator</a>
            | <a  href="#ns-esc-paragraph-separator">ns-esc-paragraph-separator</a><br />
            | <a  href="#ns-esc-8-bit">ns-esc-8-bit</a>
            | <a  href="#ns-esc-16-bit">ns-esc-16-bit</a>
            | <a  href="#ns-esc-32-bit">ns-esc-32-bit</a> )<br />
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.13. Escaped Characters</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">"Fun with <code  class="filename">\\</code><br /><code
 class="filename">\"</code> <code  class="filename">\a</code> <code  class="filename">\b</code> <code
 class="filename">\e</code> <code  class="filename">\f</code> <code  class="filename">\↓</code>
<code  class="filename">\n</code> <code  class="filename">\r</code> <code  class="filename">\t</code> <code
 class="filename">\v</code> <code  class="filename">\0</code> <code  class="filename">\↓</code>
<code  class="filename">\ </code> <code  class="filename">\_</code> <code  class="filename">\N</code> <code
 class="filename">\L</code> <code  class="filename">\P</code> <code  class="filename">\↓</code>
<code  class="filename">\x41</code> <code  class="filename">\u0041</code> <code
 class="filename">\U00000041</code>"
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-ns-esc-char"  class="link">c-ns-esc-char</a></code>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
"Fun with \x5C
\x22 \x07 \x08 \x1B \x0C
\x0A \x0D \x09 \x0B \x00
\x20 \xA0 \x85 \u2028 \u2029
A A A"
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <div  class="example">
            
            <p  class="title">
              <b>Example 5.14. Invalid Escaped Characters</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="screen"><span  class="database">Bad escapes:<br />  "\<code  class="filename">c</code>
  \x<code  class="literal">q-</code>"
</span></pre>
            </td>
                  <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />- <code  class="filename">c</code> is an invalid escaped character.
- <code  class="literal">q</code> and <code  class="literal">-</code> are invalid hex digits.
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Chapter 6. Basic Structures</h2>
            </div>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.1. Indentation Spaces</h2>
              </div>
            </div>
          </div>
          <p>
        In YAML <a  href="#style/block/"  class="link">block
        styles</a>, structure is determined by <em  class="firstterm">indentation</em>. In general, indentation
        is defined as a zero or more <a  href="#space//"  class="link">space</a>
        characters at the start of a line.
      </p>
          <p>
        To maintain portability, <a  href="#tab//"  class="link">tab</a>
        characters must not be used in indentation, since different systems
        treat <a  href="#tab//"  class="link">tabs</a> differently. Note that most
        modern editors may be configured so that pressing the <a  href="#tab//"
 class="link">tab</a> key results in the insertion of an
        appropriate number of <a  href="#space//"  class="link">spaces</a>.
      </p>
          <p>
        The amount of indentation is a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be used
        to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[63]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-indent(n)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-space">s-space</a> × n
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        A <a  href="#style/block/"  class="link">block style</a>
        construct is terminated when encountering a line which is less indented
        than the construct. The productions use the notation
        “<span  class="quote"><strong  class="userinput"><code>s-indent(<n)<  code=""></n)<></code></strong></span><code>” and “<span
 class="quote"><strong  class="userinput"><code>s-indent(≤n)</code></strong></span>”
        to express this.
      </code></p><code>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[64]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-indent(<n)<
 td="">
                    </n)<></td><td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-space">s-space</a> × <code  class="varname">m</code>
            /* Where <code  class="varname">m</code> < <code  class="varname">n</code> */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[65]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-indent(≤n)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-space">s-space</a> × <code  class="varname">m</code>
            /* Where <code  class="varname">m</code> ≤ <code  class="varname">n</code> */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        Each <a  href="#node//"  class="link">node</a> must be indented further
        than its parent <a  href="#node//"  class="link">node</a>. All sibling
        <a  href="#node//"  class="link">nodes</a> must use the exact same
        indentation level. However the <a  href="#content//"  class="link">content</a> of each sibling <a
 href="#node//"  class="link">node</a> may be further indented independently.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.1. Indentation Spaces</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><span  class="property">··</span># Leading comment line spaces are<br /><span
 class="property">···</span># neither content nor indentation.
<span  class="property">····</span>
Not indented:
<code  class="filename">·</code>By one space: |
<code  class="filename">····</code>By four
<code  class="filename">····</code><code  class="literal">··</code>spaces
<code  class="filename">·</code>Flow style: [    # Leading spaces
<code  class="filename">··</code><span  class="property">·</span>By two,        # in flow style
<code  class="filename">··</code>Also by two,    # are neither
<code  class="filename">··</code>→Still by two   # content nor
<code  class="filename">··</code><span  class="property">··</span>]             # indentation.
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></code> <code
 class="literal">Content</code>
  <span  class="property">Neither content nor indentation</span>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />- - -
!!map {
  ? !!str "Not indented"
  : !!map {
      ? !!str "By one space"
      : !!str "By four\n  spaces\n",
      ? !!str "Flow style"
      : !!seq [
          !!str "By two",
          !!str "Also by two",
          !!str "Still by two",
        ]
    }
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        The <a  href="#-%20block%20sequence%20entry//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>-</code></strong></span>”</a>, <a  href="#?%20mapping%20key//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>”</a> and <a
 href="#:%20mapping%20value//"  class="link">“<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>”</a> characters used to denote <a
 href="#style/block/collection"  class="link">block
        collection</a> entries are perceived by people to be part of the
        indentation. This is handled on a case-by-case basis by the relevant
        productions.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.2. Indentation Indicators</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><span  class="honorific"><code
 class="filename"><span  class="property">?</span></code></span>·a<br /><span  class="honorific"><code
 class="filename"><span  class="property">:</span><code  class="literal">·</code><span
 class="property">-</span></code></span>→b
<span  class="honorific"><code  class="filename"><code  class="literal">··</code><span
 class="property">-</span><code  class="literal">··</code><span  class="property">-</span></code></span>→c
<span  class="honorific"><code  class="filename"><code  class="literal">·····</code><span
 class="property">-</span></code></span>·d
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename">Total Indentation</code>
  <code  class="literal"><a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></code> <span
 class="property">Indicator as indentation</span>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "a"
  : !!seq [
    !!str "b",
    !!seq [ !!str "c", !!str "d" ]
  ],
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </code></div><code>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.2. Separation Spaces</h2>
              </div>
            </div>
          </div>
          <p>
        Outside <a  href="#space/indentation/"  class="link">indentation</a> and <a
 href="#scalar//"  class="link">scalar content</a>, YAML uses <a  href="#space/white/"
 class="link">white space</a> characters for
        <em  class="firstterm">separation</em>
        between tokens within a line. Note that such <a  href="#space/white/"  class="link">white space</a> may safely include <a
 href="#tab//"  class="link">tab</a> characters.
      </p>
          <p>
        Separation spaces are a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be used
        to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[66]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-separate-in-line</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#s-white">s-white</a>+ | /* Start of line */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.3. Separation Spaces</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">-<code  class="filename">·</code>foo:<code
 class="filename">→·</code>bar<br />- -<code  class="filename">·</code>baz
  -<code  class="filename">→</code>baz
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-separate-in-line"  class="link">s-separate-in-line</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!map {
    ? !!str "foo" : !!str "bar",
  },
  !!seq [ !!str "baz", !!str "baz" ],
]
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.3. Line Prefixes</h2>
              </div>
            </div>
          </div>
          <p>
        Inside <a  href="#scalar//"  class="link">scalar content</a>, each line
        begins with a non-<a  href="#content//"  class="link">content</a> <em  class="firstterm">line prefix</em>. This prefix always
        includes the <a  href="#space/indentation/"  class="link">indentation</a>. For <a
 href="#style/flow/scalar"  class="link">flow scalar
        styles</a> it additionally includes all leading <a  href="#space/white/"
 class="link">white space</a>, which may
        contain <a  href="#tab//"  class="link">tab</a> characters.
      </p>
          <p>
        Line prefixes are a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be used
        to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[67]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-line-prefix(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <code  class="varname">c</code> = block-out ⇒
            <a  href="#s-block-line-prefix%28n%29">s-block-line-prefix(n)</a><br />
            <code  class="varname">c</code> = block-in  ⇒
            <a  href="#s-block-line-prefix%28n%29">s-block-line-prefix(n)</a><br />
            <code  class="varname">c</code> = flow-out  ⇒
            <a  href="#s-flow-line-prefix%28n%29">s-flow-line-prefix(n)</a><br />
            <code  class="varname">c</code> = flow-in   ⇒
            <a  href="#s-flow-line-prefix%28n%29">s-flow-line-prefix(n)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[68]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-block-line-prefix(n)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-indent%28n%29">s-indent(n)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[69]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-flow-line-prefix(n)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-indent%28n%29">s-indent(n)</a>
            <a  href="#s-separate-in-line">s-separate-in-line</a>?
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.4. Line Prefixes</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">plain: text<br /><span  class="honorific"><code
 class="filename"><span  class="property">·</span>·</code></span>lines
quoted: "text
<span  class="honorific"><code  class="filename"><span  class="property">·</span>·→</code></span>lines"
block: |
<span  class="honorific"><code  class="literal"><span  class="property">··</span></code></span>text
<span  class="honorific"><code  class="literal"><span  class="property">··</span></code></span>·→lines
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-flow-line-prefix%28n%29"  class="link">s-flow-line-prefix(n)</a></code> <code
 class="literal"><a  href="#s-block-line-prefix%28n%29"  class="link">s-block-line-prefix(n)</a></code> <span
 class="property"><a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></span>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "plain"
  : !!str "text lines",
  ? !!str "quoted"
  : !!str "text lines",
  ? !!str "block"
  : !!str "text\n·→lines\n",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.4. Empty Lines</h2>
              </div>
            </div>
          </div>
          <p>
        An <em  class="firstterm">empty line</em> line consists of
        the non-<a  href="#content//"  class="link">content</a> <a  href="#line%20prefix//"
 class="link">prefix</a> followed by a <a  href="#line%20break//"  class="link">line break</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[70]</td>
                    <td  valign="top"  align="right"  class="productionlhs">l-empty(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            ( <a  href="#s-line-prefix%28n,c%29">s-line-prefix(n,c)</a>
            | <a  href="#s-indent%28n%29">s-indent(<n)<  a=""> )<br />
            </n)<></a><a  href="#b-as-line-feed">b-as-line-feed</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        The semantics of empty lines depend on the <a  href="#style/scalar/"  class="link">scalar style</a> they appear in. This is
        handled on a case-by-case basis by the relevant productions.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.5. Empty Lines</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">Folding:<br />  "Empty line
<code  class="filename">···→</code>
  as a line feed"
Chomping: |
  Clipped empty lines
<code  class="filename">·</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#l-empty%28n,c%29"  class="link">l-empty(n,c)</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "Folding"
  : !!str "Empty line\nas a line feed",
  ? !!str "Chomping"
  : !!str "Clipped empty lines\n",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.5. Line Folding</h2>
              </div>
            </div>
          </div>
          <p>
        <em  class="firstterm">Line folding</em> allows long
        lines to be broken for readability, while retaining the semantics of
        the original long line. If a <a  href="#line%20break//"  class="link">line
        break</a> is followed by an <a  href="#empty%20line//"  class="link">empty
        line</a>, it is <em  class="firstterm">trimmed</em>;
        the first <a  href="#line%20break//"  class="link">line break</a> is
        discarded and the rest are retained as <a  href="#content//"  class="link">content</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[71]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-l-trimmed(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-non-content">b-non-content</a>
            <a  href="#l-empty%28n,c%29">l-empty(n,c)</a>+
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        Otherwise (the following line is not <a  href="#empty%20line//"  class="link">empty</a>), the <a
 href="#line%20break//"  class="link">line
        break</a> is converted to a single <a  href="#space//"  class="link">space</a> (<strong
 class="userinput"><code>#x20</code></strong>).
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[72]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-as-space</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-break">b-break</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        A folded non-<a  href="#empty%20line//"  class="link">empty line</a> may end
        with either of the above <a  href="#line%20break//"  class="link">line
        breaks</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[73]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-l-folded(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-l-trimmed%28n,c%29">b-l-trimmed(n,c)</a>
            | <a  href="#b-as-space">b-as-space</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.6. Line Folding</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">>-<br />  trimmed<code  class="filename">↓
··↓
·↓
↓</code>
  as<code  class="literal">↓</code>
  space
</span></pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "trimmed\n\n\nas space"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#b-l-trimmed%28n,c%29"  class="link">b-l-trimmed(n,c)</a></code>
   <code  class="literal"><a  href="#b-as-space"  class="link">b-as-space</a></code>
</pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        The above rules are common to both the <a  href="#style/block/folded"  class="link">folded block style</a> and
        the <a  href="#style/flow/scalar"  class="link">scalar
        flow styles</a>. Folding does distinguish between these cases in
        the following way:
      </p>
          <div  class="variablelist">
            <dl>
              <dt>
                <span  class="term">Block Folding</span>
              </dt>
              <dd>
                <p>
              In the <a  href="#style/block/folded"  class="link">folded block style</a>, the final
              <a  href="#line%20break//"  class="link">line break</a> and trailing
              <a  href="#empty%20line//"  class="link">empty lines</a> are subject
              to <a  href="#chomping//"  class="link">chomping</a>, and are never
              folded. In addition, folding does not apply to <a  href="#line%20break//"
 class="link">line breaks</a> surrounding text lines
              that contain leading <a  href="#space/white/"  class="link">white space</a>. Note that such a
              <a  href="#more-indented//"  class="link">more-indented</a> line may
              consist only of such leading <a  href="#space/white/"  class="link">white space</a>.
            </p>
                <p>
              The combined effect of the <em  class="firstterm">block line folding</em> rules is that each
              “<span  class="quote">paragraph</span>” is interpreted as a line, <a
 href="#empty%20line//"  class="link">empty lines</a> are interpreted as a
              line feed, and the formatting of <a  href="#more-indented//"  class="link">more-indented</a> lines is
              preserved.
            </p>
              </dd>
            </dl>
          </div>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.7. Block Folding</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">><br /><code  class="literal">··</code>foo<span
 class="property">·</span><code  class="filename">↓</code>
<code  class="filename">·↓</code>
<code  class="literal">··</code><span  class="property">→·</span>bar<code  class="filename">↓</code>
<code  class="filename">↓</code>
<code  class="literal">··</code>baz↓
</span></pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />--- !!str
"foo \n\n\t bar\n\nbaz\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#b-l-folded%28n,c%29"  class="link">b-l-folded(n,c)</a></code>
   <code  class="literal">Non-content spaces</code> <span  class="property">Content spaces</span>
</pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <div  class="variablelist">
            <dl>
              <dt>
                <span  class="term">Flow Folding</span>
              </dt>
              <dd>
                <p>
              Folding in <a  href="#style/flow/"  class="link">flow
              styles</a> provides more relaxed semantics. <a  href="#style/flow/"
 class="link">Flow styles</a> typically
              depend on explicit <a  href="#indicator//"  class="link">indicators</a> rather than <a
 href="#space/indentation/"  class="link">indentation</a> to
              convey structure. Hence spaces preceding or following the text in
              a line are a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be
              used to convey <a  href="#content//"  class="link">content</a>
              information. Once all such spaces have been discarded, all
              <a  href="#line%20break//"  class="link">line breaks</a> are folded,
              without exception.
            </p>
                <p>
              The combined effect of the <em  class="firstterm">flow line folding</em> rules is that each
              “<span  class="quote">paragraph</span>” is interpreted as a line, <a
 href="#empty%20line//"  class="link">empty lines</a> are interpreted as
              line feeds, and text can be freely <a  href="#more-indented//"  class="link">more-indented</a> without affecting
              the <a  href="#content//"  class="link">content</a> information.
            </p>
              </dd>
            </dl>
          </div>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[74]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-flow-folded(n)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-separate-in-line">s-separate-in-line</a>?
            <a  href="#b-l-folded%28n,c%29">b-l-folded(n,flow-in)</a><br />
            <a  href="#s-flow-line-prefix%28n%29">s-flow-line-prefix(n)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.8. Flow Folding</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">"<span  class="honorific"><code
 class="filename">↓<br /><code  class="literal">··</code></code></span>foo<span
 class="honorific"><code  class="filename"><code  class="literal">·</code>↓
<code  class="literal">·</code>↓
<code  class="literal">··→·</code></code></span>bar<span  class="honorific"><code
 class="filename">↓
↓
<code  class="literal">··</code></code></span>baz<code  class="filename">↓
</code>"
</span></pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />--- !!str
" foo\nbar\nbaz "
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#s-flow-folded%28n%29"  class="link">s-flow-folded(n)</a></code>
   <code  class="literal">Non-content spaces</code>
</pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.6. Comments</h2>
              </div>
            </div>
          </div>
          <p>
        An explicit <em  class="firstterm">comment</em> is marked by a
        <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>#</code></strong></span>” indicator</em>.
        Comments are a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be used
        to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <p>
        Comments must be <a  href="#space/separation/"  class="link">separated</a> from other tokens by
        <a  href="#space/white/"  class="link">white space</a>
        characters. To ensure <a  href="#JSON%20compatibility//"  class="link">JSON
        compatibility</a>, YAML <a  href="#processor//"  class="link">processors</a> must allow for the omission of
        the final comment <a  href="#line%20break//"  class="link">line break</a> of
        the input <a  href="#stream//"  class="link">stream</a>. However, as this
        confuses many tools, YAML <a  href="#processor//"  class="link">processors</a> should terminate the <a
 href="#stream//"  class="link">stream</a> with an explicit <a  href="#line%20break//"
 class="link">line break</a> on output.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[75]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-nb-comment-text</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#c-comment">“<span  class="quote">#</span>”</a>
            <a  href="#nb-char">nb-char</a>*
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[76]</td>
                    <td  valign="top"  align="right"  class="productionlhs">b-comment</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#b-non-content">b-non-content</a> | /* End of file */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[77]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-b-comment</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            ( <a  href="#s-separate-in-line">s-separate-in-line</a>
            <a  href="#c-nb-comment-text">c-nb-comment-text</a>? )?<br />
            <a  href="#b-comment">b-comment</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.9. Separated Comment</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">key:<span  class="honorific"><span
 class="property">····<code  class="filename"># Comment</code><code  class="literal">↓</code></span></span><br />  value<span
 class="honorific"><span  class="property"><code  class="literal"><span  class="emphasis"><em>eof</em></span></code></span></span>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-nb-comment-text"  class="link">c-nb-comment-text</a></code> <code
 class="literal"><a  href="#b-comment"  class="link">b-comment</a></code>
  <span  class="property"><a  href="#s-b-comment"  class="link">s-b-comment</a></span>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "key"
  : !!str "value",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        Outside <a  href="#scalar//"  class="link">scalar content</a>, comments
        may appear on a line of their own, independent of the <a  href="#space/indentation/"
 class="link">indentation</a> level.
        Note that outside <a  href="#scalar//"  class="link">scalar content</a>, a
        line containing only <a  href="#space/white/"  class="link">white
        space</a> characters is taken to be a comment line.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[78]</td>
                    <td  valign="top"  align="right"  class="productionlhs">l-comment</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#s-separate-in-line">s-separate-in-line</a>
            <a  href="#c-nb-comment-text">c-nb-comment-text</a>?
            <a  href="#b-comment">b-comment</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.10. Comment Lines</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><span  class="honorific"><code
 class="literal">··<code  class="filename"># Comment↓</code></code></span><br /><span
 class="honorific"><code  class="literal">···<code  class="filename">↓</code></code></span>
<span  class="honorific"><code  class="literal"><code  class="filename">↓</code></code></span>
</span></pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"># This stream contains no<br /># documents, only comments.
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#s-b-comment"  class="link">s-b-comment</a></code> <code
 class="literal"><a  href="#l-comment"  class="link">l-comment</a></code>
</pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        In most cases, when a line may end with a comment, YAML allows it to be
        followed by additional comment lines. The only exception is a comment
        ending a <a  href="#block%20scalar%20header//"  class="link">block scalar
        header</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[79]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-l-comments</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            ( <a  href="#s-b-comment">s-b-comment</a> | /* Start of line */ )<br />
            <a  href="#l-comment">l-comment</a>*
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.11. Multi-Line Comments</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">key:<span  class="honorific"><span
 class="property"><code  class="filename">····# Comment↓</code><br /><code  class="literal">········# lines↓</code></span></span>
  value<span  class="honorific"><span  class="property"><code  class="filename">↓</code>
<code  class="literal">↓</code></span></span>
</span></pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "key"
  : !!str "value",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
              <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-b-comment"  class="link">s-b-comment</a></code> <code
 class="literal"><a  href="#l-comment"  class="link">l-comment</a></code> <span
 class="property"><a  href="#s-l-comments"  class="link">s-l-comments</a></span>
</pre>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.7. Separation Lines</h2>
              </div>
            </div>
          </div>
          <p>
        <a  href="#key/implicit/"  class="link">Implicit keys</a> are
        restricted to a single line. In all other cases, YAML allows tokens to
        be separated by multi-line (possibly empty) <a  href="#comment//"  class="link">comments</a>.
      </p>
          <p>
        Note that structures following multi-line comment separation must be
        properly <a  href="#space/indentation/"  class="link">indented</a>, even though there is no
        such restriction on the separation <a  href="#comment//"  class="link">comment</a> lines themselves.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[80]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-separate(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <code  class="varname">c</code> = block-out ⇒
            <a  href="#s-separate-lines%28n%29">s-separate-lines(n)</a><br />
            <code  class="varname">c</code> = block-in  ⇒
            <a  href="#s-separate-lines%28n%29">s-separate-lines(n)</a><br />
            <code  class="varname">c</code> = flow-out  ⇒
            <a  href="#s-separate-lines%28n%29">s-separate-lines(n)</a><br />
            <code  class="varname">c</code> = flow-in   ⇒
            <a  href="#s-separate-lines%28n%29">s-separate-lines(n)</a><br />
            <code  class="varname">c</code> = block-key ⇒
            <a  href="#s-separate-in-line">s-separate-in-line</a><br />
            <code  class="varname">c</code> = flow-key  ⇒
            <a  href="#s-separate-in-line">s-separate-in-line</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[81]</td>
                    <td  valign="top"  align="right"  class="productionlhs">s-separate-lines(n)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              ( <a  href="#s-l-comments">s-l-comments</a>
            <a  href="#s-flow-line-prefix%28n%29">s-flow-line-prefix(n)</a> )<br />
            | <a  href="#s-separate-in-line">s-separate-in-line</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.12. Separation Spaces</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">{<code  class="filename">·</code>first:<code
 class="filename">·</code>Sammy,<code  class="filename">·</code>last:<code  class="filename">·</code>Sosa<code
 class="filename">·</code>}:<span  class="honorific"><code  class="literal">↓<br /># Statistics:
<span  class="property">··</span></code></span>hr:<span  class="honorific"><code
 class="literal">··# Home runs
<span  class="property">···</span>··</code></span>65
<span  class="property">··</span>avg:<span  class="honorific"><code  class="literal">·# Average
<span  class="property">···</span></code></span>0.278
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-separate-in-line"  class="link">s-separate-in-line</a></code>
  <code  class="literal"><a  href="#s-separate-lines%28n%29"  class="link">s-separate-lines(n)</a></code>
  <span  class="property"><a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></span>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!map {
    ? !!str "first"
    : !!str "Sammy",
    ? !!str "last"
    : !!str "Sosa",
  }
  : !!map {
    ? !!str "hr"
    : !!int "65",
    ? !!str "avg"
    : !!float "0.278",
  },
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.8. Directives</h2>
              </div>
            </div>
          </div>
          <p>
        <em  class="firstterm">Directives</em> are instructions to
        the YAML <a  href="#processor//"  class="link">processor</a>. This
        specification defines two directives, <a  href="#directive/YAML/"  class="link">“<span
 class="quote"><strong  class="userinput"><code>YAML</code></strong></span>”</a> and <a
 href="#directive/TAG/"  class="link">“<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>”</a>, and
        <em  class="firstterm">reserves</em>
        all other directives for future use. There is no way to define private
        directives. This is intentional.
      </p>
          <p>
        Directives are a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be used
        to convey <a  href="#content//"  class="link">content</a> information.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[82]</td>
                    <td  valign="top"  align="right"  class="productionlhs">l-directive</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#c-directive">“<span  class="quote">%</span>”</a><br />
            ( <a  href="#ns-yaml-directive">ns-yaml-directive</a><br />
            | <a  href="#ns-tag-directive">ns-tag-directive</a><br />
            | <a  href="#ns-reserved-directive">ns-reserved-directive</a> )<br />
            <a  href="#s-l-comments">s-l-comments</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        Each directive is specified on a separate non-<a  href="#space/indentation/"
 class="link">indented</a> line starting with the
        <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>%</code></strong></span>” indicator</em>,
        followed by the directive name and a list of parameters. The semantics
        of these parameters depends on the specific directive. A YAML <a  href="#processor//"
 class="link">processor</a> should ignore unknown
        directives with an appropriate warning.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[83]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-reserved-directive</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-directive-name">ns-directive-name</a><br />
            ( <a  href="#s-separate-in-line">s-separate-in-line</a>
              <a  href="#ns-directive-parameter">ns-directive-parameter</a> )*
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[84]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-directive-name</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-char">ns-char</a>+
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[85]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-directive-parameter</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-char">ns-char</a>+
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.13. Reserved Directives</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%<span  class="honorific"><code
 class="filename"><code  class="literal">FOO</code>  <span  class="property">bar</span> <span
 class="property">baz</span></code></span> # Should be ignored<br />               # with a warning.
--- "foo"
</span></pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />--- !!str
"foo"
</span></pre>
          </td>
                </tr>
              </tbody></table>
              <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-reserved-directive"  class="link">ns-reserved-directive</a></code> <code
 class="literal"><a  href="#ns-directive-name"  class="link">ns-directive-name</a></code> <span
 class="property"><a  href="#ns-directive-parameter"  class="link">ns-directive-parameter</a></span>
</pre>
            </div>
          </div>
          <br  class="example-break" />
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">6.8.1. “<span  class="quote"><strong  class="userinput"><code>YAML</code></strong></span>” Directives</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>YAML</code></strong></span>” directive</em> specifies
          the version of YAML the <a  href="#document//"  class="link">document</a> conforms to. This specification
          defines version “<span  class="quote"><strong  class="userinput"><code>1.2</code></strong></span>”, including recommendations for
          <em  class="firstterm">YAML 1.1 processing</em>.
        </p>
            <p>
          A version 1.2 YAML <a  href="#processor//"  class="link">processor</a>
          must accept <a  href="#document//"  class="link">documents</a> with an
          explicit “<span  class="quote"><strong  class="userinput"><code>%YAML 1.2</code></strong></span>” directive, as well as <a
 href="#document//"  class="link">documents</a> lacking a
          “<span  class="quote"><strong  class="userinput"><code>YAML</code></strong></span>” directive. Such <a
 href="#document//"  class="link">documents</a> are assumed to conform to the
          1.2 version specification. <a  href="#document//"  class="link">Documents</a> with a “<span
 class="quote"><strong  class="userinput"><code>YAML</code></strong></span>”
          directive specifying a higher minor version (e.g.
          “<span  class="quote"><strong  class="userinput"><code>%YAML 1.3</code></strong></span>”) should be processed with an
          appropriate warning. <a  href="#document//"  class="link">Documents</a>
          with a “<span  class="quote"><strong  class="userinput"><code>YAML</code></strong></span>” directive specifying a higher major
          version (e.g. “<span  class="quote"><strong  class="userinput"><code>%YAML 2.0</code></strong></span>”) should be rejected
          with an appropriate error message.
        </p>
            <p>
          A version 1.2 YAML <a  href="#processor//"  class="link">processor</a>
          must also accept <a  href="#document//"  class="link">documents</a> with
          an explicit “<span  class="quote"><strong  class="userinput"><code>%YAML 1.1</code></strong></span>” directive. Note that version
          1.2 is mostly a superset of version 1.1, defined for the purpose of
          ensuring <em  class="firstterm">JSON
          compatibility</em>. Hence a version 1.2 <a  href="#processor//"  class="link">processor</a> should process version 1.1
          <a  href="#document//"  class="link">documents</a> as if they were
          version 1.2, giving a warning on points of incompatibility (handling
          of <a  href="#line%20break/non-ASCII/"  class="link">non-ASCII line
          breaks</a>, as described <a  href="#non-ASCII%20line%20breaks"  class="link">above</a>).
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[86]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-yaml-directive</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              “<span  class="quote">Y</span>” “<span  class="quote">A</span>”
              “<span  class="quote">M</span>” “<span  class="quote">L</span>”<br />
              <a  href="#s-separate-in-line">s-separate-in-line</a>
              <a  href="#ns-yaml-version">ns-yaml-version</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[87]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-yaml-version</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-dec-digit">ns-dec-digit</a>+
              “<span  class="quote">.</span>”
              <a  href="#ns-dec-digit">ns-dec-digit</a>+
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.14. “<span  class="quote"><strong  class="userinput"><code>YAML</code></strong></span>” directive</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%<span  class="honorific"><code
 class="filename">YAML <code  class="literal">1.3</code></code></span> # Attempt parsing<br />           # with a warning
---
"foo"
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "foo"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#ns-yaml-directive"  class="link">ns-yaml-directive</a></code> <code
 class="literal"><a  href="#ns-yaml-version"  class="link">ns-yaml-version</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          It is an error to specify more than one “<span  class="quote"><strong
 class="userinput"><code>YAML</code></strong></span>”
          directive for the same document, even if both occurrences give the
          same version number.
        </p>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.15. Invalid Repeated YAML directive</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="screen"><span  class="database">%YAML 1.2<br />%<code  class="filename">YAML</code> 1.1
foo
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />The <code  class="filename">YAML</code> directive must only be
given at most once per document.
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">6.8.2. “<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>” Directives</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>”
          directive</em> establishes a <a  href="#tag/shorthand/"  class="link">tag shorthand</a> notation for specifying
          <a  href="#tag//"  class="link">node tags</a>. Each “<span  class="quote"><strong
 class="userinput"><code>TAG</code></strong></span>”
          directive associates a <a  href="#tag/handle/"  class="link">handle</a> with a <a
 href="#tag/prefix/"  class="link">prefix</a>. This allows for compact and
          readable <a  href="#tag//"  class="link">tag</a> notation.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[88]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-tag-directive</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              “<span  class="quote">T</span>” “<span  class="quote">A</span>” “<span
 class="quote">G</span>”<br />
              <a  href="#s-separate-in-line">s-separate-in-line</a>
              <a  href="#c-tag-handle">c-tag-handle</a><br />
              <a  href="#s-separate-in-line">s-separate-in-line</a>
              <a  href="#ns-tag-prefix">ns-tag-prefix</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.16. “<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>” directive</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%<span  class="honorific"><code
 class="filename">TAG <code  class="literal">!yaml!</code> <span  class="property">tag:yaml.org,2002:</span></code></span><br />---
!yaml!str "foo"
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "foo"
</span></pre>
            </td>
                  </tr>
                </tbody></table>
                <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-tag-directive"  class="link">ns-tag-directive</a></code> <code
 class="literal"><a  href="#c-tag-handle"  class="link">c-tag-handle</a></code> <span
 class="property"><a  href="#ns-tag-prefix"  class="link">ns-tag-prefix</a></span>
</pre>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          It is an error to specify more than one “<span  class="quote"><strong
 class="userinput"><code>TAG</code></strong></span>”
          directive for the same <a  href="#tag/handle/"  class="link">handle</a> in the same document, even if
          both occurrences give the same <a  href="#tag/prefix/"  class="link">prefix</a>.
        </p>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.17. Invalid Repeated TAG directive</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="screen"><span  class="database">%TAG ! !foo<br />%TAG <code  class="filename">!</code> !foo
bar
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />The TAG directive must only
be given at most once per
<code  class="filename">handle</code> in the same document.
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">6.8.2.1. Tag Handles</h4>
                  </div>
                </div>
              </div>
              <p>
            The <em  class="firstterm">tag handle</em>
            exactly matches the prefix of the affected <a  href="#tag/shorthand/"
 class="link">tag shorthand</a>. There are three tag
            handle variants:
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[89]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-tag-handle</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                  <a  href="#c-named-tag-handle">c-named-tag-handle</a><br />
                | <a  href="#c-secondary-tag-handle">c-secondary-tag-handle</a><br />
                | <a  href="#c-primary-tag-handle">c-primary-tag-handle</a>
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Primary Handle</span>
                  </dt>
                  <dd>
                    <p>
                  The <em  class="firstterm">primary tag handle</em> is a single
                  <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</em> character. This allows
                  using the most compact possible notation for a single
                  “<span  class="quote">primary</span>” name space. By default, the prefix
                  associated with this handle is <a  href="#%21%20tag%20indicator/%21%20local%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a>. Thus, by default, <a
 href="#tag/shorthand/"  class="link">shorthands</a>
                  using this handle are interpreted as <a  href="#tag/local/"  class="link">local tags</a>.
                </p>
                    <p>
                  It is possible to override the default behavior by providing
                  an explicit “<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>” directive, associating a
                  different prefix for this handle. This provides smooth
                  migration from using <a  href="#tag/local/"  class="link">local tags</a> to using <a
 href="#tag/global/"  class="link">global tags</a>, by
                  the simple addition of a single “<span  class="quote"><strong
 class="userinput"><code>TAG</code></strong></span>”
                  directive.
                </p>
                  </dd>
                </dl>
              </div>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[90]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-primary-tag-handle</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#c-tag">“<span  class="quote">!</span>”</a>
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 6.18. Primary Tag Handle</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database"># Private<br /><code  class="filename">!</code>foo "bar"
...
# Global
%TAG <code  class="filename">!</code> tag:example.com,2000:app/
---
<code  class="filename">!</code>foo "bar"
</span></pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!<!--foo--> "bar"
...
---
!<tag:example.com,2000:app  foo=""> "bar"
</tag:example.com,2000:app></span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-primary-tag-handle"  class="link">c-primary-tag-handle</a></code>
</pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              <br  class="example-break" />
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Secondary Handle</span>
                  </dt>
                  <dd>
                    <p>
                  The <em  class="firstterm">secondary tag handle</em> is
                  written as <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>!!</code></strong></span>”</em>. This
                  allows using a compact notation for a single
                  “<span  class="quote">secondary</span>” name space. By default, the prefix
                  associated with this handle is
                  “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:</code></strong></span>”. This prefix is used by
                  the <a  href="#tag/repository/"  class="link">YAML tag
                  repository</a>.
                </p>
                    <p>
                  It is possible to override this default behavior by providing
                  an explicit “<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>” directive associating a
                  different prefix for this handle.
                </p>
                  </dd>
                </dl>
              </div>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[91]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-secondary-tag-handle</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#c-tag">“<span  class="quote">!</span>”</a>
                <a  href="#c-tag">“<span  class="quote">!</span>”</a>
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 6.19. Secondary Tag Handle</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%TAG <code  class="filename">!!</code> tag:example.com,2000:app/<br />---
<code  class="filename">!!</code>int 1 - 3 # Interval, not integer
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-secondary-tag-handle"  class="link">c-secondary-tag-handle</a></code>
</pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!<tag:example.com,2000:app  int=""> "1 - 3"
</tag:example.com,2000:app></span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              <br  class="example-break" />
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Named Handles</span>
                  </dt>
                  <dd>
                    <p>
                  A <em  class="firstterm">named tag handle</em> surrounds a
                  non-empty name with <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>!</code></strong></span>”</em> characters. A handle
                  name must not be used in a <a  href="#tag/shorthand/"  class="link">tag shorthand</a> unless an
                  explicit “<span  class="quote"><strong  class="userinput"><code>TAG</code></strong></span>” directive has associated some
                  prefix with it.
                </p>
                    <p>
                  The name of the handle is a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not
                  be used to convey <a  href="#content//"  class="link">content</a> information. In
                  particular, the YAML <a  href="#processor//"  class="link">processor</a> need not preserve the
                  handle name once <a  href="#parse//"  class="link">parsing</a>
                  is completed.
                </p>
                  </dd>
                </dl>
              </div>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[92]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-named-tag-handle</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#c-tag">“<span  class="quote">!</span>”</a>
                <a  href="#ns-word-char">ns-word-char</a>+
                <a  href="#c-tag">“<span  class="quote">!</span>”</a>
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 6.20. Tag Handles</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%TAG <code  class="filename">!e!</code> tag:example.com,2000:app/<br />---
<code  class="filename">!e!</code>foo "bar"
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-named-tag-handle"  class="link">c-named-tag-handle</a></code>
</pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!<tag:example.com,2000:app  foo=""> "bar"
</tag:example.com,2000:app></span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">6.8.2.2. Tag Prefixes</h4>
                  </div>
                </div>
              </div>
              <p>
            There are two <em  class="firstterm">tag
            prefix</em> variants:
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[93]</td>
                        <td  valign="top"  align="right"  class="productionlhs">ns-tag-prefix</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#c-ns-local-tag-prefix">c-ns-local-tag-prefix</a>
                | <a  href="#ns-global-tag-prefix">ns-global-tag-prefix</a>
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Local Tag Prefix</span>
                  </dt>
                  <dd>
                If the prefix begins with a <a  href="#%21%20tag%20indicator/%21%20local%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a> character,
                <a  href="#tag/shorthand/"  class="link">shorthands</a> using the <a
 href="#tag/handle/"  class="link">handle</a> are expanded
                to a <a  href="#tag/local/"  class="link">local
                tag</a>. Note that such a <a  href="#tag//"  class="link">tag</a> is intentionally not a valid URI,
                and its semantics are specific to the <a  href="#application//"
 class="link">application</a>. In particular, two
                <a  href="#document//"  class="link">documents</a> in the same
                <a  href="#stream//"  class="link">stream</a> may assign different
                semantics to the same <a  href="#tag/local/"  class="link">local tag</a>.
              </dd>
                </dl>
              </div>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[94]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-ns-local-tag-prefix</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
              <a  href="#c-tag">“<span  class="quote">!</span>”</a>
                <a  href="#ns-uri-char">ns-uri-char</a>*
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 6.21. Local Tag Prefix</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%TAG !m! <code  class="filename">!my-</code><br />--- # Bulb here
!m!light fluorescent
...
%TAG !m! <code  class="filename">!my-</code>
--- # Color here
!m!light green
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-ns-local-tag-prefix"  class="link">c-ns-local-tag-prefix</a></code>
</pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!<!--my-light--> "fluorescent"
...
%YAML 1.2
---
!<!--my-light--> "green"
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              <br  class="example-break" />
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Global Tag Prefix</span>
                  </dt>
                  <dd>
                If the prefix begins with a character other than <a  href="#%21%20tag%20indicator/%21%20local%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a>, it must to be a valid URI
                prefix, and should contain at least the scheme and the
                authority. <a  href="#tag/shorthand/"  class="link">Shorthands</a> using the associated
                <a  href="#tag/handle/"  class="link">handle</a> are
                expanded to globally unique URI tags, and their semantics is
                consistent across <a  href="#application//"  class="link">applications</a>. In particular,
                every <a  href="#document//"  class="link">documents</a> in every
                <a  href="#stream//"  class="link">stream</a> must assign the same
                semantics to the same <a  href="#tag/global/"  class="link">global tag</a>.
              </dd>
                </dl>
              </div>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[95]</td>
                        <td  valign="top"  align="right"  class="productionlhs">ns-global-tag-prefix</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#ns-tag-char">ns-tag-char</a>
                <a  href="#ns-uri-char">ns-uri-char</a>*
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 6.22. Global Tag Prefix</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%TAG !e! <code  class="filename">tag:example.com,2000:app/</code><br />---
- !e!foo "bar"
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-global-tag-prefix"  class="link">ns-global-tag-prefix</a></code>
</pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!<tag:example.com,2000:app  foo=""> "bar"
</tag:example.com,2000:app></span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">6.9. Node Properties</h2>
              </div>
            </div>
          </div>
          <p>
        Each <a  href="#node//"  class="link">node</a> may have two optional
        <em  class="firstterm">properties</em>,
        <a  href="#anchor//"  class="link">anchor</a> and <a  href="#tag//"  class="link">tag</a>, in addition to its <a
 href="#content//"  class="link">content</a>. Node properties may be specified
        in any order before the <a  href="#content//"  class="link">node’s
        content</a>. Either or both may be omitted.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[96]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-ns-properties(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              ( <a  href="#c-ns-tag-property">c-ns-tag-property</a><br />
                (
            <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>
            <a  href="#c-ns-anchor-property">c-ns-anchor-property</a> )? )<br />
            | ( <a  href="#c-ns-anchor-property">c-ns-anchor-property</a><br />
                (
            <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>
            <a  href="#c-ns-tag-property">c-ns-tag-property</a> )? )
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 6.23. Node Properties</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><span  class="honorific"><code
 class="filename"><span  class="property">!!str</span> <code  class="literal">&a1</code></code></span> "foo":<br />  <span
 class="honorific"><code  class="filename"><span  class="property">!!str</span></code></span> bar
<span  class="honorific"><code  class="filename"><code  class="literal">&a2</code></code></span> baz : *a1
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-ns-properties%28n,c%29"  class="link">c-ns-properties(n,c)</a></code>
  <code  class="literal"><a  href="#c-ns-anchor-property"  class="link">c-ns-anchor-property</a></code>
  <span  class="property"><a  href="#c-ns-tag-property"  class="link">c-ns-tag-property</a></span>
</pre>
        </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? &B1 !!str "foo"
  : !!str "bar",
  ? !!str "baz"
  : *B1,
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">6.9.1. Node Tags</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">tag
          property</em> identifies the type of the <a  href="#native%20data%20structure//"
 class="link">native data structure</a>
          <a  href="#present//"  class="link">presented</a> by the <a  href="#node//"
 class="link">node</a>. A tag is denoted by the <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>!</code></strong></span>” indicator</em>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[97]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-tag-property</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                <a  href="#c-verbatim-tag">c-verbatim-tag</a><br />
              | <a  href="#c-ns-shorthand-tag">c-ns-shorthand-tag</a><br />
              | <a  href="#c-non-specific-tag">c-non-specific-tag</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="variablelist">
              <dl>
                <dt>
                  <span  class="term">Verbatim Tags</span>
                </dt>
                <dd>
              A tag may be written <em  class="firstterm">verbatim</em> by surrounding it with
              the <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code><</code></strong></span>” and “<span
 class="quote"><strong  class="userinput"><code>></code></strong></span>”</em>
              characters. In this case, the YAML <a  href="#processor//"  class="link">processor</a> must deliver the verbatim
              tag as-is to the <a  href="#application//"  class="link">application</a>. In particular,
              verbatim tags are not subject to <a  href="#tag/resolution/"  class="link">tag resolution</a>. A verbatim tag
              must either begin with a <a  href="#%21%20tag%20indicator/%21%20local%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a> (a <a
 href="#tag/local/"  class="link">local tag</a>) or be a
              valid URI (a <a  href="#tag/global/"  class="link">global
              tag</a>).
            </dd>
              </dl>
            </div>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[98]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-verbatim-tag</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-tag">“<span  class="quote">!</span>”</a>
              “<span  class="quote"><</span>”
              <a  href="#ns-uri-char">ns-uri-char</a>+
              “<span  class="quote">></span>”
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.24. Verbatim Tags</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">!<tag:yaml.org,2002:str></tag:yaml.org,2002:str></code> foo :<br />  <code
 class="filename">!<!--bar--></code> baz
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-verbatim-tag"  class="link">c-verbatim-tag</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !<tag:yaml.org,2002:str> "foo"
  : !<!--bar--> "baz",
}
</tag:yaml.org,2002:str></span></pre>
          </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.25. Invalid Verbatim Tags</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="screen"><span  class="database">- !<<code  class="filename">!</code>> foo<br />- !<<code
 class="literal">$:?</code>> bar
</span></pre>
          </td>
                    <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />- Verbatim tags aren't resolved,
  so <code  class="filename">!</code> is invalid.
- The <code  class="literal">$:?</code> tag is neither a global
  URI tag nor a local tag starting
  with “<span  class="quote">!</span>”.
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  class="variablelist">
              <dl>
                <dt>
                  <span  class="term">Tag Shorthands</span>
                </dt>
                <dd>
                  <p>
                A <em  class="firstterm">tag
                shorthand</em> consists of a valid <a  href="#tag/handle/"  class="link">tag handle</a> followed by a non-empty
                suffix. The <a  href="#tag/handle/"  class="link">tag
                handle</a> must be associated with a <a  href="#tag/prefix/"  class="link">prefix</a>, either by
                default or by using a <a  href="#directive/TAG/"  class="link">“<span
 class="quote"><strong  class="userinput"><code>TAG</code></strong></span>” directive</a>. The
                resulting <a  href="#parse//"  class="link">parsed</a> <a  href="#tag//"
 class="link">tag</a> is the concatenation of the
                <a  href="#tag/prefix/"  class="link">prefix</a> and
                the suffix, and must either begin with <a  href="#%21%20tag%20indicator/%21%20local%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a>
                (a <a  href="#tag/local/"  class="link">local
                tag</a>) or be a valid URI (a <a  href="#tag/global/"  class="link">global tag</a>).
              </p>
                  <p>
                The choice of <a  href="#tag/handle/"  class="link">tag
                handle</a> is a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not
                be used to convey <a  href="#content//"  class="link">content</a>
                information. In particular, the <a  href="#tag/handle/"  class="link">tag handle</a> may be discarded once
                <a  href="#parse//"  class="link">parsing</a> is completed.
              </p>
                  <p>
                The suffix must not contain any <a  href="#%21%20tag%20indicator/%21%E2%80%A6%21+named+handle/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a> character. This would
                cause the tag shorthand to be interpreted as having a <a  href="#tag/handle/named"
 class="link">named tag
                handle</a>. In addition, the suffix must not contain the
                <a  href="#[%20start%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>[</code></strong></span>”</a>, <a  href="#]%20end%20flow%20sequence//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>]</code></strong></span>”</a>, <a
 href="#%7B%20start%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>{</code></strong></span>”</a>,
                <a  href="#%7D%20end%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>}</code></strong></span>”</a> and <a  href="#,%20end%20flow%20entry//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> characters. These
                characters would cause ambiguity with <a  href="#style/flow/collection"
 class="link">flow
                collection</a> structures. If the suffix needs to specify
                any of the above restricted characters, they must be <a  href="#%%20escaping%20in%20URI//"
 class="link">escaped</a> using the
                <a  href="#%%20escaping%20in%20URI//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>%</code></strong></span>”</a> character. This behavior is
                consistent with the URI character escaping rules (specifically,
                section 2.3 of <a  target="_top"  href="http://www.ietf.org/rfc/rfc2396.txt"
 class="ulink">RFC2396</a>).
              </p>
                </dd>
              </dl>
            </div>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[99]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-shorthand-tag</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-tag-handle">c-tag-handle</a>
              <a  href="#ns-tag-char">ns-tag-char</a>+
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.26. Tag Shorthands</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%TAG !e! tag:example.com,2000:app/<br />---
- <code  class="filename">!local</code> foo
- <code  class="filename">!!str</code> bar
- <code  class="filename">!e!tag%21</code> baz
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-ns-shorthand-tag"  class="link">c-ns-shorthand-tag</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !<!--local--> "foo",
  !<tag:yaml.org,2002:str> "bar",
  !<tag:example.com,2000:app  tag!=""> "baz"
]
</tag:example.com,2000:app></tag:yaml.org,2002:str></span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.27. Invalid Tag Shorthands</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="screen"><span  class="database">%TAG !e! tag:example,2000:app/<br />---
- <code  class="filename">!e!</code> foo
- <code  class="literal">!h!</code>bar baz
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />- The <code  class="filename">!o!</code> handle has no suffix.
- The <code  class="literal">!h!</code> handle wasn't declared.
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  class="variablelist">
              <dl>
                <dt>
                  <span  class="term">Non-Specific Tags</span>
                </dt>
                <dd>
                  <p>
                If a <a  href="#node//"  class="link">node</a> has no tag
                property, it is assigned a <a  href="#tag/non-specific/"  class="link">non-specific tag</a> that needs
                to be <a  href="#tag/resolution/"  class="link">resolved</a> to a <a
 href="#tag/specific/"  class="link">specific</a> one. This
                <a  href="#tag/non-specific/"  class="link">non-specific
                tag</a> is <a  href="#%21%20tag%20indicator/%21%20non-specific%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>”</a> for
                non-<a  href="#style/flow/plain"  class="link">plain scalars</a> and <a
 href="#?%20non-specific%20tag//"  class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>”</a> for
                all other <a  href="#node//"  class="link">nodes</a>. This is the
                only case where the <a  href="#style//"  class="link">node
                style</a> has any effect on the <a  href="#content//"  class="link">content</a> information.
              </p>
                  <p>
                It is possible for the tag property to be explicitly set to the
                <a  href="#%21%20tag%20indicator/%21%20non-specific%20tag/"  class="link">“<span
 class="quote"><strong  class="userinput"><code>!</code></strong></span>” non-specific tag</a>. By <a
 href="#tag/resolution/convention"  class="link">convention</a>, this
                “<span  class="quote">disables</span>” <a  href="#tag/resolution/"
 class="link">tag resolution</a>, forcing the
                <a  href="#node//"  class="link">node</a> to be interpreted as
                “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>”,
                “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>”, or
                “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong></span>”, according to its
                <a  href="#kind//"  class="link">kind</a>.
              </p>
                  <p>
                There is no way to explicitly specify the <a  href="#?%20non-specific%20tag//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” non-specific</a>
                tag. This is intentional.
              </p>
                </dd>
              </dl>
            </div>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[100]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-non-specific-tag</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-tag">“<span  class="quote">!</span>”</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.28. Non-Specific Tags</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"># Assuming conventional resolution:<br />- "12"
- 12
- <code  class="filename">!</code> 12
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-non-specific-tag"  class="link">c-non-specific-tag</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !<tag:yaml.org,2002:str> "12",
  !<tag:yaml.org,2002:int> "12",
  !<tag:yaml.org,2002:str> "12",
]
</tag:yaml.org,2002:str></tag:yaml.org,2002:int></tag:yaml.org,2002:str></span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">6.9.2. Node Anchors</h3>
                </div>
              </div>
            </div>
            <p>
          An anchor is denoted by the <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>&</code></strong></span>” indicator</em>. It marks a
          <a  href="#node//"  class="link">node</a> for future reference. An
          <a  href="#alias//"  class="link">alias node</a> can then be used to
          indicate additional inclusions of the anchored <a  href="#node//"  class="link">node</a>. An anchored <a
 href="#node//"  class="link">node</a> need not be referenced by any <a  href="#alias//"
 class="link">alias nodes</a>; in particular, it is valid for
          all <a  href="#node//"  class="link">nodes</a> to be anchored.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[101]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-anchor-property</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-anchor">“<span  class="quote">&</span>”</a>
              <a  href="#ns-anchor-name">ns-anchor-name</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <p>
          Note that as a <a  href="#serialization/detail/"  class="link">serialization detail</a>, the anchor name is
          preserved in the <a  href="#serialization//"  class="link">serialization
          tree</a>. However, it is not reflected in the <a  href="#representation//"
 class="link">representation</a> graph and must not
          be used to convey <a  href="#content//"  class="link">content</a>
          information. In particular, the YAML <a  href="#processor//"  class="link">processor</a> need not preserve the anchor
          name once the <a  href="#representation//"  class="link">representation</a> is <a
 href="#compose//"  class="link">composed</a>.
        </p>
            <p>
          Anchor names must not contain the <a  href="#[%20start%20flow%20sequence//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>[</code></strong></span>”</a>, <a
 href="#]%20end%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>]</code></strong></span>”</a>, <a  href="#%7B%20start%20flow%20mapping//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>{</code></strong></span>”</a>, <a
 href="#%7D%20end%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>}</code></strong></span>”</a> and <a  href="#,%20end%20flow%20entry//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> characters. These
          characters would cause ambiguity with <a  href="#style/flow/collection"
 class="link">flow collection</a>
          structures.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[102]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-anchor-char</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-char">ns-char</a>
              - <a  href="#c-flow-indicator">c-flow-indicator</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[103]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-anchor-name</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-anchor-char">ns-anchor-char</a>+
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 6.29. Node Anchors</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">First occurrence: <span  class="honorific"><code
 class="filename">&<code  class="literal">anchor</code></code></span> Value<br />Second occurrence: *<code
 class="literal">anchor</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-ns-anchor-property"  class="link">c-ns-anchor-property</a></code> <code
 class="literal"><a  href="#ns-anchor-name"  class="link">ns-anchor-name</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "First occurrence"
  : &A !!str "Value",
  ? !!str "Second occurrence"
  : *A,
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
      </code></div><code>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Chapter 7. Flow Styles</h2>
            </div>
          </div>
        </div>
        <p>
      YAML’s <em  class="firstterm">flow styles</em>
      can be thought of as the natural extension of JSON to cover <a  href="#line%20folding//"
 class="link">folding</a> long content lines for
      readability, <a  href="#tag//"  class="link">tagging</a> nodes to control
      <a  href="#construct//"  class="link">construction</a> of <a  href="#native%20data%20structure//"
 class="link">native data structures</a>, and
      using <a  href="#anchor//"  class="link">anchors</a> and <a  href="#alias//"
 class="link">aliases</a> to reuse <a  href="#construct//"  class="link">constructed</a> object instances.
    </p>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">7.1. Alias Nodes</h2>
              </div>
            </div>
          </div>
          <p>
        Subsequent occurrences of a previously <a  href="#serialize//"  class="link">serialized</a> node are <a
 href="#present//"  class="link">presented</a> as <em  class="firstterm">alias
        nodes</em>. The first occurrence of the <a  href="#node//"  class="link">node</a> must be marked by an <a
 href="#anchor//"  class="link">anchor</a> to allow subsequent occurrences to be
        <a  href="#present//"  class="link">presented</a> as alias nodes.
      </p>
          <p>
        An alias node is denoted by the <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>*</code></strong></span>” indicator</em>. The alias refers to the
        most recent preceding <a  href="#node//"  class="link">node</a> having the
        same <a  href="#anchor//"  class="link">anchor</a>. It is an error for an
        alias node to use an <a  href="#anchor//"  class="link">anchor</a> that
        does not previously occur in the <a  href="#document//"  class="link">document</a>. It is not an error to specify an
        <a  href="#anchor//"  class="link">anchor</a> that is not used by any
        alias node.
      </p>
          <p>
        Note that an alias node must not specify any <a  href="#node/property/"
 class="link">properties</a> or <a  href="#content//"  class="link">content</a>, as these were already specified at the first
        occurrence of the <a  href="#node//"  class="link">node</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[104]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-ns-alias-node</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#c-alias">“<span  class="quote">*</span>”</a>
            <a  href="#ns-anchor-name">ns-anchor-name</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 7.1. Alias Nodes</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">First occurrence: &<code  class="literal">anchor</code> Foo<br />Second occurrence: <span
 class="honorific"><code  class="filename">*<code  class="literal">anchor</code></code></span>
Override anchor: &<code  class="literal">anchor</code> Bar
Reuse anchor: <span  class="honorific"><code  class="filename">*<code  class="literal">anchor</code></code></span>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-ns-alias-node"  class="link">c-ns-alias-node</a></code> <code
 class="literal"><a  href="#ns-anchor-name"  class="link">ns-anchor-name</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "First occurrence"
  : &A !!str "Foo",
  ? !!str "Override anchor"
  : &B !!str "Bar",
  ? !!str "Second occurrence"
  : *A,
  ? !!str "Reuse anchor"
  : *B,
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">7.2. Empty Nodes</h2>
              </div>
            </div>
          </div>
          <p>
        YAML allows the <a  href="#content//"  class="link">node content</a> to be
        omitted in many cases. <a  href="#node//"  class="link">Nodes</a> with
        empty <a  href="#content//"  class="link">content</a> are interpreted as
        if they were <a  href="#style/flow/plain"  class="link">plain scalars</a> with an empty value. Such
        <a  href="#node//"  class="link">nodes</a> are commonly resolved to a
        <a  href="#tag/repository/null"  class="link">“<span  class="quote"><strong
 class="userinput"><code>null</code></strong></span>”</a> value.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[105]</td>
                    <td  valign="top"  align="right"  class="productionlhs">e-scalar</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            /* Empty */
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <p>
        In the examples, empty <a  href="#scalar//"  class="link">scalars</a> are
        sometimes displayed as the glyph “<span  class="quote"><strong  class="userinput"><code>°</code></strong></span>” for clarity.
        Note that this glyph corresponds to a position in the characters
        <a  href="#stream//"  class="link">stream</a> rather than to an actual
        character.
      </p>
          <div  class="example">
            
            <p  class="title">
              <b>Example 7.2. Empty Content</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">{<br />  foo : !!str<code  class="filename">°</code>,
  !!str<code  class="filename">°</code> : bar,
}
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#e-scalar"  class="link">e-scalar</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "foo" : !!str "",
  ? !!str ""    : !!str "bar",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        Both the <a  href="#node/property/"  class="link">node’s
        properties</a> and <a  href="#content//"  class="link">node
        content</a> are optional. This allows for a <em  class="firstterm">completely empty
        node</em>. Completely empty nodes are only valid when following
        some explicit indication for their existence.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[106]</td>
                    <td  valign="top"  align="right"  class="productionlhs">e-node</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#e-scalar">e-scalar</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 7.3. Completely Empty Flow Nodes</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">{<br />  ? foo :<code  class="filename">°</code>,
  <code  class="filename">°</code>: bar,
}
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#e-node"  class="link">e-node</a></code>
</pre>
        </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "foo" : !!null "",
  ? !!null ""   : !!str "bar",
}
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">7.3. Flow Scalar Styles</h2>
              </div>
            </div>
          </div>
          <p>
        YAML provides three <em  class="firstterm">flow scalar styles</em>: <a  href="#style/flow/double-quoted"
 class="link">double-quoted</a>, <a  href="#style/flow/single-quoted"  class="link">single-quoted</a> and <a
 href="#style/flow/plain"  class="link">plain</a>
        (unquoted). Each provides a different trade-off between readability and
        expressive power.
      </p>
          <p>
        The <a  href="#style/scalar/"  class="link">scalar style</a>
        is a <a  href="#presentation/detail/"  class="link">presentation
        detail</a> and must not be used to convey <a  href="#content//"  class="link">content</a> information, with the exception
        that <a  href="#style/flow/plain"  class="link">plain
        scalars</a> are distinguished for the purpose of <a  href="#tag/resolution/"
 class="link">tag resolution</a>.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">7.3.1. Double-Quoted Style</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">double-quoted style</em> is specified
          by surrounding <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>"</code></strong></span>” indicators</em>. This is the only
          <a  href="#style//"  class="link">style</a> capable of expressing
          arbitrary strings, by using <a  href="#%5C%20escaping%20in%20double-quoted%20scalars//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>\</code></strong></span>”</a> <a
 href="#escaping/in%20double-quoted%20scalars/"  class="link">escape
          sequences</a>. This comes at the cost of having to escape the
          <a  href="#%5C%20escaping%20in%20double-quoted%20scalars//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>\</code></strong></span>”</a> and “<span
 class="quote"><strong  class="userinput"><code>"</code></strong></span>”
          characters.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[107]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-double-char</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-ns-esc-char">c-ns-esc-char</a>
              | ( <a  href="#nb-json">nb-json</a>
              - <a  href="#c-escape">“<span  class="quote">\</span>”</a>
              - <a  href="#c-double-quote">“<span  class="quote">"</span>”</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[108]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-double-char</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#nb-double-char">nb-double-char</a>
              - <a  href="#s-white">s-white</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <p>
          Double-quoted scalars are restricted to a single line when contained
          inside an <a  href="#key/implicit/"  class="link">implicit
          key</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[109]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-double-quoted(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-double-quote">“<span  class="quote">"</span>”</a>
              <a  href="#nb-double-text%28n,c%29">nb-double-text(n,c)</a>
              <a  href="#c-double-quote">“<span  class="quote">"</span>”</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[110]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-double-text(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <code  class="varname">c</code> = flow-out  ⇒
              <a  href="#nb-double-multi-line%28n%29">nb-double-multi-line(n)</a><br />
              <code  class="varname">c</code> = flow-in   ⇒
              <a  href="#nb-double-multi-line%28n%29">nb-double-multi-line(n)</a><br />
              <code  class="varname">c</code> = block-key ⇒
              <a  href="#nb-double-one-line">nb-double-one-line</a><br />
              <code  class="varname">c</code> = flow-key  ⇒
              <a  href="#nb-double-one-line">nb-double-one-line</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[111]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-double-one-line</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#nb-double-char">nb-double-char</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.4. Double Quoted Implicit Keys</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><span  class="honorific"><code
 class="literal">"<code  class="filename">implicit block key</code>"</code></span> : [<br />  <span
 class="honorific"><code  class="literal">"<code  class="filename">implicit flow key</code>"</code></span> : value,
 ]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#nb-double-one-line"  class="link">nb-double-one-line</a></code>
  <code  class="literal"><a  href="#c-double-quoted%28n,c%29"  class="link">c-double-quoted(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "implicit block key"
  : !!seq [
    !!map {
      ? !!str "implicit flow key"
      : !!str "value",
    }
  ]
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          In a multi-line double-quoted scalar, <a  href="#line%20break//"  class="link">line breaks</a> are are subject to <a
 href="#line%20folding/flow/"  class="link">flow line folding</a>,
          which discards any trailing <a  href="#space/white/"  class="link">white space</a> characters. It is also
          possible to <em  class="firstterm">escape</em> the <a  href="#line%20break//"
 class="link">line
          break</a> character. In this case, the <a  href="#line%20break//"  class="link">line break</a> is excluded from the <a
 href="#content//"  class="link">content</a>, and the trailing <a  href="#space/white/"
 class="link">white space</a> characters
          are preserved. Combined with the ability to <a  href="#escaping/in%20double-quoted%20scalars/"
 class="link">escape</a> <a  href="#space/white/"  class="link">white space</a> characters, this allows
          double-quoted lines to be broken at arbitrary positions.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[112]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-double-escaped(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-white">s-white</a>*
              <a  href="#c-escape">“<span  class="quote">\</span>”</a>
              <a  href="#b-non-content">b-non-content</a><br />
              <a  href="#l-empty%28n,c%29">l-empty(n,flow-in)</a>*
              <a  href="#s-flow-line-prefix%28n%29">s-flow-line-prefix(n)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[113]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-double-break(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-double-escaped%28n%29">s-double-escaped(n)</a>
              | <a  href="#s-flow-folded%28n%29">s-flow-folded(n)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.5. Double Quoted Line Breaks</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">"folded<code  class="filename">·↓</code><br />to a space,<code
 class="filename">→↓
·↓</code>
to a line feed, or<code  class="literal">·→\↓
·</code>\·→non-content"
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "folded to a space,\n\
      to a line feed, \
      or \t \tnon-content"
</span></pre>
            </td>
                  </tr>
                </tbody></table>
                <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-flow-folded%28n%29"  class="link">s-flow-folded(n)</a></code> <code
 class="literal"><a  href="#s-double-escaped%28n%29"  class="link">s-double-escaped(n)</a></code>
</pre>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          All leading and trailing <a  href="#space/white/"  class="link">white space</a> characters are excluded from
          the <a  href="#content//"  class="link">content</a>. Each continuation
          line must therefore contain at least one non-<a  href="#space/white/"
 class="link">space</a> character. Empty lines, if any, are
          consumed as part of the <a  href="#line%20folding//"  class="link">line
          folding</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[114]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-ns-double-in-line</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#s-white">s-white</a>*
              <a  href="#ns-double-char">ns-double-char</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[115]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-double-next-line(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-double-break%28n%29">s-double-break(n)</a><br />
              ( <a  href="#ns-double-char">ns-double-char</a>
              <a  href="#nb-ns-double-in-line">nb-ns-double-in-line</a><br />
                ( <a  href="#s-double-next-line%28n%29">s-double-next-line(n)</a>
              | <a  href="#s-white">s-white</a>* ) )?
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[116]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-double-multi-line(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#nb-ns-double-in-line">nb-ns-double-in-line</a><br />
              ( <a  href="#s-double-next-line%28n%29">s-double-next-line(n)</a>
              | <a  href="#s-white">s-white</a>* )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.6. Double Quoted Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">"<code  class="filename">·1st non-empty</code><span
 class="honorific"><code  class="literal">↓<br />↓
·<code  class="filename">2nd non-empty</code></code></span><span  class="honorific"><code
 class="literal">·
→<code  class="filename">3rd non-empty</code></code></span>·"
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str " 1st non-empty\n\
      2nd non-empty \
      3rd non-empty "
</span></pre>
            </td>
                  </tr>
                </tbody></table>
                <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#nb-ns-double-in-line"  class="link">nb-ns-double-in-line</a></code> <code
 class="literal"><a  href="#s-double-next-line%28n%29"  class="link">s-double-next-line(n)</a></code>
</pre>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">7.3.2. Single-Quoted Style</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">single-quoted style</em> is specified
          by surrounding <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>'</code></strong></span>” indicators</em>. Therefore, within a
          single-quoted scalar, such characters need to be repeated. This is
          the only form of <em  class="firstterm">escaping</em> performed in single-quoted
          scalars. In particular, the “<span  class="quote"><strong  class="userinput"><code>\</code></strong></span>” and “<span
 class="quote"><strong  class="userinput"><code>"</code></strong></span>”
          characters may be freely used. This restricts single-quoted scalars
          to <a  href="#printable%20character//"  class="link">printable</a>
          characters. In addition, it is only possible to break a long
          single-quoted line where a <a  href="#space//"  class="link">space</a>
          character is surrounded by non-<a  href="#space/white/"  class="link">spaces</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[117]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-quoted-quote</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-single-quote">“<span  class="quote">'</span>”</a>
              <a  href="#c-single-quote">“<span  class="quote">'</span>”</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[118]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-single-char</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-quoted-quote">c-quoted-quote</a>
              | ( <a  href="#nb-json">nb-json</a>
              - <a  href="#c-single-quote">“<span  class="quote">'</span>”</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[119]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-single-char</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#nb-single-char">nb-single-char</a>
              - <a  href="#s-white">s-white</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.7. Single Quoted Characters</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"> 'here<code  class="filename">''</code>s to "quotes"'</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-quoted-quote"  class="link">c-quoted-quote</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "here's to \"quotes\""
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          Single-quoted scalars are restricted to a single line when contained
          inside a <a  href="#key/implicit/"  class="link">implicit
          key</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[120]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-single-quoted(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-single-quote">“<span  class="quote">'</span>”</a>
              <a  href="#nb-single-text%28n,c%29">nb-single-text(n,c)</a>
              <a  href="#c-single-quote">“<span  class="quote">'</span>”</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[121]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-single-text(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <code  class="varname">c</code> = flow-out  ⇒
              <a  href="#nb-single-multi-line%28n%29">nb-single-multi-line(n)</a><br />
              <code  class="varname">c</code> = flow-in   ⇒
              <a  href="#nb-single-multi-line%28n%29">nb-single-multi-line(n)</a><br />
              <code  class="varname">c</code> = block-key ⇒
              <a  href="#nb-single-one-line">nb-single-one-line</a><br />
              <code  class="varname">c</code> = flow-key  ⇒
              <a  href="#nb-single-one-line">nb-single-one-line</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[122]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-single-one-line</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#nb-single-char">nb-single-char</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.8. Single Quoted Implicit Keys</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><span  class="honorific"><code
 class="literal">'<code  class="filename">implicit block key</code>'</code></span> : [<br />  <span
 class="honorific"><code  class="literal">'<code  class="filename">implicit flow key</code>'</code></span> : value,
 ]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#nb-single-one-line"  class="link">nb-single-one-line</a></code>
  <code  class="literal"><a  href="#c-single-quoted%28n,c%29"  class="link">c-single-quoted(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "implicit block key"
  : !!seq [
    !!map {
      ? !!str "implicit flow key"
      : !!str "value",
    }
  ]
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          All leading and trailing <a  href="#space/white/"  class="link">white space</a> characters are excluded from
          the <a  href="#content//"  class="link">content</a>. Each continuation
          line must therefore contain at least one non-<a  href="#space/white/"
 class="link">space</a> character. Empty lines, if any, are
          consumed as part of the <a  href="#line%20folding//"  class="link">line
          folding</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[123]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-ns-single-in-line</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#s-white">s-white</a>*
              <a  href="#ns-single-char">ns-single-char</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[124]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-single-next-line(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-flow-folded%28n%29">s-flow-folded(n)</a><br />
              ( <a  href="#ns-single-char">ns-single-char</a>
              <a  href="#nb-ns-single-in-line">nb-ns-single-in-line</a><br />
                ( <a  href="#s-single-next-line%28n%29">s-single-next-line(n)</a> |
              <a  href="#s-white">s-white</a>* ) )?
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[125]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-single-multi-line(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#nb-ns-single-in-line">nb-ns-single-in-line</a><br />
              ( <a  href="#s-single-next-line%28n%29">s-single-next-line(n)</a>
              | <a  href="#s-white">s-white</a>* )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.9. Single Quoted Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">'<code  class="filename">·1st non-empty</code><span
 class="honorific"><code  class="literal">↓<br />↓
·<code  class="filename">2nd non-empty</code></code></span><span  class="honorific"><code
 class="literal">·
→<code  class="filename">3rd non-empty</code></code></span>·'
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str " 1st non-empty\n\
      2nd non-empty \
      3rd non-empty "
</span></pre>
            </td>
                  </tr>
                </tbody></table>
                <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#nb-ns-single-in-line"  class="link">nb-ns-single-in-line(n)</a></code> <code
 class="literal"><a  href="#s-single-next-line%28n%29"  class="link">s-single-next-line(n)</a></code>
</pre>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">7.3.3. Plain Style</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">plain</em> (unquoted) style has no identifying
          <a  href="#indicator//"  class="link">indicators</a> and provides no
          form of escaping. It is therefore the most readable, most limited and
          most <a  href="#context//"  class="link">context</a> sensitive <a  href="#style//"
 class="link">style</a>. In addition to a restricted
          character set, a plain scalar must not be empty, or contain leading
          or trailing <a  href="#space/white/"  class="link">white
          space</a> characters. It is only possible to break a long plain
          line where a <a  href="#space//"  class="link">space</a> character is
          surrounded by non-<a  href="#space/white/"  class="link">spaces</a>.
        </p>
            <p>
          Plain scalars must not begin with most <a  href="#indicator//"  class="link">indicators</a>, as this would cause
          ambiguity with other YAML constructs. However, the <a  href="#:%20mapping%20value//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>”</a>, <a
 href="#?%20mapping%20key//"  class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>”</a> and <a
 href="#-%20block%20sequence%20entry//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>-</code></strong></span>”</a>
          <a  href="#indicator//"  class="link">indicators</a> may be used as the
          first character if followed by a non-<a  href="#space/white/"  class="link">space</a> “<span
 class="quote">safe</span>” character, as
          this causes no ambiguity.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[126]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-first(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                ( <a  href="#ns-char">ns-char</a>
                - <a  href="#c-indicator">c-indicator</a> )<br />
              | ( ( <a  href="#c-mapping-key">“<span  class="quote">?</span>”</a>
              | <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
              | <a  href="#c-sequence-entry">“<span  class="quote">-</span>”</a> )<br />
                  /* Followed by an
                  <a  href="#ns-plain-safe%28c%29">ns-plain-safe(c)</a>) */ )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <p>
          Plain scalars must never contain the <a  href="#:%20mapping%20value//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>: </code></strong></span>”</a> and <a
 href="##%20comment//"  class="link">“<span  class="quote"><strong  class="userinput"><code> #</code></strong></span>”</a> character combinations.
          Such combinations would cause ambiguity with <a  href="#mapping//"  class="link">mapping</a> <a
 href="#key:%20value%20pair//"  class="link">key: value pairs</a> and <a  href="#comment//"
 class="link">comments</a>. In addition, inside <a  href="#style/flow/collection"
 class="link">flow
          collections</a>, or when used as <a  href="#key/implicit/"  class="link">implicit keys</a>, plain scalars must not
          contain the <a  href="#[%20start%20flow%20sequence//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>[</code></strong></span>”</a>, <a
 href="#]%20end%20flow%20sequence//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>]</code></strong></span>”</a>, <a  href="#%7B%20start%20flow%20mapping//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>{</code></strong></span>”</a>, <a
 href="#%7D%20end%20flow%20mapping//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>}</code></strong></span>”</a> and <a  href="#,%20end%20flow%20entry//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> characters. These
          characters would cause ambiguity with <a  href="#style/flow/collection"
 class="link">flow collection</a>
          structures.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[127]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-safe(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <code  class="varname">c</code> = flow-out  ⇒ <a  href="#ns-plain-safe-out">ns-plain-safe-out</a><br />
              <code  class="varname">c</code> = flow-in   ⇒ <a  href="#ns-plain-safe-in">ns-plain-safe-in</a><br />
              <code  class="varname">c</code> = block-key ⇒ <a  href="#ns-plain-safe-out">ns-plain-safe-out</a><br />
              <code  class="varname">c</code> = flow-key  ⇒ <a  href="#ns-plain-safe-in">ns-plain-safe-in</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[128]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-safe-out</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-char">ns-char</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[129]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-safe-in</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-char">ns-char</a>
              - <a  href="#c-flow-indicator">c-flow-indicator</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[130]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-char(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                ( <a  href="#ns-plain-safe%28c%29">ns-plain-safe(c)</a>
              - <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
              - <a  href="#c-comment">“<span  class="quote">#</span>”</a> )<br />
              | ( /* An <a  href="#ns-char">ns-char</a> preceding */ <a  href="#c-comment">“<span
 class="quote">#</span>”</a> )<br />
              | ( <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
                  /* Followed by an
                  <a  href="#ns-plain-safe%28c%29">ns-plain-safe(c)</a> */ )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.10. Plain Characters</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"># Outside flow collection:<br />- <code
 class="filename">:</code><code  class="literal">:</code>vector
- "<span  class="property">:</span> - ()"
- Up<code  class="literal">,</code> up, and away!
- <code  class="filename">-</code>123
- http<code  class="literal">:</code>//example.com/foo<code  class="literal">#</code>bar
# Inside flow collection:
- [ <code  class="filename">:</code><code  class="literal">:</code>vector,
  "<span  class="property">:</span> - ()",
  "Up<code  class="constant">,</code> up and away!",
  <code  class="filename">-</code>123,
  http<code  class="literal">:</code>//example.com/foo<code  class="literal">#</code>bar ]
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!str "::vector",
  !!str ": - ()",
  !!str "Up, up, and away!",
  !!int "-123",
  !!str "http://example.com/foo#bar",
  !!seq [
    !!str "::vector",
    !!str ": - ()",
    !!str "Up, up, and away!",
    !!int "-123",
    !!str "http://example.com/foo#bar",
  ],
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
                <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-plain-first%28c%29"  class="link">ns-plain-first(c)</a></code> <span
 class="property">Not ns-plain-first(c)</span> <code  class="literal"><a  href="#ns-plain-char%28c%29"
 class="link">ns-plain-char(c)</a></code> <code  class="constant">Not ns-plain-char(c)</code>
</pre>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          Plain scalars are further restricted to a single line when contained
          inside an <a  href="#key/implicit/"  class="link">implicit
          key</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[131]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <code  class="varname">c</code> = flow-out  ⇒
                <a  href="#ns-plain-multi-line%28n,c%29">ns-plain-multi-line(n,c)</a><br />
              <code  class="varname">c</code> = flow-in   ⇒
                <a  href="#ns-plain-multi-line%28n,c%29">ns-plain-multi-line(n,c)</a><br />
              <code  class="varname">c</code> = block-key ⇒
                <a  href="#ns-plain-one-line%28c%29">ns-plain-one-line(c)</a><br />
              <code  class="varname">c</code> = flow-key  ⇒
                <a  href="#ns-plain-one-line%28c%29">ns-plain-one-line(c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[132]</td>
                      <td  valign="top"  align="right"  class="productionlhs">nb-ns-plain-in-line(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#s-white">s-white</a>*
              <a  href="#ns-plain-char%28c%29">ns-plain-char(c)</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[133]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-one-line(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-plain-first%28c%29">ns-plain-first(c)</a>
              <a  href="#nb-ns-plain-in-line%28c%29">nb-ns-plain-in-line(c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.11. Plain Implicit Keys</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">implicit block key</code> : [<br />  <code
 class="filename">implicit flow key</code> : value,
 ]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-plain-one-line%28c%29"  class="link">ns-plain-one-line(c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "implicit block key"
  : !!seq [
    !!map {
      ? !!str "implicit flow key"
      : !!str "value",
    }
  ]
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          All leading and trailing <a  href="#space/white/"  class="link">white space</a> characters are excluded from
          the <a  href="#content//"  class="link">content</a>. Each continuation
          line must therefore contain at least one non-<a  href="#space/white/"
 class="link">space</a> character. Empty lines, if any, are
          consumed as part of the <a  href="#line%20folding//"  class="link">line
          folding</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[134]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-ns-plain-next-line(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-flow-folded%28n%29">s-flow-folded(n)</a><br />
              <a  href="#ns-plain-char%28c%29">ns-plain-char(c)</a>
              <a  href="#nb-ns-plain-in-line%28c%29">nb-ns-plain-in-line(c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[135]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-plain-multi-line(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-plain-one-line%28c%29">ns-plain-one-line(c)</a><br />
              <a  href="#s-ns-plain-next-line%28n,c%29">s-ns-plain-next-line(n,c)</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.12. Plain Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">1st non-empty</code><span
 class="honorific"><code  class="literal">↓<br />↓
·<code  class="filename">2nd non-empty</code></code></span><span  class="honorific"><code
 class="literal">·
→<code  class="filename">3rd non-empty</code></code></span>
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "1st non-empty\n\
      2nd non-empty \
      3rd non-empty"
</span></pre>
            </td>
                  </tr>
                </tbody></table>
                <pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#nb-ns-plain-in-line%28c%29"  class="link">nb-ns-plain-in-line(c)</a></code> <code
 class="literal"><a  href="#s-ns-plain-next-line%28n,c%29"  class="link">s-ns-plain-next-line(n,c)</a></code>
</pre>
              </div>
            </div>
            
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">7.4. Flow Collection Styles</h2>
              </div>
            </div>
          </div>
          <p>
        A <em  class="firstterm">flow
        collection</em> may be nested within a <a  href="#style/block/collection"
 class="link">block collection</a>
        (<a  href="#context/flow-out/"  class="link"><strong  class="userinput"><code>flow-out</code></strong>
        context</a>), nested within another flow collection (<a  href="#context/flow-in/"
 class="link"><strong  class="userinput"><code>flow-in</code></strong>
        context</a>), or be a part of an <a  href="#key/implicit/"  class="link">implicit key</a> (<a
 href="#context/flow-key/"  class="link"><strong  class="userinput"><code>flow-key</code></strong> context</a>
        or <a  href="#context/block-key/"  class="link"><strong  class="userinput"><code>block-key</code></strong>
        context</a>). Flow collection entries are terminated by the
        <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”
        indicator</em>. The final “<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>” may be omitted. This
        does not cause ambiguity because flow collection entries can never be
        <a  href="#node/completely%20empty/"  class="link">completely
        empty</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[136]</td>
                    <td  valign="top"  align="right"  class="productionlhs">in-flow(c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <code  class="varname">c</code> = flow-out  ⇒ flow-in<br />
            <code  class="varname">c</code> = flow-in   ⇒ flow-in<br />
            <code  class="varname">c</code> = block-key ⇒ flow-key<br />
            <code  class="varname">c</code> = flow-key  ⇒ flow-key
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">7.4.1. Flow Sequences</h3>
                </div>
              </div>
            </div>
            <p>
          <em  class="firstterm">Flow
          sequence content</em> is denoted by surrounding <em  class="firstterm">“<span
 class="quote"><strong  class="userinput"><code>[</code></strong></span>”</em> and
          <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>]</code></strong></span>”</em>
          characters.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[137]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-flow-sequence(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-sequence-start">“<span  class="quote">[</span>”</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
              <a  href="#ns-s-flow-seq-entries%28n,c%29">ns-s-flow-seq-entries(n,</a><a
 href="#in-flow%28c%29">in-flow(c)</a><a  href="#ns-s-flow-seq-entries%28n,c%29">)</a>?
              <a  href="#c-sequence-end">“<span  class="quote">]</span>”</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <p>
          Sequence entries are separated by a <a  href="#,%20end%20flow%20entry//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> character.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[138]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-s-flow-seq-entries(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-flow-seq-entry%28n,c%29">ns-flow-seq-entry(n,c)</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
              ( <a  href="#c-collect-entry">“<span  class="quote">,</span>”</a>
                <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
                <a  href="#ns-s-flow-seq-entries%28n,c%29">ns-s-flow-seq-entries(n,c)</a>? )?
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.13. Flow Sequence</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">- <code  class="filename">[</code> <code
 class="literal">one</code>, <code  class="literal">two</code>, <code  class="filename">]</code><br />- <code
 class="filename">[</code><code  class="literal">three</code> ,<code  class="literal">four</code><code
 class="filename">]</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-sequence-start"  class="link">c-sequence-start</a></code> <code
 class="filename"><a  href="#c-sequence-end"  class="link">c-sequence-end</a></code>
  <code  class="literal"><a  href="#ns-flow-seq-entry%28n,c%29"  class="link">ns-flow-seq-entry(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!seq [
    !!str "one",
    !!str "two",
  ],
  !!seq [
    !!str "three",
    !!str "four",
  ],
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          Any <a  href="#style/flow/"  class="link">flow node</a> may
          be used as a flow sequence entry. In addition, YAML provides a
          <a  href="#style/single%20key:value%20pair%20mapping/"  class="link">compact notation</a> for the case where a flow
          sequence entry is a <a  href="#mapping//"  class="link">mapping</a> with
          a <a  href="#style/single%20key:value%20pair%20mapping/"  class="link">single key: value pair</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[139]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-seq-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-flow-pair%28n,c%29">ns-flow-pair(n,c)</a>
              | <a  href="#ns-flow-node%28n,c%29">ns-flow-node(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.14. Flow Sequence Entries</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">[<br /><code  class="filename">"double
 quoted"</code>, <code  class="filename">'single
           quoted'</code>,
<code  class="filename">plain
 text</code>, <code  class="filename">[ nested ]</code>,
<code  class="literal">single: pair</code>,
]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-flow-node%28n,c%29"  class="link">ns-flow-node(n,c)</a></code> <code
 class="literal"><a  href="#ns-flow-pair%28n,c%29"  class="link">ns-flow-pair(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!str "double quoted",
  !!str "single quoted",
  !!str "plain text",
  !!seq [
    !!str "nested",
  ],
  !!map {
    ? !!str "single"
    : !!str "pair",
  },
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">7.4.2. Flow Mappings</h3>
                </div>
              </div>
            </div>
            <p>
          <em  class="firstterm">Flow
          mappings</em> are denoted by surrounding <em  class="firstterm">“<span
 class="quote"><strong  class="userinput"><code>{</code></strong></span>”</em> and <em
 class="firstterm">“<span  class="quote"><strong  class="userinput"><code>}</code></strong></span>”</em> characters.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[140]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-flow-mapping(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-mapping-start">“<span  class="quote">{</span>”</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
              <a  href="#ns-s-flow-map-entries%28n,c%29">ns-s-flow-map-entries(n,</a><a
 href="#in-flow%28c%29">in-flow(c)</a><a  href="#ns-s-flow-map-entries%28n,c%29">)</a>?
              <a  href="#c-mapping-end">“<span  class="quote">}</span>”</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <p>
          Mapping entries are separated by a <a  href="#,%20end%20flow%20entry//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>,</code></strong></span>”</a> character.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[141]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-s-flow-map-entries(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-flow-map-entry%28n,c%29">ns-flow-map-entry(n,c)</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
                ( <a  href="#c-collect-entry">“<span  class="quote">,</span>”</a>
                  <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
                  <a  href="#ns-s-flow-map-entries%28n,c%29">ns-s-flow-map-entries(n,c)</a>? )?
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.15. Flow Mappings</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">- <code  class="filename">{</code> <code
 class="literal">one : two</code> , <code  class="literal">three: four</code> , <code
 class="filename">}</code><br />- <code  class="filename">{</code><code  class="literal">five: six</code>,<code
 class="literal">seven : eight</code><code  class="filename">}</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-mapping-start"  class="link">c-mapping-start</a></code> <code
 class="filename"><a  href="#c-mapping-end"  class="link">c-mapping-end</a></code>
  <code  class="literal"><a  href="#ns-flow-map-entry%28n,c%29"  class="link">ns-flow-map-entry(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!map {
    ? !!str "one"   : !!str "two",
    ? !!str "three" : !!str "four",
  },
  !!map {
    ? !!str "five"  : !!str "six",
    ? !!str "seven" : !!str "eight",
  },
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          If the optional <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>”
          mapping key indicator</em> is specified, the rest of the entry
          may be <a  href="#node/completely%20empty/"  class="link">completely empty</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[142]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-map-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                (
              <a  href="#c-mapping-key">“<span  class="quote">?</span>”</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a><br />
                  <a  href="#ns-flow-map-explicit-entry%28n,c%29">ns-flow-map-explicit-entry(n,c)</a> )<br />
              | <a  href="#ns-flow-map-implicit-entry%28n,c%29">ns-flow-map-implicit-entry(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[143]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-map-explicit-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                <a  href="#ns-flow-map-implicit-entry%28n,c%29">ns-flow-map-implicit-entry(n,c)</a><br />
              | ( <a  href="#e-node">e-node</a> /* Key */<br />
                  <a  href="#e-node">e-node</a> /* Value */ )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.16. Flow Mapping Entries</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">{<br />? <code  class="literal">explicit: entry</code>,
<code  class="filename">implicit: entry</code>,
?<span  class="property">°</span><span  class="property">°</span>
}
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-flow-map-explicit-entry%28n,c%29"  class="link">ns-flow-map-explicit-entry(n,c)</a></code>
  <code  class="literal"><a  href="#ns-flow-map-implicit-entry%28n,c%29"  class="link">ns-flow-map-implicit-entry(n,c)</a></code>
  <span  class="property"><a  href="#e-node"  class="link">e-node</a></span>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "explicit" : !!str "entry",
  ? !!str "implicit" : !!str "entry",
  ? !!null "" : !!null "",
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          Normally, YAML insists the <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>:</code></strong></span>” mapping value indicator</em> be
          <a  href="#space/separation/"  class="link">separated</a>
          from the <a  href="#value//"  class="link">value</a> by <a  href="#space/white/"
 class="link">white space</a>. A benefit of
          this restriction is that the “<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>” character can be used
          inside <a  href="#style/flow/plain"  class="link">plain scalars</a>, as long as it is not
          followed by <a  href="#space/white/"  class="link">white
          space</a>. This allows for unquoted URLs and timestamps. It is
          also a potential source for confusion as “<span  class="quote"><strong
 class="userinput"><code>a:1</code></strong></span>” is a
          <a  href="#style/flow/plain"  class="link">plain
          scalar</a> and not a <a  href="#key:%20value%20pair//"  class="link">key: value pair</a>.
        </p>
            <p>
          Note that the <a  href="#value//"  class="link">value</a> may be
          <a  href="#node/completely%20empty/"  class="link">completely
          empty</a> since its existence is indicated by the
          “<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>”.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[144]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-map-implicit-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                <a  href="#ns-flow-map-yaml-key-entry%28n,c%29">ns-flow-map-yaml-key-entry(n,c)</a><br />
              | <a  href="#c-ns-flow-map-empty-key-entry%28n,c%29">c-ns-flow-map-empty-key-entry(n,c)</a><br />
              | <a  href="#c-ns-flow-map-json-key-entry%28n,c%29">c-ns-flow-map-json-key-entry(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[145]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-map-yaml-key-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-flow-yaml-node%28n,c%29">ns-flow-yaml-node(n,c)</a><br />
              ( ( <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
                  <a  href="#c-ns-flow-map-separate-value%28n,c%29">c-ns-flow-map-separate-value(n,c)</a> )<br />
              | <a  href="#e-node">e-node</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[146]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-flow-map-empty-key-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#e-node">e-node</a> /* Key */<br />
              <a  href="#c-ns-flow-map-separate-value%28n,c%29">c-ns-flow-map-separate-value(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[147]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-flow-map-separate-value(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
                /* Not followed by an<br />
                       <a  href="#ns-plain-safe%28c%29">ns-plain-safe(c)</a> */<br />
              ( ( <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>
              <a  href="#ns-flow-node%28n,c%29">ns-flow-node(n,c)</a> )<br />
              | <a  href="#e-node">e-node</a> /* Value */ )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.17. Flow Mapping Separate Values</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">{<br /><code  class="filename">unquoted</code>·<code
 class="literal">:·"separate"</code>,
<code  class="filename">http://foo.com</code>,
<code  class="filename">omitted value</code><span  class="honorific"><code  class="literal">:<span
 class="property">°</span></code></span>,
<span  class="property">°</span><code  class="literal">:·omitted key</code>,
}
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-flow-yaml-node%28n,c%29"  class="link">ns-flow-yaml-node(n,c)</a></code> <span
 class="property"><a  href="#e-node"  class="link">e-node</a></span>
  <code  class="literal"><a  href="#c-ns-flow-map-separate-value%28n,c%29"  class="link">c-ns-flow-map-separate-value(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "unquoted" : !!str "separate",
  ? !!str "http://foo.com" : !!null "",
  ? !!str "omitted value" : !!null "",
  ? !!null "" : !!str "omitted key",
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          To ensure <a  href="#JSON%20compatibility//"  class="link">JSON
          compatibility</a>, if a <a  href="#key//"  class="link">key</a>
          inside a flow mapping is <a  href="#JSON-like//"  class="link">JSON-like</a>, YAML allows the following
          <a  href="#value//"  class="link">value</a> to be specified adjacent to
          the “<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>”. This causes no ambiguity, as all <a
 href="#JSON-like//"  class="link">JSON-like</a> <a  href="#key//"  class="link">keys</a> are surrounded by <a
 href="#indicator//"  class="link">indicators</a>. However, as this greatly
          reduces readability, YAML <a  href="#processor//"  class="link">processors</a> should <a
 href="#space/separation/"  class="link">separate</a> the
          <a  href="#value//"  class="link">value</a> from the “<span  class="quote"><strong
 class="userinput"><code>:</code></strong></span>”
          on output, even in this case.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[148]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-flow-map-json-key-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-flow-json-node%28n,c%29">c-flow-json-node(n,c)</a><br />
              ( ( <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
                  <a  href="#c-ns-flow-map-adjacent-value%28n,c%29">c-ns-flow-map-adjacent-value(n,c)</a> )<br />
              | <a  href="#e-node">e-node</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[149]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-flow-map-adjacent-value(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
              ( ( <a  href="#s-separate%28n,c%29">s-separate(n,c)</a>?<br />
                      <a  href="#ns-flow-node%28n,c%29">ns-flow-node(n,c)</a> )<br />
                  |
              <a  href="#e-node">e-node</a> ) /* Value */
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.18. Flow Mapping Adjacent Values</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">{<br /><code  class="filename">"adjacent"</code>:<code
 class="literal">value</code>,
<code  class="filename">"readable"</code>:<code  class="literal">·value</code>,
<code  class="filename">"empty"</code>:<span  class="property">°</span>
}
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-flow-json-node%28n,c%29"  class="link">c-flow-json-node(n,c)</a></code> <span
 class="property"><a  href="#e-node"  class="link">e-node</a></span>
  <code  class="literal"><a  href="#c-ns-flow-map-adjacent-value%28n,c%29"  class="link">c-ns-flow-map-adjacent-value(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "adjacent" : !!str "value",
  ? !!str "readable" : !!str "value",
  ? !!str "empty"    : !!null "",
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          A more compact notation is usable inside <a  href="#style/flow/sequence"
 class="link">flow sequences</a>, if the
          <a  href="#mapping//"  class="link">mapping</a> contains a <em  class="firstterm">single
          key: value pair</em>. This notation does not require the
          surrounding “<span  class="quote"><strong  class="userinput"><code>{</code></strong></span>” and “<span
 class="quote"><strong  class="userinput"><code>}</code></strong></span>” characters.
          Note that it is not possible to specify any <a  href="#node/property/"
 class="link">node properties</a> for the <a  href="#mapping//"  class="link">mapping</a> in this case.
        </p>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.19. Single Pair Flow Mappings</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">[<br /><code  class="filename">foo: bar</code>
]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-flow-pair%28n,c%29"  class="link">ns-flow-pair(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!map { ? !!str "foo" : !!str "bar" }
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          If the “<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” indicator is explicitly specified, <a
 href="#parse//"  class="link">parsing</a> is unambiguous, and the syntax is
          identical to the general case.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[150]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-pair(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                (
              <a  href="#c-mapping-key">“<span  class="quote">?</span>”</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a><br />
                  <a  href="#ns-flow-map-explicit-entry%28n,c%29">ns-flow-map-explicit-entry(n,c)</a> )<br />
              | <a  href="#ns-flow-pair-entry%28n,c%29">ns-flow-pair-entry(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.20. Single Pair Explicit Entry</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">[<br />? <code  class="filename">foo
 bar : baz</code>
]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-flow-map-explicit-entry%28n,c%29"  class="link">ns-flow-map-explicit-entry(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!map {
    ? !!str "foo bar"
    : !!str "baz",
  },
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          If the “<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” indicator is omitted, <a
 href="#parse//"  class="link">parsing</a> needs to see past the <em  class="firstterm">implicit key</em> to
          recognize it as such. To limit the amount of lookahead required, the
          “<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>” indicator must appear at most 1024 Unicode
          characters beyond the start of the <a  href="#key//"  class="link">key</a>. In addition, the <a
 href="#key//"  class="link">key</a> is restricted to a single line.
        </p>
            <p>
          Note that YAML allows arbitrary <a  href="#node//"  class="link">nodes</a> to be used as <a
 href="#key//"  class="link">keys</a>. In particular, a <a  href="#key//"  class="link">key</a> may be a <a
 href="#sequence//"  class="link">sequence</a> or a <a  href="#mapping//"  class="link">mapping</a>. Thus, without the above
          restrictions, practical one-pass <a  href="#parse//"  class="link">parsing</a> would have been impossible to
          implement.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[151]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-pair-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                <a  href="#ns-flow-pair-yaml-key-entry%28n,c%29">ns-flow-pair-yaml-key-entry(n,c)</a><br />
              | <a  href="#c-ns-flow-map-empty-key-entry%28n,c%29">c-ns-flow-map-empty-key-entry(n,c)</a><br />
              | <a  href="#c-ns-flow-pair-json-key-entry%28n,c%29">c-ns-flow-pair-json-key-entry(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[152]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-flow-pair-yaml-key-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-s-implicit-yaml-key%28c%29">ns-s-implicit-yaml-key(flow-key)</a><br />
              <a  href="#c-ns-flow-map-separate-value%28n,c%29">c-ns-flow-map-separate-value(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[153]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-ns-flow-pair-json-key-entry(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-s-implicit-json-key%28c%29">c-s-implicit-json-key(flow-key)</a><br />
              <a  href="#c-ns-flow-map-adjacent-value%28n,c%29">c-ns-flow-map-adjacent-value(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[154]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-s-implicit-yaml-key(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-flow-yaml-node%28n,c%29">ns-flow-yaml-node(n/a,c)</a>
              <a  href="#s-separate-in-line">s-separate-in-line</a>?<br />
              /* At most 1024 characters altogether */
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[155]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-s-implicit-json-key(c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-flow-json-node%28n,c%29">c-flow-json-node(n/a,c)</a>
              <a  href="#s-separate-in-line">s-separate-in-line</a>?<br />
              /* At most 1024 characters altogether */
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.21. Single Pair Implicit Entries</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">- [ <code  class="filename">YAML·</code><code
 class="constant">: separate</code> ]<br />- [ <code  class="literal">°</code><code
 class="constant">: empty key entry</code> ]
- [ <span  class="property">{JSON: like}</span><code  class="constant">:adjacent</code> ]
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-s-implicit-yaml-key%28c%29"  class="link">ns-s-implicit-yaml-key</a></code>
  <span  class="property"><a  href="#c-s-implicit-json-key%28c%29"  class="link">c-s-implicit-json-key</a></span>
  <code  class="literal"><a  href="#e-node"  class="link">e-node</a></code> <code
 class="constant">Value</code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!seq [
    !!map {
      ? !!str "YAML"
      : !!str "separate"
    },
  ],
  !!seq [
    !!map {
      ? !!null ""
      : !!str "empty key entry"
    },
  ],
  !!seq [
    !!map {
      ? !!map {
        ? !!str "JSON"
        : !!str "like"
      } : "adjacent",
    },
  ],
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  class="example">
              
              <p  class="title">
                <b>Example 7.22. Invalid Implicit Keys</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="screen"><span  class="database">[ <code  class="filename">foo<br /> bar</code>: invalid,
 <code  class="literal">"foo<span  class="emphasis"><em>...>1K characters...</em></span>bar"</code>: invalid ]
</span></pre>
          </td>
                    <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />- The <code  class="filename">foo bar</code> key spans multiple lines
- The <code  class="literal">foo...bar</code> key is too long
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">7.5. Flow Nodes</h2>
              </div>
            </div>
          </div>
          <p>
        <em  class="firstterm">JSON-like</em> <a  href="#style/flow/"  class="link">flow styles</a> all have
        explicit start and end <a  href="#indicator//"  class="link">indicators</a>. The only <a
 href="#style/flow/"  class="link">flow style</a> that does not
        have this property is the <a  href="#style/flow/plain"  class="link">plain scalar</a>. Note that none of the
        “<span  class="quote">JSON-like</span>” styles is actually acceptable by JSON. Even
        the <a  href="#style/flow/double-quoted"  class="link">double-quoted style</a> is a superset of
        the JSON string format.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[156]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-flow-yaml-content(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-plain%28n,c%29">ns-plain(n,c)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[157]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-flow-json-content(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#c-flow-sequence%28n,c%29">c-flow-sequence(n,c)</a>
            | <a  href="#c-flow-mapping%28n,c%29">c-flow-mapping(n,c)</a><br />
            | <a  href="#c-single-quoted%28n,c%29">c-single-quoted(n,c)</a>
            | <a  href="#c-double-quoted%28n,c%29">c-double-quoted(n,c)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[158]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-flow-content(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#ns-flow-yaml-content%28n,c%29">ns-flow-yaml-content(n,c)</a>
            | <a  href="#c-flow-json-content%28n,c%29">c-flow-json-content(n,c)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 7.23. Flow Content</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">- <code  class="filename">[ a, b ]</code><br />- <code
 class="filename">{ a: b }</code>
- <code  class="filename">"a"</code>
- <code  class="filename">'b'</code>
- <code  class="literal">c</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-flow-json-content%28n,c%29"  class="link">c-flow-json-content(n,c)</a></code>
  <code  class="literal"><a  href="#ns-flow-yaml-content%28n,c%29"  class="link">ns-flow-yaml-content(n,c)</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!seq [ !!str "a", !!str "b" ],
  !!map { ? !!str "a" : !!str "b" },
  !!str "a",
  !!str "b",
  !!str "c",
]
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        A complete <a  href="#style/flow/"  class="link">flow</a>
        <a  href="#node//"  class="link">node</a> also has optional <a  href="#node/property/"
 class="link">node properties</a>, except
        for <a  href="#alias//"  class="link">alias nodes</a> which refer to the
        <a  href="#anchor//"  class="link">anchored</a> <a  href="#node/property/"
 class="link">node properties</a>.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[159]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-flow-yaml-node(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#c-ns-alias-node">c-ns-alias-node</a><br />
            | <a  href="#ns-flow-yaml-content%28n,c%29">ns-flow-yaml-content(n,c)</a><br />
            | ( <a  href="#c-ns-properties%28n,c%29">c-ns-properties(n,c)</a><br />
                ( (
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a><br />
                    <a  href="#ns-flow-yaml-content%28n,c%29">ns-flow-yaml-content(n,c)</a> )<br />
                  |
              <a  href="#e-scalar">e-scalar</a> ) )
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[160]</td>
                    <td  valign="top"  align="right"  class="productionlhs">c-flow-json-node(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            ( <a  href="#c-ns-properties%28n,c%29">c-ns-properties(n,c)</a>
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a> )?<br />
            <a  href="#c-flow-json-content%28n,c%29">c-flow-json-content(n,c)</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[161]</td>
                    <td  valign="top"  align="right"  class="productionlhs">ns-flow-node(n,c)</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#c-ns-alias-node">c-ns-alias-node</a><br />
            | <a  href="#ns-flow-content%28n,c%29">ns-flow-content(n,c)</a><br />
            | ( <a  href="#c-ns-properties%28n,c%29">c-ns-properties(n,c)</a><br />
                ( (
              <a  href="#s-separate%28n,c%29">s-separate(n,c)</a><br />
                    <a  href="#ns-flow-content%28n,c%29">ns-flow-content(n,c)</a> )<br />
                  |
              <a  href="#e-scalar">e-scalar</a> ) )
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 7.24. Flow Nodes</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">- <code  class="filename">!!str "a"</code><br />- <code
 class="filename">'b'</code>
- <code  class="filename">&anchor "c"</code>
- <code  class="literal">*anchor</code>
- <code  class="literal">!!str°</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-flow-json-node%28n,c%29"  class="link">c-flow-json-node(n,c)</a></code>
  <code  class="literal"><a  href="#ns-flow-yaml-node%28n,c%29"  class="link">ns-flow-yaml-node(n,c)</a></code>
</pre>
          </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!str "a",
  !!str "b",
  &A !!str "c",
  *A,
  !!str "",
]
</span></pre>
          </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Chapter 8. Block Styles</h2>
            </div>
          </div>
        </div>
        <p>
      YAML’s <em  class="firstterm">block
      styles</em> employ <a  href="#space/indentation/"  class="link">indentation</a> rather than <a
 href="#indicator//"  class="link">indicators</a> to denote structure. This
      results in a more human readable (though less compact) notation.
    </p>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">8.1. Block Scalar Styles</h2>
              </div>
            </div>
          </div>
          <p>
        YAML provides two <em  class="firstterm">block scalar styles</em>, <a  href="#style/block/literal"
 class="link">literal</a>
        and <a  href="#style/block/folded"  class="link">folded</a>. Each provides a different trade-off
        between readability and expressive power.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">8.1.1. Block Scalar Headers</h3>
                </div>
              </div>
            </div>
            <p>
          <a  href="#style/block/scalar"  class="link">Block
          scalars</a> are controlled by a few <a  href="#indicator//"  class="link">indicators</a> given in a <em
 class="firstterm">header</em> preceding the <a  href="#content//"  class="link">content</a> itself. This header is followed
          by a non-content <a  href="#line%20break//"  class="link">line break</a>
          with an optional <a  href="#comment//"  class="link">comment</a>. This
          is the only case where a <a  href="#comment//"  class="link">comment</a>
          must not be followed by additional <a  href="#comment//"  class="link">comment</a> lines.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[162]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-b-block-header(m,t)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( (
                <a  href="#c-indentation-indicator%28m%29">c-indentation-indicator(m)</a><br />
                  <a  href="#c-chomping-indicator%28t%29">c-chomping-indicator(t)</a> )<br />
              | ( <a  href="#c-chomping-indicator%28t%29">c-chomping-indicator(t)</a><br />
                  <a  href="#c-indentation-indicator%28m%29">c-indentation-indicator(m)</a> ) )<br />
              <a  href="#s-b-comment">s-b-comment</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.1. Block Scalar Header</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">- |<code  class="filename"> # Empty header↓</code><br /> literal
- ><code  class="filename">1 # Indentation indicator↓</code>
 ·folded
- |<code  class="filename">+ # Chomping indicator↓</code>
 keep

- ><code  class="filename">1- # Both indicators↓</code>
 ·strip

</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!str "literal\n",
  !!str "·folded\n",
  !!str "keep\n\n",
  !!str "·strip",
]
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#c-b-block-header%28m,t%29"  class="link">c-b-block-header(m,t)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">8.1.1.1. Block Indentation Indicator</h4>
                  </div>
                </div>
              </div>
              <p>
            Typically, the <a  href="#space/indentation/"  class="link">indentation</a> level of a <a
 href="#style/block/scalar"  class="link">block
            scalar</a> is detected from its first non-<a  href="#empty%20line//"
 class="link">empty</a> line. It is an error for any
            of the leading <a  href="#empty%20line//"  class="link">empty lines</a>
            to contain more <a  href="#space//"  class="link">spaces</a> than the
            first non-<a  href="#empty%20line//"  class="link">empty line</a>.
          </p>
              <p>
            Detection fails when the first non-<a  href="#empty%20line//"  class="link">empty line</a> contains leading content <a
 href="#space//"  class="link">space</a> characters. <a  href="#content//"  class="link">Content</a> may safely start with a
            <a  href="#tab//"  class="link">tab</a> or a <a  href="##%20comment//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>#</code></strong></span>”</a> character.
          </p>
              <p>
            When detection would fail, YAML requires that the <a  href="#space/indentation/"
 class="link">indentation</a> level
            for the <a  href="#content//"  class="link">content</a> be given using
            an explicit <em  class="firstterm">indentation indicator</em>. This level
            is specified as the integer number of the additional <a  href="#space/indentation/"
 class="link">indentation</a>
            spaces used for the <a  href="#content//"  class="link">content</a>,
            relative to its parent <a  href="#node//"  class="link">node</a>.
          </p>
              <p>
            It is always valid to specify an indentation indicator for a
            <a  href="#style/block/scalar"  class="link">block
            scalar</a> node, though a YAML <a  href="#processor//"  class="link">processor</a> should only emit an
            explicit indentation indicator for cases where detection will fail.
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[163]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-indentation-indicator(m)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#ns-dec-digit">ns-dec-digit</a>
                  ⇒ m = <a  href="#ns-dec-digit">ns-dec-digit</a> - #x30<br />
                /* Empty */  ⇒ m = auto-detect()
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 8.2. Block Indentation Indicator</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">- |<code  class="filename">°</code><br /><code
 class="literal">·</code>detected
- ><code  class="filename">°</code>
<code  class="literal">·</code>
<code  class="literal">··</code>
<code  class="literal">··</code># detected
- |<code  class="filename">1</code>
<code  class="literal">·</code>·explicit
- ><code  class="filename">°</code>
<code  class="literal">·</code>→
<code  class="literal">·</code>detected
</span></pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!str "detected\n",
  !!str "\n\n# detected\n",
  !!str "·explicit\n",
  !!str "\t·detected\n",
]
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#c-indentation-indicator%28m%29"  class="link">c-indentation-indicator(m)</a></code>
   <code  class="literal"><a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></code>
</pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              <br  class="example-break" />
              <div  class="example">
                
                <p  class="title">
                  <b>Example 8.3. Invalid Block Scalar Indentation Indicators</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="screen"><span  class="database">- |<br />·<code  class="filename">·</code>
·text
- >
··text
<code  class="literal">·</code>text
- |2
<span  class="property">·</span>text
</span></pre>
              </td>
                      <td  width="50%">
<pre  class="screen"><span  class="database">ERROR:<br />- A leading all-space line must
  not have too many <code  class="filename">spaces</code>.
- A following text line must
  not be <code  class="literal">less indented</code>.
- The text is <span  class="property">less indented</span>
  than the indicated level.
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">8.1.1.2. Block Chomping Indicator</h4>
                  </div>
                </div>
              </div>
              <p>
            <em  class="firstterm">Chomping</em> controls how final
            <a  href="#line%20break//"  class="link">line breaks</a> and trailing
            <a  href="#empty%20line//"  class="link">empty lines</a> are
            interpreted. YAML provides three chomping methods:
          </p>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">Strip</span>
                  </dt>
                  <dd><em  class="firstterm">Stripping</em> is specified by the
                <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>-</code></strong></span>”
                chomping indicator</em>. In this case, the final
                <a  href="#line%20break//"  class="link">line break</a> and any
                trailing <a  href="#empty%20line//"  class="link">empty lines</a>
                are excluded from the <a  href="#scalar//"  class="link">scalar’s
                content</a>.
              </dd>
                  <dt>
                    <span  class="term">Clip</span>
                  </dt>
                  <dd><em  class="firstterm">Clipping</em> is the default behavior
                used if no explicit chomping indicator is specified. In this
                case, the final <a  href="#line%20break//"  class="link">line
                break</a> character is preserved in the <a  href="#scalar//"  class="link">scalar’s content</a>. However, any
                trailing <a  href="#empty%20line//"  class="link">empty lines</a>
                are excluded from the <a  href="#scalar//"  class="link">scalar’s
                content</a>.
              </dd>
                  <dt>
                    <span  class="term">Keep</span>
                  </dt>
                  <dd><em  class="firstterm">Keeping</em>
                is specified by the <em  class="firstterm">“<span  class="quote"><strong
 class="userinput"><code>+</code></strong></span>” chomping indicator</em>. In
                this case, the final <a  href="#line%20break//"  class="link">line
                break</a> and any trailing <a  href="#empty%20line//"  class="link">empty lines</a> are considered to be part of the
                <a  href="#scalar//"  class="link">scalar’s content</a>. These
                additional lines are not subject to <a  href="#line%20folding//"
 class="link">folding</a>.
              </dd>
                </dl>
              </div>
              <p>
            The chomping method used is a <a  href="#presentation/detail/"  class="link">presentation detail</a> and must not be
            used to convey <a  href="#content//"  class="link">content</a>
            information.
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[164]</td>
                        <td  valign="top"  align="right"  class="productionlhs">c-chomping-indicator(t)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                “<span  class="quote">-</span>”         ⇒
                  <code  class="varname">t</code> = strip<br />
                “<span  class="quote">+</span>”         ⇒
                <code  class="varname">t</code> = keep<br />
                /* Empty */ ⇒
                  <code  class="varname">t</code> = clip
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <p>
            The interpretation of the final <a  href="#line%20break//"  class="link">line
            break</a> of a <a  href="#style/block/scalar"  class="link">block scalar</a> is controlled by the
            chomping indicator specified in the <a  href="#block%20scalar%20header//"
 class="link">block scalar header</a>.
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[165]</td>
                        <td  valign="top"  align="right"  class="productionlhs">b-chomped-last(t)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <code  class="varname">t</code> = strip ⇒
                <a  href="#b-non-content">b-non-content</a> | /* End of file */<br />
                <code  class="varname">t</code> = clip  ⇒
                <a  href="#b-as-line-feed">b-as-line-feed</a> | /* End of file */<br />
                <code  class="varname">t</code> = keep  ⇒
                <a  href="#b-as-line-feed">b-as-line-feed</a> | /* End of file */
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 8.4. Chomping Final Line Break</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">strip: |-<br />  text<code
 class="filename">↓</code>
clip: |
  text<code  class="literal">↓</code>
keep: |+
  text<code  class="literal">↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#b-non-content"  class="link">b-non-content</a></code> <code
 class="literal"><a  href="#b-as-line-feed"  class="link">b-as-line-feed</a></code>
</pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "strip"
  : !!str "text",
  ? !!str "clip"
  : !!str "text\n",
  ? !!str "keep"
  : !!str "text\n",
}
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              <br  class="example-break" />
              <p>
            The interpretation of the trailing <a  href="#empty%20line//"  class="link">empty lines</a> following a <a
 href="#style/block/scalar"  class="link">block scalar</a> is also
            controlled by the chomping indicator specified in the <a  href="#block%20scalar%20header//"
 class="link">block scalar header</a>.
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[166]</td>
                        <td  valign="top"  align="right"  class="productionlhs">l-chomped-empty(n,t)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <code  class="varname">t</code> = strip ⇒
                <a  href="#l-strip-empty%28n%29">l-strip-empty(n)</a><br />
                <code  class="varname">t</code> = clip  ⇒
                <a  href="#l-strip-empty%28n%29">l-strip-empty(n)</a><br />
                <code  class="varname">t</code> = keep  ⇒
                <a  href="#l-keep-empty%28n%29">l-keep-empty(n)</a>
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                      <tr>
                        <td  valign="top"  align="left"  class="productioncounter">[167]</td>
                        <td  valign="top"  align="right"  class="productionlhs">l-strip-empty(n)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                ( <a  href="#s-indent%28n%29">s-indent(≤n)</a>
                <a  href="#b-non-content">b-non-content</a> )*<br />
                <a  href="#l-trail-comments%28n%29">l-trail-comments(n)</a>?
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                      <tr>
                        <td  valign="top"  align="left"  class="productioncounter">[168]</td>
                        <td  valign="top"  align="right"  class="productionlhs">l-keep-empty(n)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#l-empty%28n,c%29">l-empty(n,block-in)</a>*<br />
                <a  href="#l-trail-comments%28n%29">l-trail-comments(n)</a>?
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <p>
            Explicit <a  href="#comment//"  class="link">comment</a> lines may
            follow the trailing <a  href="#empty%20line//"  class="link">empty
            lines</a>. To prevent ambiguity, the first such <a  href="#comment//"
 class="link">comment</a> line must be less <a  href="#space/indentation/"  class="link">indented</a> than the
            <a  href="#style/block/scalar"  class="link">block
            scalar content</a>. Additional <a  href="#comment//"  class="link">comment</a> lines, if any, are not so
            restricted. This is the only case where the <a  href="#space/indentation/"
 class="link">indentation</a> of
            <a  href="#comment//"  class="link">comment</a> lines is constrained.
          </p>
              <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
                <tbody><tr>
                  <td  width="50%">
                    <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                      <tbody><tr>
                        <td  valign="top"  align="left"  class="productioncounter">[169]</td>
                        <td  valign="top"  align="right"  class="productionlhs">l-trail-comments(n)</td>
                        <td  valign="top"  align="center"  class="productionseperator">
                          <code>::=</code>
                        </td>
                        <td  valign="top"  class="productionrhs">
                <a  href="#s-indent%28n%29">s-indent(<n)<  a="">
                </n)<></a><a  href="#c-nb-comment-text">c-nb-comment-text</a>
                <a  href="#b-comment">b-comment</a><br />
                <a  href="#l-comment">l-comment</a>*
              </td>
                        <td  class="productioncomment"> <br /></td>
                      </tr>
                    </tbody></table>
                  </td>
                </tr>
              </tbody></table>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 8.5. Chomping Trailing Lines</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database"> # Strip<br />  # Comments:
strip: |-
  # text↓
<span  class="honorific"><code  class="filename">··⇓
<span  class="property">·# Clip
··# comments:
↓</span></code></span>
clip: |
  # text↓
<span  class="honorific"><code  class="filename">·↓
<span  class="property">·# Keep
··# comments:
↓</span></code></span>
keep: |+
  # text↓
<span  class="honorific"><code  class="literal">↓
<span  class="property">·# Trail
··# comments.</span></code></span>
</span></pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "strip"
  : !!str "# text",
  ? !!str "clip"
  : !!str "# text\n",
  ? !!str "keep"
  : !!str "# text\n",
}
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#l-strip-empty%28n%29"  class="link">l-strip-empty(n)</a></code>
   <code  class="literal"><a  href="#l-keep-empty%28n%29"  class="link">l-keep-empty(n)</a></code>
   <span  class="property"><a  href="#l-trail-comments%28n%29"  class="link">l-trail-comments(n)</a></span>
</pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              <br  class="example-break" />
              <p>
            If a <a  href="#style/block/scalar"  class="link">block scalar</a> consists only of <a
 href="#empty%20line//"  class="link">empty lines</a>, then these lines are
            considered as trailing lines and hence are affected by chomping.
          </p>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 8.6. Empty Scalar Chomping</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">strip: >-<br /><code  class="filename">↓</code>
clip: >
<code  class="filename">↓</code>
keep: |+
<code  class="literal">↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#l-strip-empty%28n%29"  class="link">l-strip-empty(n)</a></code> <code
 class="literal"><a  href="#l-keep-empty%28n%29"  class="link">l-keep-empty(n)</a></code>
</pre>
              </td>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "strip"
  : !!str "",
  ? !!str "clip"
  : !!str "",
  ? !!str "keep"
  : !!str "\n",
}
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">8.1.2. Literal Style</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">literal style</em> is denoted by the <em  class="firstterm">“<span
 class="quote"><strong  class="userinput"><code>|</code></strong></span>” indicator</em>. It
          is the simplest, most restricted, and most readable <a  href="#style/scalar/"
 class="link">scalar style</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[170]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-l+literal(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-literal">“<span  class="quote">|</span>”</a>
              <a  href="#c-b-block-header%28m,t%29">c-b-block-header(m,t)</a><br />
              <a  href="#l-literal-content%28n,t%29">l-literal-content(n+m,t)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.7. Literal Scalar</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">|↓<br />·literal↓
·→text↓
↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-l+literal%28n%29"  class="link">c-l+literal(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "literal\n\ttext\n"
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          Inside literal scalars, all (<a  href="#space/indentation/"  class="link">indented</a>) characters are considered
          to be <a  href="#content//"  class="link">content</a>, including
          <a  href="#space/white/"  class="link">white space</a>
          characters. Note that all <a  href="#line%20break//"  class="link">line
          break</a> characters are <a  href="#line%20break/normalization/"  class="link">normalized</a>. In addition, <a
 href="#empty%20line//"  class="link">empty lines</a> are not <a  href="#style/block/folded"
 class="link">folded</a>,
          though final <a  href="#line%20break//"  class="link">line breaks</a> and
          trailing <a  href="#empty%20line//"  class="link">empty lines</a> are
          <a  href="#chomping//"  class="link">chomped</a>.
        </p>
            <p>
          There is no way to escape characters inside literal scalars. This
          restricts them to <a  href="#printable%20character//"  class="link">printable</a> characters. In addition, there is no
          way to break a long literal line.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[171]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-nb-literal-text(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#l-empty%28n,c%29">l-empty(n,block-in)</a>*<br />
              <a  href="#s-indent%28n%29">s-indent(n)</a>
              <a  href="#nb-char">nb-char</a>+
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[172]</td>
                      <td  valign="top"  align="right"  class="productionlhs">b-nb-literal-next(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#b-as-line-feed">b-as-line-feed</a><br />
              <a  href="#l-nb-literal-text%28n%29">l-nb-literal-text(n)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[173]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-literal-content(n,t)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#l-nb-literal-text%28n%29">l-nb-literal-text(n)</a>
              <a  href="#b-nb-literal-next%28n%29">b-nb-literal-next(n)</a>*<br />
                <a  href="#b-chomped-last%28t%29">b-chomped-last(t)</a> )?<br />
              <a  href="#l-chomped-empty%28n,t%29">l-chomped-empty(n,t)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.8. Literal Content</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">|<br /><code  class="filename">·
··
··literal</code><span  class="honorific"><code  class="literal">↓
<code  class="filename">···</code></code></span><span  class="honorific"><code  class="literal">↓
<code  class="filename">··
··text</code></code></span><span  class="property">↓</span>
<code  class="constant">↓
·# Comment</code>
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "\n\nliteral\n·\n\ntext\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#l-nb-literal-text%28n%29"  class="link">l-nb-literal-text(n)</a></code>
   <code  class="literal"><a  href="#b-nb-literal-next%28n%29"  class="link">b-nb-literal-next(n)</a></code>
   <span  class="property"><a  href="#b-chomped-last%28t%29"  class="link">b-chomped-last(t)</a></span>
   <code  class="constant"><a  href="#l-chomped-empty%28n,t%29"  class="link">l-chomped-empty(n,t)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">8.1.3. Folded Style</h3>
                </div>
              </div>
            </div>
            <p>
          The <em  class="firstterm">folded style</em> is denoted by the <em  class="firstterm">“<span
 class="quote"><strong  class="userinput"><code>></code></strong></span>” indicator</em>.
          It is similar to the <a  href="#style/block/literal"  class="link">literal style</a>; however, folded scalars
          are subject to <a  href="#line%20folding/block/"  class="link">line
          folding</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[174]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-l+folded(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-folded">“<span  class="quote">></span>”</a>
              <a  href="#c-b-block-header%28m,t%29">c-b-block-header(m,t)</a><br />
              <a  href="#l-folded-content%28n,t%29">l-folded-content(n+m,t)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.9. Folded Scalar</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">>↓<br />·folded↓
·text↓
↓</code>
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "folded text\n"
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-l+folded%28n%29"  class="link">c-l+folded(n)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          <a  href="#line%20folding//"  class="link">Folding</a> allows long lines
          to be broken anywhere a single <a  href="#space//"  class="link">space</a> character separates two non-<a
 href="#space/white/"  class="link">space</a> characters.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[175]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-nb-folded-text(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-indent%28n%29">s-indent(n)</a>
              <a  href="#ns-char">ns-char</a>
              <a  href="#nb-char">nb-char</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[176]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-nb-folded-lines(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-nb-folded-text%28n%29">s-nb-folded-text(n)</a><br />
              ( <a  href="#b-l-folded%28n,c%29">b-l-folded(n,block-in)</a>
              <a  href="#s-nb-folded-text%28n%29">s-nb-folded-text(n)</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.10. Folded Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">><br />
<span  class="honorific"><code  class="literal"><code  class="filename">·folded</code>↓
<code  class="filename">·line</code>↓
↓
<code  class="filename">·next</code>
<code  class="filename">·line</code></code></span>↓
   * bullet

   * list
   * lines

<span  class="honorific"><code  class="literal"><code  class="filename">·last</code>↓
<code  class="filename">·line</code></code></span>↓

# Comment
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "\n\
      folded line\n\
      next line\n\
      \  * bullet\n
      \n\
      \  * list\n\
      \  * lines\n\
      \n\
      last line\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#s-nb-folded-text%28n%29"  class="link">s-nb-folded-text(n)</a></code>
   <code  class="literal"><a  href="#l-nb-folded-lines%28n%29"  class="link">l-nb-folded-lines(n)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          (The following three examples duplicate this example, each
          highlighting different productions.)
        </p>
            <p>
          Lines starting with <a  href="#space/white/"  class="link">white
          space</a> characters (<em  class="firstterm">more-indented</em> lines) are not
          <a  href="#line%20folding//"  class="link">folded</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[177]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-nb-spaced-text(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-indent%28n%29">s-indent(n)</a>
              <a  href="#s-white">s-white</a>
              <a  href="#nb-char">nb-char</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[178]</td>
                      <td  valign="top"  align="right"  class="productionlhs">b-l-spaced(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#b-as-line-feed">b-as-line-feed</a><br />
              <a  href="#l-empty%28n,c%29">l-empty(n,block-in)</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[179]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-nb-spaced-lines(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-nb-spaced-text%28n%29">s-nb-spaced-text(n)</a><br />
              ( <a  href="#b-l-spaced%28n%29">b-l-spaced(n)</a>
              <a  href="#s-nb-spaced-text%28n%29">s-nb-spaced-text(n)</a> )*<br />
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.11. More Indented Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">><br />
 folded
 line

 next
 line
<span  class="honorific"><code  class="literal"><code  class="filename">···* bullet</code>↓
↓
<code  class="filename">···* list</code>↓
<code  class="filename">···* lines</code></code></span>↓

 last
 line

# Comment
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "\n\
      folded line\n\
      next line\n\
      \  * bullet\n
      \n\
      \  * list\n\
      \  * lines\n\
      \n\
      last line\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#s-nb-spaced-text%28n%29"  class="link">s-nb-spaced-text(n)</a></code>
   <code  class="literal"><a  href="#l-nb-spaced-lines%28n%29"  class="link">l-nb-spaced-lines(n)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          <a  href="#line%20break//"  class="link">Line breaks</a> and <a  href="#empty%20line//"
 class="link">empty lines</a> separating folded and
          more-indented lines are also not <a  href="#line%20folding//"  class="link">folded</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[180]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-nb-same-lines(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#l-empty%28n,c%29">l-empty(n,block-in)</a>*<br />
              ( <a  href="#l-nb-folded-lines%28n%29">l-nb-folded-lines(n)</a>
              | <a  href="#l-nb-spaced-lines%28n%29">l-nb-spaced-lines(n)</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[181]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-nb-diff-lines(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#l-nb-same-lines%28n%29">l-nb-same-lines(n)</a><br />
              ( <a  href="#b-as-line-feed">b-as-line-feed</a>
              <a  href="#l-nb-same-lines%28n%29">l-nb-same-lines(n)</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.12. Empty Separation Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">><br /><code  class="literal">↓</code>
 folded
 line<code  class="filename">↓</code>
<code  class="literal">↓</code>
 next
 line<code  class="filename">↓</code>
   * bullet

   * list
   * line<code  class="filename">↓</code>
<code  class="literal">↓</code>
 last
 line

# Comment
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "\n\
      folded line\n\
      next line\n\
      \  * bullet\n
      \n\
      \  * list\n\
      \  * lines\n\
      \n\
      last line\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#b-as-line-feed"  class="link">b-as-line-feed</a></code>
   <code  class="literal">(separation) <a  href="#l-empty%28n,c%29"  class="link">l-empty(n,c)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          The final <a  href="#line%20break//"  class="link">line break</a>, and
          trailing <a  href="#empty%20line//"  class="link">empty lines</a> if any,
          are subject to <a  href="#chomping//"  class="link">chomping</a> and are
          never <a  href="#line%20folding//"  class="link">folded</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[182]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-folded-content(n,t)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#l-nb-diff-lines%28n%29">l-nb-diff-lines(n)</a>
              <a  href="#b-chomped-last%28t%29">b-chomped-last(t)</a> )?<br />
              <a  href="#l-chomped-empty%28n,t%29">l-chomped-empty(n,t)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.13. Final Empty Lines</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">><br /> folded
 line

 next
 line
   * bullet

   * list
   * line

 last
 line<code  class="filename">↓</code>
<code  class="literal">↓
# Comment</code>
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "\n\
      folded line\n\
      next line\n\
      \  * bullet\n
      \n\
      \  * list\n\
      \  * lines\n\
      \n\
      last line\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#b-chomped-last%28t%29"  class="link">b-chomped-last(t)</a></code> <code
 class="literal"><a  href="#l-chomped-empty%28n,t%29"  class="link">l-chomped-empty(n,t)</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">8.2. Block Collection Styles</h2>
              </div>
            </div>
          </div>
          <p>
        For readability, <em  class="firstterm">block collections styles</em> are not
        denoted by any <a  href="#indicator//"  class="link">indicator</a>.
        Instead, YAML uses a lookahead method, where a block collection is
        distinguished from a <a  href="#style/flow/plain"  class="link">plain scalar</a> only when a <a
 href="#key:%20value%20pair//"  class="link">key: value pair</a> or a <a  href="#-%20block%20sequence%20entry//"
 class="link">sequence entry</a> is seen.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">8.2.1. Block Sequences</h3>
                </div>
              </div>
            </div>
            <p>
          A <em  class="firstterm">block sequence</em> is simply a series of
          <a  href="#node//"  class="link">nodes</a>, each denoted by a leading
          <em  class="firstterm">“<span  class="quote"><strong  class="userinput"><code>-</code></strong></span>”
          indicator</em>. The “<span  class="quote"><strong  class="userinput"><code>-</code></strong></span>” indicator must be
          <a  href="#space/separation/"  class="link">separated</a>
          from the <a  href="#node//"  class="link">node</a> by <a  href="#space/white/"
 class="link">white space</a>. This allows
          “<span  class="quote"><strong  class="userinput"><code>-</code></strong></span>” to be used as the first character in a <a
 href="#style/flow/plain"  class="link">plain
          scalar</a> if followed by a non-space character (e.g.
          “<span  class="quote"><strong  class="userinput"><code>-1</code></strong></span>”).
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[183]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l+block-sequence(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#s-indent%28n%29">s-indent(n+m)</a>
                <a  href="#c-l-block-seq-entry%28n%29">c-l-block-seq-entry(n+m)</a> )+<br />
              /* For some fixed auto-detected <code  class="varname">m</code> > 0 */
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[184]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-l-block-seq-entry(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-sequence-entry">“<span  class="quote">-</span>”</a> /* Not followed by an
                  <a  href="#ns-char">ns-char</a> */<br />
              <a  href="#s-l+block-indented%28n,c%29">s-l+block-indented(n,block-in)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.14. Block Sequence</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">block sequence:<br />··<code
 class="filename">- one↓</code>
  <code  class="filename">- two : three↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-l-block-seq-entry%28n%29"  class="link">c-l-block-seq-entry(n)</a></code>
  <code  class="literal">auto-detected <a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "block sequence"
  : !!seq [
    !!str "one",
    !!map {
      ? !!str "two"
      : !!str "three"
    },
  ],
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          The entry <a  href="#node//"  class="link">node</a> may be either
          <a  href="#node/completely%20empty/"  class="link">completely
          empty</a>, be a nested <a  href="#style/block/"  class="link">block node</a>, or use a <em
 class="firstterm">compact in-line
          notation</em>. The compact notation may be used when the entry
          is itself a nested <a  href="#style/block/collection"  class="link">block collection</a>. In this case, both
          the “<span  class="quote"><strong  class="userinput"><code>-</code></strong></span>” indicator and the following <a
 href="#space//"  class="link">spaces</a> are considered to be part of the
          <a  href="#space/indentation/"  class="link">indentation</a> of the nested <a
 href="#style/block/collection"  class="link">collection</a>. Note that it is not
          possible to specify <a  href="#node/property/"  class="link">node
          properties</a> for such a <a  href="#style/block/collection"  class="link">collection</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[185]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-l+block-indented(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                ( <a  href="#s-indent%28n%29">s-indent(m)</a><br />
                  (
                <a  href="#ns-l-compact-sequence%28n%29">ns-l-compact-sequence(n+1+m)</a><br />
                  |
                <a  href="#ns-l-compact-mapping%28n%29">ns-l-compact-mapping(n+1+m)</a> ) )<br />
              | <a  href="#s-l+block-node%28n,c%29">s-l+block-node(n,c)</a><br />
              | ( <a  href="#e-node">e-node</a>
                  <a  href="#s-l-comments">s-l-comments</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[186]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-l-compact-sequence(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-l-block-seq-entry%28n%29">c-l-block-seq-entry(n)</a><br />
              ( <a  href="#s-indent%28n%29">s-indent(n)</a>
              <a  href="#c-l-block-seq-entry%28n%29">c-l-block-seq-entry(n)</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.15. Block Sequence Entry Types</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">-<code  class="filename">° # Empty</code><br />-<code
 class="literal"> |
 block node</code>
-<span  class="property">·- one # Compact
··- two # sequence</span>
-<code  class="constant"> one: two # Compact mapping</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename">Empty</code>
  <code  class="literal"><a  href="#s-l+block-node%28n,c%29"  class="link">s-l+block-node(n,c)</a></code>
  <span  class="property"><a  href="#ns-l-compact-sequence%28n%29"  class="link">ns-l-compact-sequence(n)</a></span>
  <code  class="constant"><a  href="#ns-l-compact-mapping%28n%29"  class="link">ns-l-compact-mapping(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!null "",
  !!str "block node\n",
  !!seq [
    !!str "one"
    !!str "two",
  ],
  !!map {
    ? !!str "one"
    : !!str "two",
  },
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">8.2.2. Block Mappings</h3>
                </div>
              </div>
            </div>
            <p>
          A <em  class="firstterm">Block
          mapping</em> is a series of entries, each <a  href="#present//"  class="link">presenting</a> a <a
 href="#key:%20value%20pair//"  class="link">key: value pair</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[187]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l+block-mapping(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#s-indent%28n%29">s-indent(n+m)</a>
                <a  href="#ns-l-block-map-entry%28n%29">ns-l-block-map-entry(n+m)</a> )+<br />
              /* For some fixed auto-detected <code  class="varname">m</code> > 0 */
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.16. Block Mappings</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">block mapping:<br /><code  class="literal">·</code><code
 class="filename">key: value↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-l-block-map-entry%28n%29"  class="link">ns-l-block-map-entry(n)</a></code>
  <code  class="literal">auto-detected <a  href="#s-indent%28n%29"  class="link">s-indent(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "block mapping"
  : !!map {
    ? !!str "key"
    : !!str "value",
  },
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          If the <a  href="#?%20mapping%20key//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>?</code></strong></span>”</a>
          indicator is specified, the optional value node must be specified on
          a separate line, denoted by the <a  href="#:%20mapping%20value//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>:</code></strong></span>”</a> indicator. Note that YAML allows
          here the same <a  href="#style/compact%20block%20collection/"  class="link">compact in-line notation</a> described above for
          <a  href="#style/block/sequence"  class="link">block
          sequence</a> entries.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[188]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-l-block-map-entry(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                <a  href="#c-l-block-map-explicit-entry%28n%29">c-l-block-map-explicit-entry(n)</a><br />
              | <a  href="#ns-l-block-map-implicit-entry%28n%29">ns-l-block-map-implicit-entry(n)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[189]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-l-block-map-explicit-entry(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-l-block-map-explicit-key%28n%29">c-l-block-map-explicit-key(n)</a><br />
              ( <a  href="#l-block-map-explicit-value%28n%29">l-block-map-explicit-value(n)</a><br />
              | <a  href="#e-node">e-node</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[190]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-l-block-map-explicit-key(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-mapping-key">“<span  class="quote">?</span>”</a>
              <a  href="#s-l+block-indented%28n,c%29">s-l+block-indented(n,block-out)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[191]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-block-map-explicit-value(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-indent%28n%29">s-indent(n)</a><br />
              <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
              <a  href="#s-l+block-indented%28n,c%29">s-l+block-indented(n,block-out)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.17. Explicit Block Mapping Entries</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">? explicit key # Empty value↓</code><span
 class="property">°</span><br /><code  class="filename">? |
  block key↓</code>
<code  class="literal">:·- one # Explicit compact
··- two # block value↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-l-block-map-explicit-key%28n%29"  class="link">c-l-block-map-explicit-key(n)</a></code>
  <code  class="literal"><a  href="#l-block-map-explicit-value%28n%29"  class="link">l-block-map-explicit-value(n)</a></code>
  <span  class="property"><a  href="#e-node"  class="link">e-node</a></span>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "explicit key"
  : !!str "",
  ? !!str "block key\n"
  : !!seq [
    !!str "one",
    !!str "two",
  ],
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          If the “<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” indicator is omitted, <a
 href="#parse//"  class="link">parsing</a> needs to see past the <a  href="#key/implicit/"
 class="link">implicit key</a>, in the
          same way as in the <a  href="#style/single%20key:value%20pair%20mapping/"
 class="link">single key: value pair</a>
          <a  href="#style/flow/mapping"  class="link">flow
          mapping</a>. Hence, such <a  href="#key//"  class="link">keys</a>
          are subject to the same restrictions; they are limited to a single
          line and must not span more than 1024 Unicode characters.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[192]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-l-block-map-implicit-entry(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#ns-s-block-map-implicit-key">ns-s-block-map-implicit-key</a><br />
              | <a  href="#e-node">e-node</a> )<br />
              <a  href="#c-l-block-map-implicit-value%28n%29">c-l-block-map-implicit-value(n)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[193]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-s-block-map-implicit-key</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
                <a  href="#c-s-implicit-json-key%28c%29">c-s-implicit-json-key(block-key)</a><br />
              | <a  href="#ns-s-implicit-yaml-key%28c%29">ns-s-implicit-yaml-key(block-key)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <p>
          In this case, the <a  href="#value//"  class="link">value</a> may be
          specified on the same line as the <a  href="#key/implicit/"  class="link">implicit key</a>. Note however that in
          block mappings the <a  href="#value//"  class="link">value</a> must
          never be adjacent to the “<span  class="quote"><strong  class="userinput"><code>:</code></strong></span>”, as this greatly reduces
          readability and is not required for <a  href="#JSON%20compatibility//"
 class="link">JSON compatibility</a> (unlike the case in
          <a  href="#style/flow/mapping"  class="link">flow
          mappings</a>).
        </p>
            <p>
          There is no compact notation for in-line <a  href="#value//"  class="link">values</a>. Also, while both the <a
 href="#key/implicit/"  class="link">implicit key</a> and the
          <a  href="#value//"  class="link">value</a> following it may be empty,
          the <a  href="#:%20mapping%20value//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>:</code></strong></span>”</a>
          indicator is mandatory. This prevents a potential ambiguity with
          multi-line <a  href="#style/flow/plain"  class="link">plain scalars</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[194]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-l-block-map-implicit-value(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-mapping-value">“<span  class="quote">:</span>”</a>
              ( <a  href="#s-l+block-node%28n,c%29">s-l+block-node(n,block-out)</a><br />
                  | ( <a  href="#e-node">e-node</a>
                <a  href="#s-l-comments">s-l-comments</a> ) )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.18. Implicit Block Mapping Entries</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">plain key</code><code
 class="literal">: in-line value</code><br /><code  class="filename">°</code><code
 class="literal">:° # Both empty</code>
<code  class="filename">"quoted key"</code><code  class="literal">:
- entry</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-s-block-map-implicit-key"  class="link">ns-s-block-map-implicit-key</a></code>
  <code  class="literal"><a  href="#c-l-block-map-implicit-value%28n%29"  class="link">c-l-block-map-implicit-value(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "plain key"
  : !!str "in-line value",
  ? !!null ""
  : !!null "",
  ? !!str "quoted key"
  : !!seq [ !!str "entry" ],
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          A <a  href="#style/compact%20block%20collection/"  class="link">compact in-line notation</a> is also available.
          This compact notation may be nested inside <a  href="#style/block/sequence"
 class="link">block sequences</a> and
          explicit block mapping entries. Note that it is not possible to
          specify <a  href="#node/property/"  class="link">node
          properties</a> for such a nested mapping.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[195]</td>
                      <td  valign="top"  align="right"  class="productionlhs">ns-l-compact-mapping(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#ns-l-block-map-entry%28n%29">ns-l-block-map-entry(n)</a><br />
              ( <a  href="#s-indent%28n%29">s-indent(n)</a>
              <a  href="#ns-l-block-map-entry%28n%29">ns-l-block-map-entry(n)</a> )*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.19. Compact Block Mappings</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">- <code  class="filename">sun: yellow↓</code><br />- <span
 class="honorific"><code  class="filename">? <code  class="filename">earth: blue↓</code>
  : <code  class="filename">moon: white↓</code></code></span>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#ns-l-compact-mapping%28n%29"  class="link">ns-l-compact-mapping(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!map {
     !!str "sun" : !!str "yellow",
  },
  !!map {
    ? !!map {
      ? !!str "earth"
      : !!str "blue"
    },
    : !!map {
      ? !!str "moon"
      : !!str "white"
    },
  }
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">8.2.3. Block Nodes</h3>
                </div>
              </div>
            </div>
            <p>
          YAML allows <a  href="#style/flow/"  class="link">flow
          nodes</a> to be embedded inside <a  href="#style/block/collection"  class="link">block collections</a>
          (but not vice-versa). <a  href="#style/flow/"  class="link">Flow
          nodes</a> must be <a  href="#space/indentation/"  class="link">indented</a> by at least one more
          <a  href="#space//"  class="link">space</a> than the parent <a  href="#style/block/collection"
 class="link">block
          collection</a>. Note that <a  href="#style/flow/"  class="link">flow nodes</a> may begin on a following line.
        </p>
            <p>
          It is at this point that <a  href="#parse//"  class="link">parsing</a>
          needs to distinguish between a <a  href="#style/flow/plain"  class="link">plain scalar</a> and an
          <a  href="#key/implicit/"  class="link">implicit key</a>
          starting a nested <a  href="#style/block/mapping"  class="link">block mapping</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[196]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-l+block-node(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-l+block-in-block%28n,c%29">s-l+block-in-block(n,c)</a>
              | <a  href="#s-l+flow-in-block%28n%29">s-l+flow-in-block(n)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[197]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-l+flow-in-block(n)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-separate%28n,c%29">s-separate(n+1,flow-out)</a><br />
              <a  href="#ns-flow-node%28n,c%29">ns-flow-node(n+1,flow-out)</a>
              <a  href="#s-l-comments">s-l-comments</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.20. Block Node Types</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">-<code  class="filename">↓<br />··"flow in block"↓</code>
-·<code  class="literal">>
 Block scalar↓</code>
-·<code  class="literal">!!map # Block collection
  foo : bar↓</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#s-l+flow-in-block%28n%29"  class="link">s-l+flow-in-block(n)</a></code>
  <code  class="literal"><a  href="#s-l+block-in-block%28n,c%29"  class="link">s-l+block-in-block(n,c)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!seq [
  !!str "flow in block",
  !!str "Block scalar\n",
  !!map {
    ? !!str "foo"
    : !!str "bar",
  },
]
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          The block <a  href="#node/property/"  class="link">node’s
          properties</a> may span across several lines. In this case,
          they must be <a  href="#space/indentation/"  class="link">indented</a> by at least one more
          <a  href="#space//"  class="link">space</a> than the <a  href="#style/block/collection"
 class="link">block
          collection</a>, regardless of the <a  href="#space/indentation/"  class="link">indentation</a> of the <a
 href="#style/block/collection"  class="link">block
          collection</a> entries.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[198]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-l+block-in-block(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-l+block-scalar%28n,c%29">s-l+block-scalar(n,c)</a>
              | <a  href="#s-l+block-collection%28n,c%29">s-l+block-collection(n,c)</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[199]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-l+block-scalar(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-separate%28n,c%29">s-separate(n+1,c)</a><br />
              ( <a  href="#c-ns-properties%28n,c%29">c-ns-properties(n+1,c)</a>
              <a  href="#s-separate%28n,c%29">s-separate(n+1,c)</a> )?<br />
              ( <a  href="#c-l+literal%28n%29">c-l+literal(n)</a>
              | <a  href="#c-l+folded%28n%29">c-l+folded(n)</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.21. Block Scalar Nodes</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">literal: <code  class="filename">|2<br />··value</code>
folded:<code  class="literal">↓
···!foo
··>1
·value</code>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-l+literal%28n%29"  class="link">c-l+literal(n)</a></code> <code
 class="literal"><a  href="#c-l+folded%28n%29"  class="link">c-l+folded(n)</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "literal"
  : !!str "value",
  ? !!str "folded"
  : !<!--foo--> "value",
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            <br  class="example-break" />
            <p>
          Since people perceive the <a  href="#-%20block%20sequence%20entry//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>-</code></strong></span>” indicator</a> as <a
 href="#space/indentation/"  class="link">indentation</a>, nested
          <a  href="#style/block/sequence"  class="link">block
          sequences</a> may be <a  href="#space/indentation/"  class="link">indented</a> by one less <a
 href="#space//"  class="link">space</a> to compensate, except, of course, if
          nested inside another <a  href="#style/block/sequence"  class="link">block sequence</a> (<a
 href="#context/block-out/"  class="link"><strong  class="userinput"><code>block-out</code></strong>
          context</a> vs. <a  href="#context/block-in/"  class="link"><strong  class="userinput"><code>block-in</code></strong>
          context</a>).
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[200]</td>
                      <td  valign="top"  align="right"  class="productionlhs">s-l+block-collection(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              ( <a  href="#s-separate%28n,c%29">s-separate(n+1,c)</a>
              <a  href="#c-ns-properties%28n,c%29">c-ns-properties(n+1,c)</a> )?<br />
              <a  href="#s-l-comments">s-l-comments</a><br />
              ( <a  href="#l+block-sequence%28n%29">l+block-sequence(</a><a  href="#seq-spaces%28n,c%29">seq-spaces(n,c)</a><a
 href="#l+block-sequence%28n%29">)</a><br />
              | <a  href="#l+block-mapping%28n%29">l+block-mapping(n)</a> )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[201]</td>
                      <td  valign="top"  align="right"  class="productionlhs">seq-spaces(n,c)</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <code  class="varname">c</code> = block-out ⇒ n-1<br />
              <code  class="varname">c</code> = block-in  ⇒ n
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 8.22. Block Collection Nodes</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">sequence:<span  class="honorific"><span
 class="property"> !!seq<br /><code  class="filename">- entry
- !!seq
 - nested</code></span></span>
mapping:<span  class="honorific"><span  class="property"> !!map
<code  class="literal"> foo: bar</code></span></span>
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#l+block-sequence%28n%29"  class="link">l+block-sequence(n)</a></code>
  <code  class="literal"><a  href="#l+block-mapping%28n%29"  class="link">l+block-mapping(n)</a></code>
  <span  class="property"><a  href="#s-l+block-collection%28n,c%29"  class="link">s-l+block-collection(n,c)</a></span>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  ? !!str "sequence"
  : !!seq [
    !!str "entry",
    !!seq [ !!str "nested" ],
  ],
  ? !!str "mapping"
  : !!map {
    ? !!str "foo" : !!str "bar",
  },
}
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Chapter 9. YAML Character Stream</h2>
            </div>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">9.1. Documents</h2>
              </div>
            </div>
          </div>
          <p>
        A YAML character <a  href="#stream//"  class="link">stream</a> may contain
        several <em  class="firstterm">documents</em>. Each document
        is completely independent from the rest.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">9.1.1. Document Prefix</h3>
                </div>
              </div>
            </div>
            <p>
          A document may be preceded by a <em  class="firstterm">prefix</em> specifying the <a
 href="#character%20encoding//"  class="link">character encoding</a>, and
          optional <a  href="#comment//"  class="link">comment</a> lines. Note
          that all <a  href="#document//"  class="link">documents</a> in a stream
          must use the same <a  href="#character%20encoding//"  class="link">character
          encoding</a>. However it is valid to re-specify the <a  href="#character%20encoding//"
 class="link">encoding</a> using a <a  href="#byte%20order%20mark//"  class="link">byte order mark</a> for each <a
 href="#document//"  class="link">document</a> in the stream. This makes it
          easier to concatenate streams.
        </p>
            <p>
          The existence of the optional prefix does not necessarily indicate
          the existence of an actual <a  href="#document//"  class="link">document</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[202]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-document-prefix</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-byte-order-mark">c-byte-order-mark</a>?
              <a  href="#l-comment">l-comment</a>*
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 9.1. Document Prefix</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">⇔# Comment<br /># lines</code>
Document
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#l-document-prefix"  class="link">l-document-prefix</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "Document"
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">9.1.2. Document Markers</h3>
                </div>
              </div>
            </div>
            <p>
          Using <a  href="#directive//"  class="link">directives</a> creates a
          potential ambiguity. It is valid to have a <a  href="#%%20directive//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>%</code></strong></span>”</a> character at the start of a
          line (e.g. as the first character of the second line of a <a  href="#style/flow/plain"
 class="link">plain
          scalar</a>). How, then, to distinguish between an actual
          <a  href="#directive//"  class="link">directive</a> and a <a  href="#content//"
 class="link">content</a> line that happens to start with a
          <a  href="#%%20directive//"  class="link">“<span  class="quote"><strong
 class="userinput"><code>%</code></strong></span>”</a>
          character?
        </p>
            <p>
          The solution is the use of two special <em  class="firstterm">marker</em> lines to control the processing of
          <a  href="#directive//"  class="link">directives</a>, one at the start
          of a <a  href="#document//"  class="link">document</a> and one at the
          end.
        </p>
            <p>
          At the start of a <a  href="#document//"  class="link">document</a>,
          lines beginning with a <a  href="#%%20directive//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>%</code></strong></span>”</a> character are assumed to be
          <a  href="#directive//"  class="link">directives</a>. The (possibly
          empty) list of <a  href="#directive//"  class="link">directives</a> is
          terminated by a <em  class="firstterm">directives end marker</em> line. Lines following this
          marker can safely use <a  href="#%%20directive//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>%</code></strong></span>”</a> as the first character.
        </p>
            <p>
          At the end of a <a  href="#document//"  class="link">document</a>, a
          <em  class="firstterm">document end
          marker</em> line is used to signal the <a  href="#parse//"  class="link">parser</a> to begin scanning for <a
 href="#directive//"  class="link">directives</a> again.
        </p>
            <p>
          The existence of this optional <em  class="firstterm">document suffix</em> does not necessarily
          indicate the existence of an actual following <a  href="#document//"  class="link">document</a>.
        </p>
            <p>
          Obviously, the actual <a  href="#content//"  class="link">content</a>
          lines are therefore forbidden to begin with either of these markers.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[203]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-directives-end</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              “<span  class="quote">-</span>” “<span  class="quote">-</span>” “<span
 class="quote">-</span>”
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[204]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-document-end</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              “<span  class="quote">.</span>” “<span  class="quote">.</span>” “<span
 class="quote">.</span>”
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[205]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-document-suffix</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-document-end">c-document-end</a>
              <a  href="#s-l-comments">s-l-comments</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                    <tr>
                      <td  valign="top"  align="left"  class="productioncounter">[206]</td>
                      <td  valign="top"  align="right"  class="productionlhs">c-forbidden</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              /* Start of line */<br />
              ( <a  href="#c-directives-end">c-directives-end</a>
              | <a  href="#c-document-end">c-document-end</a> )<br />
              ( <a  href="#b-char">b-char</a>
              | <a  href="#s-white">s-white</a>
              | /* End of file */ )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 9.2. Document Markers</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2
<code  class="filename">---</code>
Document
<span  class="honorific"><span  class="property"><code  class="literal">...</code> # Suffix</span></span>
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "Document"
</span></pre>
<pre  class="synopsis">Legend:
  <code  class="filename"><a  href="#c-directives-end"  class="link">c-directives-end</a></code> <code
 class="literal"><a  href="#c-document-end"  class="link">c-document-end</a></code>
  <span  class="property"><a  href="#l-document-suffix"  class="link">l-document-suffix</a></span>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">9.1.3. Bare Documents</h3>
                </div>
              </div>
            </div>
            <p>
          A <em  class="firstterm">bare
          document</em> does not begin with any <a  href="#directive//"  class="link">directives</a> or <a
 href="#marker//"  class="link">marker</a> lines. Such documents are very
          “<span  class="quote">clean</span>” as they contain nothing other than the <a
 href="#content//"  class="link">content</a>. In this case, the first
          non-comment line may not start with a <a  href="#%%20directive//"  class="link">“<span
 class="quote"><strong  class="userinput"><code>%</code></strong></span>”</a> first character.
        </p>
            <p>
          Document <a  href="#node//"  class="link">nodes</a> are <a  href="#space/indentation/"
 class="link">indented</a> as if they
          have a parent <a  href="#space/indentation/"  class="link">indented</a> at -1 <a
 href="#space//"  class="link">spaces</a>. Since a <a  href="#node//"  class="link">node</a> must be more <a
 href="#space/indentation/"  class="link">indented</a> than its parent <a  href="#node//"
 class="link">node</a>, this allows the document’s <a  href="#node//"  class="link">node</a> to be <a
 href="#space/indentation/"  class="link">indented</a> at zero or more <a  href="#space//"
 class="link">spaces</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[207]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-bare-document</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#s-l+block-node%28n,c%29">s-l+block-node(-1,block-in)</a><br />
              /* Excluding <a  href="#c-forbidden">c-forbidden</a> content */
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 9.3. Bare Documents</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">Bare<br />document</code>
...
# No document
...
<code  class="filename">|
%!PS-Adobe-2.0 # Not the first line</code>
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "Bare document"
%YAML 1.2
---
!!str "%!PS-Adobe-2.0\n"
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#l-bare-document"  class="link">l-bare-document</a></code>
</pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">9.1.4. Explicit Documents</h3>
                </div>
              </div>
            </div>
            <p>
          An <em  class="firstterm">explicit
          document</em> begins with an explicit <a  href="#marker/directives%20end/"
 class="link">directives end marker</a> line but
          no <a  href="#directive//"  class="link">directives</a>. Since the
          existence of the <a  href="#document//"  class="link">document</a> is
          indicated by this <a  href="#marker//"  class="link">marker</a>, the
          <a  href="#document//"  class="link">document</a> itself may be <a  href="#node/completely%20empty/"
 class="link">completely
          empty</a>.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[208]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-explicit-document</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#c-directives-end">c-directives-end</a><br />
              ( <a  href="#l-bare-document">l-bare-document</a><br />
              | ( <a  href="#e-node">e-node</a>
                <a  href="#s-l-comments">s-l-comments</a> ) )
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 9.4. Explicit Documents</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">---<br />{ matches
% : 20 }</code>
...
<code  class="filename">---
# Empty</code>
...
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#l-explicit-document"  class="link">l-explicit-document</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  !!str "matches %": !!int "20"
}
...
%YAML 1.2
---
!!null ""
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">9.1.5. Directives Documents</h3>
                </div>
              </div>
            </div>
            <p>
          A <em  class="firstterm">directives
          document</em> begins with some <a  href="#directive//"  class="link">directives</a> followed by an explicit
          <a  href="#marker/directives%20end/"  class="link">directives end
          marker</a> line.
        </p>
            <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
              <tbody><tr>
                <td  width="50%">
                  <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                    <tbody><tr>
                      <td  valign="top"  align="left"  class="productioncounter">[209]</td>
                      <td  valign="top"  align="right"  class="productionlhs">l-directive-document</td>
                      <td  valign="top"  align="center"  class="productionseperator">
                        <code>::=</code>
                      </td>
                      <td  valign="top"  class="productionrhs">
              <a  href="#l-directive">l-directive</a>+<br />
              <a  href="#l-explicit-document">l-explicit-document</a>
            </td>
                      <td  class="productioncomment"> <br /></td>
                    </tr>
                  </tbody></table>
                </td>
              </tr>
            </tbody></table>
            <div  class="example">
              
              <p  class="title">
                <b>Example 9.5. Directives Documents</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">%YAML 1.2<br />--- |
%!PS-Adobe-2.0</code>
...
<code  class="filename">%YAML1.2
---
# Empty</code>
...
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#l-explicit-document"  class="link">l-explicit-document</a></code>
</pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "%!PS-Adobe-2.0\n"
...
%YAML 1.2
---
!!null ""
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">9.2. Streams</h2>
              </div>
            </div>
          </div>
          <p>
        A YAML <em  class="firstterm">stream</em> consists of zero or
        more <a  href="#document//"  class="link">documents</a>. Subsequent
        <a  href="#document//"  class="link">documents</a> require some sort of
        separation <a  href="#marker//"  class="link">marker</a> line. If a
        <a  href="#document//"  class="link">document</a> is not terminated by a
        <a  href="#marker/document%20end/"  class="link">document end
        marker</a> line, then the following <a  href="#document//"  class="link">document</a> must begin with a <a
 href="#marker/directives%20end/"  class="link">directives end
        marker</a> line.
      </p>
          <p>
        The stream format is intentionally “<span  class="quote">sloppy</span>” to better
        support common use cases, such as stream concatenation.
      </p>
          <table  width="100%"  cellpadding="5"  summary="EBNF"  class="productionset">
            <tbody><tr>
              <td  width="50%">
                <table  width="99%"  cellpadding="0"  border="0"  summary="EBNF productions"
 class="productionset">
                  <tbody><tr>
                    <td  valign="top"  align="left"  class="productioncounter">[210]</td>
                    <td  valign="top"  align="right"  class="productionlhs">l-any-document</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
              <a  href="#l-directive-document">l-directive-document</a><br />
            | <a  href="#l-explicit-document">l-explicit-document</a><br />
            | <a  href="#l-bare-document">l-bare-document</a>
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                  <tr>
                    <td  valign="top"  align="left"  class="productioncounter">[211]</td>
                    <td  valign="top"  align="right"  class="productionlhs">l-yaml-stream</td>
                    <td  valign="top"  align="center"  class="productionseperator">
                      <code>::=</code>
                    </td>
                    <td  valign="top"  class="productionrhs">
            <a  href="#l-document-prefix">l-document-prefix</a>*
            <a  href="#l-any-document">l-any-document</a>?<br />
            ( <a  href="#l-document-suffix">l-document-suffix</a>+
            <a  href="#l-document-prefix">l-document-prefix</a>*
            <a  href="#l-any-document">l-any-document</a>?<br />
            | <a  href="#l-document-prefix">l-document-prefix</a>*
            <a  href="#l-explicit-document">l-explicit-document</a>? )*
          </td>
                    <td  class="productioncomment"> <br /></td>
                  </tr>
                </tbody></table>
              </td>
            </tr>
          </tbody></table>
          <div  class="example">
            
            <p  class="title">
              <b>Example 9.6. Stream</b>
            </p>
            <div  class="example-contents">
              <table  border="0"  summary="Simple list"  class="simplelist">
                <tbody><tr>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database"><code  class="filename">Document</code><br /><code
 class="filename">---
# Empty</code>
...
<span  class="property">%YAML 1.2
---
matches %: 20</span>
</span></pre>
<pre  class="synopsis"> Legend:
   <code  class="filename"><a  href="#l-any-document"  class="link">l-any-document</a></code>
   <code  class="literal"><a  href="#l-document-suffix"  class="link">l-document-suffix</a></code>
   <span  class="property"><a  href="#l-explicit-document"  class="link">l-explicit-document</a></span>
</pre>
            </td>
                  <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!str "Document"
...
%YAML 1.2
---
!!null ""
...
%YAML 1.2
---
!!map {
  !!str "matches %": !!int "20"
}
</span></pre>
            </td>
                </tr>
              </tbody></table>
            </div>
          </div>
          <br  class="example-break" />
          <p>
        A sequence of bytes is a <em  class="firstterm">well-formed stream</em> if, taken as a
        whole, it complies with the above <strong  class="userinput"><code>l-yaml-stream</code></strong>
        production.
      </p>
          <p>
        Some common use case that can take advantage of the YAML stream
        structure are:
      </p>
          <div  class="variablelist">
            <dl>
              <dt>
                <span  class="term">Appending to Streams</span>
              </dt>
              <dd>
            Allowing multiple <a  href="#document//"  class="link">documents</a>
            in a single stream makes YAML suitable for log files and similar
            <a  href="#application//"  class="link">applications</a>. Note that
            each <a  href="#document//"  class="link">document</a> is independent
            of the rest, allowing for heterogeneous log file entries.
          </dd>
              <dt>
                <span  class="term">Concatenating Streams</span>
              </dt>
              <dd>
                <p>
              Concatenating two YAML streams requires both to use the same
              <a  href="#character%20encoding//"  class="link">character
              encoding</a>. In addition, it is necessary to separate the
              last <a  href="#document//"  class="link">document</a> of the first
              stream and the first <a  href="#document//"  class="link">document</a> of the second stream. This
              is easily ensured by inserting a <a  href="#marker/document%20end/"
 class="link">document end marker</a> between
              the two streams. Note that this is safe regardless of the content
              of either stream. In particular, either or both may be empty, and
              the first stream may or may not already contain such a marker.
            </p>
              </dd>
              <dt>
                <span  class="term">Communication Streams</span>
              </dt>
              <dd>
                <p>
              The <a  href="#marker/document%20end/"  class="link">document
              end marker</a> allows signaling the end of a <a  href="#document//"
 class="link">document</a> without closing the stream
              or starting the next <a  href="#document//"  class="link">document</a>. This allows the receiver
              to complete processing a <a  href="#document//"  class="link">document</a> without having to wait for
              the next one to arrive. The sender may also transmit "keep-alive"
              messages in the form of <a  href="#comment//"  class="link">comment</a> lines or repeated <a
 href="#marker/document%20end/"  class="link">document end
              markers</a> without signalling the start of the next
              <a  href="#document//"  class="link">document</a>.
            </p>
              </dd>
            </dl>
          </div>
        </div>
      </div>
      <div  lang="en"  xml:lang="en"  class="chapter">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Chapter 10. Recommended Schemas</h2>
            </div>
          </div>
        </div>
        <p>
      A YAML <em  class="firstterm">schema</em> is a combination of a
      set of <a  href="#tag//"  class="link">tags</a> and a mechanism for <a  href="#tag/resolution/"
 class="link">resolving</a> <a  href="#tag/non-specific/"  class="link">non-specific tags</a>.
    </p>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">10.1. Failsafe Schema</h2>
              </div>
            </div>
          </div>
          <p>
        The <em  class="firstterm">failsafe
        schema</em> is guaranteed to work with any YAML <a  href="#document//"  class="link">document</a>. It is therefore the recommended
        <a  href="#schema//"  class="link">schema</a> for generic YAML tools. A
        YAML <a  href="#processor//"  class="link">processor</a> should therefore
        support this <a  href="#schema//"  class="link">schema</a>, at least as an
        option.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">10.1.1. Tags</h3>
                </div>
              </div>
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.1.1.1. <em  class="firstterm"></em>Generic Mapping</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#mapping//"  class="link">Mapping</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> an
                  associative container, where each <a  href="#key//"  class="link">key</a> is unique in the association and
                  mapped to exactly one <a  href="#value//"  class="link">value</a>.  YAML places no restrictions
                  on the type of <a  href="#key//"  class="link">keys</a>; in
                  particular, they are not restricted to being <a  href="#scalar//"
 class="link">scalars</a>. Example <a  href="#construct//"  class="link">bindings</a> to <a
 href="#native%20data%20structure//"  class="link">native</a> types
                  include Perl’s hash, Python’s dictionary, and Java’s
                  Hashtable.
                </p>
                  </dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.1. <code  class="userinput">!!map</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">Block style: !!map<br />  Clark : Evans
  Ingy  : döt Net
  Oren  : Ben-Kiki

Flow style: !!map { Clark: Evans, Ingy: döt Net, Oren: Ben-Kiki }
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.1.1.2. <em  class="firstterm"></em>Generic Sequence</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#sequence//"  class="link">Sequence</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> a
                  collection indexed by sequential integers starting with zero.
                  Example <a  href="#construct//"  class="link">bindings</a> to
                  <a  href="#native%20data%20structure//"  class="link">native</a>
                  types include Perl’s array, Python’s list or tuple, and
                  Java’s array or Vector.
                </p>
                  </dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.2. <code  class="userinput">!!seq</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">Block style: !!seq<br />- Clark Evans
- Ingy döt Net
- Oren Ben-Kiki

Flow style: !!seq [ Clark Evans, Ingy döt Net, Oren Ben-Kiki ]
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.1.1.3. <em  class="firstterm"></em>Generic String</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#scalar//"  class="link">Scalar</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> a Unicode
                  string, a sequence of zero or more Unicode characters. This
                  type is usually <a  href="#construct//"  class="link">bound</a>
                  to the <a  href="#native%20data%20structure//"  class="link">native</a> language’s string type, or,
                  for languages lacking one (such as C), to a character array.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Canonical Form:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  The obvious.
                </p>
                  </dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.3. <code  class="userinput">!!str</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">Block style: !!str |-<br />  String: just a theory.

Flow style: !!str "String: just a theory."
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">10.1.2. Tag Resolution</h3>
                </div>
              </div>
            </div>
            <p>
          All <a  href="#node//"  class="link">nodes</a> with the <a  href="#%21%20tag%20indicator/%21%20non-specific%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>” non-specific tag</a> are <a
 href="#tag/resolution/"  class="link">resolved</a>, by the
          standard <a  href="#tag/resolution/convention"  class="link">convention</a>, to
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>”,
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>”, or
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong></span>”, according to their <a
 href="#kind//"  class="link">kind</a>.
        </p>
            <p>
          All <a  href="#node//"  class="link">nodes</a> with the <a  href="#?%20non-specific%20tag//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” non-specific
          tag</a> are left <a  href="#tag/resolution/"  class="link">unresolved</a>. This constrains the
          <a  href="#application//"  class="link">application</a> to deal with  a
          <a  href="#representation/partial/"  class="link">partial
          representation</a>.
        </p>
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">10.2. JSON Schema</h2>
              </div>
            </div>
          </div>
          <p>
        The <em  class="firstterm">JSON schema</em> is
        the lowest common denominator of most modern computer languages, and
        allows <a  href="#parse//"  class="link">parsing</a> JSON files. A YAML
        <a  href="#processor//"  class="link">processor</a> should therefore
        support this <a  href="#schema//"  class="link">schema</a>, at least as an
        option. It is also strongly recommended that other <a  href="#schema//"
 class="link">schemas</a> should be based on it.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">10.2.1. Tags</h3>
                </div>
              </div>
            </div>
            <p>
          The JSON <a  href="#schema//"  class="link">schema</a> uses the
          following <a  href="#tag//"  class="link">tags</a> in addition to those
          defined by the <a  href="#schema/failsafe/"  class="link">failsafe</a> schema:
        </p>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.2.1.1. <em  class="firstterm"></em>Null</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:null</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#scalar//"  class="link">Scalar</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> the lack
                  of a value. This is typically <a  href="#construct//"  class="link">bound</a> to a <a
 href="#native%20data%20structure//"  class="link">native</a> null-like
                  value (e.g., <strong  class="userinput"><code>undef</code></strong> in Perl,
                  <strong  class="userinput"><code>None</code></strong> in Python). Note that a null is
                  different from an empty string. Also, a <a  href="#mapping//"
 class="link">mapping</a> entry with some
                  <a  href="#key//"  class="link">key</a> and a null <a  href="#value//"
 class="link">value</a> is valid, and different
                  from not having that <a  href="#key//"  class="link">key</a>
                  in the <a  href="#mapping//"  class="link">mapping</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Canonical Form:
                </p>
              </span>
                  </dt>
                  <dd><strong  class="userinput"><code>null</code></strong>.
              </dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.4. <code  class="userinput">!!null</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">!!null null: value for null key<br />key with null value: !!null null
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.2.1.2. <em  class="firstterm"></em>Boolean</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:bool</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#scalar//"  class="link">Scalar</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> a
                  true/false value. In languages without a <a  href="#native%20data%20structure//"
 class="link">native</a> Boolean type
                  (such as C), is usually <a  href="#construct//"  class="link">bound</a> to a native integer
                  type, using one for true and zero for false.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Canonical Form:
                </p>
              </span>
                  </dt>
                  <dd>
                Either <strong  class="userinput"><code>true</code></strong> or
                <strong  class="userinput"><code>false</code></strong>.
              </dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.5. <code  class="userinput">!!bool</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">YAML is a superset of JSON: !!bool true<br />Pluto is a planet: !!bool false
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.2.1.3. <em  class="firstterm"></em>Integer</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:int</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#scalar//"  class="link">Scalar</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> arbitrary
                  sized finite mathematical integers. Scalars of this type
                  should be <a  href="#construct//"  class="link">bound</a> to a
                  <a  href="#native%20data%20structure//"  class="link">native</a>
                  integer data type, if possible.
                </p>
                    <p>
                  Some languages (such as Perl) provide only a
                  “<span  class="quote">number</span>” type that allows for both integer and
                  floating-point values. A YAML <a  href="#processor//"  class="link">processor</a> may use such a type
                  for integers, as long as they round-trip properly.
                </p>
                    <p>
                  In some languages (such as C), an integer may overflow the
                  <a  href="#native%20data%20structure//"  class="link">native</a>
                  type’s storage capability. A YAML <a  href="#processor//"  class="link">processor</a> may reject such a
                  value as an error, truncate it with a warning, or find some
                  other manner to round-trip it. In general, integers
                  representable using 32 binary digits should safely round-trip
                  through most systems.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Canonical Form:
                </p>
              </span>
                  </dt>
                  <dd>
                Decimal integer notation, with a leading “<span  class="quote"><strong
 class="userinput"><code>-</code></strong></span>”
                character for negative values, matching the regular expression
                <strong  class="userinput"><code>0 | -? [1-9] [0-9]*</code></strong></dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.6. <code  class="userinput">!!int</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">negative: !!int -12<br />zero: !!int 0
positive: !!int 34
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
            <div  lang="en"  xml:lang="en"  class="sect3">
              <div  class="titlepage">
                <div>
                  <div>
                    <h4  class="title">10.2.1.4. <em  class="firstterm"></em>Floating Point</h4>
                  </div>
                </div>
              </div>
              <div  class="variablelist">
                <dl>
                  <dt>
                    <span  class="term">
                <p>
                  URI:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <strong  class="userinput"><code>tag:yaml.org,2002:float</code></strong>
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Kind:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#scalar//"  class="link">Scalar</a>.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Definition:
                </p>
              </span>
                  </dt>
                  <dd>
                    <p>
                  <a  href="#represent//"  class="link">Represents</a> an
                  approximation to real numbers, including three special values
                  (positive and negative infinity, and “<span  class="quote">not a
                  number</span>”).
                </p>
                    <p>
                  Some languages (such as Perl) provide only a
                  “<span  class="quote">number</span>” type that allows for both integer and
                  floating-point values. A YAML <a  href="#processor//"  class="link">processor</a> may use such a type
                  for floating-point numbers, as long as they round-trip
                  properly.
                </p>
                    <p>
                  Not all floating-point values can be stored exactly in any
                  given <a  href="#native%20data%20structure//"  class="link">native</a> type. Hence a float value may
                  change by “<span  class="quote">a small amount</span>” when round-tripped.
                  The supported range and accuracy depends on the
                  implementation, though 32 bit IEEE floats should be safe.
                  Since YAML does not specify a particular accuracy, using
                  floating-point <a  href="#key//"  class="link">mapping keys</a>
                  requires great care and is not recommended.
                </p>
                  </dd>
                  <dt>
                    <span  class="term">
                <p>
                  Canonical Form:
                </p>
              </span>
                  </dt>
                  <dd>
                Either <strong  class="userinput"><code>0</code></strong>, <strong
 class="userinput"><code>.inf</code></strong>,
                <strong  class="userinput"><code>-.inf</code></strong>, <strong
 class="userinput"><code>.nan</code></strong>, or
                scientific notation matching the regular expression
                <strong  class="userinput"><code>-? [1-9] ( \. [0-9]* [1-9] )? ( e [-+] [1-9] [0-9]* )?</code></strong>.
              </dd>
                </dl>
              </div>
              <div  class="example">
                
                <p  class="title">
                  <b>Example 10.7. <code  class="userinput">!!float</code> Examples</b>
                </p>
                <div  class="example-contents">
                  <table  border="0"  summary="Simple list"  class="simplelist">
                    <tbody><tr>
                      <td  width="50%">
<pre  class="programlisting"><span  class="database">negative: !!float -1<br />zero: !!float 0
positive: !!float 2.3e4
infinity: !!float .inf
not a number: !!float .nan
</span></pre>
              </td>
                    </tr>
                  </tbody></table>
                </div>
              </div>
              
            </div>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">10.2.2. Tag Resolution</h3>
                </div>
              </div>
            </div>
            <p>
          The <a  href="#schema/JSON/"  class="link">JSON schema</a>
          <a  href="#tag/resolution/"  class="link">tag
          resolution</a> is an extension of the <a  href="#schema/failsafe/"  class="link">failsafe schema</a> <a
 href="#tag/resolution/"  class="link">tag resolution</a>.
        </p>
            <p>
          All <a  href="#node//"  class="link">nodes</a> with the <a  href="#%21%20tag%20indicator/%21%20non-specific%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>” non-specific tag</a> are <a
 href="#tag/resolution/"  class="link">resolved</a>, by the
          standard <a  href="#tag/resolution/convention"  class="link">convention</a>, to
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>”,
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>”, or
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong></span>”, according to their <a
 href="#kind//"  class="link">kind</a>.
        </p>
            <p>
          <a  href="#collection//"  class="link">Collections</a> with the <a  href="#?%20non-specific%20tag//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” non-specific
          tag</a> (that is, <a  href="#tag/non-specific/"  class="link">untagged</a> <a
 href="#collection//"  class="link">collections</a>) are <a  href="#tag/resolution/"
 class="link">resolved</a> to
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>” or
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>” according to their <a
 href="#kind//"  class="link">kind</a>.
        </p>
            <p> <a  href="#scalar//"  class="link">Scalars</a> with the <a  href="#?%20non-specific%20tag//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” non-specific
          tag</a> (that is, <a  href="#style/flow/plain"  class="link">plain scalars</a>) are matched with a list of
          regular expressions (first match wins, e.g. <strong  class="userinput"><code>0</code></strong>
          is resolved as <strong  class="userinput"><code>!!int</code></strong>). In principle, JSON
          files should not contain any <a  href="#scalar//"  class="link">scalars</a> that do not match at least one of
          these. Hence the YAML <a  href="#processor//"  class="link">processor</a> should consider them to be an
          error.
        </p>
            <div  class="informaltable">
              <table  border="0"  style="width: 0%">
                <colgroup>
                  <col />
                  <col />
                </colgroup>
                <tbody>
                  <tr>
                    <td  width="50%"> <span  class="emphasis"><em>Regular expression </em></span></td>
                    <td  width="50%"> <span  class="emphasis"><em> Resolved to tag</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>null</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:null</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>true | false</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:bool</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>-? ( 0 | [1-9] [0-9]* )</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:int</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>-? ( 0 | [1-9] [0-9]* ) ( \. [0-9]* )? ( [eE] [-+]? [0-9]+ )?</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:float</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>*</code></strong></td>
                    <td  width="50%"> Error</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div  class="example">
              
              <p  class="title">
                <b>Example 10.8. JSON Tag Resolution</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">A null: null<br />Booleans: [ true, false ]
Integers: [ 0, -0, 3, -19 ]
Floats: [ 0., -0.0, 12e03, -2E+05 ]
Invalid: [ True, Null, 0o7, 0x3A, +12.3 ]
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  !!str "A null" : !!null "null",
  !!str "Booleans: !!seq [
    !!bool "true", !!bool "false"
  ],
  !!str "Integers": !!seq [
    !!int "0", !!int "-0",
    !!int "3", !!int "-19"
  ],
  !!str "Floats": !!seq [
    !!float "0.", !!float "-0.0",
    !!float "12e03", !!float "-2E+05"
  ],
  !!str "Invalid": !!seq [
    # Rejected by the schema
    True, Null, 0o7, 0x3A, +12.3,
  ],
}
...
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">10.3. Core Schema</h2>
              </div>
            </div>
          </div>
          <p>
        The <em  class="firstterm">Core schema</em> is
        an extension of the <a  href="#schema/JSON/"  class="link">JSON
        schema</a>, allowing for more human-readable <a  href="#present//"  class="link">presentation</a> of the same types. This is the
        recommended default <a  href="#schema//"  class="link">schema</a> that
        YAML <a  href="#processor//"  class="link">processor</a> should use unless
        instructed otherwise. It is also strongly recommended that other
        <a  href="#schema//"  class="link">schemas</a> should be based on it.
      </p>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">10.3.1. Tags</h3>
                </div>
              </div>
            </div>
            <p>
          The core <a  href="#schema//"  class="link">schema</a> uses the same
          <a  href="#tag//"  class="link">tags</a> as the <a  href="#schema/JSON/"
 class="link">JSON schema</a>.
        </p>
          </div>
          <div  lang="en"  xml:lang="en"  class="sect2">
            <div  class="titlepage">
              <div>
                <div>
                  <h3  class="title">10.3.2. Tag Resolution</h3>
                </div>
              </div>
            </div>
            <p>
          The <a  href="#schema/core/"  class="link">core schema</a>
          <a  href="#tag/resolution/"  class="link">tag
          resolution</a> is an extension of the <a  href="#schema/JSON/"  class="link">JSON schema</a> <a
 href="#tag/resolution/"  class="link">tag resolution</a>.
        </p>
            <p>
          All <a  href="#node//"  class="link">nodes</a> with the <a  href="#%21%20tag%20indicator/%21%20non-specific%20tag/"
 class="link">“<span  class="quote"><strong  class="userinput"><code>!</code></strong></span>” non-specific tag</a> are <a
 href="#tag/resolution/"  class="link">resolved</a>, by the
          standard <a  href="#tag/resolution/convention"  class="link">convention</a>, to
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>”,
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>”, or
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong></span>”, according to their <a
 href="#kind//"  class="link">kind</a>.
        </p>
            <p>
          <a  href="#collection//"  class="link">Collections</a> with the <a  href="#?%20non-specific%20tag//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” non-specific
          tag</a> (that is, <a  href="#tag/non-specific/"  class="link">untagged</a> <a
 href="#collection//"  class="link">collections</a>) are <a  href="#tag/resolution/"
 class="link">resolved</a> to
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:seq</code></strong></span>” or
          “<span  class="quote"><strong  class="userinput"><code>tag:yaml.org,2002:map</code></strong></span>” according to their <a
 href="#kind//"  class="link">kind</a>.
        </p>
            <p>
          <a  href="#scalar//"  class="link">Scalars</a> with the <a  href="#?%20non-specific%20tag//"
 class="link">“<span  class="quote"><strong  class="userinput"><code>?</code></strong></span>” non-specific
          tag</a> (that is, <a  href="#style/flow/plain"  class="link">plain scalars</a>) are matched with an
          extended list of regular expressions. However, in this case, if none
          of the regular expressions matches, the <a  href="#scalar//"  class="link">scalar</a> is <a
 href="#tag/resolution/"  class="link">resolved</a> to
          <strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong> (that is, considered to
          be a string).
        </p>
            <div  class="informaltable">
              <table  border="0"  style="width: 0%">
                <colgroup>
                  <col />
                  <col />
                </colgroup>
                <tbody>
                  <tr>
                    <td  width="50%"> <span  class="emphasis"><em>Regular expression </em></span></td>
                    <td  width="50%"> <span  class="emphasis"><em> Resolved to tag</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>null | Null | NULL | ~</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:null</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>/* Empty */</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:null</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>true | True | TRUE | false | False | FALSE</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:bool</code></strong></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>[-+]? [0-9]+</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:int</code></strong> <span
 class="emphasis"><em>(Base 10)</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>0o [0-7]+</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:int</code></strong> <span
 class="emphasis"><em>(Base 8)</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>0x [0-9a-fA-F]+</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:int</code></strong> <span
 class="emphasis"><em>(Base 16)</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>[-+]? ( \. [0-9]+ | [0-9]+ ( \. [0-9]* )? ) ( [eE] [-+]? [0-9]+ )?</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:float</code></strong> <span
 class="emphasis"><em>(Number)</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>[-+]? ( \.inf | \.Inf | \.INF )</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:float</code></strong> <span
 class="emphasis"><em>(Infinity)</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>\.nan | \.NaN | \.NAN</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:float</code></strong> <span
 class="emphasis"><em>(Not a number)</em></span></td>
                  </tr>
                  <tr>
                    <td  width="50%"> <strong  class="userinput"><code>*</code></strong></td>
                    <td  width="50%"> <strong  class="userinput"><code>tag:yaml.org,2002:str</code></strong> <span
 class="emphasis"><em>(Default)</em></span></td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div  class="example">
              
              <p  class="title">
                <b>Example 10.9. Core Tag Resolution</b>
              </p>
              <div  class="example-contents">
                <table  border="0"  summary="Simple list"  class="simplelist">
                  <tbody><tr>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">A null: null<br />Also a null: # Empty
Not a null: ""
Booleans: [ true, True, false, FALSE ]
Integers: [ 0, 0o7, 0x3A, -19 ]
Floats: [ 0., -0.0, .5, +12e03, -2E+05 ]
Also floats: [ .inf, -.Inf, +.INF, .NAN ]
</span></pre>
            </td>
                    <td  width="50%">
<pre  class="programlisting"><span  class="database">%YAML 1.2<br />---
!!map {
  !!str "A null" : !!null "null",
  !!str "Also a null" : !!null "",
  !!str "Not a null" : !!str "",
  !!str "Booleans: !!seq [
    !!bool "true", !!bool "True",
    !!bool "false", !!bool "FALSE",
  ],
  !!str "Integers": !!seq [
    !!int "0", !!int "0o7",
    !!int "0x3A", !!int "-19",
  ],
  !!str "Floats": !!seq [
    !!float "0.", !!float "-0.0", !!float ".5",
    !!float "+12e03", !!float "-2E+05"
  ],
  !!str "Also floats": !!seq [
    !!float ".inf", !!float "-.Inf",
    !!float "+.INF", !!float ".NAN",
  ],
}
...
</span></pre>
            </td>
                  </tr>
                </tbody></table>
              </div>
            </div>
            
          </div>
        </div>
        <div  lang="en"  xml:lang="en"  class="sect1">
          <div  class="titlepage">
            <div>
              <div>
                <h2  style="clear: both"  class="title">10.4. Other Schemas</h2>
              </div>
            </div>
          </div>
          <p>
        None of the above recommended <a  href="#schema//"  class="link">schemas</a> preclude the use of arbitrary
        explicit <a  href="#tag//"  class="link">tags</a>. Hence YAML <a  href="#processor//"
 class="link">processors</a> for a particular programming
        language typically provide some form of <a  href="#tag/local/"  class="link">local tags</a> that map directly to the
        language’s <a  href="#native%20data%20structure//"  class="link">native data
        structures</a> (e.g., <strong  class="userinput"><code>!ruby/object:Set</code></strong>).
      </p>
          <p>
        While such <a  href="#tag/local/"  class="link">local
        tags</a> are useful for ad-hoc <a  href="#application//"  class="link">applications</a>, they do not suffice for
        stable, interoperable cross-<a  href="#application//"  class="link">application</a> or cross-platform data
        exchange.
      </p>
          <p>
        Interoperable <a  href="#schema//"  class="link">schemas</a> make use of
        <a  href="#tag/global/"  class="link">global tags</a> (URIs)
        that <a  href="#represent//"  class="link">represent</a> the same data
        across different programming languages. In addition, an interoperable
        <a  href="#schema//"  class="link">schema</a> may provide additional
        <a  href="#tag/resolution/"  class="link">tag resolution</a>
        rules. Such rules may provide additional regular expressions, as well
        as consider the path to the <a  href="#node//"  class="link">node</a>.
        This allows interoperable <a  href="#schema//"  class="link">schemas</a>
        to use <a  href="#tag/non-specific/"  class="link">untagged</a> <a  href="#node//"
 class="link">nodes</a>.
      </p>
          <p>
        It is strongly recommended that such <a  href="#schema//"  class="link">schemas</a> be based on the <a
 href="#schema/core/"  class="link">core schema</a> defined above.
        In addition, it is strongly recommended that such <a  href="#schema//"  class="link">schemas</a> make as much use as possible of the
        the <em  class="firstterm">YAML tag
        repository</em> at <a  target="_top"  href="http://yaml.org/type/"  class="ulink">http://yaml.org/type/</a>. This
        repository provides recommended <a  href="#tag/global/"  class="link">global tags</a> for increasing the portability
        of YAML <a  href="#document//"  class="link">documents</a> between
        different <a  href="#application//"  class="link">applications</a>.
      </p>
          <p>
        The tag repository is intentionally left out of the scope of this
        specification. This allows it to evolve to better support YAML <a  href="#application//"
 class="link">applications</a>. Hence, developers are
        encouraged to submit new “<span  class="quote">universal</span>” types to the
        repository. The yaml-core mailing list at <a  target="_top"  href="http://lists.sourceforge.net/lists/listinfo/yaml-core"
 class="ulink">http://lists.sourceforge.net/lists/listinfo/yaml-core</a> is the
        preferred method for such submissions, as well as raising any questions
        regarding this draft.
      </p>
        </div>
      </div>
      <div  class="index">
        <div  class="titlepage">
          <div>
            <div>
              <h2  class="title">Index</h2>
            </div>
          </div>
        </div>
        <div  class="index">
          <div  class="indexdiv">
            <h3>Indicators</h3>
            <dl>
              <a0:a0:a0:dt  xmlns:a0="http://www.w3.org/1999/xhtml"  xmlns=""  xmlns:a0="http://www.w3.org/1999/xhtml">! tag         indicator, <a0:a0:a0:a
 href="#id2761292">Tags</a0:a0:a0:a>, <a0:a0:a0:a  href="#id2772075">Indicator Characters</a0:a0:a0:a>, <a0:a0:a0:a
 href="#id2784064"  class="preferred">Node Tags</a0:a0:a0:a></a0:a0:a0:dt>
              <a2:a2:a2:dd  xmlns:a2="http://www.w3.org/1999/xhtml"  xmlns=""  xmlns:a2="http://www.w3.org/1999/xhtml">
                <a2:a2:a2:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">! local tag, <a2:a2:a2:a
 href="#id2764295"  class="preferred"  xmlns="">Tags</a2:a2:a2:a>, <a2:a2:a2:a  href="#id2782457"
 xmlns="">Tag Handles</a2:a2:a2:a>, <a2:a2:a2:a  href="#id2783273"  xmlns="">Tag Prefixes</a2:a2:a2:a>, <a2:a2:a2:a
 href="#id2784064"  xmlns="">Node Tags</a2:a2:a2:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">! non-specific           tag, <a2:a2:a2:a
 href="#id2768011"  class="preferred"  xmlns="">Resolved Tags</a2:a2:a2:a>, <a2:a2:a2:a
 href="#id2784064"  xmlns="">Node Tags</a2:a2:a2:a>, <a2:a2:a2:a  href="#id2803036"
 xmlns="">Tag Resolution</a2:a2:a2:a>, <a2:a2:a2:a  href="#id2804356"  xmlns="">Tag Resolution</a2:a2:a2:a>, <a2:a2:a2:a
 href="#id2805071"  xmlns="">Tag Resolution</a2:a2:a2:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">! primary tag                   handle, <a2:a2:a2:a
 href="#id2782457"  class="preferred"  xmlns="">Tag Handles</a2:a2:a2:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">!!                   secondary tag handle, <a2:a2:a2:a
 href="#id2782457"  class="preferred"  xmlns="">Tag Handles</a2:a2:a2:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">!…! named                   handle, <a2:a2:a2:a
 href="#id2782457"  class="preferred"  xmlns="">Tag Handles</a2:a2:a2:a>, <a2:a2:a2:a
 href="#id2784064"  xmlns="">Node Tags</a2:a2:a2:a></dt>
                </a2:a2:a2:dl>
              </a2:a2:a2:dd>
              <a30:a30:a30:dt  xmlns:a30="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a30="http://www.w3.org/1999/xhtml">" double-quoted           style, <a30:a30:a30:a
 href="#id2772075">Indicator Characters</a30:a30:a30:a>, <a30:a30:a30:a  href="#id2787109"
 class="preferred">Double-Quoted Style</a30:a30:a30:a></a30:a30:a30:dt>
              <a32:a32:a32:dt  xmlns:a32="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a32="http://www.w3.org/1999/xhtml"># comment, <a32:a32:a32:a  href="#id2759963">Collections</a32:a32:a32:a>, <a32:a32:a32:a
 href="#id2772075">Indicator Characters</a32:a32:a32:a>, <a32:a32:a32:a  href="#id2780069"
 class="preferred">Comments</a32:a32:a32:a>, <a32:a32:a32:a  href="#id2788859">Plain Style</a32:a32:a32:a>, <a32:a32:a32:a
 href="#id2793979">Block Indentation Indicator</a32:a32:a32:a></a32:a32:a32:dt>
              <a34:a34:a34:dt  xmlns:a34="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a34="http://www.w3.org/1999/xhtml">% directive, <a34:a34:a34:a  href="#id2772075">Indicator Characters</a34:a34:a34:a>, <a34:a34:a34:a
 href="#id2781147"  class="preferred">Directives</a34:a34:a34:a>, <a34:a34:a34:a
 href="#id2800401">Document Markers</a34:a34:a34:a>, <a34:a34:a34:a  href="#id2800967">Bare Documents</a34:a34:a34:a></a34:a34:a34:dt>
              <a36:a36:a36:dt  xmlns:a36="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a36="http://www.w3.org/1999/xhtml">% escaping in URI, <a36:a36:a36:a  href="#id2764295">Tags</a36:a36:a36:a>, <a36:a36:a36:a
 href="#id2775468"  class="preferred">Miscellaneous Characters</a36:a36:a36:a>, <a36:a36:a36:a
 href="#id2784064">Node Tags</a36:a36:a36:a></a36:a36:a36:dt>
              <a38:a38:a38:dt  xmlns:a38="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a38="http://www.w3.org/1999/xhtml">&         anchor, <a38:a38:a38:a  href="#id2760395">Structures</a38:a38:a38:a>, <a38:a38:a38:a
 href="#id2772075">Indicator Characters</a38:a38:a38:a>, <a38:a38:a38:a  href="#id2785586"
 class="preferred">Node Anchors</a38:a38:a38:a></a38:a38:a38:dt>
              <a40:a40:a40:dt  xmlns:a40="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a40="http://www.w3.org/1999/xhtml">' reserved           indicator, <a40:a40:a40:a
 href="#id2772075"  class="preferred">Indicator Characters</a40:a40:a40:a></a40:a40:a40:dt>
              <a42:a42:a42:dt  xmlns:a42="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a42="http://www.w3.org/1999/xhtml">' single-quoted           style, <a42:a42:a42:a
 href="#id2772075">Indicator Characters</a42:a42:a42:a>, <a42:a42:a42:a  href="#id2788097"
 class="preferred">Single-Quoted Style</a42:a42:a42:a></a42:a42:a42:dt>
              <a44:a44:a44:dt  xmlns:a44="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a44="http://www.w3.org/1999/xhtml">*         alias, <a44:a44:a44:a  href="#id2760395">Structures</a44:a44:a44:a>, <a44:a44:a44:a
 href="#id2772075">Indicator Characters</a44:a44:a44:a>, <a44:a44:a44:a  href="#id2786196"
 class="preferred">Alias Nodes</a44:a44:a44:a></a44:a44:a44:dt>
              <a46:a46:a46:dt  xmlns:a46="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a46="http://www.w3.org/1999/xhtml">+ keep                 chomping, <a46:a46:a46:a
 href="#id2794534"  class="preferred">Block Chomping Indicator</a46:a46:a46:a></a46:a46:a46:dt>
              <a48:a48:a48:dt  xmlns:a48="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a48="http://www.w3.org/1999/xhtml">, end flow entry, <a48:a48:a48:a  href="#id2759963">Collections</a48:a48:a48:a>, <a48:a48:a48:a
 href="#id2772075">Indicator Characters</a48:a48:a48:a>, <a48:a48:a48:a  href="#id2775468">Miscellaneous Characters</a48:a48:a48:a>, <a48:a48:a48:a
 href="#id2784064">Node Tags</a48:a48:a48:a>, <a48:a48:a48:a  href="#id2785586">Node Anchors</a48:a48:a48:a>, <a48:a48:a48:a
 href="#id2788859">Plain Style</a48:a48:a48:a>, <a48:a48:a48:a  href="#id2790088"
 class="preferred">Flow Collection Styles</a48:a48:a48:a>, <a48:a48:a48:a  href="#id2790320">Flow Sequences</a48:a48:a48:a>, <a48:a48:a48:a
 href="#id2790832">Flow Mappings</a48:a48:a48:a></a48:a48:a48:dt>
              <a50:a50:a50:dt  xmlns:a50="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a50="http://www.w3.org/1999/xhtml">- block sequence entry, <a50:a50:a50:a
 href="#Introduction">Introduction</a50:a50:a50:a>, <a50:a50:a50:a  href="#id2759963">Collections</a50:a50:a50:a>, <a50:a50:a50:a
 href="#id2760395">Structures</a50:a50:a50:a>, <a50:a50:a50:a  href="#id2769866">Production Parameters</a50:a50:a50:a>, <a50:a50:a50:a
 href="#id2772075">Indicator Characters</a50:a50:a50:a>, <a50:a50:a50:a  href="#id2777534">Indentation Spaces</a50:a50:a50:a>, <a50:a50:a50:a
 href="#id2788859">Plain Style</a50:a50:a50:a>, <a50:a50:a50:a  href="#id2797293">Block Collection Styles</a50:a50:a50:a>, <a50:a50:a50:a
 href="#id2797382"  class="preferred">Block Sequences</a50:a50:a50:a>, <a50:a50:a50:a
 href="#id2799181">Block Nodes</a50:a50:a50:a></a50:a50:a50:dt>
              <a52:a52:a52:dt  xmlns:a52="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a52="http://www.w3.org/1999/xhtml">- strip chomping, <a52:a52:a52:a  href="#id2794534"
 class="preferred">Block Chomping Indicator</a52:a52:a52:a></a52:a52:a52:dt>
              <a54:a54:a54:dt  xmlns:a54="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a54="http://www.w3.org/1999/xhtml">: mapping value, <a54:a54:a54:a  href="#Introduction">Introduction</a54:a54:a54:a>, <a54:a54:a54:a
 href="#id2759963">Collections</a54:a54:a54:a>, <a54:a54:a54:a  href="#id2760395">Structures</a54:a54:a54:a>, <a54:a54:a54:a
 href="#id2772075">Indicator Characters</a54:a54:a54:a>, <a54:a54:a54:a  href="#id2777534">Indentation Spaces</a54:a54:a54:a>, <a54:a54:a54:a
 href="#id2788859">Plain Style</a54:a54:a54:a>, <a54:a54:a54:a  href="#id2790832"
 class="preferred">Flow Mappings</a54:a54:a54:a>, <a54:a54:a54:a  href="#id2798057">Block Mappings</a54:a54:a54:a></a54:a54:a54:dt>
              <a56:a56:a56:dt  xmlns:a56="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a56="http://www.w3.org/1999/xhtml"><…> verbatim               tag, <a56:a56:a56:a
 href="#id2784064"  class="preferred">Node Tags</a56:a56:a56:a></a56:a56:a56:dt>
              <a58:a58:a58:dt  xmlns:a58="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a58="http://www.w3.org/1999/xhtml">> folded style, <a58:a58:a58:a  href="#id2760844">Scalars</a58:a58:a58:a>, <a58:a58:a58:a
 href="#id2772075">Indicator Characters</a58:a58:a58:a>, <a58:a58:a58:a  href="#id2796251"
 class="preferred">Folded Style</a58:a58:a58:a></a58:a58:a58:dt>
              <a60:a60:a60:dt  xmlns:a60="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a60="http://www.w3.org/1999/xhtml">? mapping         key, <a60:a60:a60:a
 href="#id2760395">Structures</a60:a60:a60:a>, <a60:a60:a60:a  href="#id2772075">Indicator Characters</a60:a60:a60:a>, <a60:a60:a60:a
 href="#id2777534">Indentation Spaces</a60:a60:a60:a>, <a60:a60:a60:a  href="#id2788859">Plain Style</a60:a60:a60:a>, <a60:a60:a60:a
 href="#id2790832"  class="preferred">Flow Mappings</a60:a60:a60:a>, <a60:a60:a60:a
 href="#id2798057">Block Mappings</a60:a60:a60:a></a60:a60:a60:dt>
              <a62:a62:a62:dt  xmlns:a62="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a62="http://www.w3.org/1999/xhtml">? non-specific tag, <a62:a62:a62:a  href="#id2768011"
 class="preferred">Resolved Tags</a62:a62:a62:a>, <a62:a62:a62:a  href="#id2784064">Node Tags</a62:a62:a62:a>, <a62:a62:a62:a
 href="#id2803036">Tag Resolution</a62:a62:a62:a>, <a62:a62:a62:a  href="#id2804356">Tag Resolution</a62:a62:a62:a>, <a62:a62:a62:a
 href="#id2805071">Tag Resolution</a62:a62:a62:a></a62:a62:a62:dt>
              <a64:a64:a64:dt  xmlns:a64="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a64="http://www.w3.org/1999/xhtml">@ reserved           indicator, <a64:a64:a64:a
 href="#id2772075"  class="preferred">Indicator Characters</a64:a64:a64:a></a64:a64:a64:dt>
              <a66:a66:a66:dt  xmlns:a66="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a66="http://www.w3.org/1999/xhtml">[ start flow sequence, <a66:a66:a66:a
 href="#id2759963">Collections</a66:a66:a66:a>, <a66:a66:a66:a  href="#id2772075">Indicator Characters</a66:a66:a66:a>, <a66:a66:a66:a
 href="#id2775468">Miscellaneous Characters</a66:a66:a66:a>, <a66:a66:a66:a  href="#id2784064">Node Tags</a66:a66:a66:a>, <a66:a66:a66:a
 href="#id2785586">Node Anchors</a66:a66:a66:a>, <a66:a66:a66:a  href="#id2788859">Plain Style</a66:a66:a66:a>, <a66:a66:a66:a
 href="#id2790320"  class="preferred">Flow Sequences</a66:a66:a66:a></a66:a66:a66:dt>
              <a68:a68:a68:dt  xmlns:a68="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a68="http://www.w3.org/1999/xhtml">\ escaping in double-quoted         scalars, <a68:a68:a68:a
 href="#id2776092"  class="preferred">Escaped Characters</a68:a68:a68:a>, <a68:a68:a68:a
 href="#id2787109">Double-Quoted Style</a68:a68:a68:a></a68:a68:a68:dt>
              <a70:a70:a70:dt  xmlns:a70="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a70="http://www.w3.org/1999/xhtml">] end flow sequence, <a70:a70:a70:a  href="#id2759963">Collections</a70:a70:a70:a>, <a70:a70:a70:a
 href="#id2772075">Indicator Characters</a70:a70:a70:a>, <a70:a70:a70:a  href="#id2775468">Miscellaneous Characters</a70:a70:a70:a>, <a70:a70:a70:a
 href="#id2784064">Node Tags</a70:a70:a70:a>, <a70:a70:a70:a  href="#id2785586">Node Anchors</a70:a70:a70:a>, <a70:a70:a70:a
 href="#id2788859">Plain Style</a70:a70:a70:a>, <a70:a70:a70:a  href="#id2790320"
 class="preferred">Flow Sequences</a70:a70:a70:a></a70:a70:a70:dt>
              <a72:a72:a72:dt  xmlns:a72="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a72="http://www.w3.org/1999/xhtml">{ start flow         mapping, <a72:a72:a72:a
 href="#id2759963">Collections</a72:a72:a72:a>, <a72:a72:a72:a  href="#id2772075">Indicator Characters</a72:a72:a72:a>, <a72:a72:a72:a
 href="#id2775468">Miscellaneous Characters</a72:a72:a72:a>, <a72:a72:a72:a  href="#id2784064">Node Tags</a72:a72:a72:a>, <a72:a72:a72:a
 href="#id2785586">Node Anchors</a72:a72:a72:a>, <a72:a72:a72:a  href="#id2788859">Plain Style</a72:a72:a72:a>, <a72:a72:a72:a
 href="#id2790832"  class="preferred">Flow Mappings</a72:a72:a72:a></a72:a72:a72:dt>
              <a74:a74:a74:dt  xmlns:a74="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a74="http://www.w3.org/1999/xhtml">| literal style, <a74:a74:a74:a  href="#id2760844">Scalars</a74:a74:a74:a>, <a74:a74:a74:a
 href="#id2772075">Indicator Characters</a74:a74:a74:a>, <a74:a74:a74:a  href="#id2795688"
 class="preferred">Literal Style</a74:a74:a74:a></a74:a74:a74:dt>
              <a76:a76:a76:dt  xmlns:a76="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a76="http://www.w3.org/1999/xhtml">} end flow         mapping, <a76:a76:a76:a
 href="#id2759963">Collections</a76:a76:a76:a>, <a76:a76:a76:a  href="#id2772075">Indicator Characters</a76:a76:a76:a>, <a76:a76:a76:a
 href="#id2775468">Miscellaneous Characters</a76:a76:a76:a>, <a76:a76:a76:a  href="#id2784064">Node Tags</a76:a76:a76:a>, <a76:a76:a76:a
 href="#id2785586">Node Anchors</a76:a76:a76:a>, <a76:a76:a76:a  href="#id2788859">Plain Style</a76:a76:a76:a>, <a76:a76:a76:a
 href="#id2790832"  class="preferred">Flow Mappings</a76:a76:a76:a></a76:a76:a76:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            
            <dl>
              <a78:a78:a78:dt  xmlns:a78="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a78="http://www.w3.org/1999/xhtml">
                
              <a78:a78:a78:br><a78:a78:a78:br></a78:a78:a78:br></a78:a78:a78:br></a78:a78:a78:dt>
              <a80:a80:a80:dd  xmlns:a80="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a80="http://www.w3.org/1999/xhtml">
                <a80:a80:a80:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">prefix, <a80:a80:a80:a
 href="#id2800168"  class="preferred"  xmlns="">Document Prefix</a80:a80:a80:a></dt>
                </a80:a80:a80:dl>
              </a80:a80:a80:dd>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>A</h3>
            <dl>
              <a84:a84:a84:dt  xmlns:a84="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a84="http://www.w3.org/1999/xhtml">alias, <a84:a84:a84:a  href="#Introduction">Introduction</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2708710">Prior Art</a84:a84:a84:a>, <a84:a84:a84:a  href="#id2760395">Structures</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2762313">Dump</a84:a84:a84:a>, <a84:a84:a84:a  href="#id2765410">Serialization Tree</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2765878">Anchors and Aliases</a84:a84:a84:a>, <a84:a84:a84:a  href="#id2767381">Loading Failure Points</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2767852">Well-Formed Streams and Identified Aliases</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2768011">Resolved Tags</a84:a84:a84:a>, <a84:a84:a84:a  href="#id2772075">Indicator Characters</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2785586">Node Anchors</a84:a84:a84:a>, <a84:a84:a84:a  href="#Flow">Flow Styles</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2786196"  class="preferred">Alias Nodes</a84:a84:a84:a>, <a84:a84:a84:a
 href="#id2792977">Flow Nodes</a84:a84:a84:a></a84:a84:a84:dt>
              <a86:a86:a86:dd  xmlns:a86="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a86="http://www.w3.org/1999/xhtml">
                <a86:a86:a86:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">identified, <a86:a86:a86:a
 href="#id2760395"  xmlns="">Structures</a86:a86:a86:a>, <a86:a86:a86:a  href="#id2765878"
 class="preferred"  xmlns="">Anchors and Aliases</a86:a86:a86:a>, <a86:a86:a86:a
 href="#id2767852"  xmlns="">Well-Formed Streams and Identified Aliases</a86:a86:a86:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">unidentified, <a86:a86:a86:a
 href="#id2767381"  xmlns="">Loading Failure Points</a86:a86:a86:a>, <a86:a86:a86:a
 href="#id2767852"  class="preferred"  xmlns="">Well-Formed Streams and Identified Aliases</a86:a86:a86:a></dt>
                </a86:a86:a86:dl>
              </a86:a86:a86:dd>
              <a98:a98:a98:dt  xmlns:a98="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a98="http://www.w3.org/1999/xhtml">anchor, <a98:a98:a98:a  href="#id2760395">Structures</a98:a98:a98:a>, <a98:a98:a98:a
 href="#id2762313">Dump</a98:a98:a98:a>, <a98:a98:a98:a  href="#id2765410">Serialization Tree</a98:a98:a98:a>, <a98:a98:a98:a
 href="#id2765878"  class="preferred">Anchors and Aliases</a98:a98:a98:a>, <a98:a98:a98:a
 href="#id2767852">Well-Formed Streams and Identified Aliases</a98:a98:a98:a>, <a98:a98:a98:a
 href="#id2768011">Resolved Tags</a98:a98:a98:a>, <a98:a98:a98:a  href="#id2772075">Indicator Characters</a98:a98:a98:a>, <a98:a98:a98:a
 href="#id2783797">Node Properties</a98:a98:a98:a>, <a98:a98:a98:a  href="#Flow">Flow Styles</a98:a98:a98:a>, <a98:a98:a98:a
 href="#id2786196">Alias Nodes</a98:a98:a98:a>, <a98:a98:a98:a  href="#id2792977">Flow Nodes</a98:a98:a98:a></a98:a98:a98:dt>
              <a100:a100:a100:dt  xmlns:a100="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a100="http://www.w3.org/1999/xhtml">application, <a100:a100:a100:a  href="#Introduction">Introduction</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2708710">Prior Art</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2761292">Tags</a100:a100:a100:a>, <a100:a100:a100:a
 href="#Processing"  class="preferred">Processing YAML Information</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2762313">Dump</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2763452">Information Models</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2764295">Tags</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2765410">Serialization Tree</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2765608">Keys Order</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2768011">Resolved Tags</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2769542">Available Tags</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2783273">Tag Prefixes</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2784064">Node Tags</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2801681">Streams</a100:a100:a100:a>, <a100:a100:a100:a
 href="#id2803036">Tag Resolution</a100:a100:a100:a>, <a100:a100:a100:a  href="#id2805770">Other Schemas</a100:a100:a100:a></a100:a100:a100:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>B</h3>
            <dl>
              <a102:a102:a102:dt  xmlns:a102="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a102="http://www.w3.org/1999/xhtml">block scalar header, <a102:a102:a102:a
 href="#id2780069">Comments</a102:a102:a102:a>, <a102:a102:a102:a  href="#id2793718"
 class="preferred">Block Scalar Headers</a102:a102:a102:a>, <a102:a102:a102:a  href="#id2794534">Block Chomping Indicator</a102:a102:a102:a></a102:a102:a102:dt>
              <a104:a104:a104:dt  xmlns:a104="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a104="http://www.w3.org/1999/xhtml">byte order mark, <a104:a104:a104:a  href="#id2771184"
 class="preferred">Character Encodings</a104:a104:a104:a>, <a104:a104:a104:a  href="#id2800168">Document Prefix</a104:a104:a104:a></a104:a104:a104:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>C</h3>
            <dl>
              <a106:a106:a106:dt  xmlns:a106="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a106="http://www.w3.org/1999/xhtml">character encoding, <a106:a106:a106:a
 href="#id2771184"  class="preferred">Character Encodings</a106:a106:a106:a>, <a106:a106:a106:a
 href="#id2800168">Document Prefix</a106:a106:a106:a>, <a106:a106:a106:a  href="#id2801681">Streams</a106:a106:a106:a></a106:a106:a106:dt>
              <a108:a108:a108:dd  xmlns:a108="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a108="http://www.w3.org/1999/xhtml">
                <a108:a108:a108:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">in URI, <a108:a108:a108:a
 href="#id2775468"  class="preferred"  xmlns="">Miscellaneous Characters</a108:a108:a108:a></dt>
                </a108:a108:a108:dl>
              </a108:a108:a108:dd>
              <a112:a112:a112:dt  xmlns:a112="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a112="http://www.w3.org/1999/xhtml">chomping, <a112:a112:a112:a  href="#id2769866">Production Parameters</a112:a112:a112:a>, <a112:a112:a112:a
 href="#id2779048">Line Folding</a112:a112:a112:a>, <a112:a112:a112:a  href="#id2794534"
 class="preferred">Block Chomping Indicator</a112:a112:a112:a>, <a112:a112:a112:a
 href="#id2795688">Literal Style</a112:a112:a112:a>, <a112:a112:a112:a  href="#id2796251">Folded Style</a112:a112:a112:a></a112:a112:a112:dt>
              <a114:a114:a114:dd  xmlns:a114="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a114="http://www.w3.org/1999/xhtml">
                <a114:a114:a114:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">clip, <a114:a114:a114:a
 href="#id2769866"  xmlns="">Production Parameters</a114:a114:a114:a>, <a114:a114:a114:a
 href="#id2794534"  class="preferred"  xmlns="">Block Chomping Indicator</a114:a114:a114:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">keep, <a114:a114:a114:a
 href="#id2769866"  xmlns="">Production Parameters</a114:a114:a114:a>, <a114:a114:a114:a
 href="#id2794534"  class="preferred"  xmlns="">Block Chomping Indicator</a114:a114:a114:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">strip, <a114:a114:a114:a
 href="#id2769866"  xmlns="">Production Parameters</a114:a114:a114:a>, <a114:a114:a114:a
 href="#id2794534"  class="preferred"  xmlns="">Block Chomping Indicator</a114:a114:a114:a></dt>
                </a114:a114:a114:dl>
              </a114:a114:a114:dd>
              <a128:a128:a128:dt  xmlns:a128="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a128="http://www.w3.org/1999/xhtml">collection, <a128:a128:a128:a  href="#id2708710">Prior Art</a128:a128:a128:a>, <a128:a128:a128:a
 href="#id2763754">Representation Graph</a128:a128:a128:a>, <a128:a128:a128:a  href="#id2764044"
 class="preferred">Nodes</a128:a128:a128:a>, <a128:a128:a128:a  href="#id2764652">Node Comparison</a128:a128:a128:a>, <a128:a128:a128:a
 href="#id2765878">Anchors and Aliases</a128:a128:a128:a>, <a128:a128:a128:a  href="#id2766446">Node Styles</a128:a128:a128:a>, <a128:a128:a128:a
 href="#id2767100">Comments</a128:a128:a128:a>, <a128:a128:a128:a  href="#id2768011">Resolved Tags</a128:a128:a128:a>, <a128:a128:a128:a
 href="#id2769212">Recognized and Valid Tags</a128:a128:a128:a>, <a128:a128:a128:a
 href="#id2804356">Tag Resolution</a128:a128:a128:a>, <a128:a128:a128:a  href="#id2805071">Tag Resolution</a128:a128:a128:a></a128:a128:a128:dt>
              <a130:a130:a130:dt  xmlns:a130="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a130="http://www.w3.org/1999/xhtml">comment, <a130:a130:a130:a  href="#id2759963">Collections</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2762107">Processes</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2762313">Dump</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2763035">Load</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2766150">Presentation Stream</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2767100">Comments</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2768011">Resolved Tags</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2772075">Indicator Characters</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2780069"
 class="preferred">Comments</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2780810">Separation Lines</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2788859">Plain Style</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2793718">Block Scalar Headers</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2794534">Block Chomping Indicator</a130:a130:a130:a>, <a130:a130:a130:a
 href="#id2800168">Document Prefix</a130:a130:a130:a>, <a130:a130:a130:a  href="#id2801681">Streams</a130:a130:a130:a></a130:a130:a130:dt>
              <a132:a132:a132:dt  xmlns:a132="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a132="http://www.w3.org/1999/xhtml">compose, <a132:a132:a132:a  href="#id2762107">Processes</a132:a132:a132:a>, <a132:a132:a132:a
 href="#id2763035"  class="preferred">Load</a132:a132:a132:a>, <a132:a132:a132:a
 href="#id2765608">Keys Order</a132:a132:a132:a>, <a132:a132:a132:a  href="#id2765878">Anchors and Aliases</a132:a132:a132:a>, <a132:a132:a132:a
 href="#id2768011">Resolved Tags</a132:a132:a132:a>, <a132:a132:a132:a  href="#id2769212">Recognized and Valid Tags</a132:a132:a132:a>, <a132:a132:a132:a
 href="#id2769542">Available Tags</a132:a132:a132:a>, <a132:a132:a132:a  href="#id2785586">Node Anchors</a132:a132:a132:a></a132:a132:a132:dt>
              <a134:a134:a134:dt  xmlns:a134="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a134="http://www.w3.org/1999/xhtml">construct, <a134:a134:a134:a  href="#id2762107">Processes</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2763035"  class="preferred">Load</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2765410">Serialization Tree</a134:a134:a134:a>, <a134:a134:a134:a  href="#id2767381">Loading Failure Points</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2769212">Recognized and Valid Tags</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2769542">Available Tags</a134:a134:a134:a>, <a134:a134:a134:a  href="#Flow">Flow Styles</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2802432">Generic Mapping</a134:a134:a134:a>, <a134:a134:a134:a  href="#id2802662">Generic Sequence</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2802842">Generic String</a134:a134:a134:a>, <a134:a134:a134:a  href="#id2803362">Null</a134:a134:a134:a>, <a134:a134:a134:a
 href="#id2803629">Boolean</a134:a134:a134:a>, <a134:a134:a134:a  href="#id2803828">Integer</a134:a134:a134:a></a134:a134:a134:dt>
              <a136:a136:a136:dt  xmlns:a136="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a136="http://www.w3.org/1999/xhtml">content, <a136:a136:a136:a  href="#id2760395">Structures</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2762313">Dump</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2764044"
 class="preferred">Nodes</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2764295">Tags</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2764652">Node Comparison</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2767381">Loading Failure Points</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2768011">Resolved Tags</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2769212">Recognized and Valid Tags</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2771184">Character Encodings</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2774608">Line Break Characters</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2776092">Escaped Characters</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2777534">Indentation Spaces</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2778241">Separation Spaces</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2778481">Line Prefixes</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2778853">Empty Lines</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2779048">Line Folding</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2780069">Comments</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2781147">Directives</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2782457">Tag Handles</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2783797">Node Properties</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2784064">Node Tags</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2785586">Node Anchors</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2786196">Alias Nodes</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2786563">Empty Nodes</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2786942">Flow Scalar Styles</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2787109">Double-Quoted Style</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2788097">Single-Quoted Style</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2788859">Plain Style</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2793718">Block Scalar Headers</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2793979">Block Indentation Indicator</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2794534">Block Chomping Indicator</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2795688">Literal Style</a136:a136:a136:a>, <a136:a136:a136:a  href="#id2800401">Document Markers</a136:a136:a136:a>, <a136:a136:a136:a
 href="#id2800967">Bare Documents</a136:a136:a136:a></a136:a136:a136:dt>
              <a138:a138:a138:dd  xmlns:a138="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a138="http://www.w3.org/1999/xhtml">
                <a138:a138:a138:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">valid, <a138:a138:a138:a
 href="#id2769212"  class="preferred"  xmlns="">Recognized and Valid Tags</a138:a138:a138:a></dt>
                </a138:a138:a138:dl>
              </a138:a138:a138:dd>
              <a142:a142:a142:dt  xmlns:a142="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a142="http://www.w3.org/1999/xhtml">context, <a142:a142:a142:a  href="#id2769866"
 class="preferred">Production Parameters</a142:a142:a142:a>, <a142:a142:a142:a  href="#id2788859">Plain Style</a142:a142:a142:a></a142:a142:a142:dt>
              <a144:a144:a144:dd  xmlns:a144="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a144="http://www.w3.org/1999/xhtml">
                <a144:a144:a144:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">block-in, <a144:a144:a144:a
 href="#id2769866"  class="preferred"  xmlns="">Production Parameters</a144:a144:a144:a>, <a144:a144:a144:a
 href="#id2799181"  xmlns="">Block Nodes</a144:a144:a144:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">block-key, <a144:a144:a144:a
 href="#id2769866"  class="preferred"  xmlns="">Production Parameters</a144:a144:a144:a>, <a144:a144:a144:a
 href="#id2790088"  xmlns="">Flow Collection Styles</a144:a144:a144:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">block-out, <a144:a144:a144:a
 href="#id2769866"  class="preferred"  xmlns="">Production Parameters</a144:a144:a144:a>, <a144:a144:a144:a
 href="#id2799181"  xmlns="">Block Nodes</a144:a144:a144:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">flow-in, <a144:a144:a144:a
 href="#id2769866"  class="preferred"  xmlns="">Production Parameters</a144:a144:a144:a>, <a144:a144:a144:a
 href="#id2790088"  xmlns="">Flow Collection Styles</a144:a144:a144:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">flow-key, <a144:a144:a144:a
 href="#id2769866"  class="preferred"  xmlns="">Production Parameters</a144:a144:a144:a>, <a144:a144:a144:a
 href="#id2790088"  xmlns="">Flow Collection Styles</a144:a144:a144:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">flow-out, <a144:a144:a144:a
 href="#id2769866"  class="preferred"  xmlns="">Production Parameters</a144:a144:a144:a>, <a144:a144:a144:a
 href="#id2790088"  xmlns="">Flow Collection Styles</a144:a144:a144:a></dt>
                </a144:a144:a144:dl>
              </a144:a144:a144:dd>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>D</h3>
            <dl>
              <a170:a170:a170:dt  xmlns:a170="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a170="http://www.w3.org/1999/xhtml">directive, <a170:a170:a170:a  href="#id2760395">Structures</a170:a170:a170:a>, <a170:a170:a170:a
 href="#id2762313">Dump</a170:a170:a170:a>, <a170:a170:a170:a  href="#id2763035">Load</a170:a170:a170:a>, <a170:a170:a170:a
 href="#id2766150">Presentation Stream</a170:a170:a170:a>, <a170:a170:a170:a  href="#id2767222">Directives</a170:a170:a170:a>, <a170:a170:a170:a
 href="#id2772075">Indicator Characters</a170:a170:a170:a>, <a170:a170:a170:a  href="#id2781147"
 class="preferred">Directives</a170:a170:a170:a>, <a170:a170:a170:a  href="#id2800401">Document Markers</a170:a170:a170:a>, <a170:a170:a170:a
 href="#id2800967">Bare Documents</a170:a170:a170:a>, <a170:a170:a170:a  href="#id2801301">Explicit Documents</a170:a170:a170:a>, <a170:a170:a170:a
 href="#id2801522">Directives Documents</a170:a170:a170:a></a170:a170:a170:dt>
              <a172:a172:a172:dd  xmlns:a172="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a172="http://www.w3.org/1999/xhtml">
                <a172:a172:a172:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">reserved, <a172:a172:a172:a
 href="#id2767222"  xmlns="">Directives</a172:a172:a172:a>, <a172:a172:a172:a  href="#id2781147"
 class="preferred"  xmlns="">Directives</a172:a172:a172:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">TAG, <a172:a172:a172:a
 href="#id2764295"  xmlns="">Tags</a172:a172:a172:a>, <a172:a172:a172:a  href="#id2767222"
 xmlns="">Directives</a172:a172:a172:a>, <a172:a172:a172:a  href="#id2772075"  xmlns="">Indicator Characters</a172:a172:a172:a>, <a172:a172:a172:a
 href="#id2781147"  xmlns="">Directives</a172:a172:a172:a>, <a172:a172:a172:a  href="#id2782090"
 class="preferred"  xmlns="">“TAG” Directives</a172:a172:a172:a>, <a172:a172:a172:a
 href="#id2784064"  xmlns="">Node Tags</a172:a172:a172:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">YAML, <a172:a172:a172:a
 href="#id2767222"  xmlns="">Directives</a172:a172:a172:a>, <a172:a172:a172:a  href="#id2781147"
 xmlns="">Directives</a172:a172:a172:a>, <a172:a172:a172:a  href="#id2781553"  class="preferred"
 xmlns="">“YAML” Directives</a172:a172:a172:a></dt>
                </a172:a172:a172:dl>
              </a172:a172:a172:dd>
              <a196:a196:a196:dt  xmlns:a196="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a196="http://www.w3.org/1999/xhtml">document, <a196:a196:a196:a  href="#id2708710">Prior Art</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2760395">Structures</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2766150">Presentation Stream</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2767222">Directives</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2767381">Loading Failure Points</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2768011">Resolved Tags</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2769212">Recognized and Valid Tags</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2771184">Character Encodings</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2774608">Line Break Characters</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2781553">“YAML” Directives</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2783273">Tag Prefixes</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2786196">Alias Nodes</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2800132"
 class="preferred">Documents</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2800168">Document Prefix</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2800401">Document Markers</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2801301">Explicit Documents</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2801681">Streams</a196:a196:a196:a>, <a196:a196:a196:a  href="#id2802346">Failsafe Schema</a196:a196:a196:a>, <a196:a196:a196:a
 href="#id2805770">Other Schemas</a196:a196:a196:a></a196:a196:a196:dt>
              <a198:a198:a198:dd  xmlns:a198="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a198="http://www.w3.org/1999/xhtml">
                <a198:a198:a198:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">bare, <a198:a198:a198:a
 href="#id2800967"  class="preferred"  xmlns="">Bare Documents</a198:a198:a198:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">directives, <a198:a198:a198:a
 href="#id2801522"  class="preferred"  xmlns="">Directives Documents</a198:a198:a198:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">explicit, <a198:a198:a198:a
 href="#id2801301"  class="preferred"  xmlns="">Explicit Documents</a198:a198:a198:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">suffix, <a198:a198:a198:a
 href="#id2800401"  class="preferred"  xmlns="">Document Markers</a198:a198:a198:a></dt>
                </a198:a198:a198:dl>
              </a198:a198:a198:dd>
              <a208:a208:a208:dt  xmlns:a208="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a208="http://www.w3.org/1999/xhtml">dump, <a208:a208:a208:a  href="#id2762107">Processes</a208:a208:a208:a>, <a208:a208:a208:a
 href="#id2762313"  class="preferred">Dump</a208:a208:a208:a></a208:a208:a208:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>E</h3>
            <dl>
              <a210:a210:a210:dt  xmlns:a210="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a210="http://www.w3.org/1999/xhtml">empty         line, <a210:a210:a210:a
 href="#id2708710">Prior Art</a210:a210:a210:a>, <a210:a210:a210:a  href="#id2760844">Scalars</a210:a210:a210:a>, <a210:a210:a210:a
 href="#id2778853"  class="preferred">Empty Lines</a210:a210:a210:a>, <a210:a210:a210:a
 href="#id2779048">Line Folding</a210:a210:a210:a>, <a210:a210:a210:a  href="#id2793979">Block Indentation Indicator</a210:a210:a210:a>, <a210:a210:a210:a
 href="#id2794534">Block Chomping Indicator</a210:a210:a210:a>, <a210:a210:a210:a
 href="#id2795688">Literal Style</a210:a210:a210:a>, <a210:a210:a210:a  href="#id2796251">Folded Style</a210:a210:a210:a></a210:a210:a210:dt>
              <a212:a212:a212:dt  xmlns:a212="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a212="http://www.w3.org/1999/xhtml">equality, <a212:a212:a212:a  href="#id2759572">Relation to JSON</a212:a212:a212:a>, <a212:a212:a212:a
 href="#id2762313">Dump</a212:a212:a212:a>, <a212:a212:a212:a  href="#id2763754">Representation Graph</a212:a212:a212:a>, <a212:a212:a212:a
 href="#id2764044">Nodes</a212:a212:a212:a>, <a212:a212:a212:a  href="#id2764295">Tags</a212:a212:a212:a>, <a212:a212:a212:a
 href="#id2764652"  class="preferred">Node Comparison</a212:a212:a212:a>, <a212:a212:a212:a
 href="#id2766934">Scalar Formats</a212:a212:a212:a>, <a212:a212:a212:a  href="#id2767381">Loading Failure Points</a212:a212:a212:a>, <a212:a212:a212:a
 href="#id2769212">Recognized and Valid Tags</a212:a212:a212:a></a212:a212:a212:dt>
              <a214:a214:a214:dt  xmlns:a214="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a214="http://www.w3.org/1999/xhtml">escaping</a214:a214:a214:dt>
              <a216:a216:a216:dd  xmlns:a216="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a216="http://www.w3.org/1999/xhtml">
                <a216:a216:a216:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">in         double-quoted scalars, <a216:a216:a216:a
 href="#id2708710"  xmlns="">Prior Art</a216:a216:a216:a>, <a216:a216:a216:a  href="#id2760844"
 xmlns="">Scalars</a216:a216:a216:a>, <a216:a216:a216:a  href="#id2770814"  xmlns="">Character Set</a216:a216:a216:a>, <a216:a216:a216:a
 href="#id2771184"  xmlns="">Character Encodings</a216:a216:a216:a>, <a216:a216:a216:a
 href="#id2775468"  xmlns="">Miscellaneous Characters</a216:a216:a216:a>, <a216:a216:a216:a
 href="#id2776092"  class="preferred"  xmlns="">Escaped Characters</a216:a216:a216:a>, <a216:a216:a216:a
 href="#id2787109"  xmlns="">Double-Quoted Style</a216:a216:a216:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">in           single-quoted scalars, <a216:a216:a216:a
 href="#id2788097"  class="preferred"  xmlns="">Single-Quoted Style</a216:a216:a216:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">in             URIs, <a216:a216:a216:a
 href="#id2775468"  class="preferred"  xmlns="">Miscellaneous Characters</a216:a216:a216:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">non-content line           break, <a216:a216:a216:a
 href="#id2787109"  class="preferred"  xmlns="">Double-Quoted Style</a216:a216:a216:a></dt>
                </a216:a216:a216:dl>
              </a216:a216:a216:dd>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>I</h3>
            <dl>
              <a238:a238:a238:dt  xmlns:a238="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a238="http://www.w3.org/1999/xhtml">identity, <a238:a238:a238:a  href="#id2764652"
 class="preferred">Node Comparison</a238:a238:a238:a></a238:a238:a238:dt>
              <a240:a240:a240:dt  xmlns:a240="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a240="http://www.w3.org/1999/xhtml">indicator, <a240:a240:a240:a  href="#Introduction">Introduction</a240:a240:a240:a>, <a240:a240:a240:a
 href="#id2708710">Prior Art</a240:a240:a240:a>, <a240:a240:a240:a  href="#id2759963">Collections</a240:a240:a240:a>, <a240:a240:a240:a
 href="#id2766446">Node Styles</a240:a240:a240:a>, <a240:a240:a240:a  href="#id2769866">Production Parameters</a240:a240:a240:a>, <a240:a240:a240:a
 href="#id2772075"  class="preferred">Indicator Characters</a240:a240:a240:a>, <a240:a240:a240:a
 href="#id2779048">Line Folding</a240:a240:a240:a>, <a240:a240:a240:a  href="#id2788859">Plain Style</a240:a240:a240:a>, <a240:a240:a240:a
 href="#id2790832">Flow Mappings</a240:a240:a240:a>, <a240:a240:a240:a  href="#id2792977">Flow Nodes</a240:a240:a240:a>, <a240:a240:a240:a
 href="#Block">Block Styles</a240:a240:a240:a>, <a240:a240:a240:a  href="#id2793718">Block Scalar Headers</a240:a240:a240:a>, <a240:a240:a240:a
 href="#id2797293">Block Collection Styles</a240:a240:a240:a></a240:a240:a240:dt>
              <a242:a242:a242:dd  xmlns:a242="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a242="http://www.w3.org/1999/xhtml">
                <a242:a242:a242:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">indentation, <a242:a242:a242:a
 href="#id2793979"  class="preferred"  xmlns="">Block Indentation Indicator</a242:a242:a242:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">reserved, <a242:a242:a242:a
 href="#id2772075"  class="preferred"  xmlns="">Indicator Characters</a242:a242:a242:a></dt>
                </a242:a242:a242:dl>
              </a242:a242:a242:dd>
              <a248:a248:a248:dt  xmlns:a248="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a248="http://www.w3.org/1999/xhtml">information model, <a248:a248:a248:a
 href="#id2763452"  class="preferred">Information Models</a248:a248:a248:a></a248:a248:a248:dt>
              <a250:a250:a250:dt  xmlns:a250="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a250="http://www.w3.org/1999/xhtml">invalid         content, <a250:a250:a250:a
 href="#id2767381">Loading Failure Points</a250:a250:a250:a>, <a250:a250:a250:a
 href="#id2769212"  class="preferred">Recognized and Valid Tags</a250:a250:a250:a></a250:a250:a250:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>J</h3>
            <dl>
              <a252:a252:a252:dt  xmlns:a252="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a252="http://www.w3.org/1999/xhtml">JSON compatibility, <a252:a252:a252:a
 href="#id2770814">Character Set</a252:a252:a252:a>, <a252:a252:a252:a  href="#id2771184">Character Encodings</a252:a252:a252:a>, <a252:a252:a252:a
 href="#id2774608">Line Break Characters</a252:a252:a252:a>, <a252:a252:a252:a  href="#id2776092">Escaped Characters</a252:a252:a252:a>, <a252:a252:a252:a
 href="#id2780069">Comments</a252:a252:a252:a>, <a252:a252:a252:a  href="#id2781553"
 class="preferred">“YAML” Directives</a252:a252:a252:a>, <a252:a252:a252:a  href="#id2790832">Flow Mappings</a252:a252:a252:a>, <a252:a252:a252:a
 href="#id2798057">Block Mappings</a252:a252:a252:a></a252:a252:a252:dt>
              <a254:a254:a254:dt  xmlns:a254="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a254="http://www.w3.org/1999/xhtml">JSON-like, <a254:a254:a254:a  href="#id2790832">Flow Mappings</a254:a254:a254:a>, <a254:a254:a254:a
 href="#id2792977"  class="preferred">Flow Nodes</a254:a254:a254:a></a254:a254:a254:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>K</h3>
            <dl>
              <a256:a256:a256:dt  xmlns:a256="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a256="http://www.w3.org/1999/xhtml">key, <a256:a256:a256:a  href="#id2759572">Relation to JSON</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2760395">Structures</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2762313">Dump</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2763452">Information Models</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2763754">Representation Graph</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2764044"  class="preferred">Nodes</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2764652">Node Comparison</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2765410">Serialization Tree</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2765608">Keys Order</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2768011">Resolved Tags</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2772075">Indicator Characters</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2790832">Flow Mappings</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2798057">Block Mappings</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2802432">Generic Mapping</a256:a256:a256:a>, <a256:a256:a256:a
 href="#id2803362">Null</a256:a256:a256:a>, <a256:a256:a256:a  href="#id2804092">Floating Point</a256:a256:a256:a></a256:a256:a256:dt>
              <a258:a258:a258:dd  xmlns:a258="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a258="http://www.w3.org/1999/xhtml">
                <a258:a258:a258:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">implicit, <a258:a258:a258:a
 href="#id2780810"  xmlns="">Separation Lines</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2787109"  xmlns="">Double-Quoted Style</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2788097"  xmlns="">Single-Quoted Style</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2788859"  xmlns="">Plain Style</a258:a258:a258:a>, <a258:a258:a258:a  href="#id2790088"
 xmlns="">Flow Collection Styles</a258:a258:a258:a>, <a258:a258:a258:a  href="#id2790832"
 class="preferred"  xmlns="">Flow Mappings</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2798057"  xmlns="">Block Mappings</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2799181"  xmlns="">Block Nodes</a258:a258:a258:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">order, <a258:a258:a258:a
 href="#id2762107"  xmlns="">Processes</a258:a258:a258:a>, <a258:a258:a258:a  href="#id2762313"
 xmlns="">Dump</a258:a258:a258:a>, <a258:a258:a258:a  href="#id2763035"  xmlns="">Load</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2763452"  xmlns="">Information Models</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2765410"  xmlns="">Serialization Tree</a258:a258:a258:a>, <a258:a258:a258:a
 href="#id2765608"  class="preferred"  xmlns="">Keys Order</a258:a258:a258:a></dt>
                </a258:a258:a258:dl>
              </a258:a258:a258:dd>
              <a288:a288:a288:dt  xmlns:a288="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a288="http://www.w3.org/1999/xhtml">key: value pair, <a288:a288:a288:a  href="#Introduction">Introduction</a288:a288:a288:a>, <a288:a288:a288:a
 href="#id2759963">Collections</a288:a288:a288:a>, <a288:a288:a288:a  href="#id2760395">Structures</a288:a288:a288:a>, <a288:a288:a288:a
 href="#id2764044"  class="preferred">Nodes</a288:a288:a288:a>, <a288:a288:a288:a
 href="#id2765608">Keys Order</a288:a288:a288:a>, <a288:a288:a288:a  href="#id2766446">Node Styles</a288:a288:a288:a>, <a288:a288:a288:a
 href="#id2788859">Plain Style</a288:a288:a288:a>, <a288:a288:a288:a  href="#id2790832">Flow Mappings</a288:a288:a288:a>, <a288:a288:a288:a
 href="#id2797293">Block Collection Styles</a288:a288:a288:a>, <a288:a288:a288:a
 href="#id2798057">Block Mappings</a288:a288:a288:a></a288:a288:a288:dt>
              <a290:a290:a290:dt  xmlns:a290="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a290="http://www.w3.org/1999/xhtml">kind, <a290:a290:a290:a  href="#id2762313">Dump</a290:a290:a290:a>, <a290:a290:a290:a
 href="#id2763754">Representation Graph</a290:a290:a290:a>, <a290:a290:a290:a  href="#id2764044"
 class="preferred">Nodes</a290:a290:a290:a>, <a290:a290:a290:a  href="#id2764295">Tags</a290:a290:a290:a>, <a290:a290:a290:a
 href="#id2764652">Node Comparison</a290:a290:a290:a>, <a290:a290:a290:a  href="#id2766446">Node Styles</a290:a290:a290:a>, <a290:a290:a290:a
 href="#id2768011">Resolved Tags</a290:a290:a290:a>, <a290:a290:a290:a  href="#id2784064">Node Tags</a290:a290:a290:a>, <a290:a290:a290:a
 href="#id2803036">Tag Resolution</a290:a290:a290:a>, <a290:a290:a290:a  href="#id2804356">Tag Resolution</a290:a290:a290:a>, <a290:a290:a290:a
 href="#id2805071">Tag Resolution</a290:a290:a290:a></a290:a290:a290:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>L</h3>
            <dl>
              <a292:a292:a292:dt  xmlns:a292="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a292="http://www.w3.org/1999/xhtml">line break, <a292:a292:a292:a  href="#id2708710">Prior Art</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2760844">Scalars</a292:a292:a292:a>, <a292:a292:a292:a  href="#id2769866">Production Parameters</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2770517">Production Naming Conventions</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2774608"  class="preferred">Line Break Characters</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2775170">White Space Characters</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2778853">Empty Lines</a292:a292:a292:a>, <a292:a292:a292:a  href="#id2779048">Line Folding</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2780069">Comments</a292:a292:a292:a>, <a292:a292:a292:a  href="#id2787109">Double-Quoted Style</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2793718">Block Scalar Headers</a292:a292:a292:a>, <a292:a292:a292:a  href="#id2794534">Block Chomping Indicator</a292:a292:a292:a>, <a292:a292:a292:a
 href="#id2795688">Literal Style</a292:a292:a292:a>, <a292:a292:a292:a  href="#id2796251">Folded Style</a292:a292:a292:a></a292:a292:a292:dt>
              <a294:a294:a294:dd  xmlns:a294="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a294="http://www.w3.org/1999/xhtml">
                <a294:a294:a294:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">non-ASCII, <a294:a294:a294:a
 href="#id2774608"  class="preferred"  xmlns="">Line Break Characters</a294:a294:a294:a>, <a294:a294:a294:a
 href="#id2781553"  xmlns="">“YAML” Directives</a294:a294:a294:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">normalization, <a294:a294:a294:a
 href="#id2774608"  class="preferred"  xmlns="">Line Break Characters</a294:a294:a294:a>, <a294:a294:a294:a
 href="#id2795688"  xmlns="">Literal Style</a294:a294:a294:a></dt>
                </a294:a294:a294:dl>
              </a294:a294:a294:dd>
              <a304:a304:a304:dt  xmlns:a304="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a304="http://www.w3.org/1999/xhtml">line folding, <a304:a304:a304:a  href="#id2708710">Prior Art</a304:a304:a304:a>, <a304:a304:a304:a
 href="#id2760844">Scalars</a304:a304:a304:a>, <a304:a304:a304:a  href="#id2779048"
 class="preferred">Line Folding</a304:a304:a304:a>, <a304:a304:a304:a  href="#Flow">Flow Styles</a304:a304:a304:a>, <a304:a304:a304:a
 href="#id2787109">Double-Quoted Style</a304:a304:a304:a>, <a304:a304:a304:a  href="#id2788097">Single-Quoted Style</a304:a304:a304:a>, <a304:a304:a304:a
 href="#id2788859">Plain Style</a304:a304:a304:a>, <a304:a304:a304:a  href="#id2794534">Block Chomping Indicator</a304:a304:a304:a>, <a304:a304:a304:a
 href="#id2796251">Folded Style</a304:a304:a304:a></a304:a304:a304:dt>
              <a306:a306:a306:dd  xmlns:a306="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a306="http://www.w3.org/1999/xhtml">
                <a306:a306:a306:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">block, <a306:a306:a306:a
 href="#id2779048"  class="preferred"  xmlns="">Line Folding</a306:a306:a306:a>, <a306:a306:a306:a
 href="#id2796251"  xmlns="">Folded Style</a306:a306:a306:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">flow, <a306:a306:a306:a
 href="#id2779048"  class="preferred"  xmlns="">Line Folding</a306:a306:a306:a>, <a306:a306:a306:a
 href="#id2787109"  xmlns="">Double-Quoted Style</a306:a306:a306:a></dt>
                </a306:a306:a306:dl>
              </a306:a306:a306:dd>
              <a316:a316:a316:dt  xmlns:a316="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a316="http://www.w3.org/1999/xhtml">line prefix, <a316:a316:a316:a  href="#id2778481"
 class="preferred">Line Prefixes</a316:a316:a316:a>, <a316:a316:a316:a  href="#id2778853">Empty Lines</a316:a316:a316:a></a316:a316:a316:dt>
              <a318:a318:a318:dt  xmlns:a318="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a318="http://www.w3.org/1999/xhtml">load, <a318:a318:a318:a  href="#id2762107">Processes</a318:a318:a318:a>, <a318:a318:a318:a
 href="#id2763035"  class="preferred">Load</a318:a318:a318:a>, <a318:a318:a318:a
 href="#id2767381">Loading Failure Points</a318:a318:a318:a></a318:a318:a318:dt>
              <a320:a320:a320:dd  xmlns:a320="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a320="http://www.w3.org/1999/xhtml">
                <a320:a320:a320:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">failure               point, <a320:a320:a320:a
 href="#id2763035"  xmlns="">Load</a320:a320:a320:a>, <a320:a320:a320:a  href="#id2767381"
 class="preferred"  xmlns="">Loading Failure Points</a320:a320:a320:a></dt>
                </a320:a320:a320:dl>
              </a320:a320:a320:dd>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>M</h3>
            <dl>
              <a326:a326:a326:dt  xmlns:a326="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a326="http://www.w3.org/1999/xhtml">mapping, <a326:a326:a326:a  href="#Introduction">Introduction</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2708710">Prior Art</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2759572">Relation to JSON</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2759963">Collections</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2760395">Structures</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2762313">Dump</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2763754">Representation Graph</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2764044"  class="preferred">Nodes</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2764295">Tags</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2764652">Node Comparison</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2765608">Keys Order</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2768011">Resolved Tags</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2788859">Plain Style</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2790320">Flow Sequences</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2790832">Flow Mappings</a326:a326:a326:a>, <a326:a326:a326:a  href="#id2802432">Generic Mapping</a326:a326:a326:a>, <a326:a326:a326:a
 href="#id2803362">Null</a326:a326:a326:a></a326:a326:a326:dt>
              <a328:a328:a328:dt  xmlns:a328="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a328="http://www.w3.org/1999/xhtml">marker, <a328:a328:a328:a  href="#id2766150">Presentation Stream</a328:a328:a328:a>, <a328:a328:a328:a
 href="#id2800401"  class="preferred">Document Markers</a328:a328:a328:a>, <a328:a328:a328:a
 href="#id2800967">Bare Documents</a328:a328:a328:a>, <a328:a328:a328:a  href="#id2801301">Explicit Documents</a328:a328:a328:a>, <a328:a328:a328:a
 href="#id2801681">Streams</a328:a328:a328:a></a328:a328:a328:dt>
              <a330:a330:a330:dd  xmlns:a330="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a330="http://www.w3.org/1999/xhtml">
                <a330:a330:a330:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">directives end, <a330:a330:a330:a
 href="#id2760395"  xmlns="">Structures</a330:a330:a330:a>, <a330:a330:a330:a  href="#id2800401"
 class="preferred"  xmlns="">Document Markers</a330:a330:a330:a>, <a330:a330:a330:a
 href="#id2801301"  xmlns="">Explicit Documents</a330:a330:a330:a>, <a330:a330:a330:a
 href="#id2801522"  xmlns="">Directives Documents</a330:a330:a330:a>, <a330:a330:a330:a
 href="#id2801681"  xmlns="">Streams</a330:a330:a330:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">document         end, <a330:a330:a330:a
 href="#id2760395"  xmlns="">Structures</a330:a330:a330:a>, <a330:a330:a330:a  href="#id2800401"
 class="preferred"  xmlns="">Document Markers</a330:a330:a330:a>, <a330:a330:a330:a
 href="#id2801681"  xmlns="">Streams</a330:a330:a330:a></dt>
                </a330:a330:a330:dl>
              </a330:a330:a330:dd>
              <a348:a348:a348:dt  xmlns:a348="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a348="http://www.w3.org/1999/xhtml">more-indented, <a348:a348:a348:a  href="#id2760844">Scalars</a348:a348:a348:a>, <a348:a348:a348:a
 href="#id2779048">Line Folding</a348:a348:a348:a>, <a348:a348:a348:a  href="#id2796251"
 class="preferred">Folded Style</a348:a348:a348:a></a348:a348:a348:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>N</h3>
            <dl>
              <a350:a350:a350:dt  xmlns:a350="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a350="http://www.w3.org/1999/xhtml">native data structure, <a350:a350:a350:a
 href="#Introduction">Introduction</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2708649">Goals</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2708710">Prior Art</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2759572">Relation to JSON</a350:a350:a350:a>, <a350:a350:a350:a
 href="#Processing">Processing YAML Information</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2762107">Processes</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2762313"
 class="preferred">Dump</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2763035">Load</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2763754">Representation Graph</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2764044">Nodes</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2764295">Tags</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2764652">Node Comparison</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2765410">Serialization Tree</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2767381">Loading Failure Points</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2769212">Recognized and Valid Tags</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2769542">Available Tags</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2784064">Node Tags</a350:a350:a350:a>, <a350:a350:a350:a
 href="#Flow">Flow Styles</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2802432">Generic Mapping</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2802662">Generic Sequence</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2802842">Generic String</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2803362">Null</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2803629">Boolean</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2803828">Integer</a350:a350:a350:a>, <a350:a350:a350:a  href="#id2804092">Floating Point</a350:a350:a350:a>, <a350:a350:a350:a
 href="#id2805770">Other Schemas</a350:a350:a350:a></a350:a350:a350:dt>
              <a352:a352:a352:dt  xmlns:a352="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a352="http://www.w3.org/1999/xhtml">need not, <a352:a352:a352:a  href="#id2759768"
 class="preferred">Terminology</a352:a352:a352:a></a352:a352:a352:dt>
              <a354:a354:a354:dt  xmlns:a354="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a354="http://www.w3.org/1999/xhtml">node, <a354:a354:a354:a  href="#id2760395">Structures</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2762313">Dump</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2763754">Representation Graph</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2764044"  class="preferred">Nodes</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2764295">Tags</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2764652">Node Comparison</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2765410">Serialization Tree</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2765608">Keys Order</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2765878">Anchors and Aliases</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2766150">Presentation Stream</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2766446">Node Styles</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2767100">Comments</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2767381">Loading Failure Points</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2767852">Well-Formed Streams and Identified Aliases</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2768011">Resolved Tags</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2769212">Recognized and Valid Tags</a354:a354:a354:a>, <a354:a354:a354:a
 href="#Syntax">Syntax Conventions</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2777534">Indentation Spaces</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2783797">Node Properties</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2784064">Node Tags</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2785586">Node Anchors</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2786196">Alias Nodes</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2786563">Empty Nodes</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2790832">Flow Mappings</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2792977">Flow Nodes</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2793979">Block Indentation Indicator</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2797382">Block Sequences</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2800967">Bare Documents</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2803036">Tag Resolution</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2804356">Tag Resolution</a354:a354:a354:a>, <a354:a354:a354:a
 href="#id2805071">Tag Resolution</a354:a354:a354:a>, <a354:a354:a354:a  href="#id2805770">Other Schemas</a354:a354:a354:a></a354:a354:a354:dt>
              <a356:a356:a356:dd  xmlns:a356="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a356="http://www.w3.org/1999/xhtml">
                <a356:a356:a356:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">completely empty, <a356:a356:a356:a
 href="#id2786563"  class="preferred"  xmlns="">Empty Nodes</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2790088"  xmlns="">Flow Collection Styles</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2790832"  xmlns="">Flow Mappings</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2797382"  xmlns="">Block Sequences</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2801301"  xmlns="">Explicit Documents</a356:a356:a356:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">property, <a356:a356:a356:a
 href="#id2783797"  class="preferred"  xmlns="">Node Properties</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2786196"  xmlns="">Alias Nodes</a356:a356:a356:a>, <a356:a356:a356:a  href="#id2786563"
 xmlns="">Empty Nodes</a356:a356:a356:a>, <a356:a356:a356:a  href="#id2790832"  xmlns="">Flow Mappings</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2792977"  xmlns="">Flow Nodes</a356:a356:a356:a>, <a356:a356:a356:a  href="#id2797382"
 xmlns="">Block Sequences</a356:a356:a356:a>, <a356:a356:a356:a  href="#id2798057"
 xmlns="">Block Mappings</a356:a356:a356:a>, <a356:a356:a356:a  href="#id2799181"
 xmlns="">Block Nodes</a356:a356:a356:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">root, <a356:a356:a356:a
 href="#id2763754"  class="preferred"  xmlns="">Representation Graph</a356:a356:a356:a>, <a356:a356:a356:a
 href="#id2768011"  xmlns="">Resolved Tags</a356:a356:a356:a></dt>
                </a356:a356:a356:dl>
              </a356:a356:a356:dd>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>P</h3>
            <dl>
              <a388:a388:a388:dt  xmlns:a388="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a388="http://www.w3.org/1999/xhtml">parse, <a388:a388:a388:a  href="#id2763035"
 class="preferred">Load</a388:a388:a388:a>, <a388:a388:a388:a  href="#id2766150">Presentation Stream</a388:a388:a388:a>, <a388:a388:a388:a
 href="#id2768011">Resolved Tags</a388:a388:a388:a>, <a388:a388:a388:a  href="#id2769866">Production Parameters</a388:a388:a388:a>, <a388:a388:a388:a
 href="#id2774608">Line Break Characters</a388:a388:a388:a>, <a388:a388:a388:a  href="#id2776092">Escaped Characters</a388:a388:a388:a>, <a388:a388:a388:a
 href="#id2782457">Tag Handles</a388:a388:a388:a>, <a388:a388:a388:a  href="#id2784064">Node Tags</a388:a388:a388:a>, <a388:a388:a388:a
 href="#id2790832">Flow Mappings</a388:a388:a388:a>, <a388:a388:a388:a  href="#id2798057">Block Mappings</a388:a388:a388:a>, <a388:a388:a388:a
 href="#id2799181">Block Nodes</a388:a388:a388:a>, <a388:a388:a388:a  href="#id2800401">Document Markers</a388:a388:a388:a>, <a388:a388:a388:a
 href="#id2803231">JSON Schema</a388:a388:a388:a></a388:a388:a388:dt>
              <a390:a390:a390:dt  xmlns:a390="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a390="http://www.w3.org/1999/xhtml">present, <a390:a390:a390:a  href="#Processing">Processing YAML Information</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2762313"  class="preferred">Dump</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2763035">Load</a390:a390:a390:a>, <a390:a390:a390:a  href="#id2764044">Nodes</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2764652">Node Comparison</a390:a390:a390:a>, <a390:a390:a390:a  href="#id2766150">Presentation Stream</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2766934">Scalar Formats</a390:a390:a390:a>, <a390:a390:a390:a  href="#id2770814">Character Set</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2775468">Miscellaneous Characters</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2784064">Node Tags</a390:a390:a390:a>, <a390:a390:a390:a  href="#id2786196">Alias Nodes</a390:a390:a390:a>, <a390:a390:a390:a
 href="#id2798057">Block Mappings</a390:a390:a390:a>, <a390:a390:a390:a  href="#id2804923">Core Schema</a390:a390:a390:a></a390:a390:a390:dt>
              <a392:a392:a392:dt  xmlns:a392="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a392="http://www.w3.org/1999/xhtml">presentation, <a392:a392:a392:a  href="#Processing">Processing YAML Information</a392:a392:a392:a>, <a392:a392:a392:a
 href="#id2763452">Information Models</a392:a392:a392:a>, <a392:a392:a392:a  href="#id2766150"
 class="preferred">Presentation Stream</a392:a392:a392:a>, <a392:a392:a392:a  href="#id2769866">Production Parameters</a392:a392:a392:a></a392:a392:a392:dt>
              <a394:a394:a394:dd  xmlns:a394="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a394="http://www.w3.org/1999/xhtml">
                <a394:a394:a394:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">detail, <a394:a394:a394:a
 href="#id2762313"  class="preferred"  xmlns="">Dump</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2763035"  xmlns="">Load</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2763452"
 xmlns="">Information Models</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2766150"
 xmlns="">Presentation Stream</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2766446"
 xmlns="">Node Styles</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2766934"  xmlns="">Scalar Formats</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2767100"  xmlns="">Comments</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2767222"
 xmlns="">Directives</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2768011"  xmlns="">Resolved Tags</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2771184"  xmlns="">Character Encodings</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2774608"  xmlns="">Line Break Characters</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2776092"  xmlns="">Escaped Characters</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2777534"  xmlns="">Indentation Spaces</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2778241"  xmlns="">Separation Spaces</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2778481"  xmlns="">Line Prefixes</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2779048"  xmlns="">Line Folding</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2780069"  xmlns="">Comments</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2781147"
 xmlns="">Directives</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2782457"  xmlns="">Tag Handles</a394:a394:a394:a>, <a394:a394:a394:a
 href="#id2784064"  xmlns="">Node Tags</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2786942"
 xmlns="">Flow Scalar Styles</a394:a394:a394:a>, <a394:a394:a394:a  href="#id2794534"
 xmlns="">Block Chomping Indicator</a394:a394:a394:a></dt>
                </a394:a394:a394:dl>
              </a394:a394:a394:dd>
              <a440:a440:a440:dt  xmlns:a440="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a440="http://www.w3.org/1999/xhtml">printable character, <a440:a440:a440:a
 href="#Introduction">Introduction</a440:a440:a440:a>, <a440:a440:a440:a  href="#id2708710">Prior Art</a440:a440:a440:a>, <a440:a440:a440:a
 href="#id2770814"  class="preferred">Character Set</a440:a440:a440:a>, <a440:a440:a440:a
 href="#id2775170">White Space Characters</a440:a440:a440:a>, <a440:a440:a440:a
 href="#id2776092">Escaped Characters</a440:a440:a440:a>, <a440:a440:a440:a  href="#id2788097">Single-Quoted Style</a440:a440:a440:a>, <a440:a440:a440:a
 href="#id2795688">Literal Style</a440:a440:a440:a></a440:a440:a440:dt>
              <a442:a442:a442:dt  xmlns:a442="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a442="http://www.w3.org/1999/xhtml">processor, <a442:a442:a442:a  href="#id2759768">Terminology</a442:a442:a442:a>, <a442:a442:a442:a
 href="#Processing"  class="preferred">Processing YAML Information</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2762313">Dump</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2764652">Node Comparison</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2766150">Presentation Stream</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2767222">Directives</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2767852">Well-Formed Streams and Identified Aliases</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2768011">Resolved Tags</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2769212">Recognized and Valid Tags</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2769542">Available Tags</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2770814">Character Set</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2771184">Character Encodings</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2774608">Line Break Characters</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2775468">Miscellaneous Characters</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2780069">Comments</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2781147">Directives</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2781553">“YAML” Directives</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2782457">Tag Handles</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2784064">Node Tags</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2785586">Node Anchors</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2790832">Flow Mappings</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2793979">Block Indentation Indicator</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2802346">Failsafe Schema</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2803231">JSON Schema</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2803828">Integer</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2804092">Floating Point</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2804356">Tag Resolution</a442:a442:a442:a>, <a442:a442:a442:a  href="#id2804923">Core Schema</a442:a442:a442:a>, <a442:a442:a442:a
 href="#id2805770">Other Schemas</a442:a442:a442:a></a442:a442:a442:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>R</h3>
            <dl>
              <a444:a444:a444:dt  xmlns:a444="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a444="http://www.w3.org/1999/xhtml">represent, <a444:a444:a444:a  href="#Introduction">Introduction</a444:a444:a444:a>, <a444:a444:a444:a
 href="#id2708710">Prior Art</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2762313"
 class="preferred">Dump</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2764295">Tags</a444:a444:a444:a>, <a444:a444:a444:a
 href="#id2764652">Node Comparison</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2765608">Keys Order</a444:a444:a444:a>, <a444:a444:a444:a
 href="#id2802432">Generic Mapping</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2802662">Generic Sequence</a444:a444:a444:a>, <a444:a444:a444:a
 href="#id2802842">Generic String</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2803362">Null</a444:a444:a444:a>, <a444:a444:a444:a
 href="#id2803629">Boolean</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2803828">Integer</a444:a444:a444:a>, <a444:a444:a444:a
 href="#id2804092">Floating Point</a444:a444:a444:a>, <a444:a444:a444:a  href="#id2805770">Other Schemas</a444:a444:a444:a></a444:a444:a444:dt>
              <a446:a446:a446:dt  xmlns:a446="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a446="http://www.w3.org/1999/xhtml">representation, <a446:a446:a446:a  href="#Processing">Processing YAML Information</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2762107">Processes</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2762313">Dump</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2763035">Load</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2763452">Information Models</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2763754"  class="preferred">Representation Graph</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2764044">Nodes</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2764652">Node Comparison</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2765410">Serialization Tree</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2765608">Keys Order</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2765878">Anchors and Aliases</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2766150">Presentation Stream</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2766446">Node Styles</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2766934">Scalar Formats</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2767100">Comments</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2767222">Directives</a446:a446:a446:a>, <a446:a446:a446:a
 href="#id2769542">Available Tags</a446:a446:a446:a>, <a446:a446:a446:a  href="#id2785586">Node Anchors</a446:a446:a446:a></a446:a446:a446:dt>
              <a448:a448:a448:dd  xmlns:a448="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a448="http://www.w3.org/1999/xhtml">
                <a448:a448:a448:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">complete, <a448:a448:a448:a
 href="#id2767381"  class="preferred"  xmlns="">Loading Failure Points</a448:a448:a448:a>, <a448:a448:a448:a
 href="#id2768011"  xmlns="">Resolved Tags</a448:a448:a448:a>, <a448:a448:a448:a
 href="#id2769212"  xmlns="">Recognized and Valid Tags</a448:a448:a448:a>, <a448:a448:a448:a
 href="#id2769542"  xmlns="">Available Tags</a448:a448:a448:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">partial, <a448:a448:a448:a
 href="#id2767381"  class="preferred"  xmlns="">Loading Failure Points</a448:a448:a448:a>, <a448:a448:a448:a
 href="#id2768011"  xmlns="">Resolved Tags</a448:a448:a448:a>, <a448:a448:a448:a
 href="#id2769212"  xmlns="">Recognized and Valid Tags</a448:a448:a448:a>, <a448:a448:a448:a
 href="#id2803036"  xmlns="">Tag Resolution</a448:a448:a448:a></dt>
                </a448:a448:a448:dl>
              </a448:a448:a448:dd>
              <a466:a466:a466:dt  xmlns:a466="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a466="http://www.w3.org/1999/xhtml">required, <a466:a466:a466:a  href="#id2759768"
 class="preferred">Terminology</a466:a466:a466:a></a466:a466:a466:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>S</h3>
            <dl>
              <a468:a468:a468:dt  xmlns:a468="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a468="http://www.w3.org/1999/xhtml">scalar, <a468:a468:a468:a  href="#Introduction">Introduction</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2708710">Prior Art</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2760844">Scalars</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2762313">Dump</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2763754">Representation Graph</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2764044"  class="preferred">Nodes</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2764295">Tags</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2764652">Node Comparison</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2766934">Scalar Formats</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2767100">Comments</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2769212">Recognized and Valid Tags</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2774608">Line Break Characters</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2778241">Separation Spaces</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2778481">Line Prefixes</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2780069">Comments</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2786563">Empty Nodes</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2794534">Block Chomping Indicator</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2802432">Generic Mapping</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2802842">Generic String</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2803362">Null</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2803629">Boolean</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2803828">Integer</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2804092">Floating Point</a468:a468:a468:a>, <a468:a468:a468:a
 href="#id2804356">Tag Resolution</a468:a468:a468:a>, <a468:a468:a468:a  href="#id2805071">Tag Resolution</a468:a468:a468:a></a468:a468:a468:dt>
              <a470:a470:a470:dd  xmlns:a470="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a470="http://www.w3.org/1999/xhtml">
                <a470:a470:a470:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">canonical form, <a470:a470:a470:a
 href="#id2708710"  xmlns="">Prior Art</a470:a470:a470:a>, <a470:a470:a470:a  href="#id2764295"
 xmlns="">Tags</a470:a470:a470:a>, <a470:a470:a470:a  href="#id2764652"  class="preferred"
 xmlns="">Node Comparison</a470:a470:a470:a>, <a470:a470:a470:a  href="#id2766934"
 xmlns="">Scalar Formats</a470:a470:a470:a>, <a470:a470:a470:a  href="#id2767381"
 xmlns="">Loading Failure Points</a470:a470:a470:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">content format, <a470:a470:a470:a
 href="#id2762313"  xmlns="">Dump</a470:a470:a470:a>, <a470:a470:a470:a  href="#id2763035"
 xmlns="">Load</a470:a470:a470:a>, <a470:a470:a470:a  href="#id2764295"  xmlns="">Tags</a470:a470:a470:a>, <a470:a470:a470:a
 href="#id2764652"  xmlns="">Node Comparison</a470:a470:a470:a>, <a470:a470:a470:a
 href="#id2766150"  xmlns="">Presentation Stream</a470:a470:a470:a>, <a470:a470:a470:a
 href="#id2766934"  class="preferred"  xmlns="">Scalar Formats</a470:a470:a470:a>, <a470:a470:a470:a
 href="#id2767381"  xmlns="">Loading Failure Points</a470:a470:a470:a></dt>
                </a470:a470:a470:dl>
              </a470:a470:a470:dd>
              <a496:a496:a496:dt  xmlns:a496="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a496="http://www.w3.org/1999/xhtml">schema, <a496:a496:a496:a  href="#Schema"
 class="preferred">Recommended Schemas</a496:a496:a496:a>, <a496:a496:a496:a  href="#id2802346">Failsafe Schema</a496:a496:a496:a>, <a496:a496:a496:a
 href="#id2803231">JSON Schema</a496:a496:a496:a>, <a496:a496:a496:a  href="#id2803311">Tags</a496:a496:a496:a>, <a496:a496:a496:a
 href="#id2804923">Core Schema</a496:a496:a496:a>, <a496:a496:a496:a  href="#id2805019">Tags</a496:a496:a496:a>, <a496:a496:a496:a
 href="#id2805770">Other Schemas</a496:a496:a496:a></a496:a496:a496:dt>
              <a498:a498:a498:dd  xmlns:a498="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a498="http://www.w3.org/1999/xhtml">
                <a498:a498:a498:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">core, <a498:a498:a498:a
 href="#id2804923"  class="preferred"  xmlns="">Core Schema</a498:a498:a498:a>, <a498:a498:a498:a
 href="#id2805071"  xmlns="">Tag Resolution</a498:a498:a498:a>, <a498:a498:a498:a
 href="#id2805770"  xmlns="">Other Schemas</a498:a498:a498:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">failsafe, <a498:a498:a498:a
 href="#id2761292"  xmlns="">Tags</a498:a498:a498:a>, <a498:a498:a498:a  href="#id2802346"
 class="preferred"  xmlns="">Failsafe Schema</a498:a498:a498:a>, <a498:a498:a498:a
 href="#id2803311"  xmlns="">Tags</a498:a498:a498:a>, <a498:a498:a498:a  href="#id2804356"
 xmlns="">Tag Resolution</a498:a498:a498:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">JSON, <a498:a498:a498:a
 href="#id2761292"  xmlns="">Tags</a498:a498:a498:a>, <a498:a498:a498:a  href="#id2803231"
 class="preferred"  xmlns="">JSON Schema</a498:a498:a498:a>, <a498:a498:a498:a  href="#id2804356"
 xmlns="">Tag Resolution</a498:a498:a498:a>, <a498:a498:a498:a  href="#id2804923"
 xmlns="">Core Schema</a498:a498:a498:a>, <a498:a498:a498:a  href="#id2805019"  xmlns="">Tags</a498:a498:a498:a>, <a498:a498:a498:a
 href="#id2805071"  xmlns="">Tag Resolution</a498:a498:a498:a></dt>
                </a498:a498:a498:dl>
              </a498:a498:a498:dd>
              <a526:a526:a526:dt  xmlns:a526="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a526="http://www.w3.org/1999/xhtml">sequence, <a526:a526:a526:a  href="#Introduction">Introduction</a526:a526:a526:a>, <a526:a526:a526:a
 href="#id2708710">Prior Art</a526:a526:a526:a>, <a526:a526:a526:a  href="#id2762313">Dump</a526:a526:a526:a>, <a526:a526:a526:a
 href="#id2763754">Representation Graph</a526:a526:a526:a>, <a526:a526:a526:a  href="#id2764044"
 class="preferred">Nodes</a526:a526:a526:a>, <a526:a526:a526:a  href="#id2764295">Tags</a526:a526:a526:a>, <a526:a526:a526:a
 href="#id2764652">Node Comparison</a526:a526:a526:a>, <a526:a526:a526:a  href="#id2765608">Keys Order</a526:a526:a526:a>, <a526:a526:a526:a
 href="#id2768011">Resolved Tags</a526:a526:a526:a>, <a526:a526:a526:a  href="#id2790832">Flow Mappings</a526:a526:a526:a>, <a526:a526:a526:a
 href="#id2802662">Generic Sequence</a526:a526:a526:a></a526:a526:a526:dt>
              <a528:a528:a528:dt  xmlns:a528="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a528="http://www.w3.org/1999/xhtml">serialization, <a528:a528:a528:a  href="#Processing">Processing YAML Information</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2762107">Processes</a528:a528:a528:a>, <a528:a528:a528:a  href="#id2762313">Dump</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2763035">Load</a528:a528:a528:a>, <a528:a528:a528:a  href="#id2763452">Information Models</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2765410"  class="preferred">Serialization Tree</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2765878">Anchors and Aliases</a528:a528:a528:a>, <a528:a528:a528:a  href="#id2766150">Presentation Stream</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2766446">Node Styles</a528:a528:a528:a>, <a528:a528:a528:a  href="#id2766934">Scalar Formats</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2767100">Comments</a528:a528:a528:a>, <a528:a528:a528:a  href="#id2767222">Directives</a528:a528:a528:a>, <a528:a528:a528:a
 href="#id2785586">Node Anchors</a528:a528:a528:a></a528:a528:a528:dt>
              <a530:a530:a530:dd  xmlns:a530="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a530="http://www.w3.org/1999/xhtml">
                <a530:a530:a530:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">detail, <a530:a530:a530:a
 href="#id2762313"  class="preferred"  xmlns="">Dump</a530:a530:a530:a>, <a530:a530:a530:a
 href="#id2763035"  xmlns="">Load</a530:a530:a530:a>, <a530:a530:a530:a  href="#id2763452"
 xmlns="">Information Models</a530:a530:a530:a>, <a530:a530:a530:a  href="#id2765608"
 xmlns="">Keys Order</a530:a530:a530:a>, <a530:a530:a530:a  href="#id2765878"  xmlns="">Anchors and Aliases</a530:a530:a530:a>, <a530:a530:a530:a
 href="#id2785586"  xmlns="">Node Anchors</a530:a530:a530:a></dt>
                </a530:a530:a530:dl>
              </a530:a530:a530:dd>
              <a544:a544:a544:dt  xmlns:a544="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a544="http://www.w3.org/1999/xhtml">serialize, <a544:a544:a544:a  href="#Introduction">Introduction</a544:a544:a544:a>, <a544:a544:a544:a
 href="#id2708710">Prior Art</a544:a544:a544:a>, <a544:a544:a544:a  href="#id2759572">Relation to JSON</a544:a544:a544:a>, <a544:a544:a544:a
 href="#id2762313"  class="preferred">Dump</a544:a544:a544:a>, <a544:a544:a544:a
 href="#id2763035">Load</a544:a544:a544:a>, <a544:a544:a544:a  href="#id2765608">Keys Order</a544:a544:a544:a>, <a544:a544:a544:a
 href="#id2765878">Anchors and Aliases</a544:a544:a544:a>, <a544:a544:a544:a  href="#id2786196">Alias Nodes</a544:a544:a544:a></a544:a544:a544:dt>
              <a546:a546:a546:dt  xmlns:a546="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a546="http://www.w3.org/1999/xhtml">shall, <a546:a546:a546:a  href="#id2759768"
 class="preferred">Terminology</a546:a546:a546:a></a546:a546:a546:dt>
              <a548:a548:a548:dt  xmlns:a548="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a548="http://www.w3.org/1999/xhtml">space, <a548:a548:a548:a  href="#id2708710">Prior Art</a548:a548:a548:a>, <a548:a548:a548:a
 href="#id2760844">Scalars</a548:a548:a548:a>, <a548:a548:a548:a  href="#id2775170"
 class="preferred">White Space Characters</a548:a548:a548:a>, <a548:a548:a548:a
 href="#id2777534">Indentation Spaces</a548:a548:a548:a>, <a548:a548:a548:a  href="#id2779048">Line Folding</a548:a548:a548:a>, <a548:a548:a548:a
 href="#id2788097">Single-Quoted Style</a548:a548:a548:a>, <a548:a548:a548:a  href="#id2788859">Plain Style</a548:a548:a548:a>, <a548:a548:a548:a
 href="#id2793979">Block Indentation Indicator</a548:a548:a548:a>, <a548:a548:a548:a
 href="#id2796251">Folded Style</a548:a548:a548:a>, <a548:a548:a548:a  href="#id2797382">Block Sequences</a548:a548:a548:a>, <a548:a548:a548:a
 href="#id2799181">Block Nodes</a548:a548:a548:a>, <a548:a548:a548:a  href="#id2800967">Bare Documents</a548:a548:a548:a></a548:a548:a548:dt>
              <a550:a550:a550:dd  xmlns:a550="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a550="http://www.w3.org/1999/xhtml">
                <a550:a550:a550:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">indentation, <a550:a550:a550:a
 href="#Introduction"  xmlns="">Introduction</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2708710"  xmlns="">Prior Art</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2759963"
 xmlns="">Collections</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2762313"  xmlns="">Dump</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2763035"  xmlns="">Load</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2763452"
 xmlns="">Information Models</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2766446"
 xmlns="">Node Styles</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2768011"  xmlns="">Resolved Tags</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2769866"  xmlns="">Production Parameters</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2770517"  xmlns="">Production Naming Conventions</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2777534"  class="preferred"  xmlns="">Indentation Spaces</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2778241"  xmlns="">Separation Spaces</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2778481"  xmlns="">Line Prefixes</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2779048"  xmlns="">Line Folding</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2780069"  xmlns="">Comments</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2780810"
 xmlns="">Separation Lines</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2781147"
 xmlns="">Directives</a550:a550:a550:a>, <a550:a550:a550:a  href="#Block"  xmlns="">Block Styles</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2793979"  xmlns="">Block Indentation Indicator</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2794534"  xmlns="">Block Chomping Indicator</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2795688"  xmlns="">Literal Style</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2797382"  xmlns="">Block Sequences</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2799181"  xmlns="">Block Nodes</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2800967"
 xmlns="">Bare Documents</a550:a550:a550:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">separation, <a550:a550:a550:a
 href="#id2778241"  class="preferred"  xmlns="">Separation Spaces</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2780069"  xmlns="">Comments</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2790832"
 xmlns="">Flow Mappings</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2797382"
 xmlns="">Block Sequences</a550:a550:a550:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">white, <a550:a550:a550:a
 href="#id2770517"  xmlns="">Production Naming Conventions</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2775170"  class="preferred"  xmlns="">White Space Characters</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2778241"  xmlns="">Separation Spaces</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2778481"  xmlns="">Line Prefixes</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2779048"  xmlns="">Line Folding</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2780069"  xmlns="">Comments</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2787109"
 xmlns="">Double-Quoted Style</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2788097"
 xmlns="">Single-Quoted Style</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2788859"
 xmlns="">Plain Style</a550:a550:a550:a>, <a550:a550:a550:a  href="#id2790832"  xmlns="">Flow Mappings</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2795688"  xmlns="">Literal Style</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2796251"  xmlns="">Folded Style</a550:a550:a550:a>, <a550:a550:a550:a
 href="#id2797382"  xmlns="">Block Sequences</a550:a550:a550:a></dt>
                </a550:a550:a550:dl>
              </a550:a550:a550:dd>
              <a634:a634:a634:dt  xmlns:a634="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a634="http://www.w3.org/1999/xhtml">stream, <a634:a634:a634:a  href="#id2708710">Prior Art</a634:a634:a634:a>, <a634:a634:a634:a
 href="#Processing">Processing YAML Information</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2762107">Processes</a634:a634:a634:a>, <a634:a634:a634:a  href="#id2762313">Dump</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2763035">Load</a634:a634:a634:a>, <a634:a634:a634:a  href="#id2766150">Presentation Stream</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2767381">Loading Failure Points</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2767852">Well-Formed Streams and Identified Aliases</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2768011">Resolved Tags</a634:a634:a634:a>, <a634:a634:a634:a  href="#Syntax">Syntax Conventions</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2770814">Character Set</a634:a634:a634:a>, <a634:a634:a634:a  href="#id2771184">Character Encodings</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2775468">Miscellaneous Characters</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2780069">Comments</a634:a634:a634:a>, <a634:a634:a634:a  href="#id2783273">Tag Prefixes</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2786563">Empty Nodes</a634:a634:a634:a>, <a634:a634:a634:a  href="#id2800132">Documents</a634:a634:a634:a>, <a634:a634:a634:a
 href="#id2801681"  class="preferred">Streams</a634:a634:a634:a></a634:a634:a634:dt>
              <a636:a636:a636:dd  xmlns:a636="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a636="http://www.w3.org/1999/xhtml">
                <a636:a636:a636:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">ill-formed, <a636:a636:a636:a
 href="#id2763035"  xmlns="">Load</a636:a636:a636:a>, <a636:a636:a636:a  href="#id2767381"
 xmlns="">Loading Failure Points</a636:a636:a636:a>, <a636:a636:a636:a  href="#id2767852"
 class="preferred"  xmlns="">Well-Formed Streams and Identified Aliases</a636:a636:a636:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">well-formed, <a636:a636:a636:a
 href="#id2767852"  xmlns="">Well-Formed Streams and Identified Aliases</a636:a636:a636:a>, <a636:a636:a636:a
 href="#id2801681"  class="preferred"  xmlns="">Streams</a636:a636:a636:a></dt>
                </a636:a636:a636:dl>
              </a636:a636:a636:dd>
              <a648:a648:a648:dt  xmlns:a648="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a648="http://www.w3.org/1999/xhtml">style, <a648:a648:a648:a  href="#id2762313">Dump</a648:a648:a648:a>, <a648:a648:a648:a
 href="#id2763035">Load</a648:a648:a648:a>, <a648:a648:a648:a  href="#id2763452">Information Models</a648:a648:a648:a>, <a648:a648:a648:a
 href="#id2766150">Presentation Stream</a648:a648:a648:a>, <a648:a648:a648:a  href="#id2766446"
 class="preferred">Node Styles</a648:a648:a648:a>, <a648:a648:a648:a  href="#id2766934">Scalar Formats</a648:a648:a648:a>, <a648:a648:a648:a
 href="#id2768011">Resolved Tags</a648:a648:a648:a>, <a648:a648:a648:a  href="#id2784064">Node Tags</a648:a648:a648:a>, <a648:a648:a648:a
 href="#id2787109">Double-Quoted Style</a648:a648:a648:a>, <a648:a648:a648:a  href="#id2788859">Plain Style</a648:a648:a648:a></a648:a648:a648:dt>
              <a650:a650:a650:dd  xmlns:a650="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a650="http://www.w3.org/1999/xhtml">
                <a650:a650:a650:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">block, <a650:a650:a650:a
 href="#id2708710"  xmlns="">Prior Art</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2760844"
 xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2769866"  xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2777534"  xmlns="">Indentation Spaces</a650:a650:a650:a>, <a650:a650:a650:a
 href="#Block"  class="preferred"  xmlns="">Block Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2797382"  xmlns="">Block Sequences</a650:a650:a650:a></dt>
                  <dd  xmlns="http://www.w3.org/1999/xhtml">
                    <dl>
                      <dt>collection, <a650:a650:a650:a  href="#id2759963"  xmlns="">Collections</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2760395"  xmlns="">Structures</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2777534"
 xmlns="">Indentation Spaces</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2790088"
 xmlns="">Flow Collection Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2797293"
 class="preferred"  xmlns="">Block Collection Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2797382"  xmlns="">Block Sequences</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2799181"  xmlns="">Block Nodes</a650:a650:a650:a></dt>
                      <dt>folded, <a650:a650:a650:a  href="#id2760844"  xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2772075"
 xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2779048"
 xmlns="">Line Folding</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2793652"
 xmlns="">Block Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2795688"
 xmlns="">Literal Style</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2796251"
 class="preferred"  xmlns="">Folded Style</a650:a650:a650:a></dt>
                      <dt>literal, <a650:a650:a650:a  href="#id2708710"  xmlns="">Prior Art</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2760844"  xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2766446"
 xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2772075"  xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2793652"  xmlns="">Block Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2795688"  class="preferred"  xmlns="">Literal Style</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2796251"  xmlns="">Folded Style</a650:a650:a650:a></dt>
                      <dt>mapping, <a650:a650:a650:a  href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2769866"  xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2798057"  class="preferred"  xmlns="">Block Mappings</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2799181"  xmlns="">Block Nodes</a650:a650:a650:a></dt>
                      <dt>scalar, <a650:a650:a650:a  href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2793652"  class="preferred"  xmlns="">Block Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2793718"  xmlns="">Block Scalar Headers</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2793979"  xmlns="">Block Indentation Indicator</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2794534"  xmlns="">Block Chomping Indicator</a650:a650:a650:a></dt>
                      <dt>sequence, <a650:a650:a650:a  href="#id2759963"  xmlns="">Collections</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2769866"
 xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2772075"
 xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2797382"
 class="preferred"  xmlns="">Block Sequences</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2798057"  xmlns="">Block Mappings</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2799181"  xmlns="">Block Nodes</a650:a650:a650:a></dt>
                    </dl>
                  </dd>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">compact block collection, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2797382"
 class="preferred"  xmlns="">Block Sequences</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2798057"  xmlns="">Block Mappings</a650:a650:a650:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">flow, <a650:a650:a650:a
 href="#id2708710"  xmlns="">Prior Art</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2759963"
 xmlns="">Collections</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2760844"  xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2769866"
 xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2779048"
 xmlns="">Line Folding</a650:a650:a650:a>, <a650:a650:a650:a  href="#Flow"  class="preferred"
 xmlns="">Flow Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2790320"  xmlns="">Flow Sequences</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2792977"  xmlns="">Flow Nodes</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2799181"
 xmlns="">Block Nodes</a650:a650:a650:a></dt>
                  <dd  xmlns="http://www.w3.org/1999/xhtml">
                    <dl>
                      <dt>collection, <a650:a650:a650:a  href="#Syntax"  xmlns="">Syntax Conventions</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2769866"  xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2772075"  xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2775468"  xmlns="">Miscellaneous Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2784064"  xmlns="">Node Tags</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2785586"
 xmlns="">Node Anchors</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2788859"
 xmlns="">Plain Style</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2790088"  class="preferred"
 xmlns="">Flow Collection Styles</a650:a650:a650:a></dt>
                      <dt>double-quoted, <a650:a650:a650:a  href="#id2708710"  xmlns="">Prior Art</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2760844"  xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2766446"
 xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#Syntax"  xmlns="">Syntax Conventions</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2770814"  xmlns="">Character Set</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2771184"  xmlns="">Character Encodings</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2772075"  xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2776092"  xmlns="">Escaped Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2786942"  xmlns="">Flow Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2787109"  class="preferred"  xmlns="">Double-Quoted Style</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2792977"  xmlns="">Flow Nodes</a650:a650:a650:a></dt>
                      <dt>mapping, <a650:a650:a650:a  href="#id2759963"  xmlns="">Collections</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2769866"
 xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2772075"
 xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2790832"
 class="preferred"  xmlns="">Flow Mappings</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2798057"  xmlns="">Block Mappings</a650:a650:a650:a></dt>
                      <dt>plain, <a650:a650:a650:a  href="#id2760844"  xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2768011"
 xmlns="">Resolved Tags</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2769866"
 xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2772075"
 xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2784064"
 xmlns="">Node Tags</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2786563"  xmlns="">Empty Nodes</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2786942"  xmlns="">Flow Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2788859"  class="preferred"  xmlns="">Plain Style</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2790832"  xmlns="">Flow Mappings</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2792977"  xmlns="">Flow Nodes</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2797293"
 xmlns="">Block Collection Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2797382"
 xmlns="">Block Sequences</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2798057"
 xmlns="">Block Mappings</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2799181"
 xmlns="">Block Nodes</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2800401"  xmlns="">Document Markers</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2804356"  xmlns="">Tag Resolution</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2805071"  xmlns="">Tag Resolution</a650:a650:a650:a></dt>
                      <dt>scalar, <a650:a650:a650:a  href="#id2760844"  xmlns="">Scalars</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2778481"
 xmlns="">Line Prefixes</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2779048"
 xmlns="">Line Folding</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2786942"
 class="preferred"  xmlns="">Flow Scalar Styles</a650:a650:a650:a></dt>
                      <dt>sequence, <a650:a650:a650:a  href="#id2759963"  xmlns="">Collections</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2772075"
 xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2790320"
 class="preferred"  xmlns="">Flow Sequences</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2790832"  xmlns="">Flow Mappings</a650:a650:a650:a></dt>
                      <dt>single-quoted, <a650:a650:a650:a  href="#id2766446"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2769866"  xmlns="">Production Parameters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2772075"  xmlns="">Indicator Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2786942"  xmlns="">Flow Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2788097"  class="preferred"  xmlns="">Single-Quoted Style</a650:a650:a650:a></dt>
                    </dl>
                  </dd>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">scalar, <a650:a650:a650:a
 href="#id2766446"  class="preferred"  xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2776092"  xmlns="">Escaped Characters</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2778853"  xmlns="">Empty Lines</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2786942"
 xmlns="">Flow Scalar Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2795688"
 xmlns="">Literal Style</a650:a650:a650:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">single key:value pair mapping, <a650:a650:a650:a
 href="#id2765608"  xmlns="">Keys Order</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2766446"
 xmlns="">Node Styles</a650:a650:a650:a>, <a650:a650:a650:a  href="#id2790320"  xmlns="">Flow Sequences</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2790832"  class="preferred"  xmlns="">Flow Mappings</a650:a650:a650:a>, <a650:a650:a650:a
 href="#id2798057"  xmlns="">Block Mappings</a650:a650:a650:a></dt>
                </a650:a650:a650:dl>
              </a650:a650:a650:dd>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>T</h3>
            <dl>
              <a902:a902:a902:dt  xmlns:a902="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a902="http://www.w3.org/1999/xhtml">tab, <a902:a902:a902:a  href="#id2708710">Prior Art</a902:a902:a902:a>, <a902:a902:a902:a
 href="#id2770814">Character Set</a902:a902:a902:a>, <a902:a902:a902:a  href="#id2775170"
 class="preferred">White Space Characters</a902:a902:a902:a>, <a902:a902:a902:a
 href="#id2777534">Indentation Spaces</a902:a902:a902:a>, <a902:a902:a902:a  href="#id2778241">Separation Spaces</a902:a902:a902:a>, <a902:a902:a902:a
 href="#id2778481">Line Prefixes</a902:a902:a902:a>, <a902:a902:a902:a  href="#id2793979">Block Indentation Indicator</a902:a902:a902:a></a902:a902:a902:dt>
              <a904:a904:a904:dt  xmlns:a904="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a904="http://www.w3.org/1999/xhtml">tag, <a904:a904:a904:a  href="#id2708710">Prior Art</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2761292">Tags</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2762313">Dump</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2763754">Representation Graph</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2764044">Nodes</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2764295"  class="preferred">Tags</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2764652">Node Comparison</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2766934">Scalar Formats</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2767381">Loading Failure Points</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2768011">Resolved Tags</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2769212">Recognized and Valid Tags</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2769542">Available Tags</a904:a904:a904:a>, <a904:a904:a904:a  href="#Syntax">Syntax Conventions</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2769866">Production Parameters</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2772075">Indicator Characters</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2775468">Miscellaneous Characters</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2782090">“TAG” Directives</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2783273">Tag Prefixes</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2783797">Node Properties</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2784064">Node Tags</a904:a904:a904:a>, <a904:a904:a904:a
 href="#Flow">Flow Styles</a904:a904:a904:a>, <a904:a904:a904:a  href="#Schema">Recommended Schemas</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2803311">Tags</a904:a904:a904:a>, <a904:a904:a904:a  href="#id2805019">Tags</a904:a904:a904:a>, <a904:a904:a904:a
 href="#id2805770">Other Schemas</a904:a904:a904:a></a904:a904:a904:dt>
              <a906:a906:a906:dd  xmlns:a906="http://www.w3.org/1999/xhtml"  xmlns=""
 xmlns:a906="http://www.w3.org/1999/xhtml">
                <a906:a906:a906:dl>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">available, <a906:a906:a906:a
 href="#id2769542"  class="preferred"  xmlns="">Available Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">global, <a906:a906:a906:a
 href="#id2708710"  xmlns="">Prior Art</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2761292"
 xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2762313"  xmlns="">Dump</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2764295"  class="preferred"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2768011"  xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2782457"  xmlns="">Tag Handles</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2783273"
 xmlns="">Tag Prefixes</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2784064"
 xmlns="">Node Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805770"  xmlns="">Other Schemas</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">handle, <a906:a906:a906:a
 href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2762107"
 xmlns="">Processes</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2762313"  xmlns="">Dump</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2772075"  xmlns="">Indicator Characters</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2782090"  xmlns="">“TAG” Directives</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2782457"  class="preferred"  xmlns="">Tag Handles</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2783273"  xmlns="">Tag Prefixes</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                  <dd  xmlns="http://www.w3.org/1999/xhtml">
                    <dl>
                      <dt>named, <a906:a906:a906:a  href="#id2775468"  xmlns="">Miscellaneous Characters</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2782457"  class="preferred"  xmlns="">Tag Handles</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                      <dt>primary, <a906:a906:a906:a  href="#id2782457"  class="preferred"
 xmlns="">Tag Handles</a906:a906:a906:a></dt>
                      <dt>secondary, <a906:a906:a906:a  href="#id2782457"  class="preferred"
 xmlns="">Tag Handles</a906:a906:a906:a></dt>
                    </dl>
                  </dd>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">local, <a906:a906:a906:a
 href="#id2708710"  xmlns="">Prior Art</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2761292"
 xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2762313"  xmlns="">Dump</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2764295"  class="preferred"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2768011"  xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2772075"  xmlns="">Indicator Characters</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2782457"  xmlns="">Tag Handles</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2783273"
 xmlns="">Tag Prefixes</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2784064"
 xmlns="">Node Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805770"  xmlns="">Other Schemas</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">non-specific, <a906:a906:a906:a
 href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2762313"
 xmlns="">Dump</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2767381"  xmlns="">Loading Failure Points</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2768011"  class="preferred"  xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2772075"  xmlns="">Indicator Characters</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  xmlns="">Node Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#Schema"
 xmlns="">Recommended Schemas</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2804356"
 xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805071"
 xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805770"
 xmlns="">Other Schemas</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">prefix, <a906:a906:a906:a
 href="#id2782090"  xmlns="">“TAG” Directives</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2783273"  class="preferred"  xmlns="">Tag Prefixes</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">property, <a906:a906:a906:a
 href="#id2768011"  xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2772075"  xmlns="">Indicator Characters</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  class="preferred"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">recognized, <a906:a906:a906:a
 href="#id2769212"  class="preferred"  xmlns="">Recognized and Valid Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">repository, <a906:a906:a906:a
 href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2782457"
 xmlns="">Tag Handles</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805770"  class="preferred"
 xmlns="">Other Schemas</a906:a906:a906:a></dt>
                  <dd  xmlns="http://www.w3.org/1999/xhtml">
                    <dl>
                      <dt>bool, <a906:a906:a906:a  href="#id2803629"  class="preferred"
 xmlns="">Boolean</a906:a906:a906:a></dt>
                      <dt>float, <a906:a906:a906:a  href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2804092"  class="preferred"  xmlns="">Floating Point</a906:a906:a906:a></dt>
                      <dt>int, <a906:a906:a906:a  href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2803828"  class="preferred"  xmlns="">Integer</a906:a906:a906:a></dt>
                      <dt>map, <a906:a906:a906:a  href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2802432"  class="preferred"  xmlns="">Generic Mapping</a906:a906:a906:a></dt>
                      <dt>null, <a906:a906:a906:a  href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2786563"  xmlns="">Empty Nodes</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2803362"
 class="preferred"  xmlns="">Null</a906:a906:a906:a></dt>
                      <dt>seq, <a906:a906:a906:a  href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2802662"  class="preferred"  xmlns="">Generic Sequence</a906:a906:a906:a></dt>
                      <dt>str, <a906:a906:a906:a  href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2802842"  class="preferred"  xmlns="">Generic String</a906:a906:a906:a></dt>
                    </dl>
                  </dd>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">resolution, <a906:a906:a906:a
 href="#id2764295"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2767381"
 xmlns="">Loading Failure Points</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2768011"
 class="preferred"  xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  xmlns="">Node Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2786942"
 xmlns="">Flow Scalar Styles</a906:a906:a906:a>, <a906:a906:a906:a  href="#Schema"
 xmlns="">Recommended Schemas</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2803036"
 xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2804356"
 xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805071"
 xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2805770"
 xmlns="">Other Schemas</a906:a906:a906:a></dt>
                  <dd  xmlns="http://www.w3.org/1999/xhtml">
                    <dl>
                      <dt>convention, <a906:a906:a906:a  href="#id2768011"  class="preferred"
 xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2784064"
 xmlns="">Node Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2803036"  xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2804356"  xmlns="">Tag Resolution</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2805071"  xmlns="">Tag Resolution</a906:a906:a906:a></dt>
                    </dl>
                  </dd>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">shorthand, <a906:a906:a906:a
 href="#id2761292"  xmlns="">Tags</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2775468"
 xmlns="">Miscellaneous Characters</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2782090"
 xmlns="">“TAG” Directives</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2782457"
 xmlns="">Tag Handles</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2783273"  xmlns="">Tag Prefixes</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  class="preferred"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">specific, <a906:a906:a906:a
 href="#id2768011"  class="preferred"  xmlns="">Resolved Tags</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2784064"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">unavailable, <a906:a906:a906:a
 href="#id2763035"  xmlns="">Load</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2767381"
 xmlns="">Loading Failure Points</a906:a906:a906:a>, <a906:a906:a906:a  href="#id2769542"
 class="preferred"  xmlns="">Available Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">unrecognized, <a906:a906:a906:a
 href="#id2767381"  xmlns="">Loading Failure Points</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2769212"  class="preferred"  xmlns="">Recognized and Valid Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">unresolved, <a906:a906:a906:a
 href="#id2767381"  xmlns="">Loading Failure Points</a906:a906:a906:a>, <a906:a906:a906:a
 href="#id2768011"  class="preferred"  xmlns="">Resolved Tags</a906:a906:a906:a></dt>
                  <dt  xmlns="http://www.w3.org/1999/xhtml">verbatim, <a906:a906:a906:a
 href="#id2784064"  class="preferred"  xmlns="">Node Tags</a906:a906:a906:a></dt>
                </a906:a906:a906:dl>
              </a906:a906:a906:dd>
              <a1104:a1104:a1104:dt  xmlns:a1104="http://www.w3.org/1999/xhtml"
 xmlns=""  xmlns:a1104="http://www.w3.org/1999/xhtml">trimming, <a1104:a1104:a1104:a
 href="#id2779048"  class="preferred">Line Folding</a1104:a1104:a1104:a></a1104:a1104:a1104:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>V</h3>
            <dl>
              <a1106:a1106:a1106:dt  xmlns:a1106="http://www.w3.org/1999/xhtml"
 xmlns=""  xmlns:a1106="http://www.w3.org/1999/xhtml">value, <a1106:a1106:a1106:a
 href="#id2762313">Dump</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a  href="#id2764044"
 class="preferred">Nodes</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a  href="#id2764652">Node Comparison</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a
 href="#id2768011">Resolved Tags</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a  href="#id2772075">Indicator Characters</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a
 href="#id2790832">Flow Mappings</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a  href="#id2798057">Block Mappings</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a
 href="#id2802432">Generic Mapping</a1106:a1106:a1106:a>, <a1106:a1106:a1106:a  href="#id2803362">Null</a1106:a1106:a1106:a></a1106:a1106:a1106:dt>
            </dl>
          </div>
          <div  class="indexdiv">
            <h3>Y</h3>
            <dl>
              <a1108:a1108:a1108:dt  xmlns:a1108="http://www.w3.org/1999/xhtml"
 xmlns=""  xmlns:a1108="http://www.w3.org/1999/xhtml">YAML 1.1         processing, <a1108:a1108:a1108:a
 href="#id2774608">Line Break Characters</a1108:a1108:a1108:a>, <a1108:a1108:a1108:a
 href="#id2781553"  class="preferred">“YAML” Directives</a1108:a1108:a1108:a></a1108:a1108:a1108:dt>
            </dl>
          </div>
        </div>
      </div>
    </code></div><code>
</code></body></html>