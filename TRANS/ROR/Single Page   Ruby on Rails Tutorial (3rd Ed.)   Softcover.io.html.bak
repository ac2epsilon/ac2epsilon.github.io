<!DOCTYPE html>
<!-- saved from url=(0047)https://www.railstutorial.org/book/_single-page -->
<html id="custDomain">
  <head>
    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
    <title>Single Page | Ruby on Rails Tutorial (3rd Ed.) | Softcover.io</title>
    <link href="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/reading-999e381e04a7bc05aa6938edda31ac8d.css"
      media="screen" rel="stylesheet" type="text/css">
    <link href="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/print-ca85c1c74168e935ca4e2e958a3a5c2b.css"
      media="print" rel="stylesheet" type="text/css">
    <meta content="authenticity_token" name="csrf-param">
    <meta content="efck+0newU9AkP5TJvKZa+FLOZkhCZdTbuumN34RctQ=" name="csrf-token">
    <link href="https://www.railstutorial.org/apple-touch-icon-precomposed.png"
      rel="apple-touch-icon-precomposed">
    <meta content="http://www.railstutorial.org" property="og:url">
    <meta content="Ruby on Rails Tutorial (3rd Ed.)" property="og:title">
    <meta content="The Ruby on Rails Tutorial book and screencast series teach you how to develop and deploy real, industrial-strength web applications with Ruby on Rails, the open-source web framework that powers top websites such as Twitter, Hulu, GitHub, and the Yellow Pages. The Ruby on Rails Tutorial book is available for free online and is available for purchase as an ebook (PDF, EPUB, and MOBI formats). The companion screencast series includes 12 individual lessons, one for each chapter of the Ruby on Rails Tutorial book. All purchases also include a free copy of the Solutions Manual for Exercises, with solutions to every exercise in the book."
      property="og:description">
    <meta content="Softcover.io" property="og:site_name">
    <meta content="https://softcover.s3.amazonaws.com/636/ruby_on_rails_tutorial_3rd_edition/images/cover-web.png"
      property="og:image">
    <meta content="https://softcover.s3.amazonaws.com/636/ruby_on_rails_tutorial_3rd_edition/images/cover-web.png"
      property="og:image:secure_url">
    <meta content="image/png" property="og:image:type">
    <meta content="500" property="og:image:width">
    <meta content="500" property="og:image:height">
    <link href="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/css"
      rel="stylesheet" type="text/css">
    <link href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css"
      rel="stylesheet">
  </head>
  <body data-twttr-rendered="true">
    <address><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/seg"
        border="0" height="1" width="1">Переклад українською <a href="mailto:ac2epsilon@gmail.com">Арсеній
        Чеботарьов</a>, Ніжин 2015 ac2epsilon@gmail.com<noscript></noscript> </address>
    <div class="closeLeft container">
      <div class="container_footer">
        <div id="pageBook">
          <div id="bookHeader">
            <div class="wrapper">
              <div class="bookCover">&nbsp;&nbsp;<a href="https://www.railstutorial.org/book"><img
                    style="width: 84px; height: 126px;" alt="Cover-web" class="cover"
                    src="Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/cover-web.png"></a><a
                  href="https://www.railstutorial.org/book">
                  <p> READ ONLINE FREE </p>
                </a></div>
              <div class="bookInfo">
                <h2>Ruby on Rails Tutorial (3rd Ed.)&nbsp;<span class="j_subtitle"></span><span
                    class="j_subtitle"></span></h2>
                <h3><span class="j_subtitle"></span></h3>
                <span class="j_subtitle">Learn Web Development with Rails</span>
                <h4 class="subtitle">Вивчайте веб розробку з Rails</h4>
                <h2 class="author">Michael Hartl</h2>
                <a href="mailto:admin@railstutorial.org"> </a> </div>
            </div>
          </div>
          <div class="wrapper" id="hide_chromeFooter">
            <div id="bookHtml" style="opacity: 1;">
              <div id="book">
                <div id="frontmatter" data-number="0">
                  <div id="title_page"> </div>
                  <h1 style="background-color: #f9f9f9;" class="contents">Зміст</h1>
                  <div id="table_of_contents">
                    <ul>
                      <li class="chapter-star"><a href="#foreword" class="heading hyperref">Передмова</a></li>
                      <li class="chapter-star"><a href="#acknowledgments" class="heading hyperref">Подяки</a></li>
                      <li class="chapter-star"><a href="#about_the_author" class="heading hyperref">Про
                          автора</a></li>
                      <li class="chapter-star"><a href="#copyright_and_license"
                          class="heading hyperref">Копірайт та ліцензія</a></li>
                      <li class="chapter"><a href="#cha-beginning" class="heading hyperref"><span
                            class="number">Глава 1 </span>Від нуля до
                          розгортання</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-introduction" class="heading hyperref"><span
                                class="number">1.1 </span>Вступ</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-prerequisites"
                                  class="heading hyperref"><span class="number">1.1.1
                                    </span>Попередні вимоги</a></li>
                              <li class="subsection"><a href="#sec-conventions"
                                  class="heading hyperref"><span class="number">1.1.2
                                    </span>Домовленості в цій книзі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-up_and_running" class="heading hyperref"><span
                                class="number">1.2 </span>До роботи</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-development_environment"
                                  class="heading hyperref"><span class="number">1.2.1
                                    </span>Оточення розробки</a></li>
                              <li class="subsection"><a href="#sec-installing_rails"
                                  class="heading hyperref"><span class="number">1.2.2
                                    </span>Встановлення Rails</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-the_hello_application"
                              class="heading hyperref"><span class="number">1.3
                              </span>Перше застосування</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-bundler" class="heading hyperref"><span
                                    class="number">1.3.1 </span>Bundler</a></li>
                              <li class="subsection"><a href="#sec-rails_server"
                                  class="heading hyperref"> <span class="number">1.3.2
                                    </span> <span class="tt">rails server</span>
                                </a></li>
                              <li class="subsection"><a href="#sec-mvc" class="heading hyperref"><span
                                    class="number">1.3.3 </span>Model-View-Controller
                                  (MVC)</a></li>
                              <li class="subsection"><a href="#sec-hello_world"
                                  class="heading hyperref"><span class="number">1.3.4
                                    </span>Hello, world!</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-version_control" class="heading hyperref"><span
                                class="number">1.4 </span>Контроль версій за
                              допомогою Git</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-git_setup" class="heading hyperref"><span
                                    class="number">1.4.1 </span>Встановлення та
                                  налаштування</a></li>
                              <li class="subsection"><a href="#uid72" class="heading hyperref"><span
                                    class="number">1.4.2 </span>Що гарного
                                  робить Git для вас?</a></li>
                              <li class="subsection"><a href="#sec-bitbucket" class="heading hyperref"><span
                                    class="number">1.4.3 </span>Bitbucket</a></li>
                              <li class="subsection"><a href="#sec-git_commands"
                                  class="heading hyperref"><span class="number">1.4.4
                                    </span>Branch, edit, commit, merge</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-deploying" class="heading hyperref"><span
                                class="number">1.5 </span>Розгортання</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-heroku_setup"
                                  class="heading hyperref"><span class="number">1.5.1
                                    </span>Встановлення Heroku</a></li>
                              <li class="subsection"><a href="#sec-heroku_step_one"
                                  class="heading hyperref"><span class="number">1.5.2
                                    </span>Розгортання Heroku, крок перший</a></li>
                              <li class="subsection"><a href="#uid102" class="heading hyperref"><span
                                    class="number">1.5.3 </span>Розгортання
                                  Heroku, крок другий</a></li>
                              <li class="subsection"><a href="#sec-heroku_commands"
                                  class="heading hyperref"><span class="number">1.5.4
                                    </span>Команди Heroku</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-beginning_conclusion"
                              class="heading hyperref"><span class="number">1.6
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-beginning_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">1.6.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-beginning_exercises"
                              class="heading hyperref"><span class="number">1.7
                              </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#" class="heading hyperref"><span
                            class="number">Глава 2 </span>Застосування Іграшка
                        </a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-planning_the_application"
                              class="heading hyperref"><span class="number">2.1
                              </span>Планування застосування</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-modeling_demo_users"
                                  class="heading hyperref"><span class="number">2.1.1
                                    </span>Модель іграшки для користувачів</a></li>
                              <li class="subsection"><a href="#sec-modeling_demo_microposts"
                                  class="heading hyperref"><span class="number">2.1.2
                                    </span>Модель іграшки для мікропостів</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-demo_users_resource"
                              class="heading hyperref"><span class="number">2.2
                              </span>Ресурс Users</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_user_tour"
                                  class="heading hyperref"><span class="number">2.2.1
                                    </span>Тур для користувача</a></li>
                              <li class="subsection"><a href="#sec-mvc_in_action"
                                  class="heading hyperref"><span class="number">2.2.2
                                    </span>MVC в дії</a></li>
                              <li class="subsection"><a href="#sec-weaknesses_of_this_users_resource"
                                  class="heading hyperref"><span class="number">2.2.3
                                    </span>Слабкість ресурсу Users</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-microposts_resource"
                              class="heading hyperref"><span class="number">2.3
                              </span>Ресурс Microposts</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_micropost_microtour"
                                  class="heading hyperref"><span class="number">2.3.1
                                    </span>Мікротур в мініпости</a></li>
                              <li class="subsection"><a href="#sec-putting_the_micro_in_microposts"
                                  class="heading hyperref"><span class="number">2.3.2
                                    </span>Додавання <em>micro</em> в
                                  мікропости</a></li>
                              <li class="subsection"><a href="#sec-demo_user_has_many_microposts"
                                  class="heading hyperref"><span class="number">2.3.3
                                    </span>Користувач <span class="tt">has_many</span>
                                  мікропостів</a></li>
                              <li class="subsection"><a href="#sec-inheritance_hierarchies"
                                  class="heading hyperref"><span class="number">2.3.4
                                    </span>Ієрархії наслідування</a></li>
                              <li class="subsection"><a href="#sec-deploying_the_toy_app"
                                  class="heading hyperref"><span class="number">2.3.5
                                    </span>Розгортання іграшкового застосування</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-toy_app_conclusion"
                              class="heading hyperref"><span class="number">2.4
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-toy_app_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">2.4.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-toy_app_exercises" class="heading hyperref"><span
                                class="number">2.5 </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-static_pages" class="heading hyperref"><span
                            class="number">Глава 3</span>Здебільше статичні
                          сторінки</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-sample_app_setup" class="heading hyperref"><span
                                class="number">3.1 </span>Настроювання простого
                              застосування</a></li>
                          <li class="section"><a href="#sec-static_pages" class="heading hyperref"><span
                                class="number">3.2 </span>Статичні сторінки</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-generated_static_pages"
                                  class="heading hyperref"><span class="number">3.2.1
                                    </span>Згенеровані статичні сторінки</a></li>
                              <li class="subsection"><a href="#sec-custom_static_pages"
                                  class="heading hyperref"><span class="number">3.2.2
                                    </span>Власні статичні сторінки</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-getting_started_with_testing"
                              class="heading hyperref"><span class="number">3.3
                              </span>Починаємо тестувати</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-our_first_test"
                                  class="heading hyperref"><span class="number">3.3.1
                                    </span>Наш перший тест</a></li>
                              <li class="subsection"><a href="#sec-red" class="heading hyperref"><span
                                    class="number">3.3.2 </span>Червоний</a></li>
                              <li class="subsection"><a href="#sec-green" class="heading hyperref"><span
                                    class="number">3.3.3 </span>Зелений</a></li>
                              <li class="subsection"><a href="#sec-refactor" class="heading hyperref"><span
                                    class="number">3.3.4 </span>Рефактерізація</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-slightly_dynamic_pages"
                              class="heading hyperref"><span class="number">3.4
                              </span>Трохи динамічні сторінки</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-testing_titles"
                                  class="heading hyperref"><span class="number">3.4.1
                                    </span>Тестування заголовків (Червоний)</a></li>
                              <li class="subsection"><a href="#sec-adding_page_titles"
                                  class="heading hyperref"><span class="number">3.4.2
                                    </span>Додавання заголовків сторінок
                                  (Зелений)</a></li>
                              <li class="subsection"><a href="#sec-layouts_and_embedded_ruby"
                                  class="heading hyperref"><span class="number">3.4.3
                                    </span>Розміщення та вбудований Ruby
                                  (Рефактерізація)</a></li>
                              <li class="subsection"><a href="#sec-setting_the_root_route"
                                  class="heading hyperref"><span class="number">3.4.4
                                    </span>Встановлення корньового шляху</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-static_pages_conclusion"
                              class="heading hyperref"><span class="number">3.5
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-static_pages_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">3.5.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-static_pages_exercises"
                              class="heading hyperref"><span class="number">3.6
                              </span>Вправи</a></li>
                          <li class="section"><a href="#sec-advanced_testing_setup"
                              class="heading hyperref"><span class="number">3.7
                              </span>Розширене налаштування тестування</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-minitest_reporters"
                                  class="heading hyperref"><span class="number">3.7.1
                                    </span>Доповідачі MiniTest</a></li>
                              <li class="subsection"><a href="#sec-backtrace_silencer"
                                  class="heading hyperref"><span class="number">3.7.2
                                    </span>Замовчувач Backtrace</a></li>
                              <li class="subsection"><a href="#sec-guard" class="heading hyperref"><span
                                    class="number">3.7.3 </span>Автоматичні
                                  тести за допомогою Guard</a></li>
                            </ul>
                          </li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-rails_flavored_ruby" class="heading hyperref"><span
                            class="number">Глава 4</span>Ruby в стилі Rails</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-motivation" class="heading hyperref"><span
                                class="number">4.1 </span>Мотивація</a></li>
                          <li class="section"><a href="#sec-strings_and_methods"
                              class="heading hyperref"><span class="number">4.2
                              </span>Рядки та методи</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-comments" class="heading hyperref"><span
                                    class="number">4.2.1 </span>Коментарі</a></li>
                              <li class="subsection"><a href="#sec-strings" class="heading hyperref"><span
                                    class="number">4.2.2 </span>Рядкі</a></li>
                              <li class="subsection"><a href="#sec-objects_and_message_passing"
                                  class="heading hyperref"><span class="number">4.2.3
                                    </span>Об’єкти та передача повідомлень</a></li>
                              <li class="subsection"><a href="#sec-back_to_the_title_helper"
                                  class="heading hyperref"><span class="number">4.2.4</span><span
                                    style="font-weight: bold;"> </span>Визначення
                                  методів</a></li>
                              <li class="subsection"><a href="#sec-back_to_the_title_helper"
                                  class="heading hyperref"><span class="number">4.2.5
                                    </span>Назад до помічника по заголовках</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-other_data_structures"
                              class="heading hyperref"><span class="number">4.3
                              </span>Інші структури даних</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a class="heading hyperref"
                                  href="#_sec-arrays_and_ranges" heading="" hyperref"=""><span
                                    class="number">4.3.1 </span>Масиви та
                                  диапазони</a></li>
                              <li class="subsection"><a href="#sec-blocks" class="heading hyperref"><span
                                    class="number">4.3.2 </span>Блоки</a></li>
                              <li class="subsection"><a href="#sec-hashes_and_symbols"
                                  class="heading hyperref"><span class="number">4.3.3
                                    </span>Хеші та символи</a></li>
                              <li class="subsection"><a href="#sec-css_revisited"
                                  class="heading hyperref"><span class="number">4.3.4
                                    </span>CSS, повторний огляд</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-ruby_classes" class="heading hyperref"><span
                                class="number">4.4 </span>Класи Ruby</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-constructors"
                                  class="heading hyperref"><span class="number">4.4.1
                                    </span>Конструктори</a></li>
                              <li class="subsection"><a href="#sec-a_class_of_our_own"
                                  class="heading hyperref"><span class="number">4.4.2
                                    </span>Наслідування класів</a></li>
                              <li class="subsection"><a href="#sec-modifying_built_in_classes"
                                  class="heading hyperref"><span class="number">4.4.3
                                    </span>Модифікація вбудованих класів</a></li>
                              <li class="subsection"><a href="#sec-a_controller_class"
                                  class="heading hyperref"><span class="number">4.4.4
                                    </span>Класи контролерів</a></li>
                              <li class="subsection"><a href="#sec-a_user_class"
                                  class="heading hyperref"><span class="number">4.4.5
                                    </span>Користувацький клас</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-conclusion" class="heading hyperref"><span
                                class="number">4.5 </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-rails_flavored_ruby_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">4.5.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-exercises" class="heading hyperref"><span
                                class="number">4.6 </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-filling_in_the_layout" class="heading hyperref"><span
                            class="number">Глава 5 </span>Заповнення розміщень</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-structure" class="heading hyperref"><span
                                class="number">5.1 </span>Додавання деякої
                              структури</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-adding_to_the_layout"
                                  class="heading hyperref"><span class="number">5.1.1
                                    </span>Навігація сайтом</a></li>
                              <li class="subsection"><a href="#sec-custom_css" class="heading hyperref"><span
                                    class="number">5.1.2 </span>Bootstrap та
                                  власний CSS</a></li>
                              <li class="subsection"><a href="#sec-partials" class="heading hyperref"><span
                                    class="number">5.1.3 </span>Недовершені</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-sass_and_the_asset_pipeline"
                              class="heading hyperref"><span class="number">5.2
                              </span>Sass та конвеєр активів<br>
                            </a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-the_asset_pipeline"
                                  class="heading hyperref"><span class="number">5.2.1
                                    </span>Конвеєр активів</a></li>
                              <li class="subsection"><a href="#sec-sass" class="heading hyperref"><span
                                    class="number">5.2.2 </span>Синтаксично
                                  неймовірні листи стилів</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-layout_links" class="heading hyperref"><span
                                class="number">5.3 </span>Зв’язок між
                              розміщеннями</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-contact_page"
                                  class="heading hyperref"><span class="number">5.3.1
                                    </span>Сторірнка контактів</a></li>
                              <li class="subsection"><a href="#sec-rails_routes"
                                  class="heading hyperref"><span class="number">5.3.2
                                    </span>Маршрути Rails</a></li>
                              <li class="subsection"><a href="#sec-named_routes"
                                  class="heading hyperref"><span class="number">5.3.3
                                    </span>Використання іменованих маршрутів</a></li>
                              <li class="subsection"><a href="#sec-layout_link_tests"
                                  class="heading hyperref"><span class="number">5.3.4
                                    </span>Перевірка зв’язку розміщень</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-user_signup" class="heading hyperref"><span
                                class="number">5.4 </span>Реєстрація
                              користувача: перший крок<br>
                            </a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-users_controller"
                                  class="heading hyperref"><span class="number">5.4.1
                                    </span>Контролер для Users</a></li>
                              <li class="subsection"><a href="#sec-signup_url" class="heading hyperref"><span
                                    class="number">5.4.2 </span>URL реєстрації<br>
                                </a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-layout_conclusion" class="heading hyperref"><span
                                class="number">5.5 </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-filling_in_the_layout_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">5.5.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-layout_exercises" class="heading hyperref"><span
                                class="number">5.6 </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-modeling_users" class="heading hyperref"><span
                            class="number">Глава 6 Моделювання користувачів</span></a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-user_model" class="heading hyperref"><span
                                class="number">6.1 </span>Модель User<br>
                            </a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-database_migrations"
                                  class="heading hyperref"><span class="number">6.1.1
                                    </span>Міграції баз даних</a></li>
                              <li class="subsection"><a href="#sec-the_model_file"
                                  class="heading hyperref"><span class="number">6.1.2
                                    </span>Файл моделі</a></li>
                              <li class="subsection"><a href="#sec-creating_user_objects"
                                  class="heading hyperref"><span class="number">6.1.3
                                    </span>Створення об’єктів користувачів</a></li>
                              <li class="subsection"><a href="#sec-finding_user_objects"
                                  class="heading hyperref"><span class="number">6.1.4
                                    </span>Пошук об’єктів користувачів</a></li>
                              <li class="subsection"><a href="#sec-updating_user_objects"
                                  class="heading hyperref"><span class="number">6.1.5
                                    </span>Оновлення об’єктів користувачів</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-user_validations" class="heading hyperref"><span
                                class="number">6.2 </span>Перевірки користувача</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_validity_test"
                                  class="heading hyperref"><span class="number">6.2.1
                                    </span>Тест на гідність</a></li>
                              <li class="subsection"><a href="#sec-presence_validation"
                                  class="heading hyperref"><span class="number">6.2.2
                                    </span>Перевірка наявності</a></li>
                              <li class="subsection"><a href="#sec-length_validation"
                                  class="heading hyperref"><span class="number">6.2.3
                                    </span>Перевірка довжини</a></li>
                              <li class="subsection"><a href="#sec-format_validation"
                                  class="heading hyperref"><span class="number">6.2.4
                                    </span>Перевірки формата</a></li>
                              <li class="subsection"><a href="#sec-uniqueness_validation"
                                  class="heading hyperref"><span class="number">6.2.5
                                    </span>Перевірка унікальності</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-adding_a_secure_password"
                              class="heading hyperref"><span class="number">6.3
                              </span>Додавання безпечного паролю</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_hashed_password"
                                  class="heading hyperref"><span class="number">6.3.1
                                    </span>Хешований пароль</a></li>
                              <li class="subsection"><a href="#sec-has_secure_password"
                                  class="heading hyperref"><span class="number">6.3.2
                                    </span>Користувач має безпечний пароль</a></li>
                              <li class="subsection"><a href="#sec-minimum_password_length"
                                  class="heading hyperref"><span class="number">6.3.3
                                    </span>Мінімальна довжина паролю</a></li>
                              <li class="subsection"><a href="#sec-creating_and_authenticating_a_user"
                                  class="heading hyperref"><span class="number">6.3.4
                                    </span>Створення та аутентифікація
                                  користувача</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-modeling_users_conclusion"
                              class="heading hyperref"><span class="number">6.4
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-modeling_users_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">6.4.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-modeling_users_exercises"
                              class="heading hyperref"><span class="number">6.5
                              </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-sign_up" class="heading hyperref"><span
                            class="number">Глава 7</span>Реєстрація</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-showing_users" class="heading hyperref"><span
                                class="number">7.1 </span>Відображення
                              користувачів</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-rails_environments"
                                  class="heading hyperref"><span class="number">7.1.1
                                    </span>Оточення Debug та Rails</a></li>
                              <li class="subsection"><a href="#sec-a_users_resource"
                                  class="heading hyperref"><span class="number">7.1.2
                                    </span>Ресурс Users</a></li>
                              <li class="subsection"><a href="#sec-debugger" class="heading hyperref"><span
                                    class="number">7.1.3 </span>Debugger</a></li>
                              <li class="subsection"><a href="#sec-a_gravatar_image"
                                  class="heading hyperref"><span class="number">7.1.4
                                    </span>Імідж та сайдбар Gravatar<br>
                                </a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-signup_form" class="heading hyperref"><span
                                class="number">7.2 </span>Форма реєстрації</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-using_form_for"
                                  class="heading hyperref"><span class="number">7.2.1
                                    </span>Використання <span class="tt">form_for</span></a></li>
                              <li class="subsection"><a href="#sec-the_form_html"
                                  class="heading hyperref"><span class="number">7.2.2
                                    </span>Форма реєстрації HTML</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-unsuccessful_signups"
                              class="heading hyperref"><span class="number">7.3
                              </span>Невдалі спроби реєстрації</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_working_form"
                                  class="heading hyperref"><span class="number">7.3.1
                                    </span>Робоча форма</a></li>
                              <li class="subsection"><a href="#sec-strong_parameters"
                                  class="heading hyperref"><span class="number">7.3.2
                                    </span>Сильні параметри</a></li>
                              <li class="subsection"><a href="#sec-signup_error_messages"
                                  class="heading hyperref"><span class="number">7.3.3
                                    </span>Повідомлення помилок реєстрації</a></li>
                              <li class="subsection"><a href="#sec-a_test_for_invalid_submission"
                                  class="heading hyperref"><span class="number">7.3.4
                                    </span>Перевірка на придатну підписку</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-successful_signups"
                              class="heading hyperref"><span class="number">7.4
                              </span>Вдалі спроби реєстрації</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-the_finished_signup_form"
                                  class="heading hyperref"><span class="number">7.4.1
                                    </span>Завершальна форма реєстрації</a></li>
                              <li class="subsection"><a href="#sec-the_flash" class="heading hyperref"><span
                                    class="number">7.4.2 </span>Закріплення</a></li>
                              <li class="subsection"><a href="#sec-the_first_signup"
                                  class="heading hyperref"><span class="number">7.4.3
                                    </span>Перша реєстрація</a></li>
                              <li class="subsection"><a href="#sec-a_test_for_valid_submission"
                                  class="heading hyperref"><span class="number">7.4.4
                                    </span>Перевірка на придатну підписку</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-professional_grade_deployment"
                              class="heading hyperref"><span class="number">7.5
                              </span>Розгортання професійного рівня</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-ssl_in_production"
                                  class="heading hyperref"><span class="number">7.5.1
                                    </span>SSL в виробничому середовищі</a></li>
                              <li class="subsection"><a href="#sec-production_webserver"
                                  class="heading hyperref"><span class="number">7.5.2
                                    </span>Виробничий webserver</a></li>
                              <li class="subsection"><a href="#sec-ruby_version_number"
                                  class="heading hyperref"><span class="number">7.5.3
                                    </span>Номер версії Ruby</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#cid49" class="heading hyperref"><span
                                class="number">7.6 </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-sign_up_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">7.6.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-signup_exercises" class="heading hyperref"><span
                                class="number">7.7 </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-log_in_log_out" class="heading hyperref"><span
                            class="number">Глава 8 Вхід, вихід</span></a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-sessions_and_failed_login"
                              class="heading hyperref"><span class="number">8.1
                                Сессії</span></a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-sessions_controller"
                                  class="heading hyperref"><span class="number">8.1.1
                                    </span>Контролер сессій</a></li>
                              <li class="subsection"><a href="#sec-login_form" class="heading hyperref"><span
                                    class="number">8.1.2 </span>Форма входу</a></li>
                              <li class="subsection"><a href="#sec-finding_and_authenticating_a_user"
                                  class="heading hyperref"><span class="number">8.1.3
                                    </span>Пошук та аутентифікація користувача</a></li>
                              <li class="subsection"><a href="#sec-rendering_with_a_flash_message"
                                  class="heading hyperref"><span class="number">8.1.4
                                    </span>Малювання флеш повідомлення</a></li>
                              <li class="subsection"><a href="#sec-a_flash_test"
                                  class="heading hyperref"><span class="number">8.1.5
                                    </span>Перевірка флеш</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-logging_in" class="heading hyperref"><span
                                class="number">8.2 </span>Вхід<br>
                            </a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_working_log_in_method"
                                  class="heading hyperref"><span class="number">8.2.1
                                    </span>Метод <span class="tt">log_in</span>
                                  <br>
                                </a></li>
                              <li class="subsection"><a href="#sec-current_user"
                                  class="heading hyperref"><span class="number">8.2.2
                                    </span>Поточний користувач</a></li>
                              <li class="subsection"><a href="#sec-changing_the_layout_links"
                                  class="heading hyperref"><span class="number">8.2.3
                                    </span>Зміна посилань розміщень</a></li>
                              <li class="subsection"><a href="#sec-testing_layout_changes"
                                  class="heading hyperref"><span class="number">8.2.4
                                    </span>Перевірка змін в розміщеннях</a></li>
                              <li class="subsection"><a href="#sec-login_upon_signup"
                                  class="heading hyperref"><span class="number">8.2.5
                                    </span>Вхід через регістрацію</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-logging_out" class="heading hyperref"><span
                                class="number">8.3 </span>Вихід</a></li>
                          <li class="section"><a href="#sec-remember_me" class="heading hyperref"><span
                                class="number">8.4 </span>Запам’ятай мене</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-remember_token"
                                  class="heading hyperref"><span class="number">8.4.1
                                    </span>Токен та дайджест запам’ятованого</a></li>
                              <li class="subsection"><a href="#sec-login_with_remembering"
                                  class="heading hyperref"><span class="number">8.4.2
                                    </span>Вхід з запам’ятовуванням</a></li>
                              <li class="subsection"><a href="#sec-forgetting_users"
                                  class="heading hyperref"><span class="number">8.4.3
                                    </span>Забути користувача</a></li>
                              <li class="subsection"><a href="#sec-two_subtle_bugs"
                                  class="heading hyperref"><span class="number">8.4.4
                                    </span>Дві невелички проблеми</a></li>
                              <li class="subsection"><a href="#sec-remember_me_checkbox"
                                  class="heading hyperref"><span class="number">8.4.5
                                    </span>“Запам’ятай мене” чекбокс</a></li>
                              <li class="subsection"><a href="#sec-remember_tests"
                                  class="heading hyperref"><span class="number">8.4.6
                                    </span>Перевірка запам’ятовування</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#cid56" class="heading hyperref"><span
                                class="number">8.5 </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-log_in_out_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">8.5.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-log_in_out_exercises"
                              class="heading hyperref"><span class="number">8.6
                              </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-updating_showing_and_deleting_users"
                          class="heading hyperref"><span class="number">Chapter
                            9 </span>Оновлення, відображення та видалення
                          користувачів</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-updating_users" class="heading hyperref"><span
                                class="number">9.1 </span>Оновлення
                              користувачів</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-edit_form" class="heading hyperref"><span
                                    class="number">9.1.1 </span>Форма
                                  редагування</a></li>
                              <li class="subsection"><a href="#sec-unsuccessful_edits"
                                  class="heading hyperref"><span class="number">9.1.2
                                    </span>Невдалі редагування</a></li>
                              <li class="subsection"><a href="#sec-testing_unsuccessful_edits"
                                  class="heading hyperref"><span class="number">9.1.3
                                    </span>Перевірка невдалих редагувань</a></li>
                              <li class="subsection"><a href="#sec-successful_edits"
                                  class="heading hyperref"><span class="number">9.1.4
                                    </span>Вдалі редагування (з TDD)</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-authorization" class="heading hyperref"><span
                                class="number">9.2 </span>Авторизація</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-requiring_logged_in_users"
                                  class="heading hyperref"><span class="number">9.2.1
                                    </span>Вимагання входу користувачів</a></li>
                              <li class="subsection"><a href="#sec-requiring_the_right_user"
                                  class="heading hyperref"><span class="number">9.2.2
                                    </span>Вимога до вірного користувача</a></li>
                              <li class="subsection"><a href="#sec-friendly_forwarding"
                                  class="heading hyperref"><span class="number">9.2.3
                                    </span>Дружнє переназначення</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-showing_all_users" class="heading hyperref"><span
                                class="number">9.3 </span>Показ всіх
                              користувачів</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-users_index"
                                  class="heading hyperref"><span class="number">9.3.1
                                    </span>Індекс користувачів</a></li>
                              <li class="subsection"><a href="#sec-sample_users"
                                  class="heading hyperref"><span class="number">9.3.2
                                    </span>Прості користувачі</a></li>
                              <li class="subsection"><a href="#sec-pagination" class="heading hyperref"><span
                                    class="number">9.3.3 </span>Розбив на
                                  сторінки</a></li>
                              <li class="subsection"><a href="#sec-users_index_test"
                                  class="heading hyperref"><span class="number">9.3.4
                                    </span>Теревірка індексу користувачів</a></li>
                              <li class="subsection"><a href="#sec-partial_refactoring"
                                  class="heading hyperref"><span class="number">9.3.5
                                    </span>Частковий рефакторінг</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-deleting_users" class="heading hyperref"><span
                                class="number">9.4 </span>Видалення
                              користувачів</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-administrative_users"
                                  class="heading hyperref"><span class="number">9.4.1
                                    </span>Адміністративні користувачі</a></li>
                              <li class="subsection"><a href="#sec-the_destroy_action"
                                  class="heading hyperref"><span class="number">9.4.2
                                    </span>Акція <span class="tt">destroy</span></a></li>
                              <li class="subsection"><a href="#sec-user_destroy_tests"
                                  class="heading hyperref"><span class="number">9.4.3
                                    </span>Перевірка знищення користувачів</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-updating_and_deleting_users_conclusion"
                              class="heading hyperref"><span class="number">9.5
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-updating_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">9.5.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-updating_deleting_exercises"
                              class="heading hyperref"><span class="number">9.6
                              </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-account_activation_and_password_reset"
                          class="heading hyperref"><span class="number">Глава 10
                          </span>Активація рахунків та скидання паролю</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-account_activation"
                              class="heading hyperref"><span class="number">10.1
                              </span>Активація рахунків</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-account_activations_resource"
                                  class="heading hyperref"><span class="number">10.1.1
                                    </span>Ресурс активації рахунку</a></li>
                              <li class="subsection"><a href="#sec-account_activation_mailer"
                                  class="heading hyperref"><span class="number">10.1.2
                                    </span>Поштовий метод активації рахунку</a></li>
                              <li class="subsection"><a href="#sec-activating_the_account"
                                  class="heading hyperref"><span class="number">10.1.3
                                    </span>Активація рахунку</a></li>
                              <li class="subsection"><a href="#sec-activation_test_and_refactoring"
                                  class="heading hyperref"><span class="number">10.1.4
                                    </span>тест активації та рефакторинг</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-password_reset" class="heading hyperref"><span
                                class="number">10.2 </span>Скидання паролю</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-password_resets_resource"
                                  class="heading hyperref"><span class="number">10.2.1
                                    </span>Ресурс скидання паролю</a></li>
                              <li class="subsection"><a href="#sec-password_resets_controller_and_form"
                                  class="heading hyperref"><span class="number">10.2.2
                                    </span>Контролер та форма скидання паролю</a></li>
                              <li class="subsection"><a href="#sec-password_reset_mailer"
                                  class="heading hyperref"><span class="number">10.2.3
                                    </span>Поштовий метод скидання паролю</a></li>
                              <li class="subsection"><a href="#sec-resetting_the_password"
                                  class="heading hyperref"><span class="number">10.2.4
                                    </span>Скидання паролю</a></li>
                              <li class="subsection"><a href="#sec-password_reset_test"
                                  class="heading hyperref"><span class="number">10.2.5
                                    </span>Перевірка скидання паролю</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-email_in_production"
                              class="heading hyperref"><span class="number">10.3
                              </span>Пошта в промисловому середовищі</a></li>
                          <li class="section"><a href="#sec-activation_resets_conclusion"
                              class="heading hyperref"><span class="number">10.4
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-activation_resets_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">10.4.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-activation_resets_exercises"
                              class="heading hyperref"><span class="number">10.5
                              </span>Вправи</a></li>
                          <li class="section"><a href="#sec-expiration_proof" class="heading hyperref"><span
                                class="number">10.6 </span>Доказ простроченої
                              перевіркиcomparison</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-user_microposts" class="heading hyperref"><span
                            class="number">Глава 11 Мікропости користувача</span></a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-a_micropost_model" class="heading hyperref"><span
                                class="number">11.1 </span>Модель Micropost<br>
                            </a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-the_basic_model"
                                  class="heading hyperref"><span class="number">11.1.1
                                    </span>Базова модель</a></li>
                              <li class="subsection"><a href="#sec-micropost_validations"
                                  class="heading hyperref"><span class="number">11.1.2
                                    </span>Перевірки мікропостів</a></li>
                              <li class="subsection"><a href="#sec-user_micropost_associations"
                                  class="heading hyperref"><span class="number">11.1.3
                                    </span>Асоціації User/Micropost</a></li>
                              <li class="subsection"><a href="#sec-ordering_and_dependency"
                                  class="heading hyperref"><span class="number">11.1.4
                                    </span>Покращення мікропостів</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-showing_microposts"
                              class="heading hyperref"><span class="number">11.2
                              </span>Відображення мікропостів</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-rendering_microposts"
                                  class="heading hyperref"><span class="number">11.2.1
                                    </span>Малювання мікропостів</a></li>
                              <li class="subsection"><a href="#sec-sample_microposts"
                                  class="heading hyperref"><span class="number">11.2.2
                                    </span>Прості мікропости</a></li>
                              <li class="subsection"><a href="#sec-profile_micropost_tests"
                                  class="heading hyperref"><span class="number">11.2.3
                                    </span>Перевірки профілю мікропосту</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-manipulating_microposts"
                              class="heading hyperref"><span class="number">11.3
                              </span>Маніпуляції мікропостами</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-micropost_access_control"
                                  class="heading hyperref"><span class="number">11.3.1
                                    </span>Управління доступом до мікропостів</a></li>
                              <li class="subsection"><a href="#sec-creating_microposts"
                                  class="heading hyperref"><span class="number">11.3.2
                                    </span>Створення мікропостів</a></li>
                              <li class="subsection"><a href="#sec-a_proto_feed"
                                  class="heading hyperref"><span class="number">11.3.3
                                    </span>Прото-фід</a></li>
                              <li class="subsection"><a href="#sec-destroying_microposts"
                                  class="heading hyperref"><span class="number">11.3.4
                                    </span>Знищення мікропостів</a></li>
                              <li class="subsection"><a href="#sec-micropost_tests"
                                  class="heading hyperref"><span class="number">11.3.5
                                    </span>Перевірки мікропостів</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-micropost_images" class="heading hyperref"><span
                                class="number">11.4 </span>Зображення в
                              мікропостах</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-basic_image_upload"
                                  class="heading hyperref"><span class="number">11.4.1
                                    </span>Базове завантаження мікропостів</a></li>
                              <li class="subsection"><a href="#sec-image_validation"
                                  class="heading hyperref"><span class="number">11.4.2
                                    </span>Перевірка зображень</a></li>
                              <li class="subsection"><a href="#sec-image_resizing"
                                  class="heading hyperref"><span class="number">11.4.3
                                    </span>Зміна розміру зображень<br>
                                </a></li>
                              <li class="subsection"><a href="#sec-image_upload_in_production"
                                  class="heading hyperref"><span class="number">11.4.4
                                    </span>Завантаження зображень в промисловому
                                  середовищі<br>
                                </a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#cid77" class="heading hyperref"><span
                                class="number">11.5 </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-user_microposts_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">11.5.1
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-micropost_exercises"
                              class="heading hyperref"><span class="number">11.6
                              </span>Вправи</a></li>
                        </ul>
                      </li>
                      <li class="chapter"><a href="#cha-following_users" class="heading hyperref"><span
                            class="number">Глава 12 </span>Слідування за
                          користувачами</a></li>
                      <li>
                        <ul>
                          <li class="section"><a href="#sec-the_relationship_model"
                              class="heading hyperref"><span class="number">12.1
                              </span>Модель Relationship</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-a_problem_with_the_data_model"
                                  class="heading hyperref"><span class="number">12.1.1
                                    </span>Проблема з моделлю даних (та рішення)</a></li>
                              <li class="subsection"><a href="#sec-relationship_user_associations"
                                  class="heading hyperref"><span class="number">12.1.2
                                    </span>Асоціації користувач/відносини</a></li>
                              <li class="subsection"><a href="#sec-relationship_validations"
                                  class="heading hyperref"><span class="number">12.1.3
                                    </span>Перевірка відносин</a></li>
                              <li class="subsection"><a href="#sec-following" class="heading hyperref"><span
                                    class="number">12.1.4 </span>Ті, за ким
                                  слідують</a></li>
                              <li class="subsection"><a href="#sec-followers" class="heading hyperref"><span
                                    class="number">12.1.5 </span>Ті, хто слідує</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-a_web_interface_for_following_and_followers"
                              class="heading hyperref"><span class="number">12.2
                              </span>Веб інтерфейс для слудування за
                              користувачами</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-sample_following_data"
                                  class="heading hyperref"><span class="number">12.2.1
                                    </span>Прості дані слідування</a></li>
                              <li class="subsection"><a href="#sec-stats_and_a_follow_form"
                                  class="heading hyperref"><span class="number">12.2.2
                                    </span>Статистика та форма слідування</a></li>
                              <li class="subsection"><a href="#sec-following_and_followers_pages"
                                  class="heading hyperref"><span class="number">12.2.3
                                    </span>Слідування та сторінка слідувачів</a></li>
                              <li class="subsection"><a href="#sec-a_working_follow_button_the_standard_way"
                                  class="heading hyperref"><span class="number">12.2.4
                                    </span>Робота кнопки слідування стандартним
                                  чином</a></li>
                              <li class="subsection"><a href="#sec-a_working_follow_button_with_ajax"
                                  class="heading hyperref"><span class="number">12.2.5
                                    </span>Робота кнопки слідування через Ajax</a></li>
                              <li class="subsection"><a href="#sec-following_tests"
                                  class="heading hyperref"><span class="number">12.2.6
                                    </span>Перевірка слідування</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-the_status_feed" class="heading hyperref"><span
                                class="number">12.3 </span>Подача статусу</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-motivation_and_strategy"
                                  class="heading hyperref"><span class="number">12.3.1
                                    </span>Мотивація та стратегія</a></li>
                              <li class="subsection"><a href="#sec-a_first_feed_implementation"
                                  class="heading hyperref"><span class="number">12.3.2
                                    </span>Перша реалізація подачі</a></li>
                              <li class="subsection"><a href="#sec-scopes_subselects_and_a_lambda"
                                  class="heading hyperref"><span class="number">12.3.3
                                    </span>Підвиборки</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-following_conclusion"
                              class="heading hyperref"><span class="number">12.4
                              </span>Висновок</a></li>
                          <li>
                            <ul>
                              <li class="subsection"><a href="#sec-guide_to_further_resources"
                                  class="heading hyperref"><span class="number">12.4.1
                                    </span>Настанови щодо подальших ресурсів</a></li>
                              <li class="subsection"><a href="#sec-following_users_what_we_learned_in_this_chapter"
                                  class="heading hyperref"><span class="number">12.4.2
                                    </span>Що ми вивчили в цій главі</a></li>
                            </ul>
                          </li>
                          <li class="section"><a href="#sec-following_exercises"
                              class="heading hyperref"><span class="number">12.5
                              </span>Вправи</a></li>
                        </ul>
                      </li>
                    </ul>
                  </div>
                  <div class="chapter-star" id="_foreword">
                    <h1><a name="foreword" class="heading hyperref">Передмова</a></h1>
                    <p>Моя бувша компанія (CD Baby) була одною з перших, хто
                      голосно перейшов на Ruby on Rails, та потім ми ще
                      голосніше перейшли назад до PHP (пошукайте мене в Google
                      щоб прочитати про цю драму).<span class="intersentencespace"></span>
                      Ця книжка, написана Michael Hartl, була такою
                      рекомендованою, що я стпробував її, та я використав <em>Ruby
                        on Rails Tutorial</em>щоб знову повернутися назад до
                      Rails.</p>
                    <p>Хоча я прокладав свій шлях через багато книжок про Rails,
                      це є однією, що нарешті дозволила мені "спіймати" це. Все
                      зроблене дуже багато ”шляхом Rails” — шляхом, що
                      відчувався як дуже ненатуральний для мене раніше, але
                      зараз, коли я подужав цю книжку, нарешті відчувається
                      натуральнім. Це, також, одна книжка по Rails, що робить
                      побудовану-на-тестах разробку весь час, підхід, дуже
                      рекомендований експертами, але який ніколи не був так ясно
                      продемонстрований до цього. Нарешті, включаючи Git, GitHub
                      та Heroku в демонстраційні приклади, автор дійсно надає
                      вам відчуття, що таке розробляти проект з реального світу.<span
                        class="intersentencespace"></span> Приклади коду
                      туторіала не знаходяться в ізоляції.</p>
                    <p>Лінійна начитка є дуже добрим форматом. Персонально я
                      подужав&nbsp; <em>Rails Tutorial</em> за три довгі дні,<sup
                        id="_cha-0_footnote-ref-1" class="footnote"><a name="cha-0_footnote-1">1</a></sup>
                      роблячи всі приклади та виклики в кінці кожної глави.
                      Пройдіть це від початку до кінця, без перестрибувань
                      деінде, та ви отримаєте остаточний прибуток.&nbsp;</p>
                    <p>Насолоджуйтесь!</p>
                    <p><a href="http://sivers.org/" target="_blank">Derek Sivers</a>
                      (<a href="http://sivers.org/" target="_blank">sivers.org</a>)
                      <span class="break"></span> <em>Founder, CD Baby</em></p>
                  </div>
                  <div class="chapter-star" id="_acknowledgments">
                    <h1><a name="acknowledgments" class="heading hyperref">Подяки</a></h1>
                    <p><em>Ruby on Rails Tutorial</em> завдячує багато моїй
                      попередній книжці про Rails, <em>RailsSpace</em>, і таким
                      чином моєму співавтору&nbsp; <a href="http://aure.com/" target="_blank">Aurelius
                        Prochazka</a>.<span class="intersentencespace"></span> Я
                      маю подякувати Aure як за працю, що він зробив над цією
                      книжкою, та за його підтримку цієї також.<span class="intersentencespace"></span>
                      Я також дякую Debra Williams Cauley, моєму редактору обох
                      книжок, <em>RailsSpace</em> та <em>Ruby on Rails
                        Tutorial</em>; доки вона братиме мене на бейсбольні
                      ігри, доки я буду писатиму книжки для неї.</p>
                    <p>Я також вдячний великому списку рубістів, хто мав наснагу
                      та надихав мене на протязі років: David Heinemeier
                      Hansson, Yehuda Katz, Carl Lerche, Jeremy Kemper, Xavier
                      Noria, Ryan Bates, Geoffrey Grosenbach, Peter Cooper, Matt
                      Aimonetti, Mark Bates, Gregg Pollack, Wayne&nbsp;E.
                      Seguin, Amy Hoy, Dave Chelimsky, Pat Maddox, Tom
                      Preston-Werner, Chris Wanstrath, Chad Fowler, Josh Susser,
                      Obie Fernandez, Ian McFarland, Steven Bristol, Pratik
                      Naik, Sarah Mei, Sarah Allen, Wolfram Arnold, Alex
                      Chaffee, Giles Bowkett, Evan Dorn, Long Nguyen, James
                      Lindenbaum, Adam Wiggins, Tikhon Bernstam, Ron Evans,
                      Wyatt Greene, Miles Forrest, гарні люди з Pivotal Labs,
                      команда Heroku, хлопці з thoughtbot, та бригада GitHub.<span
                        class="intersentencespace"></span> Нарешті, багато,
                      багато читачів — дуже багато, щоб перерахувати — робили
                      внесок величезну кількість повідомлень про помилки на
                      протязі намисання цієї книжки, і я з пошаною дякую їм за
                      допомогу зробити її настільки гарною, наскільки вона може
                      бути.</p>
                  </div>
                  <div class="chapter-star" id="_about_the_author">
                    <h1><a name="about_the_author" class="heading hyperref">Про
                        автора</a></h1>
                    <p><a href="http://www.michaelhartl.com/" target="_blank">Michael
                        Hartl</a> є автором&nbsp; <a href="http://www.railstutorial.org/"
                        target="_blank"><em>Ruby on Rails Tutorial</em></a>,
                      одного з провідних введень до веб розробки, та
                      співзасновником <a href="http://www.softcover.io/" target="_blank">Softcover,</a>
                      платформи самодруку.<span class="intersentencespace"></span>
                      Його ранішній досвід включає написання та розробку <em>RailsSpace</em>,
                      вкрай застарілої книжки по Rails, та розробку Insoshi,
                      колись популярної, а тепер застарілої платформи для
                      соціальних мерж на Ruby on Rails.<span class="intersentencespace"></span>
                      В 2011мі році Michael отримав відзнаку <a href="http://rubyheroes.com/heroes"
                        target="_blank">Ruby Hero Award</a> за його вклад в
                      співтовариство Ruby.<span class="intersentencespace"></span>
                      Він отримав диплом в <a href="http://college.harvard.edu/"
                        target="_blank">Harvard College</a>, має&nbsp;<a href="http://resolver.caltech.edu/CaltechETD:etd-05222003-161626"
                        target="_blank">Ph.D. in Physics</a> від <a href="http://www.caltech.edu/"
                        target="_blank">Caltech</a>, та є вихованцем
                      ентерпренійської програми <a href="http://ycombinator.com/"
                        target="_blank">Y&nbsp;Combinator</a>.</p>
                  </div>
                  <div class="chapter-star" id="_copyright_and_license">
                    <h1><a name="copyright_and_license" class="heading hyperref">Копірайт
                        та ліцензія</a></h1>
                    <p><em>Ruby on Rails Tutorial: Learn Web Development with
                        Rails</em>.<span class="intersentencespace"></span>
                      Copyright © 2014 by Michael Hartl.<span class="intersentencespace"></span>
                      All source code in the <em>Ruby on Rails Tutorial</em> is
                      available jointly under the <a href="http://opensource.org/licenses/MIT"
                        target="_blank">MIT License</a> and the <a href="http://people.freebsd.org/%7Ephk/"
                        target="_blank">Beerware License</a>.</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>The MIT License

Copyright (c) 2014 Michael Hartl

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
</pre></div>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre>/*
 * ----------------------------------------------------------------------------
 * "THE BEERWARE LICENSE" (Revision 43):
 * Michael Hartl wrote this code. As long as you retain this notice you
 * can do whatever you want with this stuff. If we meet some day, and you think
 * this stuff is worth it, you can buy me a beer in return.
 * ----------------------------------------------------------------------------
 */
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-0_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-0_footnote-1">Це не&nbsp; типово! Проходження
                      цілої книжки зазвичай займає <em>much</em>довше ніж три
                      дні.&nbsp;<a class="arrow" name="cha-0_footnote-ref-1">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-beginning" data-tralics-id="cid1" class="chapter"
                  data-number="1">
                  <h1><a name="cha-beginning" class="heading hyperref"><span class="number">Глава
                        1 </span>Від нуля до розгортання</a></h1>
                  <p>Ласкаво просимо до&nbsp; <a href="http://www.railstutorial.org/book"
                      target="_blank"><em>Ruby on Rails Tutorial: Learn Web
                        Development with Rails</em></a>.<span class="intersentencespace"></span>
                    Призначенням цієї книжки є навчити вас, як розробляти власні
                    веб застосування, та нашим обраним інструментом є популярний
                    веб фреймворк&nbsp;<a href="http://rubyonrails.org/" target="_blank">Ruby
                      on Rails</a>.<span class="intersentencespace"></span> Якщо
                    ви нові в цьому предметі, <em>Ruby on Rails Tutorial</em>
                    дасть вам наскрізне введення в розробку веб застосувань,
                    включаючи базове підгрунтя в Ruby, Rails, HTML &amp; CSS,
                    базах даних, управлінні версіями, тестуванні та розгортанні
                    — достатньо для запуску вас в кар’єрі веб розробника або
                    технологічного антрепренера. З другого боку, якщо ви вже
                    знаєте веб розробку, це книжка швидко навчить вас основам
                    фреймворку Rails, включаючи MVC та REST, генератори,
                    міграції, маршрутування та вбудований Ruby.<span class="intersentencespace"></span>
                    В кожному разі, коли ви закінчите&nbsp;<em>Ruby on Rails
                      Tutorial</em>, ви отримаєте досить, щоб мати вигоди від
                    значно більшої кількості книжок, блогів та скринкастів, що є
                    частиною процвітаючої екосистеми проміської освіти.</p>
                  <p>&nbsp;<em>Ruby on Rails Tutorial</em>обирає інтегрований
                    підхід до веб розробки, будуючи три приклада застосувань зі
                    зростаючою складністю, починаючи з мінімального
                    застосування&nbsp; <em>hello</em>(<a href="#sec-the_hello_application"
                      class="hyperref">Розділ <span class="ref">1.3</span></a>),
                    трохи більш спроможного застосування <em>toy</em>(<a name="cha-a_toy_app"
                      class="hyperref">Глава <span class="ref">2</span></a>),
                    та реального застосування <em>sample</em> (<a href="#cha-static_pages"
                      class="hyperref">Глава <span class="ref">3</span></a> до
                    <a href="#cha-following_users" class="hyperref">Глава <span
                        class="ref">12</span></a>).<span class="intersentencespace"></span>
                    Як випливає з їх загальних імен, застосування, розроблені в
                    <em>Ruby on Rails Tutorial</em> не є специфічними для
                    окремого типу веб сайту; хоча останнє просте застосування
                    буде забирати більше, ніж надавати перевтілення окремого
                    популярного&nbsp; <a href="http://twitter.com/" target="_blank">соціального
                      сайту мікроблогів</a> (сайта, який випадково також був з
                    початку написаний на Rails), наголос продовж викладання
                    робиться на загальних принципах, так що ви будете мати
                    надійну основу, безвідносно, який тип веб застосування ви
                    будуєте.</p>
                  <p>Одне загальне питання, це як багато підгрунтя треба, щоб
                    навчитися веб розробці за допомогою&nbsp;<em>Ruby on Rails
                      Tutorial</em>.<span class="intersentencespace"></span> Як
                    обговорюється більш детально в&nbsp;<a href="#sec-prerequisites"
                      class="hyperref">Розділі <span class="ref">1.1.1</span></a>,
                    веб розробка є складним предметом, осообливо для повних
                    початківців.<span class="intersentencespace"></span> Хоча
                    цей підручник був спочатку розроблений для читачів з&nbsp;
                    деяким попереднім досвідом програмування або веб розробки,
                    фактично вона знайшла значну аудиторію серед
                    розробників-початківців. Щоб відзначити це, нагальна, третя
                    редакція&nbsp;<em style="line-height: 1.5;">Rails Tutorial</em>
                    робить декілька важливих кроків, щоб знизити бар’єр початку
                    роботи з Rails (<a href="#aside-barrier" class="hyperref">Врізка
                      <span class="ref">1.1</span></a>).</p>
                  <div class="aside" id="_aside-barrier" data-tralics-id="uid3"
                    data-number="1.1">
                    <div class="heading"><span class="number">Врізка 1.1.</span>
                      <span class="description">Знижуючи бар’єр</span></div>
                    <p>Ця, третя редакція&nbsp; <em>Ruby on Rails Tutorial</em>
                      націлена на зниження бар’єру до початку роботи з Rails в
                      декілька шляхів:</p>
                    <ul>
                      <li>Використання стандартного оточення розробки в хмарі (<a
                          href="#sec-up_and_running" class="hyperref">Розділ <span
                            class="ref">1.2</span></a>), що обходить багато
                        проблем, асоційованих з встановкою та конфігурацією
                        нової системи&nbsp;</li>
                      <li>Використання "стеку по замовчанню" Rails, включаючи
                        вбудований фреймворк тестування MiniTest</li>
                      <li>Уникнення багатьох зовнішніх залежностей (RSpec,
                        Cucumber, Capybara, Factory Girl) </li>
                      <li>Полегшений та більш гнучкий підхід до тестування </li>
                      <li>Відкладання або уникнення більш складних опцій
                        конфігурації (Spork, RubyTest) </li>
                      <li>Менше наголосу на можливостях, специфічних до кожної
                        окремої версії Rails, з більшим наголосом на головних
                        принципах веб розробки</li>
                    </ul>
                    <p>Моя надія полягає в тому, що ці зміни зроблять третю
                      редакцію <em>Ruby on Rails Tutorial</em> доступною для
                      навіть ширшої аудієнції, ніж попередні версії.</p>
                  </div>
                  <p>В цій першій главі ми розпочнемо з Ruby on Rails,
                    встановивши необхідне програмне забезпечення та налаштувавши
                    неше оочення робробки (<a href="#sec-up_and_running" class="hyperref">Розділ
                      <span class="ref">1.2</span></a>).<span class="intersentencespace"></span>
                    Ми будемо створювати наше перше Rails застосування, що
                    називається <code>hello_app</code>.<span class="intersentencespace"></span>
                    <em>Rails Tutorial</em>наголошує на добрих практиках
                    розробки програмного забезпечення, так що безпосередньо
                    після створення нашого нового та свіжого проекту Rails, ми
                    підпорядкуємо його контролю версій Git (<a href="#sec-version_control"
                      class="hyperref">Розділ <span class="ref">1.4</span></a>).<span
                      class="intersentencespace"></span> Та, вірите або ні, в
                    цій главі ми навіть викладено наше перше застосування у
                    великий веб через <em>розгортання</em> його в промисловому
                    середовищі (<a href="#sec-deploying" class="hyperref">Розділ
                      <span class="ref">1.5</span></a>).</p>
                  <p>В <a href="#cha-a_toy_app" class="hyperref">Главі <span class="ref">2</span></a>,
                    ми зробимо другий проект, чиє призначення буде демонструвати
                    базові роботи в застосуванні Rails.<span class="intersentencespace"></span>
                    Щоб швидко почати роботу, ми побудуємо це <em>іграшкове
                      застосування</em> (що називається <code>toy_app</code>) з
                    використанням підпорок (<a href="#aside-scaffolding" class="hyperref">Врізка
                      <span class="ref">1.2</span></a>) щоб згенерувати код;
                    оскільки цей код буде однаково бридким та складним, <a href="#cha-a_toy_app"
                      class="hyperref">Глава <span class="ref">2</span></a>
                    буде фокусуватись на взаємодії з іграшковим застосуванням
                    через його <em>URI</em> (що їх часто називають <em>URL</em>)<sup
                      id="_cha-1_footnote-ref-2" class="footnote"><a href="#cha-1_footnote-2">2</a></sup>
                    з використанням веб браузера.</p>
                  <p>Решта підручника фокусується на розробці одного великого <em>реального
                      прикладу застосування</em> (що називається <code>sample_app</code>),
записуючи
                    весь код з самого початку.<span class="intersentencespace"></span>
                    Ми розробимо просте застосування, використовуючи&nbsp;<em>моделі
                      (mockups)</em>, <em>базовану на тестуванні розробку</em>
                    (TDD), та <em>інтеграційні тести</em>.<span class="intersentencespace"></span>
                    Ми почнемо в <a href="#cha-static_pages" class="hyperref">Главі
                      <span class="ref">3</span></a> зі створення статичних
                    сторінок, та потім додамо трохи динамічного вмісту. Ми
                    зробимо швидкий відступ в&nbsp;<a href="#cha-rails_flavored_ruby"
                      class="hyperref">Главі <span class="ref">4</span></a>,
                    щоб вивчити трохи про мову Ruby під Rails.<span class="intersentencespace"></span>
                    Потім, в <a href="#cha-filling_in_the_layout" class="hyperref">Главі
                      <span class="ref">5</span></a> і до&nbsp; <a href="#cha-account_activation_and_password_reset"
                      class="hyperref">Глави <span class="ref">10</span></a>,
                    ми будемо завершувати основи нашого застосування, роблячи
                    розміщення сайту, створюючи модель користувача, та повну
                    систему реєстрації та аутентифікації&nbsp; (включаючи
                    активацію рахунків та скидання паролів).<span class="intersentencespace"></span>
                    Нарешті, в <a href="#cha-user_microposts" class="hyperref">Главі
                      <span class="ref">11</span></a> та <a href="#cha-following_users"
                      class="hyperref">Главі <span class="ref">12</span></a> ми
                    додамо мікроблоггінг та соціальні можливості, щоб зробити
                    робочий сайт-приклад.</p>
                  <div class="aside" id="_aside-scaffolding" data-tralics-id="uid11"
                    data-number="1.2">
                    <div class="heading"><span class="number">Врізка 1.2.</span>
                      Підпорки (<span class="description">Scaffolding): Швидше,
                        простіше, більш привабливо</span></div>
                    <p>З самого початку Rails отримував переваги від відчутного
                      почуття захвату, починаючи від&nbsp; <a href="http://www.youtube.com/watch?v=Gzj723LkRJY"
                        target="_blank">15-хвилинного відео з велболгу</a> Rails
                      створювача David Heinemeier Hansson.<span class="intersentencespace"></span>
                      Це відео та його послідовники є чудовим шляхом відчути
                      потужність Rails, і я рекомендую передивитись їх.<span class="intersentencespace"></span>
                      Але будьте попереджені: вони досягають своїх чудових
                      п’ятнадцятихвилиних досягнень за допомогою можливісті, що
                      називається <em>підпорки (scaffolding)</em>, що дуже
                      покладається на <em>згенерований код</em>, магічно
                      створений через команду Rails <code>generate scaffold</code>.</p>
                    <p>Коли пишешь підручник з Ruby on Rails, є спокуса
                      покластися на цей підхід ціх підпорок — це <a href="http://en.wikipedia.org/wiki/Dark_side_%28Star_Wars%29"
                        target="_blank">швидше, простіше, більш привабливо</a>.<span
                        class="intersentencespace"></span> Яле складність та
                      випадкова кількість коду в підпорках може стати повністю
                      спантеличливою для початкового розробника на Rails; ви
                      можете біти в змозі використовувати їх, але ви вірогідно
                      не будете їх розуміти.<span class="intersentencespace"></span>
                      Слідуя підходу підпорок ви ризикуєте перетворитися в
                      віртуозного генератора скриптів, з малим (та крихким)
                      дійсним знанням Rails.</p>
                    <p>В <em>Ruby on Rails Tutorial</em>, ми приймаємо (майже)
                      полярно протилежний підхід: хоча <a href="#cha-a_toy_app"
                        class="hyperref">Глава <span class="ref">2</span></a>
                      буде розробляти мале іграшкове застосування з використання
                      підпорок, основа <em>Rails Tutorial</em>є
                      застосування-приклад, що ми почнемо писати в <a href="#cha-static_pages"
                        class="hyperref">Главі <span class="ref">3</span></a>.<span
                        class="intersentencespace"></span> На кожній стадії
                      розробки застосування-приклада ми будемо писати <em>малий,
                        строго відміряний</em>шматок коду — досить простий, щоб
                      зрозуміти, та досить новаторський, щоб кидати виклик.<span
                        class="intersentencespace"></span> Камулятивний ефект
                      буде глибше, більш гнучке знання Rails, надаючи вам гарне
                      підгрунтя для написання майже любого типу веб
                      застосування.</p>
                  </div>
                </div>
                <div id="_sec-introduction" data-tralics-id="cid2" class="section"
                  data-number="1.1">
                  <h2><a name="sec-introduction" class="heading hyperref"><span
                        class="number">1.1 Вступ</span></a></h2>
                  <p>Ruby on Rails (або коротше “Rails”) є фреймворком веб
                    розробки, написаний на мові програмування Ruby.<span class="intersentencespace"></span>
                    Від дебюту в 2004, Ruby on Rails швидко став одним з
                    найбільш потужних та популярних інструментів для побудови
                    динамічних веб застосувань.<span class="intersentencespace"></span>
                    Rails використовується такими різними компаніями, як <a href="http://airbnb.com/"
                      target="_blank">Airbnb</a>, <a href="http://basecamp.com/"
                      target="_blank">Basecamp</a>, <a href="http://disney.com/"
                      target="_blank">Disney</a>, <a href="http://github.com/"
                      target="_blank">GitHub</a>, <a href="http://hulu.com/" target="_blank">Hulu</a>,
                    <a href="http://kickstarter.com/" target="_blank">Kickstarter</a>,
                    <a href="http://shopify.com/" target="_blank">Shopify</a>, <a
                      href="http://twitter.com/" target="_blank">Twitter</a> та
                    <a href="http://yellowpages.com/" target="_blank">Yellow
                      Pages</a>.<span class="intersentencespace"></span> Також
                    багато студій веб дизайну, що спеціалізуються на&nbsp;
                    Rails, такі як <a href="http://entp.com/" target="_blank">ENTP</a>,
                    <a href="http://thoughtbot.com/" target="_blank">thoughtbot</a>,
                    <a href="http://pivotallabs.com/" target="_blank">Pivotal
                      Labs</a>, <a href="http://hashrocket.com/" target="_blank">Hashrocket</a>
                    та&nbsp; <a href="http://www.happyfuncorp.com/" target="_blank">HappyFunCorp</a>,
                    і додайте незалежних консультантів, тренерів та
                    контракторів.</p>
                  <p>Що робить Rails таким величним?<span class="intersentencespace"></span>
                    Зпершу, Ruby on Rails є на 100% відкритим кодом, доступним
                    під дозвільною&nbsp;<a href="http://www.opensource.org/licenses/mit-license.php"
                      target="_blank">MIT License</a>, та як результат, також
                    нічого не коштує завантажити та встановити його.<span class="intersentencespace"></span>
                    Rails також завдячний більшості свого успіху свому
                    елегантному та компактному дизайну; використовуючи здатність
                    пристосовуватись своєї підлеглої мови <a href="http://ruby-lang.org/"
                      target="_blank">Ruby</a>, Rails ефективно створює <a href="http://en.wikipedia.org/wiki/Domain_Specific_Language"
                      target="_blank">домен-специфічну мову</a> для написання
                    веб застосувань.<span class="intersentencespace"></span> В
                    результаті багато загальних завдань веб програмування —
                    такі, як генерування HTML, створеня моделей даних, та
                    маршрутування URL — є простими з Rails, а результуючий код
                    застосування компактний та змістовний.</p>
                  <p>Rails також швидко адаптується до нових розробок в веб
                    технолгії та дизайні фреймворків.<span class="intersentencespace"></span>
                    Наприклад, Rails був одним з перших фреймворків, що повністю
                    сприяв та реалізував архітектурний стиль REST для
                    структурування веб застосувань (що ми вивчимо в ході
                    проходження цього підручника).<span class="intersentencespace"></span>
                    Та коли інші фреймворки розробляють успішні нові технолгії,
                    творець Rails <a href="http://loudthinking.com/" target="_blank">David
                      Heinemeier Hansson</a> та команда <a href="http://rubyonrails.org/core"
                      target="_blank">Rails core team</a> не вагаючись
                    вбудовують їх ідеї.<span class="intersentencespace"></span>
                    Можливо, найбільш драматичним прикладом є злиття Rails та
                    Merb, конкуруючого веб фреймворка на Ruby, так що Rails
                    тепер виграє від модулярного дизайнуMerb, стабільного <a href="http://en.wikipedia.org/wiki/Application_programming_interface"
                      target="_blank">API</a>, та покращеної продуктивності.</p>
                  <p>Нарешті Rails виграє від незвичайно енергійної та
                    розгалуженої спільноти.<span class="intersentencespace"></span>
                    Результати включають сотні&nbsp;<a href="http://contributors.rubyonrails.org/"
                      target="_blank">надсилачів</a> відкритого коду, гарно
                    влаштовані <a href="http://railsconf.com/" target="_blank">конференції</a>,
                    карколомну кількість <a href="https://rubygems.org/" target="_blank">gems</a>
                    (самодостатніх рішень для специфічних&nbsp; проблем, таких,
                    як розбивка на сторінки або завантаження зображень), багату
                    різноманіть інформатиіних блогів, та ріг достатку
                    дискусійних форумів та каналів IRC.<span class="intersentencespace"></span>
                    Велика кількість програмістів на Rails також спрощує обробку
                    невідворотних помилок застосувань: алгоритм “шукай в Google
                    код помилки” майже завжди продукує релевантний пост блогу
                    або потік дискусійного форуму.</p>
                  <div id="_sec-prerequisites" data-tralics-id="uid12" class="subsection"
                    data-number="1.1.1">
                    <h3><a name="sec-prerequisites" class="heading hyperref"><span
                          class="number">1.1.1 </span>Попередні вимоги</a></h3>
                    <p>Немає формальних попередніх вимог для цієї книжки — <em>Ruby
                        on Rails Tutorial</em>містить інтегрований курс не
                      тільки для Rails, але також для підлеглої мови Ruby,
                      тестового фреймворку Rails по замовчанню (MiniTest),
                      командного рядка Unix, <a href="http://en.wikipedia.org/wiki/HTML"
                        target="_blank">HTML</a>, <a href="http://en.wikipedia.org/wiki/CSS"
                        target="_blank">CSS</a>, невеликої кількості <a href="http://en.wikipedia.org/wiki/JavaScript"
                        target="_blank">JavaScript</a>, та навіть трохи <a href="http://en.wikipedia.org/wiki/SQL"
                        target="_blank">SQL</a>.<span class="intersentencespace"></span>
                      Є багато матеріалу для засвоєння, тим не менш, та я
                      загалом рекомендую мади деякий досвід в HTML та
                      програмуванні, перет тим, як розпочати цей курс. Кажучи
                      так, велика кількість початківців використовують <em>Ruby
                        on Rails Tutorial</em> для вивчання веб розробки з
                      самого початку, так що навіть якщо ви маєте обмежений
                      досвід, я рекомендую зробити спробу. Якщо ви почуваєтесь
                      спантеличеним, ви завжди можете повернутись назад, та
                      почати з одного з ресурсів, перелічених нижче. Інша
                      стратегія, рекомендована багатьма читачами, це просто
                      пройте цей курс двічі; ви можете здивуватись, як багато ви
                      вивчили за перший раз (та наскільки легше робити це
                      вдруге).</p>
                    <p>Одне велике питання, коли вивчають Rails, це чи слід
                      спочатку вивчати Ruby.<span class="intersentencespace"></span>
                      Відповідь залежить від вашого персонального стилю навчання
                      та наскільки багато досвіду програмування ви вже маєте.<span
                        class="intersentencespace"></span> Якщо ви звикли
                      вивчати все систематично, з початку і до кінця, або коли
                      ви ніколи не програмували до цього, тоді вивчення Ruby
                      спочатку може добре спрацювати для вас, і в цьому випадку
                      я рекомендую&nbsp;<a href="http://pragprog.com/book/ltp2/learn-to-program"
                        target="_blank"><em>Learn to Program</em></a> від Chris
                      Pine та <a href="http://www.amazon.com/gp/product/1430223634"
                        target="_blank"><em>Beginning Ruby</em></a> від Peter
                      Cooper.<span class="intersentencespace"></span> З другого
                      боку, багато починаючих розробників на Rails захоплені
                      можливістю створювати <em>веб</em>застосування, і скоріше
                      не чекатимуть, щоб завершити цілу книжку по Ruby, перед
                      тим, як написати одну веб сторінку.<span class="intersentencespace"></span>
                      В цьому разі я рекомендую слідувати короткому
                      інтерактивному курсові на&nbsp;<a href="http://tryruby.org/"
                        target="_blank">Try Ruby</a><sup id="_cha-1_footnote-ref-3"
                        class="footnote"><a href="#cha-1_footnote-3">3</a></sup><em>Rails
                        Tutorial</em>.<span class="intersentencespace"></span>
                      Якщо ви знайшли цей курс дуже складним, іи можете
                      спробувати почати з <a href="http://learn-rails.com/learn-ruby-on-rails.html"
                        target="_blank"><em>Learn Ruby on Rails</em></a> від
                      Daniel Kehoe або <a href="http://mbsy.co/7Zdc7" target="_blank">One
                        Month Rails</a>, обі з яких більше націлені на повних
                      початківців, чим <em>Ruby on Rails Tutorial</em>.</p>
                    <p>В кінуі курсу, не важливо де ви почали, ви будете готові
                      для значно більшої кількості середніх та складних ресурсів
                      Rails за рамками цієї книжки.<span class="intersentencespace"></span>
                      Осб деякі, що я практично рекомендую:</p>
                    <ul>
                      <li><a href="http://mbsy.co/6VQ8l" target="_blank">Code
                          School</a>: Добрі інтерактивні курси програмування
                        онлайн </li>
                      <li><a href="http://turing.io/friends/tutorial" target="_blank">Turing
                          School of Software &amp; Design</a>: повний час, 27
                        тижнів програма тренінгу в Denver, Colorado, з <a href="http://turing.io/friends/tutorial"
                          target="_blank">$500 снижкою</a> для читачів Rails
                        Tutorial, використовуючи код <span class="sc">RAILSTUTORIAL500</span>
                      </li>
                      <li><a href="http://www.gotealeaf.com/railstutorial" target="_blank">Tealeaf
                          Academy</a>: Добрий оналйн розробницький буткамп Rails
                        (включає ускладнений матеріал) </li>
                      <li><a href="http://www.thinkful.com/a/railstutorial" target="_blank">Thinkful</a>:
                        Онлайн клас, що поєднує вас з професійним інженером по
                        мірі просівання по базованому на проектах розкладу</li>
                      <li><a href="https://pragmaticstudio.com/refs/railstutorial"
                          target="_blank">Pragmatic Studio</a>: Онлайн курси
                        Ruby and Rails від Mike та Nicole Clark.<span class="intersentencespace"></span>
                        Разом з автором&nbsp;<em>Programming Ruby</em> Dave
                        Thomas, Mike започаткував перші курси по Rails, що я
                        відвідував в далекому 2006му році.<span class="intersentencespace"></span>
                      </li>
                      <li><a href="http://railscasts.com/" target="_blank">RailsCasts</a>
                        від Ryan Bates: Чудові (здебільше безкоштовні)
                        скринкасти з Rails </li>
                      <li><a href="https://tutorials.railsapps.org/hartl" target="_blank">RailsApps</a>:
                        Велика різноманіть деталізованих, розібраних по темах
                        проектів Rails та курсів</li>
                      <li><a href="http://guides.rubyonrails.org/" target="_blank">Rails
                          Guides</a>: По темах, та завжди оновлені довідники з
                        Rails</li>
                    </ul>
                  </div>
                  <div id="_sec-conventions" data-tralics-id="uid22" class="subsection"
                    data-number="1.1.2">
                    <h3><a name="sec-conventions" class="heading hyperref"><span
                          class="number">1.1.2 </span>Домовленості в цій книжці</a></h3>
                    <p>Домовленості в цій книжці загалом пояснюють самі себе. В
                      цьому розділі я зупинюсь на тих, що можуть викликати
                      питання.</p>
                    <p>Багато прикладів в цій книжці використовують команди
                      командного рядка. Для спрощення всі приклади командного
                      рядка використовують підказку командного рядка в стилі
                      Unix (знак долараa dollar sign), як тут:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> <span class="nb">echo</span> <span
class="s2">"hello, world"</span>
<span class="go">hello, world</span>
</pre></div>
                    </div>
                    <p>Як зазначається в&nbsp;<a href="#sec-up_and_running" class="hyperref">Розділі
                        <span class="ref">1.2</span></a>, я рекомендую, щоб
                      користувачі всіх операційних систем (особливо Windows)
                      використовували хмарне оточення розробки (<a href="#sec-development_environment"
                        class="hyperref">Розділ <span class="ref">1.2.1</span></a>),
                      що іде з вбудованим командним рядком Unix (Linux).<span class="intersentencespace"></span>
                      Це, крім іншого, корисно, оскільки Rails іде з багатьма
                      командами, що можуть виконуватись в командному рядку.
                      Наприклад, в&nbsp;<a href="#sec-rails_server" class="hyperref">Розділі
                        <span class="ref">1.3.2</span></a> ми виконуємо
                      локальний веб сервер розробки за допомогою команди&nbsp;<code>rails
                        server</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nv">$ </span>rails server
</pre></div>
                    </div>
                    <p>Як і з підказкою командного рядка, <em>Rails Tutorial</em>
                      використовує домовленість Unix для роздільників каталогів
                      (тобто звичайний слеш <code>/</code>).<span class="intersentencespace"></span>
                      Наприклад, приклад застосування&nbsp; <code>production.rb</code>
                      має файл конфігурації в такому вигляді:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>config/environments/production.rb
</pre></div>
                    </div>
                    <p>Цей шлях файлу має розумітись як відносний до корньового
                      каталогу застосування, що буде відрізнятися в різних
                      системах; в хмарній IDE (<a href="#sec-development_environment"
                        class="hyperref">Розділ&nbsp;<span class="ref">1.2.1</span></a>він
                      виглядатиме так) :</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>/home/ubuntu/workspace/sample_app/
</pre></div>
                    </div>
                    <p>Таким чином, повний шлях до <code>production.rb</code>
                      буде</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>/home/ubuntu/workspace/sample_app/config/environments/production.rb
</pre></div>
                    </div>
                    <p>Для скорочення я типово оминаю шлях&nbsp; застосування,
                      та пишу тільки&nbsp;<code>config/environments/production.rb</code>.</p>
                    <p><em>Rails Tutorial</em> часто показує вихід різних
                      програм (команд оболонки, статусі контроля версій, програм
                      Ruby, таке інше).<span class="intersentencespace"></span>
                      Оскільки є незліченні малі відмінності міжрізними
                      комп’ютерними системами, вихід, що ви бачите, мож ене
                      завжди точно співпадати з показаним в тексті, але це не є
                      причиною для стурбованості. На додаток, деякі команди
                      можуть продукувати помилки, в залежності від вашої
                      системи; скоріше ніж спробувати завдання&nbsp;<a href="http://en.wikipedia.org/wiki/Sisyphus"
                        target="_blank">Sisyphean</a> по документуванню всіх
                      таких помилок в цьму курсі, я делегую це алгоритму
                      “пошукай повідомлення про помилку в Google”, що, окрім
                      іншого, є гарною практикою для розробки програмного
                      забезпечення в реальному світі. Якщо ви отримали любі
                      проблеми, слудуя цьому курсу, я рекомендую
                      проконсультуватися з ресурсами, переліченими в&nbsp;<a href="http://www.railstutorial.org/#help"
                        target="_blank">Rails Tutorial help section</a>.<sup id="_cha-1_footnote-ref-4"
                        class="footnote"><a href="#cha-1_footnote-4">4</a></sup></p>
                    <p>Оскільки <em>Rails Tutorial</em> покриває тестування
                      застосувань Rails, часто є корисним, чи буде якісь з
                      фрагментів коду викликати збій тестової сюїти (на що
                      вказує червоний колір) або пройде (на зо вказує зелений
                      колір).<span class="intersentencespace"></span> По
                      домовленості код, що буде викликати збій тесту, вказується
                      <span style="color: red"><span class="sc"></span><span class="sc"><strong>червоним</strong></span><span
                          class="sc"></span></span>, тоді як код, що проходитиме
                      тест, вказується чк <span style="color: forestgreen;"><span
                          style="font-weight: bold;">зелений</span></span><span
                        style="color: ForestGreen"><span class="sc"><strong></strong></span><span
                          class="sc"></span></span>.</p>
                    <p>Кожна глава в цьому курсі включає розділ Вправи,
                      виконання яких необов’язкове, але рекомендоване.<span class="intersentencespace"></span>
                      Щоб утримувати загальну дискусію незалежоною від вправ,
                      рішення загалон не включаються в подальші лістинги коду.<span
                        class="intersentencespace"></span> В рідких випадках,
                      коли рішення використовується в подальшому, воно явно
                      вирішується в головному тексті.</p>
                    <p>Нарешті, для зручності <em>Ruby on Rails Tutorial</em>
                      адаптує дві домовленості, розроблені для того, щоб
                      дільшість прикладів коду було легше зрозуміти.<span class="intersentencespace"></span>
                      Перше, деякі лістинги коду включають один або більше
                      підсвічених рядків, як показано нижче:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:email</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                    </div>
                    <p>такі підсвічені рядки типово вказують найбільш важливий
                      новий код в наданому прикладі, та часто (хоча і не однак)
                      представляють різницю між представленим лістингом коду, та
                      попереднім лістингом.<span class="intersentencespace"></span>
                      Друге, для скорочення та простоти багато лістингів коду в
                      книжці включають вертикальні крапки, як наведено нижче:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">has_secure_password</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Ці крапки представляють пропущений код та не мають
                      копіюватися буквально.</p>
                  </div>
                </div>
                <div id="_sec-up_and_running" data-tralics-id="cid3" class="section"
                  data-number="1.2">
                  <h2><a name="sec-up_and_running" class="heading hyperref"><span
                        class="number">1.2 </span>До роботи</a></h2>
                  <p>Навіть для досвідчених розробників Rails, встановлення
                    Ruby, Rails, та всього асоційованого програмного
                    забезпечення може бути вправою з розчарування.<span class="intersentencespace"></span>
                    Загальна проблема полягає в великій кількості оточень: різні
                    операційні системи, номери версій, налаштування текстових
                    редакторів та інтегрованих оточень розробки&nbsp; (IDE),
                    таке інше.<span class="intersentencespace"></span>
                    Користувачі, хто вже мають налаштоване оточення розробки,
                    встановлене на їх локальній машині, запрошуються до
                    використання їх улюбленого налаштування, але (як
                    зазначається у&nbsp; <a href="#aside-barrier" class="hyperref">Врізці
                      <span class="ref">1.1</span></a>) нові користувачі
                    заохочуються оминути таке встановлення та проблеми
                    конфігурування, використовуючи&nbsp;<em>хмарне інтегроване
                      оточення розробки</em>.<span class="intersentencespace"></span>
                    Хмарне IDE робить в звичайному веб браузері і, таким чином,
                    робить однаково між різними платформами, що особливо корисно
                    для операційних систем (таких як Windows), на яких розробка
                    Rails є складною з історичних причин.<span class="intersentencespace"></span>
                    Якщо, не зважаючи на пов’язані виклики, ви все ще бажаєте
                    звершити&nbsp; <em>Ruby on Rails Tutorial</em> з
                    використанням локального оточення розробки, я рекомендую
                    наступні інструкції на&nbsp;<a href="http://installrails.com/"
                      target="_blank">InstallRails.com</a>.<sup id="_cha-1_footnote-ref-5"
                      class="footnote"><a href="#cha-1_footnote-5">5</a></sup></p>
                  <div id="_sec-development_environment" data-tralics-id="uid25"
                    class="subsection" data-number="1.2.1">
                    <h3><a name="sec-development_environment" class="heading hyperref"><span
                          class="number">1.2.1 </span>Оточення розробки</a></h3>
                    <p>Зважаючи на різні ідіосинкразичні настроювання, можливо є
                      стільки оточень розробки, як і програмістів на Rails.<span
                        class="intersentencespace"></span> Щоб уникнути ціх
                      складностей, <em>Ruby on Rails Tutorial</em>
                      стандартизується на чудовому хмарному отченні розробки <a
                        href="http://c9.io/" target="_blank">Cloud9</a>.<span class="intersentencespace"></span>
                      Зокрема, для цієї третьої редакції я радий бути партнером
                      Cloud9, та запропонувати оточення розробки, спаціально
                      скроєне для птреб цього курсу. Результуючий робочий
                      простір Rails Tutorial Cloud9 надходить попередньо
                      налаштованим з більшістю потрібного програмного
                      забезпечення для професійної розробки на Rails, включаючи
                      Ruby, RubyGems, Git.<span class="intersentencespace"></span>
                      (Поза це,&nbsp; єдина велика частина программного
                      забезпечення, що ми встановимо окремо, є сам Rails, і це
                      зроблено навмисно (<a href="#sec-installing_rails" class="hyperref">Розділ
                        <span class="ref">1.2.2</span></a>).)<span class="intersentencespace"></span>
                      Хмарна IDE також включає три базові компоненти, потрібні
                      для розробки веб застосувань: текстовий редактор,
                      навігатор файлової системи, та термінал командного рядка (<a
                        href="#fig-ide_anatomy" class="hyperref">Малюнок <span
                          class="ref">1.1</span></a>).<span class="intersentencespace"></span>
                      Поміж інших можливостей, текстовий редактор хмарної IDE
                      підтримує глобальний пошук “Find in Files”, що я вважаю за
                      основу для навігації любого великого проекту&nbsp; Ruby or
                      Rails.<sup id="_cha-1_footnote-ref-6" class="footnote"><a
                          href="#cha-1_footnote-6">6</a></sup><span class="intersentencespace"></span>
                      Нарешті, навіть якщо ви прийняли рішення не
                      використовувати виключно хмарний IDE в реальному житті (і
                      я рекомендую вам вивчити інші тулкіти також), він
                      провадить чудове введення в загальні можливості текстових
                      редакторів та інших інструментів розробки.</p>
                    <div class="center figure" id="_fig-ide_anatomy" data-tralics-id="uid27"
                      data-number="1.1">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/ide_anatomy.png"
                          alt="images/figures/ide_anatomy"></div>
                      <div class="caption"><span class="header">Малюнок 1.1: </span><span
                          class="description">Анатомія хмарного IDE. </span></div>
                    </div>
                    <p>Ось кроки для початку з хмарним оточенням розробки:</p>
                    <ol>
                      <li><a href="https://c9.io/web/sign-up/free" target="_blank">Безкоштовно
зареєструйтеся
                          на Cloud9</a><sup id="_cha-1_footnote-ref-7" class="footnote"><a
                            href="#cha-1_footnote-7">7</a></sup></li>
                      <li>Клацніть на&nbsp; “Go to your Dashboard”(насправді це
                        лівий сайдбар, прим. перекладача)</li>
                      <li>Оберіть “Create New Workspace” </li>
                      <li>Як змальовано на <a href="#fig-cloud9_new_workspace"
                          class="hyperref">Малюнку <span class="ref">1.2</span></a>,
                        створіть робочий простір з назвою “rails-tutorial” (<em>не</em>
                        “rails_tutorial”), встановіть його як “Private to the
                        people I invite” (Приватний для запрошених людей), та
                        виберіть іконку для Rails Tutorial (<em>не</em>іконку
                        для Ruby on Rails) </li>
                      <li>Нажміть&nbsp; “Create”(Створити)</li>
                      <li>Коли Cloud9 завершить налаштування робочого постору,
                        оберіть та клацніть “Start editing”(Почати редагування).
                      </li>
                    </ol>
                    <p>Оскільки використання двох проміжків для відступів є
                      майже універсальною домовленостю в Ruby, я також
                      рекомендую змінити редактор для використання двох
                      проміжків, замість чотирьох по замовчанню.<span class="intersentencespace"></span>
                      Як показано на&nbsp; <a href="#fig-cloud9_two_spaces" class="hyperref">Малюнку
                        <span class="ref">1.3</span></a>, ви можетее зробити це,
                      клацнувши на іконці шестерні в верхньому правому кутку, та
                      потім обрати “Code Editor (Ace)”, щоб змінити налаштування
                      “Soft Tabs”.<span class="intersentencespace"></span>
                      (Зауважте, що це набувє чинності беспосередньо; вам не
                      треба натискати на кнопку “Save”).</p>
                    <div class="center figure" id="_fig-cloud9_new_workspace" data-tralics-id="uid35"
                      data-number="1.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/cloud9_new_workspace.png"
                          alt="images/figures/cloud9_new_workspace"></div>
                      <div class="caption"><span class="header">Малюнок 1.2: </span><span
                          class="description">Створення новго рабочого простору
                          на Cloud9. </span></div>
                    </div>
                    <div class="center figure" id="_fig-cloud9_two_spaces" data-tralics-id="uid36"
                      data-number="1.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/cloud9_two_spaces.png"
                          alt="images/figures/cloud9_two_spaces"></div>
                      <div class="caption"><span class="header">Малюнок 1.3: </span><span
                          class="description">Встановлення Cloud9 для
                          використання двох проміжків для відступів. </span></div>
                    </div>
                  </div>
                  <div id="_sec-installing_rails" data-tralics-id="uid37" class="subsection"
                    data-number="1.2.2">
                    <h3><a name="sec-installing_rails" class="heading hyperref"><span
                          class="number">1.2.2 </span>Встановлення Rails</a></h3>
                    <p>Оточення розробки з <a href="#sec-development_environment"
                        class="hyperref">Розділу <span class="ref">1.2.1</span></a>
                      включає все програмне забезпечення, що нам треба для
                      початку, окрім самого Rails.<sup id="_cha-1_footnote-ref-8"
                        class="footnote"><a href="#cha-1_footnote-8">8</a></sup><span
                        class="intersentencespace"></span>Щоб встановити Rails,
                      ми використаємо команду <code>gem</code>, надану
                      менеджером пакунків <em>RubyGems</em>, що включає
                      друкування команди, показаної в&nbsp;<a href="#code-installing_rails"
                        class="hyperref">Лістингу <span class="ref">1.1</span></a>
                      в вашому терміналі командного рядка.<span class="intersentencespace"></span>
                      (Якщо ви розробляєте на вашій локальній системі, це
                      означає звичане вікно терміналу; якщо це хмарне IDE, це
                      означає використання інструменту командного рядка,
                      показаного на <a href="#fig-ide_anatomy" class="hyperref">Малюнку
                        <span class="ref">1.1</span></a>.)</p>
                    <div class="codelisting" id="_code-installing_rails" data-tralics-id="uid39"
                      data-number="1.1">
                      <div class="heading"><span class="number">Лістинг1.1:</span>
                        <span class="description">Встановлення Rails з
                          визначеним номером версії.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> gem install rails -v 4.2.0
</pre></div>
                      </div>
                    </div>
                    <p>Тут флаг&nbsp;<code>-v</code> дає впевненість, що буде
                      встановлена вказана версяія Rails, що є важливим для
                      отримання результатів, співпадаючих з цім підручником.</p>
                  </div>
                </div>
                <div id="_sec-the_hello_application" data-tralics-id="cid4" class="section"
                  data-number="1.3">
                  <h2><a name="sec-the_hello_application" class="heading hyperref"><span
                        class="number">1.3 </span>Перше застосування</a></h2>
                  <p>Слідуя&nbsp;<a href="http://www.catb.org/jargon/html/H/hello-world.html"
                      target="_blank">довгій традиції</a> програмування
                    комп’ютерів, наша мета для нашого першого застосування є
                    написання програми&nbsp; “hello, world”.<span class="intersentencespace"></span>
                    Зокрема, ми створимо просте застосування, що відображує
                    рядок “hello, world!” на веб сторінці, обоє, в нашому
                    оточенні розробки (<a href="#sec-hello_world" class="hyperref">Розділ
                      <span class="ref">1.3.4</span></a>) та в справжньому
                    веб&nbsp; (<a href="#sec-deploying" class="hyperref">Розділ
                      <span class="ref">1.5</span></a>).</p>
                  <p>Практично всі застосівання Rails починають однаковим
                    шляхом, виконанням команди <code>rails new</code>.<span class="intersentencespace"></span>
                    Це корисна команда створює скелет Rails застосування в
                    обраному вами каталозі.<span class="intersentencespace"></span>
                    Щоб почати, користувачі, що <em>не</em>використовують
                    Cloud9 IDE, рекомендовану в <a href="#sec-development_environment"
                      class="hyperref">Розділі <span class="ref">1.2.1</span></a>,
                    повинні створити каталог <code>робочого простору</code> для
                    ваших проектів Rails, якщо він ще не існує (<a href="#code-mkdir_rails_projects"
                      class="hyperref">Лістинг <span class="ref">1.2</span></a>)
                    та перейти в цей каталог.<span class="intersentencespace"></span>
                    (<a href="#code-mkdir_rails_projects" class="hyperref">Лістинг
                      <span class="ref">1.2</span></a> використовує команди Unix
                    <code>cd</code> та <code>mkdir</code>; дивіться <a href="#aside-unix_commands"
                      class="hyperref">Врізку <span class="ref">1.3</span></a>,
                    якщо ви ще не вільно володієте ціми командами).</p>
                  <div class="codelisting" id="_code-mkdir_rails_projects" data-tralics-id="uid40"
                    data-number="1.2">
                    <div class="heading"><span class="number">ЛІстинг 1.2:</span>
                      <span class="description">Створення каталогу <code>робочого
                          простору </code></span><span class="description"><code><span
                            class="description"><code>(w</code></span>orkspace)</code>
                        для проектів Rails (не обов’язково в хмарі).</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> <span class="nb">cd</span>                  <span
class="c"># Переходимо в домашній каталог</span>
<span class="gp">$</span> mkdir workspace     <span class="c"># Створюємо робочій простір</span>
<span class="gp">$</span> <span class="nb">cd </span>workspace/       <span class="c"># Переходимо в каталог пробочого простору</span>
</pre></div>
                    </div>
                  </div>
                  <div class="aside" id="_aside-unix_commands" data-tralics-id="uid41"
                    data-number="1.3">
                    <div class="heading"><span class="number">Врізка 1.3.</span>
                      <span class="description">Прискорений курс командного
                        рядка Unix</span></div>
                    <p>Для читачів, що прийшли з Windows або (в меншій, але
                      достатньо значній мірі) з Macintosh OS&nbsp;X, командний
                      рядок Unix може бути незнайомим.<span class="intersentencespace"></span>
                      На щастя, якщо ви використовуєте рекомендоване оточення
                      хмари, ви автоматично маєте доступ до командного рядка
                      Unix (Linux), що виконує стандартну&nbsp;<a href="http://en.wikipedia.org/wiki/Shell_%28computing%29"
                        target="_blank">оболонку інтерфейса командного рядка</a>,
                      відому як <a href="http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29"
                        target="_blank">Bash</a>.</p>
                    <p>Базова ідея командного рядка проста: надаючи короткі
                      команди, користувач може виконувати велике різномаїття
                      операцій, таких, як створення каталогів (<span class="tt">mkdir</span>),
переміщення
                      або копіювання файлів (<span class="tt">mv</span> та <span
                        class="tt">cp</span>), або мандрування файловою
                      системою, змінюючи каталоги&nbsp; (<span class="tt">cd</span>).<span
                        class="intersentencespace"></span> Хоча командний рядок
                      може видаватись примітивним для користувачів, що здебільшо
                      знайомі з графічним інтерфейсом користувача (GUIs),
                      зовнішність оманлива: командний рядок є одним з найбільш
                      потужних інструментів в розпорядженні розробника.<span class="intersentencespace"></span>
                      Запевняю, що ви рідко побачите робочий стіл досвідченого
                      розробника без декількох відкритих вікон термінала, де
                      запущені командні оболонки.</p>
                    <p>Основний предмет глибокий, але для потреб цього курсу нам
                      треба тільки трохи найбільш загальних команд Unix для
                      командного рядка, як підсумовано в <a href="#table-unix_commands"
                        class="hyperref">Таблиці <span class="ref">1.1</span></a>.<span
                        class="intersentencespace"></span> Для більш глибинного
                      занурення в командний рядок Unix, дивіться&nbsp; <a href="http://conqueringthecommandline.com/"
                        target="_blank"><em>Conquering the Command Line</em></a>
                      від Mark Bates (доступно як <a href="http://conqueringthecommandline.com/book"
                        target="_blank">fбезкоштовна онлайн версія</a> та
                      як&nbsp;<a href="http://conqueringthecommandline.com/#pricing"
                        target="_blank">електронна книга та скринкаст</a>).</p>
                  </div>
                  <div class="table" id="_table-unix_commands" data-tralics-id="uid42"
                    data-number="1.1">
                    <table class="tabular">
                      <tbody>
                        <tr class="bottom_border">
                          <td class="align_left">Опис</td>
                          <td class="align_left"><strong>Команда</strong></td>
                          <td class="align_left"><strong>Приклад</strong></td>
                        </tr>
                        <tr>
                          <td class="align_left">друкувати вміст каталогу</td>
                          <td class="align_left"><span class="tt">ls</span></td>
                          <td class="align_left"><code>$ ls -l</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">створити каталог</td>
                          <td class="align_left"><span class="tt">mkdir
                              &lt;dirname&gt;</span></td>
                          <td class="align_left"><code>$ mkdir workspace</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">змінити каталог</td>
                          <td class="align_left"><span class="tt">cd
                              &lt;dirname&gt;</span></td>
                          <td class="align_left"><code>$ cd workspace/</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">перейти на рівень вище</td>
                          <td class="align_left"><br>
                          </td>
                          <td class="align_left"><code>$ cd ..</code><span class="intersentencespace"></span></td>
                        </tr>
                        <tr>
                          <td class="align_left">перейти додому</td>
                          <td class="align_left"><br>
                          </td>
                          <td class="align_left"><code>$ cd ~</code> або просто
                            <code>$ cd</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">перейти відносно ~</td>
                          <td class="align_left"><br>
                          </td>
                          <td class="align_left"><code>$ cd ~/workspace/</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">перемістити файл (або
                            перейменувати)</td>
                          <td class="align_left"><span class="tt">mv
                              &lt;source&gt; &lt;target&gt;</span></td>
                          <td class="align_left"><code>$ mv README.rdoc
                              README.md</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">копіювати файл</td>
                          <td class="align_left"><span class="tt">cp
                              &lt;source&gt; &lt;target&gt;</span></td>
                          <td class="align_left"><code>$ cp README.rdoc
                              README.md</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">видалити файл</td>
                          <td class="align_left"><span class="tt">rm
                              &lt;file&gt;</span></td>
                          <td class="align_left"><code>$ rm README.rdoc</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">видалити пустий каталог</td>
                          <td class="align_left"><span class="tt">rmdir
                              &lt;directory&gt;</span></td>
                          <td class="align_left"><code>$ rmdir workspace/</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">видалити непустий каталог</td>
                          <td class="align_left"><span class="tt">rm -rf
                              &lt;directory&gt;</span></td>
                          <td class="align_left"><code>$ rm -rf tmp/</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">зтулити та друкувати вміст
                            файлів</td>
                          <td class="align_left"><span class="tt">cat
                              &lt;file&gt;</span></td>
                          <td class="align_left"><code>$ cat ~/.ssh/id_rsa.pub</code></td>
                        </tr>
                      </tbody>
                    </table>
                    <div class="caption"><span class="header">Таблиця 1.1: </span><span
                        class="description">Деякі загальні команди Unix. </span></div>
                  </div>
                  <p>Наступний крок для обох, локальних файлових систем та
                    хмарного IDE є створення першого застосування з
                    використанням команди з <a href="#code-rails_command" class="hyperref">Лістингу
                      <span class="ref">1.3</span></a>.<span class="intersentencespace"></span>
                    Зауважте, що <a href="#code-rails_command" class="hyperref">Лістинг
                      <span class="ref">1.3</span></a> явно включає номер версії
                    Rails (<code>_4.2.0_</code>) як частину команди.<span class="intersentencespace"></span>
                    Це дає впевненість, що використовується та ж версія Rails,
                    що ми встановили в&nbsp; <a href="#code-installing_rails" class="hyperref">Лістингу
                      <span class="ref">1.1</span></a>, для створення структури
                    файлів нашого першого застосування. (Якщо команда в <a href="#code-rails_command"
                      class="hyperref">Лістингу <span class="ref">1.3</span></a>
                    повертає помилку, на кшталт “Could not find ’railties”’, це
                    означає, що ви не маєте потрібної встановленої Rails, та вам
                    потрібно ще раз перевірити, що ви слідували командам з&nbsp;<a
                      href="#code-installing_rails" class="hyperref">Лістингу <span
                        class="ref">1.1</span></a> точно по написаному).</p>
                  <div class="codelisting" id="_code-rails_command" data-tralics-id="uid43"
                    data-number="1.3">
                    <div class="heading"><span class="number">Лістинг 1.3:</span>
                      Виконання&nbsp;<span class="description"><code>rails new</code>
                        (з вказанням номеру версії).</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="gp">$</span> <span class="nb">cd</span> ~/workspace
</span><span class="hll"><span class="gp">$</span> rails _4.2.0_ new hello_app
</span><span class="go">      create</span>
<span class="go">      create  README.rdoc</span>
<span class="go">      create  Rakefile</span>
<span class="go">      create  config.ru</span>
<span class="go">      create  .gitignore</span>
<span class="go">      create  Gemfile</span>
<span class="go">      create  app</span>
<span class="go">      create  app/assets/javascripts/application.js</span>
<span class="go">      create  app/assets/stylesheets/application.css</span>
<span class="go">      create  app/controllers/application_controller.rb</span>
<span class="go">      .</span>
<span class="go">      .</span>
<span class="go">      .</span>
<span class="go">      create  test/test_helper.rb</span>
<span class="go">      create  tmp/cache</span>
<span class="go">      create  tmp/cache/assets</span>
<span class="go">      create  vendor/assets/javascripts</span>
<span class="go">      create  vendor/assets/javascripts/.keep</span>
<span class="go">      create  vendor/assets/stylesheets</span>
<span class="go">      create  vendor/assets/stylesheets/.keep</span>
<span class="go">         run  bundle install</span>
<span class="go">Fetching gem metadata from https://rubygems.org/..........</span>
<span class="go">Fetching additional metadata from https://rubygems.org/..</span>
<span class="go">Resolving dependencies...</span>
<span class="go">Using rake 10.3.2</span>
<span class="go">Using i18n 0.6.11</span>
<span class="go">.</span>
<span class="go">.</span>
<span class="go">.</span>
<span class="go">Your bundle is complete!</span>
<span class="go">Use `bundle show [gemname]` to see where a bundled gem is installed.</span>
<span class="go">         run  bundle exec spring binstub --all</span>
<span class="go">* bin/rake: spring inserted</span>
<span class="go">* bin/rails: spring inserted</span>
</pre></div>
                    </div>
                  </div>
                  <p>Як ви бачите в кінці <a href="#code-rails_command" class="hyperref">Лістингу
                      <span class="ref">1.3</span></a>, виконання <code>rails
                      new</code> автоматично виконує&nbsp; команду <code>bundle
                      install</code>, після того, як створення файлі завершено.<span
                      class="intersentencespace"></span> ми обсудимо що це
                    означає більш детально, починаючи з&nbsp;<a href="#sec-bundler"
                      class="hyperref">Розділу <span class="ref">1.3.1</span></a>.</p>
                  <p>Зауважте, як багато файлів та каталогів створює
                    команда&nbsp;<code>rails</code>.<span class="intersentencespace"></span>
                    Це стандартна структура файлів та каталогів (<a href="#fig-directory_structure_rails"
                      class="hyperref">Малюнок <span class="ref">1.4</span></a>)
                    є однією з багатьох переваг Rails; він безпосередньо
                    переносить вас з нуля до функціонального (хоча б і
                    мінімального) застосування.<span class="intersentencespace"></span>
                    Більше того, оскільки структура є загальною для всіх
                    застосувань Rails, ви можете безпосередньо отримати
                    орієнтир, дивлячись на чийсь код.<span class="intersentencespace"></span>
                    Підсумок файлів по замовчанню Rails наводиться в&nbsp; <a href="#table-rails_directory_structure"
                      class="hyperref">Таблиці <span class="ref">1.2</span></a>;
                    ми вивчимо призначення більшості з ціх файлів та каталогів
                    впродовж цієї книги.<span class="intersentencespace"></span>
                    Зокрема, починаючи з&nbsp;<a href="#sec-the_asset_pipeline"
                      class="hyperref">Розділу <span class="ref">5.2.1</span></a>
                    ми обсудимо каталог <code>app/assets</code>, частину <em>конвеєру
                      активів</em>, що робить простішим, чим коли б не було,
                    організувати та розгорнути активи, такі, як каскадні листи
                    стилів та файли JavaScript.</p>
                  <div class="center figure" id="_fig-directory_structure_rails"
                    data-tralics-id="uid44" data-number="1.4">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/directory_structure_rails_3rd_edition.png"
                        alt="images/figures/directory_structure_rails_3rd_edition"></div>
                    <div class="caption"><span class="header">Малюнок 1.4: </span><span
                        class="description">Структура каталогів для
                        новоствореного застосування Rails. </span></div>
                  </div>
                  <div class="table" id="_table-rails_directory_structure" data-tralics-id="uid45"
                    data-number="1.2">
                    <table class="tabular">
                      <tbody>
                        <tr class="bottom_border">
                          <td class="align_left"><strong>Файл/Каталог</strong></td>
                          <td class="align_left"><strong>Призначення</strong></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>app/</code></td>
                          <td class="align_left">Базовий код застосування,
                            включаючи моделі, вигляди, контролери та допоміжники</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>app/assets</code></td>
                          <td class="align_left">Активи застосування. такі, як
                            каскадні листи стилів (CSS), файли JavaScript та
                            зображення</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>bin/</code></td>
                          <td class="align_left">Двійникові виконавчі файли</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>config/</code></td>
                          <td class="align_left">Конфігурація застосування</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>db/</code></td>
                          <td class="align_left">Файли бази даних</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>doc/</code></td>
                          <td class="align_left">Документація застосування</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>lib/</code></td>
                          <td class="align_left">Бібліотечні модулі</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>lib/assets</code></td>
                          <td class="align_left">Активи бібліотек, такі як
                            каскадні листи стилів (CSS), файли JavaScript та
                            зображення</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>log/</code></td>
                          <td class="align_left">Файли журналів застосування</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>public/</code></td>
                          <td class="align_left">Публічно доступні файли (через
                            веб браузер), такі як сторінки помилок</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>bin/rails</code></td>
                          <td class="align_left">Програма для генерації коду,
                            відкриття консольних сессій або запуску локального
                            серверу</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>test/</code></td>
                          <td class="align_left">Тести застосування</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>tmp/</code></td>
                          <td class="align_left">Тимчасові файли</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>vendor/</code></td>
                          <td class="align_left">Third-party code such as
                            plugins and gems</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>vendor/assets</code></td>
                          <td class="align_left">Сторонні активи, такі, як
                            каскадні листи стилів (CSS), файли JavaScript та
                            зображення</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>README.rdoc</code></td>
                          <td class="align_left">Короткий опис застосування</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>Rakefile</code></td>
                          <td class="align_left">Службові завдання, досяжні
                            через команду <code>rake</code></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>Gemfile</code></td>
                          <td class="align_left">Залежності Gem для застосування</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>Gemfile.lock</code></td>
                          <td class="align_left">Список gems, що
                            використовуються для впевненості, що всі
                            копіїзастосування використовують ті ж версії</td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>config.ru</code></td>
                          <td class="align_left">Файл конфігурації для <a href="http://rack.github.io/"
                              target="_blank">Rack middleware</a></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>.gitignore</code></td>
                          <td class="align_left">Шаблони для файлів, що мають
                            бути ігноровані Git</td>
                        </tr>
                      </tbody>
                    </table>
                    <div class="caption"><span class="header">Таблиця 1.2: </span><span
                        class="description">Підсумок структури каталогів Rails </span><br>
                      <span class="description">по замовчанню </span></div>
                  </div>
                  <div id="_sec-bundler" data-tralics-id="uid46" class="subsection"
                    data-number="1.3.1">
                    <h3><a name="sec-bundler" class="heading hyperref"><span class="number">1.3.1
                          </span>Bundler</a></h3>
                    <p>Після створення нового застосування Rails, наступним
                      кроком є використання <em>Bundler</em>для встановлення та
                      включення gems, потрібних для застосування.<span class="intersentencespace"></span>
                      Як коротко зазначено в <a href="#sec-the_hello_application"
                        class="hyperref">Розділі <span class="ref">1.3</span></a>,
                      Bundler виконується автоматично (через <code>bundle
                        install</code>) командою <code>rails</code>, але в
                      цьому розділі ми зробимо деякі зміни до gems застосування
                      по замовчанню, та виконаємо Bundler знову.<span class="intersentencespace"></span>
                      Це включає відкриття файлу <code>Gemfile</code> в
                      текстовому редакторі.<span class="intersentencespace"></span>
                      (З хмарним IDE, це включає клацання на стрілці в
                      навігаторі для відкриття каталогу застосування, да
                      подвійне клацання на іконці <code>Gemfile</code>).<span class="intersentencespace"></span>
                      Хоча точні номери версій та деталі можуть трохи
                      відрізнятися, результат повинен виглядати дещо подібно
                      до&nbsp;<a href="#fig-cloud9_gemfile" class="hyperref">Малюнку
                        <span class="ref">1.5</span></a> та <a href="#code-default_gemfile"
                        class="hyperref">Лістингу <span class="ref">1.4</span></a>.<span
                        class="intersentencespace"></span> (Код в цьому файлі є
                      Ruby, але не турбуйтесь на цей момент щодо синтаксису; <a
                        href="#cha-rails_flavored_ruby" class="hyperref">Глава <span
                          class="ref">4</span></a> пояснює Ruby з більшою
                      глибиною). Якщо файл та каталоги не з’являються, як
                      показано на <a href="#fig-cloud9_gemfile" class="hyperref">Малюнку
                        <span class="ref">1.5</span></a>, клацніть на
                      навігаційній шестерні та оберіть “Refresh File Tree”
                      (Оновити дерево каталогів).<span class="intersentencespace"></span>
                      (Як головне правило, ви маєте оновити файлове дерево
                      кожного разу, коли файли або каталоги не виглядають так,
                      як очікується).</p>
                    <div class="center figure" id="_fig-cloud9_gemfile" data-tralics-id="uid47"
                      data-number="1.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/cloud9_gemfile.png"
                          alt="images/figures/cloud9_gemfile"></div>
                      <div class="caption"><span class="header">Малюнок 1.5: </span><span
                          class="description"><code>Gemfile</code> по замовчанню
                          в текстовому редакторі. </span></div>
                    </div>
                    <div class="codelisting" id="_code-default_gemfile" data-tralics-id="uid48"
                      data-number="1.4">
                      <div class="heading"><span class="number">Лістинг 1.4:</span>
                        <span class="description"><code>Gemfile</code> по
                          замовчанню в каталозі <code>hello_app</code>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>


<span class="c1"># Bundle edge Rails instead: gem 'rails', github: 'rails/rails'</span>
<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span> <span
class="s1">'4.2.0'</span>
<span class="c1"># Use sqlite3 as the database for Active Record</span>
<span class="n">gem</span> <span class="s1">'sqlite3'</span>
<span class="c1"># Use SCSS for stylesheets</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span><span class="p">,</span> <span
class="s1">'~&gt; 5.0.1'</span>
<span class="c1"># Use Uglifier as compressor for JavaScript assets</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span> <span
class="s1">'&gt;= 1.3.0'</span>
<span class="c1"># Use CoffeeScript for .js.coffee assets and views</span>
<span class="n">gem</span> <span class="s1">'coffee-rails'</span><span class="p">,</span> <span
class="s1">'~&gt; 4.0.0'</span>
<span class="c1"># See https://github.com/sstephenson/execjs#readme for more supported runtimes</span>
<span class="c1"># gem 'therubyracer', platforms: :ruby</span>

<span class="c1"># Use jquery as the JavaScript library</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span>
<span class="c1"># Turbolinks makes following links in your web application faster. Read more:</span>
<span class="c1"># https://github.com/rails/turbolinks</span>
<span class="n">gem</span> <span class="s1">'turbolinks'</span>
<span class="c1"># Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder</span>
<span class="n">gem</span> <span class="s1">'jbuilder'</span><span class="p">,</span> <span
class="s1">'~&gt; 2.0'</span>
<span class="c1"># bundle exec rake doc:rails generates the API under doc/api.</span>
<span class="n">gem</span> <span class="s1">'sdoc'</span><span class="p">,</span> <span
class="s1">'~&gt; 0.4.0'</span><span class="p">,</span> <span class="ss">group</span><span
class="p">:</span> <span class="ss">:doc</span>

<span class="c1"># Use ActiveModel has_secure_password</span>
<span class="c1"># gem 'bcrypt', '~&gt; 3.1.7'</span>

<span class="c1"># Use Unicorn as the app server</span>
<span class="c1"># gem 'unicorn'</span>

<span class="c1"># Use Capistrano for deployment</span>
<span class="c1"># gem 'capistrano-rails', group: :development</span>

<span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span
class="ss">:test</span> <span class="k">do</span>
  <span class="c1"># Call 'debugger' anywhere in the code to stop execution and get a</span>
  <span class="c1"># debugger console</span>
  <span class="n">gem</span> <span class="s1">'byebug'</span>

  <span class="c1"># Access an IRB console on exceptions page and /console in development</span>
  <span class="n">gem</span> <span class="s1">'web-console'</span><span class="p">,</span> <span
class="s1">'~&gt; 2.0.0.beta2'</span>

  <span class="c1"># Spring speeds up development by keeping your application running in the</span>
  <span class="c1"># background. Read more: https://github.com/rails/spring</span>
  <span class="n">gem</span> <span class="s1">'spring'</span>
<span class="k">end</span>
                    </pre>
                        </div>
                      </div>
                    </div>
                    <p>Багато з ціх рядків закоментовані за допомогою
                      символу&nbsp;<code>#</code>; вони присутні тут щоб
                      показати вам деякі загально потрібні gems та надати
                      приклади синтаксису Bundler.<span class="intersentencespace"></span>
                      На цей момент нам не потрібні ніші gems, ніж встановлені
                      по замовчанню.</p>
                    <p>Якщо ви не вказали номер версії кодманді <code>gem</code>,
                      Bundler буде автоматично встановлювати найостаннішу версію
                      gem.<span class="intersentencespace"></span> Це,
                      наприклад, так виглядає в коді</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">gem</span> <span class="s1">'sqlite3'</span>
</pre></div>
                    </div>
                    <p>Є також два загальні шляхи, щоб задати диапазон версій
                      gem, що дозволяє нам мати деякий контроль над версіями, що
                      використовуються в Rails.<span class="intersentencespace"></span>
                      Перший виглядає так:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">gem</span> <span class="s1">'uglifier'</span><span
class="p">,</span> <span class="s1">'&gt;= 1.3.0'</span>
</pre></div>
                    </div>
                    <p>Це встановлює останню версію&nbsp;<code>uglifier</code>
                      gem (що обробляє компрессію файлів для конвеєру активів),
                      доти, доки вона більша, ніж, або дорівнює версії <code>1.3.0</code>
                      — навіть якщо це, скажімо, версія <code>7.2</code>.<span
                        class="intersentencespace"></span> Другий метод виглядає
                      так:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">gem</span> <span class="s1">'coffee-rails'</span><span
class="p">,</span> <span class="s1">'~&gt; 4.0.0'</span>
</pre></div>
                    </div>
                    <p>Він встановлює gem <code>coffee-rails</code>, до тих
                      пір, як вона новіша від версії <code>4.0.0</code>, та <em>не</em>
                      новіша, ніж <code>4.1</code>.<span class="intersentencespace"></span>
                      Іншими словами, нотація <span class="inline_verbatim">&gt;=</span>
                      завжди встановлює останній gem, тоді як нотація <span class="inline_verbatim">~&gt;
                        4.0.0</span> встановлює тільки оновлені gems, що
                      представляють мінорну точку релізу (наприклад, з <code>4.0.0</code>
                      до <code>4.0.1</code>), але не релізи мажорні точки
                      (наприклад, з <code>4.0</code> до <code>4.1</code>).<span
                        class="intersentencespace"></span> На жаль, досвід
                      показує, що навіть мінорні версії можуть зруйнувати речі,
                      так що для&nbsp;<em>Ruby on Rails Tutorial</em> ми будемо
                      стояти на засадах застереження, включаючи точні номери
                      версій для усіх gems.<span class="intersentencespace"></span>
                      Ви можете використовувати найбільш нові версії кожного
                      gem, включаючи консрукцію <span class="inline_verbatim">~&gt;</span>в
                      <code>Gemfile</code> (що я загалом рекомендую для більш
                      доствідчених користувачів), але будьте попереджені, що це
                      може призвести до того, що ця інструкція буде діяти
                      непередбачено.</p>
                    <p>Перетворення <code>Gemfile</code> в <a href="#code-default_gemfile"
                        class="hyperref">Лістингу <span class="ref">1.4</span></a>
                      на використання точних версій gem versions призводить до
                      коду, показаному в <a href="#code-gemfile_sqlite_version"
                        class="hyperref">Лістингу <span class="ref">1.5</span></a>.<span
                        class="intersentencespace"></span> Зауважте, що ми також
                      застосовуємо цю можливість, щоб змусити <span class="tt">sqlite3</span>
                      gem бути включеним тільки в оточенні розробки або
                      тестування (<a href="#sec-rails_environments" class="hyperref">Розділ
                        <span class="ref">7.1.1</span></a>), що запобігає
                      потенційному конфлікту з базою даних, що використовується
                      Heroku (<a href="#sec-deploying" class="hyperref">Розділ <span
                          class="ref">1.5</span></a>).</p>
                    <div class="codelisting" id="_code-gemfile_sqlite_version" data-tralics-id="uid49"
                      data-number="1.5">
                      <div class="heading"><span class="number">Лістинг 1.5:</span>
                        <span class="description"><code>Gemfile</code> з явною
                          версією для кожного Ruby gem.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span><span class="p">,</span>           <span
class="s1">'5.0.1'</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span>             <span
class="s1">'2.5.3'</span>
<span class="n">gem</span> <span class="s1">'coffee-rails'</span><span class="p">,</span>         <span
class="s1">'4.1.0'</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span><span class="p">,</span>         <span
class="s1">'4.0.3'</span>
<span class="n">gem</span> <span class="s1">'turbolinks'</span><span class="p">,</span>           <span
class="s1">'2.3.0'</span>
<span class="n">gem</span> <span class="s1">'jbuilder'</span><span class="p">,</span>             <span
class="s1">'2.2.3'</span>
<span class="n">gem</span> <span class="s1">'sdoc'</span><span class="p">,</span>                 <span
class="s1">'0.4.0'</span><span class="p">,</span> <span class="ss">group</span><span
class="p">:</span> <span class="ss">:doc</span>

<span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span
class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'sqlite3'</span><span class="p">,</span>     <span
class="s1">'1.3.9'</span>
  <span class="n">gem</span> <span class="s1">'byebug'</span><span class="p">,</span>      <span
class="s1">'3.4.0'</span>
  <span class="n">gem</span> <span class="s1">'web-console'</span><span class="p">,</span> <span
class="s1">'2.0.0.beta3'</span>
  <span class="n">gem</span> <span class="s1">'spring'</span><span class="p">,</span>      <span
class="s1">'1.1.3'</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Коли ви розмістите вміст <a href="#code-gemfile_sqlite_version"
                        class="hyperref">Лістингу <span class="ref">1.5</span></a>
                      в <code>Gemfile</code> застосування, встановіть gems з
                      використанням <code>bundle install</code>:<sup id="_cha-1_footnote-ref-9"
                        class="footnote"><a href="#cha-1_footnote-9">9</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="gp">$</span> <span class="nb">cd </span>hello</span><span
class="hll"><span class="hll">/</span>app/
</span><span class="hll"><span class="gp">$</span> bundle install
</span><span class="go">Fetching source index for https://rubygems.org/</span>
<span class="go">.</span>
<span class="go">.</span>
<span class="go">.</span>
</pre></div>
                    </div>
                    <p>Команда <code>bundle install</code> може зайняти деякий
                      час, але коли він скінчиться, наше застосування буде
                      готове до виконання.</p>
                  </div>
                  <div id="_sec-rails_server" data-tralics-id="uid51" class="subsection"
                    data-number="1.3.2">
                    <h3><a href="#sec-rails_server" class="heading hyperref"><span
                          class="number">1.3.2 </span><span class="tt">rails
                          server</span></a></h3>
                    <p>Завдяки виконанню&nbsp;<code>rails new</code> в <a href="#sec-the_hello_application"
                        class="hyperref">Розділі <span class="ref">1.3</span></a>
                      та <code>bundle install</code> в <a href="#sec-bundler"
                        class="hyperref">Розділі <span class="ref">1.3.1</span></a>,
                      ми вже маємо застосування, що можна виконати — але як?<span
                        class="intersentencespace"></span> На щастя, Rails іде з
                      програмою командного рядка, або&nbsp;<em>скриптом</em>, що
                      виконує <em>локлаьний</em> веб&nbsp; сервер, щоб сприяти
                      нам в розробці нашого застосування.<span class="intersentencespace"></span>
                      Точна команда залежить від оточення, що ми використовуємо:
                      на локальній системі ми просто викликаємо <code>rails
                        server</code> (<a href="#code-local_server" class="hyperref">Лістинг
                        <span class="ref">1.6</span></a>), тодя як на Cloud9 вам
                      треба надати додаткову <em>IP адресу прив’язки </em>та <em><a
                          href="http://en.wikipedia.org/wiki/TCP_and_UDP_port" target="_blank">номер
                          порту,</a></em>щоб сповістити Rails серверу адресу, що
                      він може використовувати, щоб зробити застосування видимим
                      для загалу світу (<a href="#code-cloud_server" class="hyperref">Лістинг
                        <span class="ref">1.7</span></a>).<sup id="_cha-1_footnote-ref-10"
                        class="footnote"><a href="#cha-1_footnote-10">10</a></sup><span
                        class="intersentencespace"></span> (Cloud9 використовує
                      спеціальні <em>змінні оточення,</em> <code>$IP</code> та
                      <code>$PORT</code>, щоб присвоїти IP адресу та порт
                      динамічно.<span class="intersentencespace"></span> Якщо ви
                      бажаєте побачити значення ціх змінних, наберіть <code>echo
                        $IP</code> або <code>echo $PORT</code> в командному
                      рядку). Якщо ваша система скаржиться на відсутність
                      робочого оточення JavaScript, навідайтесь на&nbsp;<a href="https://github.com/sstephenson/execjs"
                        target="_blank">сторінку execjs в GitHub</a> для
                      переліку можливостей.<span class="intersentencespace"></span>
                      Загалом я рекомендую встановити <a href="http://nodejs.org/"
                        target="_blank">Node.js</a>.</p>
                    <div class="codelisting" id="_code-local_server" data-tralics-id="uid53"
                      data-number="1.6">
                      <div class="heading"><span class="number">Лістинг 1.6:</span>Виконання
                        серверу <span class="description">Rails на локальні
                          машині.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> <span
class="nb">cd</span> ~/workspace/hello_app/
</span><span class="hll"><span class="gp">$</span> rails server
</span><span class="go">=&gt; Booting WEBrick</span>
<span class="go">=&gt; Rails application starting on http://localhost:3000</span>
<span class="go">=&gt; Run `rails server -h` for more startup options</span>
<span class="go">=&gt; Ctrl-C to shutdown server</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-cloud_server" data-tralics-id="uid54"
                      data-number="1.7">
                      <div class="heading"><span class="number">Лістинг 1.7:</span>
                        Виконання серверу <span class="description">Rails на
                          хмарній IDE.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> <span
class="nb">cd</span> ~/workspace/hello_app/
</span><span class="hll"><span class="gp">$</span> rails server -b <span class="nv">$IP</span> -p <span
class="nv">$PORT</span>
</span><span class="go">=&gt; Booting WEBrick</span>
<span class="go">=&gt; Rails application starting on http://0.0.0.0:8080</span>
<span class="go">=&gt; Run `rails server -h` for more startup options</span>
<span class="go">=&gt; Ctrl-C to shutdown server</span>
</pre></div>
                      </div>
                    </div>
                    <p>Яку б опцію ви не обрали, я рекомендую виконувати команду
                      <code>rails server</code> в другому термінали (вкладинці),
                      так що ви зможете надавати команди в першому терміналі, як
                      показано на <a href="#fig-new_terminal_tab" class="hyperref">Малюнку
                        <span class="ref">1.6</span></a> та <a href="#fig-rails_server_new_tab"
                        class="hyperref">Малюнку <span class="ref">1.7</span></a>.<span
                        class="intersentencespace"></span> (Якщо ви вже
                      запустили сервер в першій вкладинці, нажміть Ctrl-C, щоб
                      завершити його).<sup id="_cha-1_footnote-ref-11" class="footnote"><a
                          href="#cha-1_footnote-11">11</a></sup> На локальному
                      сервері спрямуйте свій браузер за адресою&nbsp;<a href="http://localhost:3000/"
                        target="_blank">http://localhost:3000/</a>; на хмарній
                      IDE, перейдіть до Share на клацніть на Application
                      address, щоб відкрити його (<a href="#fig-share_workspace"
                        class="hyperref">Малюнок <span class="ref">1.8</span></a>).<span
                        class="intersentencespace"></span> В жодному разі
                      результат має виглядати як на&nbsp;<a href="#fig-riding_rails"
                        class="hyperref">Малюнку <span class="ref">1.9</span></a>.</p>
                    <div class="center figure" id="_fig-new_terminal_tab" data-tralics-id="uid56"
                      data-number="1.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/new_terminal_tab.png"
                          alt="images/figures/new_terminal_tab"></div>
                      <div class="caption"><span class="header">Малюнок 1.6: </span><span
                          class="description">Відкриття нової вкладинки
                          терміналу. </span></div>
                    </div>
                    <div class="center figure" id="_fig-rails_server_new_tab" data-tralics-id="uid57"
                      data-number="1.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/rails_server_new_tab.png"
                          alt="images/figures/rails_server_new_tab"></div>
                      <div class="caption"><span class="header">Малюнок 1.7: </span><span
                          class="description">Виконання серверу Rails на окремій
                          вкладинці. </span></div>
                    </div>
                    <div class="center figure" id="_fig-share_workspace" data-tralics-id="uid58"
                      data-number="1.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/share_workspace.png"
                          alt="images/figures/share_workspace"></div>
                      <div class="caption"><span class="header">Малюнок 1.8: </span><span
                          class="description">Відкриття локального серверу, що
                          виконується у хмарному просторі. </span></div>
                    </div>
                    <div class="center figure" id="_fig-riding_rails" data-tralics-id="uid59"
                      data-number="1.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/riding_rails_3rd_edition.png"
                          alt="images/figures/riding_rails_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 1.9: </span><span
                          class="description">Сторінка Rails по замовчанню, що
                          обслуговується як <code>rails server</code>. </span></div>
                    </div>
                    <p>Щоб побачити інформацію щодо першого застосування,
                      клацніть на посиланні “About your application’s
                      environment”.<span class="intersentencespace"></span> Хоча
                      точні номери версій можуть відрізнятись, результат повинен
                      виглядати я на <a href="#fig-riding_rails_environment" class="hyperref">Малюнку
                        <span class="ref">1.10</span></a>.<span class="intersentencespace"></span>
                      Зрозуміло, що ми не потребуємо сторінку Rails по
                      замовчанню в далекій перспективі, але вже зараз приємно
                      побачити, що вона робить. Ми приберемо цю сторінку (і
                      замінимо її на власну домашню сторінку) в <a href="#sec-hello_world"
                        class="hyperref">Розділі <span class="ref">1.3.4</span></a>.</p>
                    <div class="center figure" id="_fig-riding_rails_environment"
                      data-tralics-id="uid60" data-number="1.10">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/riding_rails_environment_3rd_edition.png"
                          alt="images/figures/riding_rails_environment_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 1.10: </span><span
                          class="description">Сторінка по замовчанню з оточенням
                          застосування. </span></div>
                    </div>
                  </div>
                  <div id="_sec-mvc" data-tralics-id="uid61" class="subsection"
                    data-number="1.3.3">
                    <h3><a href="#sec-mvc" class="heading hyperref"><span class="number">1.3.3
                          </span>Model-View-Controller (MVC)</a></h3>
                    <p>Навіть на ранній стадії є корисним отримати
                      високорівневий огляд того, як робить застосування Rails (<a
                        href="#fig-MVC" class="hyperref">Малюнок <span class="ref">1.11</span></a>).<span
                        class="intersentencespace"></span> Ви можете вже знати,
                      що стандартна структура застосування Rails (<a href="#fig-directory_structure_rails"
                        class="hyperref">Малюнок <span class="ref">1.4</span></a>)
                      має каталог з назвою&nbsp;<code>app/</code> с трьома
                      підкаталогами: <code>models</code>, <code>views</code>
                      та&nbsp; <code>controllers</code>. Це підказка, що Rails
                      слідує архітектурному шаблону <a href="http://en.wikipedia.org/wiki/Model-view-controller"
                        target="_blank">model-view-controller</a> (MVC), що
                      змушує відділяти “логіку домену” (також її назівають
                      “бізнес логікою”) від логіки вводу та презентації, що
                      асоціюється з графічним інтерфейсом користувача (GUI).<span
                        class="intersentencespace"></span> В разі веб
                      застосувань, “логіка домену” типово представлена моделями
                      даних для речей, таких як користувачі, статті та продукти,
                      а в ролі GUI виступає звичайна веб сторінка в веб
                      браузері.</p>
                    <p>Під час взаємодії з застосуванням Rails, браузер надсилає
                      <em>запит</em>, який отримується веб сервером, та
                      передається до Rails <em>контроллера</em>, який
                      відповідає за те, що робити далі.<span class="intersentencespace"></span>
                      В деяких випадках контроллер безпосередньо малює <em>вигляд</em>,
                      що є шаблоном, який перетворюється на HTML, та
                      відсилається назад в браузер. Більше загально, для
                      динамічних сайтів, контролер спілкується з&nbsp;<em>моделлю</em>,
                      що є об’єктом Ruby, що представляє елемент цього сайту
                      (такий як користувач), та відповідає за комунікацію з
                      базою даних.<span class="intersentencespace"></span> Після
                      виклику моделі, контроллер малює вигляд, та повертає повну
                      веб сторінку в браузер як HTML.</p>
                    <div class="center figure" id="_fig-MVC" data-tralics-id="uid62"
                      data-number="1.11"><span class="graphics"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/mvc_schematic.png"
                          alt="mvc_schematic"></span>
                      <div class="caption"><span class="header">Малюнок 1.11: </span><span
                          class="description">Схематична репрезентація
                          архітектури model-view-controller (MVC). </span></div>
                    </div>
                    <p>Не хвилюйтесь, якщо поки ця дискусія виглядає трохи
                      абстрактною. Ми будемо часто посилатись часто на цю
                      сторінку.<span class="intersentencespace"></span> <a href="#sec-hello_world"
                        class="hyperref">Розділ <span class="ref">1.3.4</span></a>
                      показує перше застосування MVC, тоді як&nbsp; <a href="#sec-mvc_in_action"
                        class="hyperref">Розділ <span class="ref">2.2.2</span></a>
                      включає більш детальовану дискуссію по MVC в контексті
                      іграшкового застосування.<span class="intersentencespace"></span>
                      Нарешті, застосування-приклад буде використовувати всі
                      аспекти MVC; ми покриємо контроллери та вигляди, починаючи
                      з <a href="#sec-static_pages" class="hyperref">Розділу <span
                          class="ref">3.2</span></a>, моделі починаючи з&nbsp; <a
                        href="#sec-user_model" class="hyperref">Розділу <span class="ref">6.1</span></a>,
                      та ми побачимо всі три, що роблять разом в <a href="#sec-a_users_resource"
                        class="hyperref">Розділі <span class="ref">7.1.2</span></a>.</p>
                  </div>
                  <div id="_sec-hello_world" data-tralics-id="uid63" class="subsection"
                    data-number="1.3.4">
                    <h3><a href="#sec-hello_world" class="heading hyperref"><span
                          class="number">1.3.4 </span>Hello, world!</a></h3>
                    <p>В якості першого застосування фреймворку MVC, ми зробимо
                      мінімальні зміни до першого застосування, додаючи <em>акцію
                        контроллера</em> для малювання рядка “hello, world!”.<span
                        class="intersentencespace"></span> (Ми вивчимо більше
                      про акції контроллера, починаючи з&nbsp;<a href="#sec-mvc_in_action"
                        class="hyperref">Розділу <span class="ref">2.2.2</span></a>).
                      Результатом буде заміщення сторінки по замовчанню з <a href="#fig-riding_rails"
                        class="hyperref">Малюнка <span class="ref">1.9</span></a>
                      на сторінку “hello, world”, що є ціллю цього розділу.</p>
                    <p>Як підказує ім’я, акції контроллера визначені в
                      контролерах.<span class="intersentencespace"></span> Ми
                      назовемо нашу акцію&nbsp; <code>hello</code> та
                      розмістимо її в контроллері Application.<span class="intersentencespace"></span>
                      Насправді на часі контроллер Application є єдиним
                      контролером, що є у нас, що ми можемо перевірити,
                      виконуючи</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> ls app/controllers/*_controller.rb
</pre></div>
                    </div>
                    <p>щоб побачити наявні контроллери.<span class="intersentencespace"></span>
                      (Ми будемо створювати наші власні коонтроллери&nbsp; <a href="#cha-a_toy_app"
                        class="hyperref">Главі <span class="ref">2</span></a>.)<span
                        class="intersentencespace"></span> <a href="#code-hello_action"
                        class="hyperref">Лістинг <span class="ref">1.8</span></a>
                      показує результуюче визначення <code>hello</code>, що
                      використовує функцію <span style="font-family: monospace;"><span
                          style="font-weight: bold;"></span></span><code>render</code>
                      для повертання тексту “hello, world!”.<span class="intersentencespace"></span>
                      (Не турбуйтесь щодо синтаксису Ruby прямо зараз; він буде
                      пояснений більш детально в&nbsp;<a href="#cha-rails_flavored_ruby"
                        class="hyperref">Главі <span class="ref">4</span></a>.)</p>
                    <div class="codelisting" id="_code-hello_action" data-tralics-id="uid64"
                      data-number="1.8">
                      <div class="heading"><span class="number">Лістинг 1.8:</span>
                        Додавання акції<span class="description"> <code>hello</code>
                          до контроллера Application.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/application_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">ApplicationController</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">Base</span>
  <span class="c1"># Prevent CSRF attacks by raising an exception.</span>
  <span class="c1"># For APIs, you may want to use :null_session instead.</span>
  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span
class="p">:</span> <span class="ss">:exception</span>

  <span class="k">def</span> <span class="nf">hello</span>
<span class="hll">    <span class="n">render</span> <span class="ss">text</span><span
class="p">:</span> <span class="s2">"hello, world!"</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Маючи визначеною якцію, що повертає бажаний рядок, нам
                      треба сповістити Rails використовувати цю акцію, замість
                      сторінки по замовчанню&nbsp;<a href="#fig-riding_rails_environment"
                        class="hyperref">Малюнок <span class="ref">1.10</span></a>.<span
                        class="intersentencespace"></span> Щоб робити це, ми
                      редактуємо <em>маршрутник</em>Rails, що сидить попереду
                      контроллера на <a href="#fig-MVC" class="hyperref">Малюнку
                        <span class="ref">1.11</span></a> та визначає, куди
                      відіслати запити, що надходять з браузера.<span class="intersentencespace"></span>
                      (Я пропустив маршрутник&nbsp; на <a href="#fig-MVC" class="hyperref">Малюнку
                        <span class="ref">1.11</span></a> для спрощення, але ми
                      обсудимо його більш детально починаючи з&nbsp;<a href="#sec-mvc_in_action"
                        class="hyperref">Розділу <span class="ref">2.2.2</span></a>).
                      Зокрема, ми бажаємо змінити сторінку по замовчанню, <em>кореневий
                        маршрут</em>, який визначає сторінку, що
                      обслуговує&nbsp;<em>кореневий URL</em>.<span class="intersentencespace"></span>
                      Оскільки це URL для адрес типу http://www.example.com/ (де
                      нічого не слідує після фінальної косої), для скорочення на
                      кореневий URL часто посилаються як на&nbsp; /&nbsp;
                      (“слеш”).</p>
                    <p>Як видно в <a href="#code-default_root_route" class="hyperref">Лістингу
                        <span class="ref">1.9</span></a>, файл маршрутів Rails (<code>config/routes.rb</code>)
                      включає закоментований рядок, що показує, як структуровати
                      кореневий маршрут.<span class="intersentencespace"></span>
                      Тут “welcome” є контроллером, та “index” є акцією в
                      контролері.<span class="intersentencespace"></span> Щоб
                      активувати кореневий маршрут, розкоментуйте цей рядок,
                      видаливши символ решітки, та потім замістити його на код
                      в&nbsp;<a href="#code-hello_root_route" class="hyperref">Лістингу
                        <span class="ref">1.10</span></a>, що наказує Rails
                      надсилати кореневий маршрут в акцію <code>hello</code>
                      контроллера Application.<span class="intersentencespace"></span>
                      (Як зазначено в <a href="#sec-conventions" class="hyperref">Розділі
                        <span class="ref">1.1.2</span></a>, вертикальні крапки
                      вказують на випущений код, та не мають копіюватись
                      буквально).</p>
                    <div class="codelisting" id="_code-default_root_route" data-tralics-id="uid65"
                      data-number="1.9">
                      <div class="heading"><span class="number">Лістинг 1.9:</span>
                        Кореневий маршрут по замовчанню <span class="description">(закоментований).<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># You can have the root of your site routed with "root"</span>
<span class="hll">  <span class="c1"># root 'welcome#index'</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-hello_root_route" data-tralics-id="uid66"
                      data-number="1.10">
                      <div class="heading"><span class="number">Лістинг 1.10:</span>Встановлення
                        кореневого маршруту <span class="description">.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># You can have the root of your site routed with "root"</span>
<span class="hll">  <span class="n">root</span> <span class="s1">'application#hello'</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>З кодом з <a href="#code-hello_action" class="hyperref">Лістингу
                        <span class="ref">1.8</span></a> та <a href="#code-hello_root_route"
                        class="hyperref">Лістингу <span class="ref">1.10</span></a>,
                      кореневий маршрут повертає “hello, world!”, як ми і
                      сподівались (<a href="#fig-hello_world_hello_app" class="hyperref">Малюнок
                        <span class="ref">1.12</span></a>).</p>
                    <div class="center figure" id="_fig-hello_world_hello_app" data-tralics-id="uid67"
                      data-number="1.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/hello_world_hello_app.png"
                          alt="images/figures/hello_world_hello_app"></div>
                      <div class="caption"><span class="header">Малюнок 1.12: </span><span
                          class="description">Перегляд “hello, world!” в
                          браузері. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-version_control" data-tralics-id="cid5" class="section"
                  data-number="1.4">
                  <h2><a href="#sec-version_control" class="heading hyperref"><span
                        class="number">1.4 </span>Контроль версій за допомогою
                      Git</a></h2>
                  <p>Тепер, коли ми маємо свіже та працююче застосування Rails,
                    ми викроїмо момент для кроку, що хоча і є технічно
                    опціональним, але повинно розглядатися досвідченими
                    розробниками як практично обов’язковий: розміщення
                    первинного коду нашого додатку під <em>контроль версій</em>.<span
                      class="intersentencespace"></span> Системи контролю версій
                    дозволяють нам відстежувати зміни в нашому коді проекту,
                    співпрацювати більш просто, та відкочувати любі необачні
                    помилки (такі, як випадкове видалення файлів).<span class="intersentencespace"></span>
                    Знаючи, як використовувати системи контролю версій, є
                    необхідною навичкою для кожного розробника професійного
                    рівня.</p>
                  <p>Є багато опцій для контролю версій, але спільнота Rails
                    широко стандартизується на&nbsp;<a href="http://git-scm.com/"
                      target="_blank">Git</a>, розгалуженій системі контролю
                    версій, оригінально розробленої Linus Torvalds для
                    зберігання ядра Linux.<span class="intersentencespace"></span>
                    Git є обширним предметом, і в цій книжці ми тільки зверхньо
                    ознайомимось з ним, але є багато добрих онлайн ресурсів; я
                    особливо рекомендую&nbsp; <a href="https://confluence.atlassian.com/display/BITBUCKET/Clone+your+Git+repository+and+add+source+files"
                      target="_blank">Bitbucket 101</a> для стислого огляду та <a
                      href="http://git-scm.com/book" target="_blank"><em>Pro Git</em></a>від
                    Scott Chacon вступу довжиною в книжку.<span class="intersentencespace"></span>
                    Покладаючи ваш код під контроль версій за допомогою Git є <em>дуже</em>
                    рекомендованим, не тільки тому, що це майже універсальна
                    практика в світі Rails, але також тому, що це дозволить вам
                    робити копії та поширювати ваш код більш просто (<a href="#sec-bitbucket"
                      class="hyperref">Розділ <span class="ref">1.4.3</span></a>)
                    та розгорнути ваше застосування прямо тут, в першій главі (<a
                      href="#sec-deploying" class="hyperref">Розділ <span class="ref">1.5</span></a>).</p>
                  <div id="_sec-git_setup" data-tralics-id="uid68" class="subsection"
                    data-number="1.4.1">
                    <h3><a href="#sec-git_setup" class="heading hyperref"><span
                          class="number">1.4.1 </span>Встановлення та
                        налаштування</a></h3>
                    <p>Хмарне IDE, рекомендоване в <a href="#sec-development_environment"
                        class="hyperref">Розділі <span class="ref">1.2.1</span></a>,
                      включає Git по замовчанню, так що в цьому випадку ви не
                      потребуєте встановлення.<span class="intersentencespace"></span>
                      В іншому випадку <a href="http://installrails.com/" target="_blank">InstallRails.com</a>
                      (<a href="#sec-up_and_running" class="hyperref">Розділ <span
                          class="ref">1.2</span></a>) включає інструкції для
                      встановлення Git на вашій системі.</p>
                    <div id="_uid69" data-tralics-id="uid69" class="subsubsection"
                      data-number="1.4.1.1">
                      <h4><a href="#uid69" class="heading">Перше налаштування
                          системи</a></h4>
                      <p>Перед використанням Git, вам потрібно виконати
                        одноразове початкове налаштування.<span class="intersentencespace"></span>
                        Це <em>системне</em>налаштування, що означає, що ви
                        маєте виконати ії тільки один раз для комп’ютера:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git config --global user.name <span
class="s2">"Your Name"</span>
<span class="gp">$</span> git config --global user.email your.email@example.com
<span class="gp">$</span> git config --global push.default matching
<span class="gp">$</span> git config --global alias.co checkout
</pre></div>
                      </div>
                      <p>Зауважте, що ім’я та електронна адреса, що ви
                        використовуєте в вашій конфігурації Git, буде доступна в
                        кожному репозитарії, що ви зробите публічним.<span class="intersentencespace"></span>
                        (Тільки два перші рядки вище є винятково потрібними.
                        Третій рядок включено тільки для впевненості в
                        сумісності з майбутньою версією Git.<span class="intersentencespace"></span>
                        Опціональний четвертий рядок включений, щоб ви могли
                        використовувати&nbsp;<code>co</code> замість більш
                        довгої команди&nbsp;<code>checkout</code>.<span class="intersentencespace"></span>
                        Для максимальної сумісності з системами, що не мають
                        сконфігурованої команди <code>co</code>, ми будемо
                        використовувати повну команду&nbsp;<code>checkout</code>,
                        але в реальному житті я майже завжди використовую <code>git
                          co</code>.)</p>
                    </div>
                    <div id="_sec-first_time_setup" data-tralics-id="uid70" class="subsubsection"
                      data-number="1.4.1.2">
                      <h4><a href="#sec-first_time_setup" class="heading">Одноразове
                          налаштування репозитарію</a></h4>
                      <p>Тепер ми пройдеме деякі кроки, необхідні кожного разу,
                        коли ми створюємо новий&nbsp;<em>репозитарій</em> (іноді
                        для краткості називаємий <em>репо</em>).<span class="intersentencespace"></span>
                        Спершу перейдіть в кореневий каталог першого
                        застосування, та ініціюйте новий репозитарій:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git init
<span class="go">Initialized empty Git repository in /home/ubuntu/workspace/hello_app/.git/</span>
</pre></div>
                      </div>
                      <p>Наступний крок - додати всі файли проекту до
                        репозитарію, використовуючи <code>git add -A</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git add -A
</pre></div>
                      </div>
                      <p>Ця команда додає всі файли в поточному каталозі, крім
                        тих, що співпадають з шаблонами в спеціальному файлі <code>.gitignore</code>.<span
                          class="intersentencespace"></span> Команда <code>rails
                          new</code> автоматично генерує файл <code>.gitignore</code>,
                        як треба для Rails проекту, але ви можете додати також і
                        власні шаблони.<sup id="_cha-1_footnote-ref-12" class="footnote"><a
                            href="#cha-1_footnote-12">12</a></sup></p>
                      <p>Додані файли спочатку розміщуються в&nbsp;<em>підготовчій
                          області</em>, що містить очікувані зміни в вашому
                        проекті.<span class="intersentencespace"></span> Ви
                        можете побачити, які файли знаходяться в фазі
                        очікування, з використанням команди&nbsp;<code>status</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git status
<span class="go">On branch master</span>

<span class="go">Initial commit</span>

<span class="go">Changes to be committed:</span>
<span class="go">  (use "git rm --cached &lt;file&gt;..." to unstage)</span>

<span class="go">  new file:   .gitignore</span>
<span class="go">  new file:   Gemfile</span>
<span class="go">  new file:   Gemfile.lock</span>
<span class="go">  new file:   README.rdoc</span>
<span class="go">  new file:   Rakefile</span>
<span class="go">  .</span>
<span class="go">  .</span>
<span class="go">  .</span>
</pre></div>
                      </div>
                      <p>(Результат буде довгим, так що ми використовуємо
                        вертикальні крапки для позначення пропущених рядків.)</p>
                      <p>Щоб сповістити Git, що ви бажаєте закріпити ці зміни,
                        використовуйте команду&nbsp;<code>commit</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git commit -m <span class="s2">"Initialize repository"</span>
<span class="go">[master (root-commit) df0a62f] Initialize repository</span>
<span class="go">.</span>
<span class="go">.</span>
<span class="go">.</span>
</pre></div>
                      </div>
                      <p>Флаг <code>-m</code> дозволяє вам додати повідомлення
                        до команди; якщо ви не вкажете <code>-m</code>, Git
                        відкриватиме системний редактор по замовчанню, та вам
                        буде треба ввести повідомлення там.<span class="intersentencespace"></span>
                        (Всі приклади в цій книжці використовують флаг&nbsp;<code>-m</code>).</p>
                      <p>Є важливим, що Git закріплює зміни <em>локально</em>,
                        записуючи тільки на машині, на який виконується ця
                        команда. Ми побачимо, як протовкати зміни далі на
                        віддалений репозитарій (використовуючи <code>git push</code>)
                        в&nbsp;<a href="#sec-git_commands" class="hyperref">Розділі
                          <span class="ref">1.4.4</span></a>.</p>
                      <p>До речі, ви можете побачити список ваших повідомлень з
                        використанням команди <code>log</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git log
<span class="go">commit df0a62f3f091e53ffa799309b3e32c27b0b38eb4</span>
<span class="go">Author: Michael Hartl &lt;michael@michaelhartl.com&gt;</span>
<span class="go">Date:   Wed August 20 19:44:43 2014 +0000</span>

<span class="go">    Initialize repository</span>
</pre></div>
                      </div>
                      <p>В залежності від довжини журнала вашого репозитарію вам
                        може знадобитись натиснути на&nbsp;<code>q</code> для
                        виходу.</p>
                    </div>
                  </div>
                  <div id="_uid72" data-tralics-id="uid72" class="subsection" data-number="1.4.2">
                    <h3><a href="#uid72" class="heading hyperref"><span class="number">1.4.2
                          </span>Що гарного робить Git для вас?</a></h3>
                    <p>Якщо ви ніколи не використовували контроль версій до
                      цього, зараз може бути не дуже зрозумілим, що це все
                      робить гарного для вас, так що дозвольте мені навести лише
                      один приклад.<span class="intersentencespace"></span>
                      Допустімо, що ви зробили якусь випадкову зміну, таку як,
                      (жах!) видалили критичний каталог <code>app/controllers/</code>
                      .</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> ls app/controllers/
<span class="go">application_controller.rb  concerns/</span>
<span class="gp">$</span> rm -rf app/controllers/
<span class="gp">$</span> ls app/controllers/
<span class="go">ls: app/controllers/: No such file or directory</span>
</pre></div>
                    </div>
                    <p>Тут ми використовуємо команду Unix <code>ls</code> для
                      отримання вмісту каталогу <code>app/controllers/</code>
                      та потім команду <code>rm</code> для його видалення (<a href="#table-unix_commands"
                        class="hyperref">Таблиця <span class="ref">1.1</span></a>).<span
                        class="intersentencespace"></span> Флаг <code>-rf</code>
                      означає “примусово і рекурсивно”, що рекурсивно видаляє
                      всі файли, каталоги, підкаталоги, і таке інше, без
                      запитання явного підтвердження кожного видалення.</p>
                    <p>Давайте перевіримо статус, щоб побачити що змінилось:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git status
<span class="go">On branch master</span>
<span class="go">Changed but not updated:</span>
<span class="go">  (use "git add/rm &lt;file&gt;..." to update what will be committed)</span>
<span class="go">  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)</span>

<span class="go">      deleted:    app/controllers/application_controller.rb</span>

<span class="go">no changes added to commit (use "git add" and/or "git commit -a")</span>
</pre></div>
                    </div>
                    <p>Ми бачимо, що файли були видалені, але зміни тільки на
                      "робочому дереві"; вони ще не були закріплені.<span class="intersentencespace"></span>
                      Це означає, що що ми можемо відмінити зміни,
                      використовуючи команду <code>checkout</code> з флагом <code>-f</code>,
                      щоб примусити перезапис поточних змін:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git checkout -f
<span class="gp">$</span> git status
<span class="gp">#</span> On branch master
<span class="go">nothing to commit (working directory clean)</span>
<span class="gp">$</span> ls app/controllers/
<span class="go">application_controller.rb  concerns/</span>
</pre></div>
                    </div>
                    <p>Втрачені файли та каталоги повернулись. <span class="intersentencespace"></span>Це
                      чудово!</p>
                  </div>
                  <div id="_sec-bitbucket" data-tralics-id="uid73" class="subsection"
                    data-number="1.4.3">
                    <h3><a href="#sec-bitbucket" class="heading hyperref"><span
                          class="number">1.4.3 </span>Bitbucket</a></h3>
                    Тепер, коли ми поклали наш проект під контроль версій за
                    допомогою Git, прийшов час заштовхати наш код на&nbsp;<a href="http://www.bitbucket.com/"
                      target="_blank">Bitbucket</a>, сайт, оптимізований для
                    зберігання та обміну Git репозитаріями.<span class="intersentencespace"></span>
                    (Попередні редакції цього підручника використовували <a href="http://www.github.com/"
                      target="_blank">GitHub</a> замість цього; дивіться <a href="#aside-github_bitbucket"
                      class="hyperref">Врізку&nbsp;<span class="ref">1.4</span></a>
                    щоб зрозуміти причини цієї зміни).<span class="intersentencespace"></span>
                    Викладання копії вашого Git репозитарію на сервери Bitbucket
                    має два призначення: це буде резервною копією вашого коду
                    (включаючи повну історію версій), та це зробить любу
                    майбутню співпрацю значно простішою.
                    <div class="aside" id="_aside-github_bitbucket" data-tralics-id="uid74"
                      data-number="1.4">
                      <div class="heading"><span class="number">Врізка 1.4.</span>
                        <span class="description">GitHub та Bitbucket</span></div>
                      <br>
                      Безумовно, два найбільш популярних сайтів для хостингу Git
                      репозитаріїв є GitHub та Bitbucket.<span class="intersentencespace"></span>
                      Ці два сервіси мають багато подібностей: обоє сайти
                      дозволяють хостинг Git репозитаріїв та співпрацю, так
                      само, як і надають зручні шляхі для перегляду та пошуку
                      репозитаріїв. Важливі розбіжності (з нашої перспективи), в
                      тому, що коли GitHub пропонує необмежені безкоштовні
                      репозитарії (зі співпрацею) для репозитаріїв з відкритим
                      кодом, та беруть гроші за приватні репозитарії. Bitbucket,
                      замість цього, дозволяє необмежені безкоштовні приватні
                      репозитарії, та бере гроші за деяку кількість
                      співпрацюючих. Який сервіс ви використовуєте для окремого
                      репозитарію, залежить від <span class="intersentencespace"></span>
                      ваших потреб.
                      <p>Попередні редакції цієї книжки використовували GitHub,
                        завдяки його наголосу на відкритому коді, але зростаюча
                        стурбованість щодо безпеки призвели до того, що я
                        рекомендую <em>всім</em>репозитаріям веб застосувань
                        бути приватними по замовчанню.<span class="intersentencespace"></span>
                        Питання в тому, що репозитарій веб застосування може
                        містити важливу інформацію, таку, як криптографічні
                        ключі або паролі, що може бути використано для обходу
                        безпеки сайту, що виконує цей код. Звичайно, можливо так
                        використовувати цю інформацію, щоб тримати її безпечною
                        (наприклад, налаштувавши Git на ігнорування), але це
                        підштовхує до помилок, та потребує значної експертизи.</p>
                      <p>Насправді застосування-приклади, створені в цьому
                        підручнику, безпечні для показу в мережі, але загалом
                        небезпечно позраховувати на цей факт.<span class="intersentencespace"></span>
                        Таким чином, щоб бути в небезпеці, ми примемо сторону
                        обережності, та будем використовувати приватні
                        репозитарії по замовчанню.<span class="intersentencespace"></span>
                        Оскільки GitHub бере гроші за приватні репозитарії, тоді
                        як Bitbucket безкоштовно пропонує репозитарії без
                        обмежень, для наших цілей Bitbucket є кращим, ніж
                        GitHub.<span class="intersentencespace"></span></p>
                    </div>
                    <p>Почати з Bitbucket нескладно:</p>
                    <ol>
                      <li><a href="https://bitbucket.org/account/signup/" target="_blank">Зареєструйтесь
                          на Bitbucket</a> , якщо ви ще це не зробили.&nbsp; </li>
                      <li>Скопіюйте ваш&nbsp;<a href="https://en.wikipedia.org/wiki/Public-key_cryptography"
                          target="_blank"><em>публічний ключ</em></a> в
                        кліпборд.<span class="intersentencespace"></span> Як
                        вказано в <a href="#code-cat_public_key" class="hyperref">Лістингу
                          <span class="ref">1.11</span></a>, користувачі
                        хмарного IDE можуть побачити свій публічний ключ за
                        допомогою команди <code>cat</code>, що може бути потім
                        виділений та скопійований.<span class="intersentencespace"></span>
                        Якщо ви використовуєте вашу власну систему, та не бачите
                        результату команди <a href="#code-cat_public_key" class="hyperref">Лістингу
                          <span class="ref">1.11</span></a>, слідуйте
                        інструкціям&nbsp;<a href="https://confluence.atlassian.com/x/YwV9E"
                          target="_blank">як встановити публічний ключ в вашому
                          рахунку Bitbucket</a>.<span class="intersentencespace"></span>
                      </li>
                      <li>Додайте ваш публічний ключ до Bitbucket, клацнувши на
                        зображенні аватара зправа, та оберіть “Manage account”,
                        та потім “SSH keys” (<a href="#fig-add_public_key" class="hyperref">Малюнок
                          <span class="ref">1.13</span></a>).<span class="intersentencespace"></span>
                      </li>
                    </ol>
                    <div class="codelisting" id="_code-cat_public_key" data-tralics-id="uid78"
                      data-number="1.11">
                      <div class="heading"><span class="number">Лістинг 1.11:</span>
                        Друк публічного ключа за допомогою <span class="description"><code>cat</code>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> cat ~/.ssh/id_rsa.pub<br><span
class="gp"></span>                      </pre>
                        </div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-add_public_key" data-tralics-id="uid79"
                      data-number="1.13">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/add_public_key.png"
                          alt="images/figures/add_public_key"></div>
                      <div class="caption"><span class="header">Малюнок 1.13: </span><span
                          class="description">Додавання публічного ключа SSH. </span></div>
                    </div>
                    <p>Коли ви додасте ваш публічний ключ, клацніть на “Create”
                      для <a href="https://bitbucket.org/repo/create" target="_blank">створення
                        нового репозитарія</a>, як показано на <a href="#fig-create_first_repository"
                        class="hyperref">Малюнку <span class="ref">1.14</span></a>.<span
                        class="intersentencespace"></span> Коли заповнюватимете
                      інформацію про проект, попілкуйтесь про то, щоб залишити
                      відміченим “This is a private repository”.<span class="intersentencespace"></span>
                      Після клацніть на “Create repository”, слідуйте
                      інструкціям під “Command line &gt; I have an existing
                      project”, що має виглядати подібно до <a href="#code-bitbucket_add_push"
                        class="hyperref">Лістингу <span class="ref">1.12</span></a>.<span
                        class="intersentencespace"></span> (Якщо це не виглядає
                      як <a href="#code-bitbucket_add_push" class="hyperref">Лістинг
                        <span class="ref">1.12</span></a>, це може бути через
                      те, що публічний ключ не був доданий. В цьому разі я
                      пропоную спробувати цей крок ще раз). Коли будете
                      підіймати репозитарій, відповідайте yes, якщо побачите
                      питання “Are you sure you want to continue connecting
                      (yes/no)?”</p>
                    <div class="center figure" id="_fig-create_first_repository"
                      data-tralics-id="uid80" data-number="1.14">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/create_first_repository_bitbucket.png"
                          alt="images/figures/create_first_repository_bitbucket"></div>
                      <div class="caption"><span class="header">Малюнок 1.14: </span><span
                          class="description">Створення першого репозитарію
                          застосування на Bitbucket. </span></div>
                    </div>
                    <div class="codelisting" id="_code-bitbucket_add_push" data-tralics-id="uid81"
                      data-number="1.12">
                      <div class="heading"><span class="number">Лістинг 1.12:</span>
                        Додавання <span class="description">Bitbucket та
                          просування репозитарію.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git remote add origin git@bitbucket.org:&lt;username&gt;/hello_app.git
<span class="gp">$</span> git push -u origin --all <span class="c"># pushes up the repo and its refs for the first time</span>
</pre></div>
                      </div>
                    </div>
                    <p>Команди в <a href="#code-bitbucket_add_push" class="hyperref">Лістингу
                        <span class="ref">1.12</span></a> спочатку наказують
                      Git, щоб він додав Bitbucket в якості&nbsp;<em>походження</em>
                      для вашого репозитарію, та тоді проштовхуємо ваш
                      репозитарій на віддалене походження.<span class="intersentencespace"></span>
                      (Не тербуйтесь про те, що робить флаг<span style="font-family: monospace;"><span
                          style="color: darkgreen;"><span style="font-weight: bold;">
                          </span></span></span><code>-u</code>; якщо ви
                      зацікавлені, зробіть пошук на предмет “git set upstream”).<span
                        class="intersentencespace"></span> Звісно, вам треба
                      замінити&nbsp;<span class="inline_verbatim">&lt;username&gt;</span>
                      на ваше дійсне ім’я.<span class="intersentencespace"></span>
                      Наприклад, команда для мене виглядає так</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git remote add origin git@bitbucket.org:mhartl/hello_app.git
</pre></div>
                    </div>
                    <p>Це в результаті дає сторінку на Bitbucket для репозитарію
                      hello_app, з переглядом файлів, повною історією
                      підтверджень, та безліччю інших корисностей (<a href="#fig-bitbucket_repository_page"
                        class="hyperref">Малюнок <span class="ref">1.15</span></a>).</p>
                    <div class="center figure" id="_fig-bitbucket_repository_page"
                      data-tralics-id="uid82" data-number="1.15">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/bitbucket_repository_page.png"
                          alt="images/figures/bitbucket_repository_page"></div>
                      <div class="caption"><span class="header">Малюнок 1.15: </span><span
                          class="description">Сторінка репозитарію на Bitbucket.
                        </span></div>
                    </div>
                  </div>
                  <div id="_sec-git_commands" data-tralics-id="uid83" class="subsection"
                    data-number="1.4.4">
                    <h3><a href="#sec-git_commands" class="heading hyperref"><span
                          class="number">1.4.4 </span>Branch, edit, commit,
                        merge</a></h3>
                    <p>Якщо ви слідували крокам в <a href="#sec-bitbucket" class="hyperref">Розділі
                        <span class="ref">1.4.3</span></a>, ви можете помітити,
                      що Bitbucket автоматично не розпізнав файл <code>README.rdoc</code>
                      з нашого репозитарію, і замість цього скаржиться на
                      головній сторінці репозитарію, що немає README (<a href="#fig-bitbucket_no_readme"
                        class="hyperref">Малюнок <span class="ref">1.16</span></a>).<span
                        class="intersentencespace"></span> Це вказує на те, що
                      формат <code>rdoc</code> не є досить загальним для того,
                      щоб Bitbucket підтримував його автоматично, чому я, та
                      майже кожний інший розробник, якого я знаю, замість обирає
                      використовувати&nbsp; <em>Markdown</em>.<span class="intersentencespace"></span>
                      В цьому розділі ми змінимо файл <code>README.rdoc</code>
                      на <code>README.md</code>, в спробі додати деякий
                      особливий вміст Rails Tutorial до файлу README.<span class="intersentencespace"></span>
                      В процесі цього ми побачимо перший приклад процесу
                      branch-edit-commit-merge, що я рекомендую використовувати
                      разом з Git.<sup id="_cha-1_footnote-ref-13" class="footnote"><a
                          href="#cha-1_footnote-13">13</a></sup></p>
                    <div class="center figure" id="_fig-bitbucket_no_readme" data-tralics-id="uid85"
                      data-number="1.16">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/bitbucket_no_readme.png"
                          alt="images/figures/bitbucket_no_readme"></div>
                      <div class="caption"><span class="header">Малюнок
                          1.16:&nbsp; повідомлення</span><span class="description">Bitbucket
                          про відсутній README. </span></div>
                    </div>
                    <div id="_sec-git_branch" data-tralics-id="uid86" class="subsubsection"
                      data-number="1.4.4.1">
                      <h4><a href="#sec-git_branch" class="heading">Branch</a></h4>
                      <p>Git є неймовірно гарним для утворення <em>відгалужень</em>,
                        що є ефективною копією репозитарію, де ми можемо зробити
                        (можливо, експеріментальні) зміни, без модифікації
                        батьківської вітки. В більшості випадків, батьківською є
                        відгалуження <em>master</em>, та ми можемо створити
                        нове відгалуження, використовуючи&nbsp;<code>checkout</code>
                        з флагом <code>-b</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> git checkout -b modify-README
</span><span class="go">Switched to a new branch 'modify-README'</span>
<span class="hll"><span class="gp">$</span> git branch
</span><span class="go">  master</span>
<span class="go">* modify-README</span>
</pre></div>
                      </div>
                      <p>Є інша команда, <code>git branch</code>, що просто
                        перелічує всі локальні відгалуження, та зірочка <code>*</code>
                        вказує, яке відгалуження наразі є поточним. Зауважте,
                        що&nbsp;<code>git checkout -b modify-README</code>
                        створює нове відгалуження, а також і перемикається на
                        нього, як на це вказує зірочка перед&nbsp;<code>modify-README</code>.<span
                          class="intersentencespace"></span> (Якщо ви встановили
                        скорочення <code>co</code> в <a href="#sec-version_control"
                          class="hyperref">Розділі <span class="ref">1.4</span></a>,
                        ви можете використовувати <code>git co -b modify-README</code>
                        замість цього).</p>
                      <p>Повне значення відгалужень стає зрозумілим тільки коли
                        робите над проектом разом з декільками розробниками,<sup
                          id="_cha-1_footnote-ref-14" class="footnote"><a href="#cha-1_footnote-14">14</a></sup>
                        але відгалуження є корисними навіть для одного
                        розробника, як в нашому випадку. Зокрема, головне
                        (master) відгалуження захищене від любих змін, що ми
                        робимо в окремих відгалуженнях, так що навіть якщо
                        ми&nbsp;<em>дійсно</em>скуйовдимо код, ми завжди зможемо
                        відкинути зміни, виконавши перевірку (checking out) з
                        головним відгалуженням, та знищивши окреме відгалуження.<span
                          class="intersentencespace"></span> В кінці цього
                        розділу ми побачимо, як це зробити.</p>
                      <p>До речі, для таких малих змін, як цього разу, я
                        зазвичай не починаю борсатись з новим відгалуженням, але
                        в нагальному контексті наша головна можливість є почати
                        практиковати гарні звички.</p>
                    </div>
                    <div id="_sec-git_edit" data-tralics-id="uid88" class="subsubsection"
                      data-number="1.4.4.2">
                      <h4><a href="#sec-git_edit" class="heading">Edit</a></h4>
                      <p>Після створення тематичного відгалуження, ми
                        відредактуємо його, щоб зробити його трохи більше
                        описовим. Я обираю мову розмітки&nbsp;<a href="http://daringfireball.net/projects/markdown/"
                          target="_blank">Markdown</a>, замість RDoc по
                        замовчанню для ціх цілей, і якщо ви використовуєте
                        розширення файлу <code>.md</code>, Bitbucket буде
                        автоматично форматувати його за вас.<span class="intersentencespace"></span>
                        Так що спершу ми використаємо версію Git команди Unix <code>mv</code>
                        (перемістити) для зміни імені:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git mv README.rdoc README.md
</pre></div>
                      </div>
                      <p>Потім заповнимо <code>README.md</code> з вмістом <a href="#code-new_readme"
                          class="hyperref">Лістингу <span class="ref">1.13</span></a>.</p>
                      <div class="codelisting" id="_code-new_readme" data-tralics-id="uid89"
                        data-number="1.13">
                        <div class="heading"><span class="number">Лістинг 1.13:</span>
                          Новий файл&nbsp;<span class="description"><code>README</code>,
                            <code>README.md</code>.</span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre># Ruby on Rails Tutorial: "hello, world!"

This is the first application for the
[*Ruby on Rails Tutorial*](http://www.railstutorial.org/)
by [Michael Hartl](http://www.michaelhartl.com/).
</pre></div>
                        </div>
                      </div>
                    </div>
                    <div id="_sec-git_commit" data-tralics-id="uid90" class="subsubsection"
                      data-number="1.4.4.3">
                      <h4><a href="#sec-git_commit" class="heading">Commit</a></h4>
                      <p>Коли зміни були зроблені, ми передивляємось статус
                        нашого відгалуження:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> git status
</span><span class="go">On branch modify-README</span>
<span class="go">Changes to be committed:</span>
<span class="go">  (use "git reset HEAD &lt;file&gt;..." to unstage)</span>

<span class="go">  renamed:    README.rdoc -&gt; README.md</span>

<span class="go">Changes not staged for commit:</span>
<span class="go">  (use "git add &lt;file&gt;..." to update what will be committed)</span>
<span class="go">  (use "git checkout -- &lt;file&gt;..." to discard changes in working directory)</span>

<span class="go">  modified:   README.md</span>
</pre></div>
                      </div>
                      <p>В цій точці ми можемо використати <code>git add -A</code>
                        як в <a href="#sec-first_time_setup" class="hyperref">Розділі
                          <span class="ref">1.4.1.2</span></a>, але <code>git
                          commit</code> провадить флаг <code>-a</code> як
                        скорочення для (дуже поширеного) випадку затвердження
                        всіх модифікацій до існуючих файлів (або файлів, що
                        створені з використанням <code>git mv</code>, що не
                        рахується для Git як новий файл):</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> git commit -a -m <span
class="s2">"Improve the README file"</span>
</span><span class="go">2 files changed, 5 insertions(+), 243 deletions(-)</span>
<span class="go">delete mode 100644 README.rdoc</span>
<span class="go">create mode 100644 README.md</span>
</pre></div>
                      </div>
                      <p>Будьте уважні, щоб не використовувати флаг&nbsp;<code>-a</code>
                        помилковим чином; якщо ви додали любі нові файли до
                        проекту з часу останнього затвердження, ви з початку
                        маєте повідомити Git про них, використовуючи <code>git
                          add -A</code>.</p>
                      <p>Зауважте, що ми пишемо повідомлення затвердження
                        в&nbsp;<em>теперішньому</em>часі (та, технічно кажучи, в
                        <a href="http://en.wikipedia.org/wiki/Imperative_mood" target="_blank">імперативному
                          наклоні</a>).<span class="intersentencespace"></span>
                        Git моделює затвердження як серію патчів, і в цьому
                        контексті має сенс описувати, що кожне
                        затвердження&nbsp;<em>робить</em>, скоріше, чим що воно
                        зробило.<span class="intersentencespace"></span> Більше
                        того, це використання співпадає з повідомленнями
                        затвердження, що генеруються командами самого Git.<span
                          class="intersentencespace"></span> Дивіться статтю “<a
                          href="https://github.com/blog/926-shiny-new-commit-styles"
                          target="_blank">Блискучо нові стилі затверджень</a>”
                        для отримання додаткової інформації.</p>
                    </div>
                    <div id="_sec-git_merge" data-tralics-id="uid91" class="subsubsection"
                      data-number="1.4.4.4">
                      <h4><a href="#sec-git_merge" class="heading">Merge</a></h4>
                      <p>Тепер, коли ми завершили робити зміни, ми готові до <em>злиття</em>результатів
                        з нашим головним відгалуженням:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> git checkout master
</span><span class="go">Switched to branch 'master'</span>
<span class="hll"><span class="gp">$</span> git merge modify-README
</span><span class="go">Updating 34f06b7..2c92bef</span>
<span class="go">Fast forward</span>
<span class="go">README.rdoc     |  243 --------------------------------------------------</span>
<span class="go">README.md       |    5 +</span>
<span class="go">2 files changed, 5 insertions(+), 243 deletions(-)</span>
<span class="go">delete mode 100644 README.rdoc</span>
<span class="go">create mode 100644 README.md</span>
</pre></div>
                      </div>
                      <p>Зверніть увагу, що вивід Git часто включає речі на
                        кшталт&nbsp;<code>34f06b7</code>, що відноситься до
                        внутрішньої репрезентації репозитаріїв в Git.<span class="intersentencespace"></span>
                        Ваш точний результат буде відрізнятися в деталях, але в
                        іншому має здебільшого співпадати з наведеним вище.</p>
                      <p>Після того, як ви злили зміни, ви можете очистити ваші
                        відгалуження, видаливши додаткове відгалуження,
                        використавши <code>git branch -d</code>, якщо ви вже
                        закінчили з ним :</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> git branch -d modify-README
</span><span class="go">Deleted branch modify-README (was 2c92bef).</span>
</pre></div>
                      </div>
                      <p>Цей крок є опціональним, та фактично є доволі загальним
                        залишати відгалуження без змін. Таким чином ви можете
                        перемикатись назад та вперед між тематичним та головним
                        відгалуженням, зливаючи зміни кожного разу, коли
                        досягаєте натуральної точки зупинки.</p>
                      <p>Як зазначалось вище, також можливо відмінити зміни в
                        вашому відокремленому відгалуженні, на цей раз за
                        допомогою&nbsp;<code>git branch -D</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c"># For illustration only; don't do this unless you mess up a branch</span>
<span class="nv">$ </span>git checkout -b topic-branch
<span class="nv">$ </span>&lt;really screw up the branch&gt;
<span class="nv">$ </span>git add -A
<span class="nv">$ </span>git commit -a -m <span class="s2">"Major screw up"</span>
<span class="nv">$ </span>git checkout master
<span class="nv">$ </span>git branch -D topic-branch
</pre></div>
                      </div>
                      <p>На відміну від флага <code>-d</code>, флаг <code>-D</code>
                        буде видаляти відгалуження навіть в випадку, коли воно
                        не було злито зі змінами.</p>
                    </div>
                    <div id="_sec-git_push" data-tralics-id="uid92" class="subsubsection"
                      data-number="1.4.4.5">
                      <h4><a href="#sec-git_push" class="heading">Push</a></h4>
                      <p>Тепер, коли ми оновили <code>README</code>, ми можемо
                        проштовхнути зміни на Bitbucket, щоб подивитись на
                        результат.<span class="intersentencespace"></span>
                        Оскількі ми вже робили одне просування (<a href="#sec-bitbucket"
                          class="hyperref">Розділ <span class="ref">1.4.3</span></a>),
                        на більшості систем ми можемо оминути <code>origin
                          master</code>, та виконати тільки <code>git push</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> git push
</pre></div>
                      </div>
                      <p>Як ми обіцяли в&nbsp;<a href="#sec-git_edit" class="hyperref">Розділі
                          <span class="ref">1.4.4.2</span></a>, Bitbucket гарно
                        форматує новий файл з використанням&nbsp; Markdown (<a href="#fig-new_readme"
                          class="hyperref">Малюнок <span class="ref">1.17</span></a>).</p>
                      <div class="center figure" id="_fig-new_readme" data-tralics-id="uid93"
                        data-number="1.17">
                        <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/new_readme_bitbucket.png"
                            alt="images/figures/new_readme_bitbucket"></div>
                        <div class="caption"><span class="header">Малюнок 1.17:
                          </span><span class="description">Покращений формат
                            файлу&nbsp;<code>README</code>, форматований за
                            допомогою Markdown. </span></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-deploying" data-tralics-id="cid6" class="section"
                  data-number="1.5">
                  <h2><a href="#sec-deploying" class="heading hyperref"><span class="number">1.5
                        </span>Розгортання</a></h2>
                  <p>Навіть на цій простий стадії ми збираємось розгорнути наше
                    (майже пусте) застосування Rails в промисловий стан.<span class="intersentencespace"></span>
                    Цей крок є опціональним, але ранішнє та часте розгортання
                    дозволить нам впіймати любі проблеми розгортання на ранішній
                    фазі нашої розробки.<span class="intersentencespace"></span>
                    Альтернатива - розгортання тільки після кропітких зусиль в
                    стінах оточення розробки — часто призводить до жахливих
                    головних болей інтеграції, коли настає час для запуску.<sup
                      id="_cha-1_footnote-ref-15" class="footnote"><a href="#cha-1_footnote-15">15</a></sup></p>
                  <p>Розгортання застосувань Rails було болючим, але екосистема
                    розгортання швидко покращувалась протягом останніх декількох
                    років, та зараз є декілька чудових опцій. Це включає
                    розділені або віртуальні приватні сервери, що виконують <a
                      href="http://www.modrails.com/" target="_blank">Phusion
                      Passenger</a> (модуль для веб серверів Apache та Nginx<sup
                      id="_cha-1_footnote-ref-16" class="footnote"><a href="#cha-1_footnote-16">16</a></sup>),
                    компанії розгортання з повним сервісом, такі як <a href="http://engineyard.com/"
                      target="_blank">Engine Yard</a> та&nbsp; <a href="http://railsmachine.com/"
                      target="_blank">Rails Machine</a>, та хмарне розгортання,
                    таке, як <a href="http://cloud.engineyard.com/" target="_blank">Engine
                      Yard Cloud</a>, <a href="https://ninefold.com/" target="_blank">Ninefold</a>
                    та <a href="http://heroku.com/" target="_blank">Heroku</a>.</p>
                  <p>Мія улюблена опція розгортання Rails є Heroku, що є
                    хостованою платформою, побудованою спеціально для
                    розгортання Rails та інших веб застосувань.<span class="intersentencespace"></span>
                    Heroku робить розгортання Rails застосувань до смішного
                    протсим — доки ваш код знаходиться під контролем
                    версій&nbsp; Git.<span class="intersentencespace"></span>
                    (Це ще один привід слідувати крокам налаштування Git за <a
                      href="#sec-version_control" class="hyperref">Розділом <span
                        class="ref">1.4,</span></a> якщо ви ще не зробили це).<span
                      class="intersentencespace"></span> Залишок цього розділу
                    присвячений розгортанню нашого першого застосування на
                    Heroku.<span class="intersentencespace"></span> Деякі з ідей
                    є досить просунутими, так що не турбуйтесь щодо розуміння
                    всіх деталей; що важливо, це що в кінці процесу ми будемо
                    мати наше застосування розгорнутим в справжньому веб.</p>
                  <div id="_sec-heroku_setup" data-tralics-id="uid96" class="subsection"
                    data-number="1.5.1">
                    <h3><a href="#sec-heroku_setup" class="heading hyperref"><span
                          class="number">1.5.1 </span>Налаштування Heroku<br>
                      </a></h3>
                    <p>Heroku використовує базу даних&nbsp;<a href="http://www.postgresql.org/"
                        target="_blank">PostgreSQL</a>&nbsp; (вимовляється
                      “пост-грес-кю-ель”, та часто називається скорочено,
                      “Postgres”), що означає, що що нам треба додати&nbsp; <span
                        class="tt">pg</span>&nbsp;gem в промислое оточення, щоб
                      дозволити Rails розмоіляти Postgres:<sup id="_cha-1_footnote-ref-17"
                        class="footnote"><a href="#cha-1_footnote-17">17</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">group</span> <span class="ss">:production</span> <span
class="k">do</span>
  <span class="n">gem</span> <span class="s1">'pg'</span><span class="p">,</span>             <span
class="s1">'0.17.1'</span>
  <span class="n">gem</span> <span class="s1">'rails_12factor'</span><span class="p">,</span> <span
class="s1">'0.0.2'</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Зауважте додавання <span class="tt">rails_12factor</span>
                      gem, що використовується Heroku для обслуговування
                      статичних активів, таких, як зображення або сторінки
                      стилів.<span class="intersentencespace"></span>
                      Результуючий <code>Gemfile</code> виглядає як в <a href="#code-gemfile_pg_gem"
                        class="hyperref">Лістингу <span class="ref">1.14</span></a>.</p>
                    <div class="codelisting" id="_code-gemfile_pg_gem" data-tralics-id="uid98"
                      data-number="1.14">
                      <div class="heading"><span class="number">Лістинг 1.14:</span>&nbsp;<span
                          class="description"><code>Gemfile</code> з доданими
                          gems.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>        <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span><span class="p">,</span>   <span
class="s1">'5.0.1'</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span>     <span
class="s1">'2.5.3'</span>
<span class="n">gem</span> <span class="s1">'coffee-rails'</span><span class="p">,</span> <span
class="s1">'4.1.0'</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span><span class="p">,</span> <span
class="s1">'4.0.3'</span>
<span class="n">gem</span> <span class="s1">'turbolinks'</span><span class="p">,</span>   <span
class="s1">'2.3.0'</span>
<span class="n">gem</span> <span class="s1">'jbuilder'</span><span class="p">,</span>     <span
class="s1">'2.2.3'</span>
<span class="n">gem</span> <span class="s1">'sdoc'</span><span class="p">,</span>         <span
class="s1">'0.4.0'</span><span class="p">,</span> <span class="ss">group</span><span
class="p">:</span> <span class="ss">:doc</span>

<span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span
class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'sqlite3'</span><span class="p">,</span>     <span
class="s1">'1.3.9'</span>
  <span class="n">gem</span> <span class="s1">'byebug'</span><span class="p">,</span>      <span
class="s1">'3.4.0'</span>
  <span class="n">gem</span> <span class="s1">'web-console'</span><span class="p">,</span> <span
class="s1">'2.0.0.beta3'</span>
  <span class="n">gem</span> <span class="s1">'spring'</span><span class="p">,</span>      <span
class="s1">'1.1.3'</span>
<span class="k">end</span>

<span class="hll"><span class="n">group</span> <span class="ss">:production</span> <span
class="k">do</span>
</span><span class="hll">  <span class="n">gem</span> <span class="s1">'pg'</span><span
class="p">,</span>             <span class="s1">'0.17.1'</span>
</span><span class="hll">  <span class="n">gem</span> <span class="s1">'rails_12factor'</span><span
class="p">,</span> <span class="s1">'0.0.2'</span>
</span><span class="hll"><span class="k">end</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>Щоб підготувати систему до розгортання в промисловому
                      оточенні, ми виконуємо <code>bundle install</code> з
                      особливим флагом, щоб запобігти локального встановлення
                      любих промислових gems (що в нашому випадку складає <span
                        class="tt">pg</span> та <span class="tt">rails_12factor</span>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install --without production
</pre></div>
                    </div>
                    <p>Оскільки додані нами gems в <a href="#code-gemfile_pg_gem"
                        class="hyperref">Лістингу <span class="ref">1.14</span></a>
                      обмежені тільки промисловим оточенням, прямо зараз це
                      команда насправді не встановлює жодних додаткових
                      локальних gems, але це треба для оновлення <code>Gemfile.lock</code>
                      з <span class="tt">pg</span> та <span class="tt">rails_12factor</span>
                      gems.<span class="intersentencespace"></span> Ми можемо
                      затвердити зміну наступним чином:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git commit -a -m <span class="s2">"Update Gemfile.lock for Heroku"</span>
</pre></div>
                    </div>
                    <p>Далі ми маємо створити та сконфігурувати новий рахунок
                      Heroku.<span class="intersentencespace"></span> Перший
                      крок - <a href="http://api.heroku.com/signup" target="_blank">зареєструватися
                        на Heroku</a>.<span class="intersentencespace"></span>
                      Далі перевірте, чи ваша система вже має кліент командного
                      рядка Heroku:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> heroku version
</pre></div>
                    </div>
                    <p>Під хмарним IDE ви побачите номер версії Heroku, що
                      вказує на те, що <code>heroku</code> CLI доступний, але
                      на інших системах може бути потрібним встановити його,
                      використовуючи <a href="https://toolbelt.heroku.com/" target="_blank">Heroku
                        Toolbelt</a>.<sup id="_cha-1_footnote-ref-18" class="footnote"><a
                          href="#cha-1_footnote-18">18</a></sup></p>
                    <p>Коли ви перевірили, що інтерфейс Heroku командного рядка
                      встановлений, використовуйте команду <code>heroku</code>
                      для входу та додавання вашого SSH ключа:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> heroku login
<span class="gp">$</span> heroku keys:add
</pre></div>
                    </div>
                    <p>Нарешті, використовуйте команду <code>heroku create</code>
                      для створення місця на серверах Heroku, де буде жити наше
                      застосування (<a href="#code-heroku_create" class="hyperref">Лістинг
                        <span class="ref">1.15</span></a>).</p>
                    <div class="codelisting" id="_code-heroku_create" data-tralics-id="uid100"
                      data-number="1.15">
                      <div class="heading"><span class="number">Лістинг 1.15:</span>
                        Створення нового застосування на <span class="description">Heroku.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> heroku create
</span><span class="go">Creating damp-fortress-5769... done, stack is cedar</span>
<span class="go">http://damp-fortress-5769.herokuapp.com/ | git@heroku.com:damp-fortress-5769.git</span>
<span class="go">Git remote heroku added</span>
</pre></div>
                      </div>
                    </div>
                    <p>Команда <code>heroku</code> створює новий субдомен для
                      нашого застосування, доступного для безпосереднього
                      перегляду.<span class="intersentencespace"></span> Зараз
                      там нічого немає, так що почнемо розгортання.</p>
                  </div>
                  <div id="_sec-heroku_step_one" data-tralics-id="uid101" class="subsection"
                    data-number="1.5.2">
                    <h3><a href="#sec-heroku_step_one" class="heading hyperref"><span
                          class="number">1.5.2 </span>Розгортання Heroku, крок
                        один</a></h3>
                    <p>Щоб розгорнути застосування першим кроком є застосування
                      Git для просування головної гілки до Heroku:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git push heroku master
</pre></div>
                    </div>
                    <p>(Ви можете бачити деякі застережливі повідомлення, що ви
                      поки можете ігнорувати.<span class="intersentencespace"></span>
                      Ми обговоримо їх пізніше в <a href="#sec-professional_grade_deployment"
                        class="hyperref">Розділі <span class="ref">7.5</span></a>.)</p>
                  </div>
                  <div id="_uid102" data-tralics-id="uid102" class="subsection"
                    data-number="1.5.3">
                    <h3><a href="#uid102" class="heading hyperref"><span class="number">1.5.3
                          </span>Розгортання Heroku, крок два<br>
                      </a></h3>
                    <p>Нема кроку два!<span class="intersentencespace"></span>
                      Він вже виконаний.<span class="intersentencespace"></span>
                      Щоб побачити тільки що розгорнуте застосування, зайдіть за
                      адресою, що ви бачили, коли виконували <code>heroku
                        create</code> (<a href="#code-heroku_create" class="hyperref">Лістинг
                        <span class="ref">1.15</span></a>).<span class="intersentencespace"></span>
                      (Якщо ви робите на локальній машині, замість хмарного IDE,
                      ви також можете використовувати&nbsp; <code>heroku open</code>).
                      Результат виглядатиме, як на&nbsp;<a href="#fig-heroku_app"
                        class="hyperref">Малюнку <span class="ref">1.18</span></a>.<span
                        class="intersentencespace"></span> Сторінка, подібна до
                      <a href="#fig-hello_world_hello_app" class="hyperref">Малюнка
                        <span class="ref">1.12</span></a>, але вона виконується
                      в промисловому оточенні на справжньому веб.</p>
                    <div class="center figure" id="_fig-heroku_app" data-tralics-id="uid103"
                      data-number="1.18">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/heroku_app_hello_world.png"
                          alt="images/figures/heroku_app_hello_world"></div>
                      <div class="caption"><span class="header">Малюнок 1.18: </span><span
                          class="description">Перше застосування Rails Tutorial
                          виконується на Heroku. </span></div>
                    </div>
                  </div>
                  <div id="_sec-heroku_commands" data-tralics-id="uid104" class="subsection"
                    data-number="1.5.4">
                    <h3><a href="#sec-heroku_commands" class="heading hyperref"><span
                          class="number">1.5.4 </span>Команди Heroku<br>
                      </a></h3>
                    <p>Є багато команд <a href="http://devcenter.heroku.com/heroku-command"
                        target="_blank">Heroku</a>, але ми тільки доторкнулись
                      до них в цій книжці.<span class="intersentencespace"></span>
                      Давайте витратимо хвилину, щоб переіменувати застосування,
                      як показано нижче:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> heroku rename rails-tutorial-hello
</pre></div>
                    </div>
                    <p>Не використовуйте це ім’я, бо я вже зайняв його!<span class="intersentencespace"></span>
                      Фактично, вам не треба перейматися цім прямо зараз;
                      використання імені по замовчанню від Heroku є гарним.<span
                        class="intersentencespace"></span> Але якщо ви бажаєте
                      переіменувати ваше застосування, ви можете зробити його
                      досить безпечним, використовуючи випадковий або прихований
                      субдомен, як нижче:</p>
                    <pre>hwpcbmze.herokuapp.com
seyjhflo.herokuapp.com
jhyicevg.herokuapp.com</pre>
                    <p>З випадковим субдоменом хтось може відвідати ваш сайт,
                      тільки якщо ви надасте йому адресу. <span class="intersentencespace"></span>
                      (До речі, як попередній перегляд неймовірної компактності
                      Ruby, ось код, що я використовую для генерації випадкових
                      субдоменів:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">(</span><span class="s1">'a'</span><span
class="o">.</span><span class="n">.</span><span class="s1">'z'</span><span class="p">)</span><span
class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">shuffle</span><span
class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span
class="mi">7</span><span class="o">].</span><span class="n">join</span>
</pre></div>
                    </div>
                    <p>Дуже мило .)</p>
                    <p>На додаток до підтримки субдоменів, Heroku також
                      підтримує власні домени.<span class="intersentencespace"></span>
                      (Фактично, сайт <a href="http://www.railstutorial.org/" target="_blank">Ruby
                        on Rails Tutorial</a> розташований на Heroku; якщо ви
                      читаєте цю книжку онлайн, ви прямо зараз дивитесь на
                      Heroku сайт!)<span class="intersentencespace"></span>.
                      Дивіться документацію <a href="http://devcenter.heroku.com/"
                        target="_blank">Heroku</a> для додаткової інформації
                      щодо власних доменів та інших можливостей Heroku.</p>
                  </div>
                </div>
                <div id="_sec-beginning_conclusion" data-tralics-id="cid7" class="section"
                  data-number="1.6">
                  <h2><a href="#sec-beginning_conclusion" class="heading hyperref"><span
                        class="number">1.6 </span>Висновок</a></h2>
                  <p>Ми пройшли довгий шлях в цій главі: встановлення,
                    налагодження оточення для розробки, контроль версій та
                    розгортання.<span class="intersentencespace"></span> В
                    наступній главі ми, на основі досягнутого в <a href="#cha-beginning"
                      class="hyperref">Главі <span class="ref">1</span></a>,
                    побудуємо основане на базі даних&nbsp;<em>іграшкове
                      застосування</em>, що дасть нам перший реальний присмак
                    того, що може Rails.</p>
                  <p>Якщо ви бажаєте поділитися вашим прогресом в цій точці,
                    будьте такі ласкаві надіслати твіт або оновите Facebook
                    статус з чимось, на кшталт:</p>
                  <div class="center">
                    <p><a href="http://twitter.com/?status=I%27m%20learning%20Ruby%20on%20Rails%20with%20the%20@railstutorial%21%20http://www.railstutorial.org/"
                        target="_blank">I’m learning Ruby on Rails with the
                        @railstutorial!<span class="intersentencespace"></span>
                        http://www.railstutorial.org/</a></p>
                  </div>
                  <p>Я також рекомендую підписатись на список розсилки&nbsp;<a href="http://www.railstutorial.org/#email"
                      target="_blank">Rails Tutorial email list</a><sup id="_cha-1_footnote-ref-19"
                      class="footnote"><a href="#cha-1_footnote-19">19</a></sup><em>Ruby
                      on Rails Tutorial</em>.</p>
                  <div id="_sec-beginning_what_we_learned_in_this_chapter" data-tralics-id="uid106"
                    class="subsection" data-number="1.6.1">
                    <h3><a href="#sec-beginning_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">1.6.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Ruby on Rails є фреймворком для веб розробки,
                        написаним на мові програмування Ruby. </li>
                      <li>Встановлення Rails, генерація застосування та
                        редагування результуючих файлів є простими за допомогою
                        зазадалегідь сконфігурованого хмарного оточення. </li>
                      <li>Rails іде з командою командного рядка&nbsp;<code>rails,</code>
                        що може генерувати нові застосування (<code>rails new</code>)
                        та виконувати локальний сервер (<code>rails server</code>).
                        </li>
                      <li>Ми додали акцію контроллера та модифікували кореневий
                        маршрут для створення застосування “hello, world”. </li>
                      <li>Ми захистились від втради даних, та при цьому
                        забезпечили можливість співпраці, розмістивши код нашого
                        застосування під контроль версій Git та проштовхнули
                        результуючй код в приватний репозитарій на Bitbucket. </li>
                      <li>Ми розгорнули наше застосування в промислове оточення,
                        використовуючи Heroku. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-beginning_exercises" data-tralics-id="cid8" class="section"
                  data-number="1.7">
                  <h2><a href="#sec-beginning_exercises" class="heading hyperref"><span
                        class="number">1.7 </span>Вправи</a></h2>
                  <p><em>Зауваження</em>: Рішення до вправ, де даються
                    роз’вязання всіх завдань в книжці&nbsp;<em>Ruby on Rails
                      Tutorial</em>, включене безкоштовно до кожного придбання
                    на&nbsp;<a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <ol>
                    <li>Змініть вміст акції <code>hello</code> в <a href="#code-hello_action"
                        class="hyperref">Лістингу <span class="ref">1.8</span></a>
                      щоб друкувати “hola, mundo!”<span class="intersentencespace"></span>
                      замість “hello, world!”.<span class="intersentencespace"></span>
                      <em>Додатково</em>: Покажіть, що Rails підтримує не-<a href="http://es.wikipedia.org/wiki/ASCII"
                        target="_blank">ASCII</a> символи, включивши
                      перевернутий знак наголосу, як в “¡Hola, mundo!”<span class="intersentencespace"></span>
                      (<a href="#fig-hola_mundo" class="hyperref">Малюнок <span
                          class="ref">1.19</span></a>).<sup id="_cha-1_footnote-ref-20"
                        class="footnote"><a href="#cha-1_footnote-20">20</a></sup>
                    </li>
                    <li>Слідуя прикладу з акцією <code>hello</code> в <a href="#code-hello_action"
                        class="hyperref">Лістингу <span class="ref">1.8</span></a>,
                      додайте другу акцію, <code>goodbye</code>, що малює текст
                      “goodbye, world!”.<span class="intersentencespace"></span>
                      Відредагуйте файл маршрутів з <a href="#code-hello_root_route"
                        class="hyperref">Лістингу&nbsp;<span class="ref">1.10</span></a>,
                      щоб кореневий маршрут вів до <code>goodbye</code> замість
                      <code>hello</code> (<a href="#fig-goodbye_world" class="hyperref">Малюнок
                        <span class="ref">1.20</span></a>).<span class="intersentencespace"></span>
                    </li>
                  </ol>
                  <div class="center figure" id="_fig-hola_mundo" data-tralics-id="uid116"
                    data-number="1.19">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/hola_mundo.png"
                        alt="images/figures/hola_mundo"></div>
                    <div class="caption"><span class="header">Малюнок 1.19: </span><span
                        class="description">Зміна кореневого маршруту на
                        відображення “¡Hola, mundo!”. </span></div>
                  </div>
                  <div class="center figure" id="_fig-goodbye_world" data-tralics-id="uid117"
                    data-number="1.20">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/goodbye_world.png"
                        alt="images/figures/goodbye_world"></div>
                    <div class="caption"><span class="header">Малюнок 1.20: </span><span
                        class="description">Зміна кореневого маршруту, щоб
                        повертати “goodbye, world!”. </span></div>
                  </div>
                </div>
                <div id="cha-1_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-1_footnote-1">Найбільш сучасна версія <em>Ruby
                        on Rails Tutorial</em>може бути знайдена на сайті книжки
                      за адресою&nbsp; <a href="http://www.railstutorial.org/"
                        target="_blank">http://www.railstutorial.org/</a>.<span
                        class="intersentencespace"></span> Якщо ви читаєте цю
                      книжку офлайн, будьте впевнені, що перевірили&nbsp; <a href="http://www.railstutorial.org/book"
                        target="_blank">онлайн версію книжки Rails Tutorial</a>
                      за адресою <a href="http://www.railstutorial.org/book" target="_blank">http://www.railstutorial.org/book</a>,
                      щоб отримати останні оновлення.&nbsp;<a class="arrow" href="#cha-1_footnote-ref-1">↑</a></li>
                    <li id="_cha-1_footnote-2"><em>URI</em> означає Uniform
                      Resource Identifier, тоді як трохи менш загальне <em>URL</em>означає
                      Uniform Resource Locator.<span class="intersentencespace"></span>
                      На практиці, URL зазвичай є еквівалентом до “те річ, яку
                      ви бачите в адресному рядку вашого браузера”.&nbsp;<a class="arrow"
                        href="#cha-1_footnote-ref-2">↑</a></li>
                    <li id="_cha-1_footnote-3">http://tryruby.org/&nbsp;<a class="arrow"
                        href="#cha-1_footnote-ref-3">↑</a></li>
                    <li id="_cha-1_footnote-4">http://www.railstutorial.org/#help&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-4">↑</a></li>
                    <li id="_cha-1_footnote-5">Навіть коли і так, користувачі
                      Windows повинні бути попереджені, що встановлювач Rails,
                      рекомендований InstallRails, часто є простроченим, та,
                      дуже вірогідно, є несумісним з ціми настановами .&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-5">↑</a></li>
                    <li id="_cha-1_footnote-6">Наприклад, щоб знайти визначення
                      функції, названою <code>foo</code>, ви можете зробити
                      глобальний пошук для “def foo”.&nbsp;<a class="arrow" href="#cha-1_footnote-ref-6">↑</a></li>
                    <li id="_cha-1_footnote-7">https://c9.io/web/sign-up/free&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-7">↑</a></li>
                    <li id="_cha-1_footnote-8">Зараз Cloud9 включає старішу
                      версію Rails, не сумісну з даним підручником, що є однією
                      з причин, чому так важливо вітановити її самотужки.&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-8">↑</a></li>
                    <li id="_cha-1_footnote-9">Як зауважено в <a href="#table-shortcuts"
                        class="hyperref">Таблиці <span class="ref">3.1</span></a>,
                      ви можете навіть не вказувати&nbsp;<code>install</code>,
                      оскількі команда <code>bundle</code> сама по собі є
                      синонімом для <code>bundle install</code>.&nbsp;<a class="arrow"
                        href="#cha-1_footnote-ref-9">↑</a></li>
                    <li id="_cha-1_footnote-10">Зазвичай веб сайти роблять на
                      порту 80, але це звичайно потребує особливих прівелеїв,
                      так що є загально уживаним використовувати менш обмежені
                      вищі номери портів для серверів розробки. (Насправді,
                      налаштування багатьох систем вимагає, щоб номер
                      непрівелійованого порта був більше 1024. Але це обмеження
                      робить тільки для зовнішніх підключень: для доступу до
                      localhost це все не стосується. прим. перекладача).&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-10">↑</a></li>
                    <li id="_cha-1_footnote-11">Насправді це “Ctrl-c”— немає
                      потреби натискати клавішу Shift для отримання великої “C”—
                      але за якоїсь причини це завжди пишеться як
                      “Ctrl-C”.&nbsp;<a class="arrow" href="#cha-1_footnote-ref-11">↑</a></li>
                    <li id="_cha-1_footnote-12">Хоча ми ніколи не потребуємо
                      редагування його в цій&nbsp;книжці, приклад додавання
                      правил до файлу&nbsp; <code>.gitignore</code> є в <a href="#sec-guard"
                        class="hyperref">Розділі <span class="ref">3.7.3</span></a>,
                      що є частиною опціонального розширеного налагодження
                      тестування в <a href="#sec-advanced_testing_setup" class="hyperref">Розділі
                        <span class="ref">3.7</span></a>.&nbsp;<a class="arrow"
                        href="#cha-1_footnote-ref-12">↑</a></li>
                    <li id="_cha-1_footnote-13">Для зручного шляху візуалізації
                      репозитаріїв Git, погляньте на застосування <a href="http://www.sourcetreeapp.com/"
                        target="_blank">Atlassian’s SourceTree</a>.<span class="intersentencespace"></span>&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-13">↑</a></li>
                    <li id="_cha-1_footnote-14">Дивіться главу <a href="http://git-scm.com/book/en/git-branching"
                        target="_blank">Git Branching in <em>Pro Git</em></a>для
                      деталей.&nbsp;<a class="arrow" href="#cha-1_footnote-ref-14">↑</a></li>
                    <li id="_cha-1_footnote-15">Хоча це не має значення для
                      прикладів застосувань в <em>Rails Tutorial</em>, якщо ви
                      турбуєтесь щодо випадкового передчасного викладання вашого
                      застсування на публіку, є декілька опцій; дивіться <a href="#sec-heroku_commands"
                        class="hyperref">Розділ <span class="ref">1.5.4</span></a>
                      щоб отримату одну з них.&nbsp;<a class="arrow" href="#cha-1_footnote-ref-15">↑</a></li>
                    <li id="_cha-1_footnote-16">Вимовляється “Engine X”.&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-16">↑</a></li>
                    <li id="_cha-1_footnote-17">Загалом кажучі, є гарною ідеєю
                      для розробки та промислового оточення бути подібними як
                      можливо більше, що включає використання тієї ж бази даних,
                      але для потреб цього підручника ми завжди використовуємо
                      SQLite локально, та PostgreSQL у виробничому режимі.<span
                        class="intersentencespace"></span> Дивіться&nbsp; <a href="#sec-sample_app_setup"
                        class="hyperref">Розділ&nbsp; <span class="ref">3.1</span></a>
                      для додаткової інформації .&nbsp;<a class="arrow" href="#cha-1_footnote-ref-17">↑</a></li>
                    <li id="_cha-1_footnote-18">https://toolbelt.heroku.com/&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-18">↑</a></li>
                    <li id="_cha-1_footnote-19">http://www.railstutorial.org/#email&nbsp;<a
                        class="arrow" href="#cha-1_footnote-ref-19">↑</a></li>
                    <li id="_cha-1_footnote-20">Ваш редактор може відібражати
                      повідомлення, на кшталт “invalid multibyte character”, але
                      це не є причиною для турботи. Ви можете&nbsp;<a href="http://lmgtfy.com/?q=invalid+multibyte+character"
                        target="_blank">пошукати помилку в Google</a>, якщо ви
                      бажаєте знати, як зробити щоб вона зникла. <a class="arrow"
                        href="#cha-1_footnote-ref-20">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-a_toy_app" data-tralics-id="cid9" class="chapter"
                  data-number="2">
                  <h1><a name="cha-a_toy_app" class="heading hyperref"><span class="number">Глава
                        2 </span>Іграшкове застосування</a></h1>
                  <p>В цьому розділі ми розробимо ігршкове застосування, щоб
                    висвітити деякі потужні сторони Rails.<span class="intersentencespace"></span>
                    Ціллю є надати високорівневий огляд програмування на Ruby on
                    Rails (та веб розобки загалом), швидко генеруючи
                    застосування з викоританням&nbsp;<em>генераторів підпорок
                      (scaffold generators)</em>, що створює велику кількість
                    функціональності автоматично.<span class="intersentencespace"></span>
                    Як дискутується у <a href="#aside-scaffolding" class="hyperref">Врізці
                      <span class="ref">1.2</span></a>, решта книги буде
                    використовувати інший підхід, розробляючи приклад повного
                    застосування послідовно, та пояснюючи кожну нову концепцію,
                    що виникатиме. Але для швидкого огляду (та деякого
                    самозадоволення) для підпорок немає заміни. Отримана іграшка
                    буде дозволяти взаємодію з собою через URL, даючи розуміння
                    структури Rails застосування, включаючи перший приклад&nbsp;<em>архитектури
                      REST</em>, характерної для Rails.</p>
                  <p>Як і в випадку майбутнього застосування-приклада, іграшкове
                    застосування буде скаладатись <em>користувачів</em> та
                    асоційованих з ними <em>мікропостів</em> (таким чином це
                    буде мінімальський застосунок в стилі Twitter).<span class="intersentencespace"></span>
                    Функціональність буде повністю недоробленою, та багато
                    кроків будуть виглядати як магія, але не хвилюйтесь: повний
                    приклад буде розробляти подібне застосування з самого
                    початку, починаючи з&nbsp;<a href="#cha-static_pages" class="hyperref">Глави
                      <span class="ref">3</span></a>, та я буду провадити безліч
                    попередніх пояснень до подальшого матеріалу.<span class="intersentencespace"></span>
                    В найближчому майбутньому запасіться терпінням та трохи
                    довірою. Кінцеве призначення цього туторіала — вивести
                    вас&nbsp;<em>за межі</em> цього штучного, базованого на
                    підпорках, підоходу, щоб досягти глибшого розуміння Rails.</p>
                </div>
                <div id="_sec-planning_the_application" data-tralics-id="cid10"
                  class="section" data-number="2.1">
                  <h2><a href="#sec-planning_the_application" class="heading hyperref"><span
                        class="number">2.1 </span>Планування застосування</a></h2>
                  <p>В цьому розділі ми окреслимо наші плани для іграшкового
                    застосування. Як і в розділі <a href="#sec-the_hello_application"
                      class="hyperref">Розділі <span class="ref">1.3</span></a>,
                    ми почнемо з генерування скелету застосування,
                    використовуючи команду&nbsp;<code>rails new</code> з
                    особливою версією Rails:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> <span class="nb">cd</span> ~/workspace
<span class="gp">$</span> rails _4.2.0_ new toy_app
<span class="gp">$</span> <span class="nb">cd </span>toy_app/
</pre></div>
                  </div>
                  <p>Якщо команда вище повертає помилку на кшталт “Could not
                    find ’railties”’, це означає, що ви не маєте потрібної
                    встановленої версії Rails, та вам треба ще раз перевірити,
                    що ви слідували командам в&nbsp;<a href="#code-installing_rails"
                      class="hyperref">Лістингу <span class="ref">1.1</span></a>
                    буквально як написано.<span class="intersentencespace"></span>
                    (Якщо ви використовуєте хмарне IDE, як було рекомендовано в
                    <a href="#sec-development_environment" class="hyperref">Розділі
                      <span class="ref">1.2.1</span></a>, зауважте, що це друге
                    застосування може бути створене в тому ж робочому просторі,
                    що і перше.<span class="intersentencespace"></span> Немає
                    потреби створювати новий робочий простір. Щоб файли
                    з'явились вам, можливо, знадобиться клацтнути на іконці
                    механізму в полі файлового навігатора та обрати “Refresh
                    File Tree”.)</p>
                  <p>Далі ми використаємо тексторий редактор для оновлення
                    файлу&nbsp;<code>Gemfile</code> , оновивши компоненти,
                    потрібні для Bundler, як опказано в <a href="#code-demo_gemfile_sqlite_version_redux"
                      class="hyperref">Лістингу <span class="ref">2.1</span></a>.</p>
                  <div class="codelisting" id="_code-demo_gemfile_sqlite_version_redux"
                    data-tralics-id="uid118" data-number="2.1">
                    <div class="heading"><span class="number">Лістинг 2.1:</span>
                      Файл&nbsp;<span class="description"><code>Gemfile</code>
                        для іграшкового застосування.</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>        <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span><span class="p">,</span>   <span
class="s1">'5.0.1'</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span>     <span
class="s1">'2.5.3'</span>
<span class="n">gem</span> <span class="s1">'coffee-rails'</span><span class="p">,</span> <span
class="s1">'4.1.0'</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span><span class="p">,</span> <span
class="s1">'4.0.3'</span>
<span class="n">gem</span> <span class="s1">'turbolinks'</span><span class="p">,</span>   <span
class="s1">'2.3.0'</span>
<span class="n">gem</span> <span class="s1">'jbuilder'</span><span class="p">,</span>     <span
class="s1">'2.2.3'</span>
<span class="n">gem</span> <span class="s1">'sdoc'</span><span class="p">,</span>         <span
class="s1">'0.4.0'</span><span class="p">,</span> <span class="ss">group</span><span
class="p">:</span> <span class="ss">:doc</span>

<span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span
class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'sqlite3'</span><span class="p">,</span>     <span
class="s1">'1.3.9'</span>
  <span class="n">gem</span> <span class="s1">'byebug'</span><span class="p">,</span>      <span
class="s1">'3.4.0'</span>
  <span class="n">gem</span> <span class="s1">'web-console'</span><span class="p">,</span> <span
class="s1">'2.0.0.beta3'</span>
  <span class="n">gem</span> <span class="s1">'spring'</span><span class="p">,</span>      <span
class="s1">'1.1.3'</span>
<span class="k">end</span>

<span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'pg'</span><span class="p">,</span>             <span
class="s1">'0.17.1'</span>
  <span class="n">gem</span> <span class="s1">'rails_12factor'</span><span class="p">,</span> <span
class="s1">'0.0.2'</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>Зауважте, що <a href="#code-demo_gemfile_sqlite_version_redux"
                      class="hyperref">Лістинг <span class="ref">2.1</span></a>
                    ідентичний до&nbsp;<a href="#code-gemfile_pg_gem" class="hyperref">Лістингу
                      <span class="ref">1.14</span></a>.</p>
                  <p>Як і в <a href="#sec-heroku_setup" class="hyperref">Розділі
                      <span class="ref">1.5.1</span></a>, ми встановимо локальні
                    джеми, при цьому запобігаючи інсталяції виробничих джемів,
                    використовуючи опцію <span class="inline_verbatim">--without
                      production</span>:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> bundle install --without production
</pre></div>
                  </div>
                  <p>Нарешті, ми покладемо наше іграшкове застосування під
                    контроль версій&nbsp; за допомогою Git:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git init
<span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Initialize repository"</span>
</pre></div>
                  </div>
                  <p>Ви також повинні <a href="https://bitbucket.org/repo/create"
                      target="_blank">створити новий репозитарій</a>, клацнувши
                    кнопку “Create” на Bitbucket (<a href="#fig-create_demo_repository"
                      class="hyperref">Малюнок <span class="ref">2.1</span></a>),
та
                    потім просунути проект на віддалений репозитарій:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git remote add origin git@bitbucket.org:&lt;username&gt;/toy_app.git
<span class="gp">$</span> git push -u origin --all <span class="c"># просуває проект на сервер</span>
</pre></div>
                  </div>
                  <div class="center figure" id="_fig-create_demo_repository" data-tralics-id="uid119"
                    data-number="2.1">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/create_demo_repo_bitbucket.png"
                        alt="images/figures/create_demo_repo_bitbucket"></div>
                    <div class="caption"><span class="header">Малюнок 2.1: </span><span
                        class="description">Створення репозитарію іграшкового
                        застосування на Bitbucket. </span></div>
                  </div>
                  <p>Нарешті, ніколи не зарано для розгортання, так що я раджу
                    пройти кроки, такі як і для “hello, world!” <a href="#code-hello_action"
                      class="hyperref">Лістингу <span class="ref">1.8</span></a>
                    та <a href="#code-default_root_route" class="hyperref">Лістингу
                      <span class="ref">1.9</span></a>.<sup id="_cha-2_footnote-ref-1"
                      class="footnote"><a href="#cha-2_footnote-1">1</a></sup><span
                      class="intersentencespace"></span> Потім закріпіть зміни
                    та знову просуньте їх на Heroku:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git commit -am <span class="s2">"Add hello"</span>
<span class="gp">$</span> heroku create
<span class="gp">$</span> git push heroku master
</pre></div>
                  </div>
                  <p>(Як в <a href="#sec-deploying" class="hyperref">Розділі <span
                        class="ref">1.5</span></a>, ви можете побачити деякі
                    повідомлення застереження, що поки що ви можете ігнорувати.<span
                      class="intersentencespace"></span> Ми позбудемось від них
                    в <a href="#sec-professional_grade_deployment" class="hyperref">Розділі
                      <span class="ref">7.5</span></a>)<span class="intersentencespace"></span>.
                    Окрім адреси застосування Heroku, результат повинен бути
                    таким самим, що і на&nbsp;<a href="#fig-heroku_app" class="hyperref">Малюнку
                      <span class="ref">1.18</span></a>.</p>
                  <p>Тепер ми готові почати будувати саме застосування.<span class="intersentencespace"></span>
                    Типовий перший крок при побудові веб застосування - це
                    створення&nbsp;<em>моделі даних</em>, що є представленням
                    структур, що потрібні нашому застосуванню. В нашому випадку
                    іграшкове застосування є мікроблогом, де є тільки
                    користувачі та короткі (мікро)пости.<span class="intersentencespace"></span>
                    Таким чином ми почнемо з моделі для <em>користувачів</em>
                    застосування (<a href="#sec-modeling_demo_users" class="hyperref">Розділ
                      <span class="ref">2.1.1</span></a>), та потім ми додамо
                    модель для <em>мікропостів</em> (<a href="#sec-modeling_demo_microposts"
                      class="hyperref">Розділ <span class="ref">2.1.2</span></a>).</p>
                  <div id="_sec-modeling_demo_users" data-tralics-id="uid121" class="subsection"
                    data-number="2.1.1">
                    <h3><a href="#sec-modeling_demo_users" class="heading hyperref"><span
                          class="number">2.1.1 </span>Іграшкова модель для
                        користувачів</a></h3>
                    <p>Є багато виборів для моделі даних користувача, так, як і
                      є багато реєстраційних форм в веб; ми почнемо з вкрай
                      мінімалістичного підходу.<span class="intersentencespace"></span>
                      Користувачі нашого іграшкового застосування будуть мати
                      унікальний&nbsp;<code>цілий</code> ідентифікатор <code>id</code>,
                      публічне ім'я <code>name</code> (з типом <code>string</code>),
                      та адресу <code>email</code> (також як <code>string</code>),
                      що також буде і ім'ям користувача. Підсумовуючи, модель
                      даних для користувачів показана на&nbsp;<a href="#fig-demo_user_model"
                        class="hyperref">Малюнку <span class="ref">2.2</span></a>.</p>
                    <div class="center figure" id="_fig-demo_user_model" data-tralics-id="uid122"
                      data-number="2.2"><span class="graphics"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_user_model.png"
                          alt="demo_user_model"></span>
                      <div class="caption"><span class="header">Малюнок
                          2.2:&nbsp; Модель даних для користувачів</span><span class="description">.
                        </span></div>
                    </div>
                    <p>Як ми побачимо починаючи з <a href="#sec-database_migrations"
                        class="hyperref">Розділу&nbsp;<span class="ref">6.1.1</span></a>,
                      мітка <code>users</code> на <a href="#fig-demo_user_model"
                        class="hyperref">Малюнку <span class="ref">2.2</span></a>
                      відповідає до <em>таблиці<span style="color: #070707;"><span
                            style="font-family: Georgia,serif;"></span></span></em>
                      в базі даних, та атрибути <code>id</code>, <code>name</code>
                      та <code>email</code> є <em>ствпчиками </em>в цій
                      таблиці.</p>
                  </div>
                  <div id="_sec-modeling_demo_microposts" data-tralics-id="uid123"
                    class="subsection" data-number="2.1.2">
                    <h3><a href="#sec-modeling_demo_microposts" class="heading hyperref"><span
                          class="number">2.1.2 </span>Іграшкова модель для
                        мікропостів</a></h3>
                    <p>Ядро моделі даних для мікропостів є навіт простішим, ніж
                      для користувачів: мікропост має тільки поля&nbsp;<code>id</code>
                      та <code>content</code> для тексту мікропоста (з типом <code>text</code>).<sup
                        id="_cha-2_footnote-ref-2" class="footnote"><a href="#cha-2_footnote-2">2</a></sup><span
                        class="intersentencespace"></span> Однак є додаткове
                      ускладнення: ми бажаємо&nbsp;<em>асоціювати </em>кожний
                      мікропост з окремим користувачем.<span class="intersentencespace"></span>
                      Ми досягнемо цього, записуючи&nbsp;<code>user_id</code>
                      для власника посту. Результат показаний на&nbsp;<a href="#fig-demo_micropost_model"
                        class="hyperref">Малюнку <span class="ref">2.3</span></a>.</p>
                    <div class="center figure" id="_fig-demo_micropost_model" data-tralics-id="uid125"
                      data-number="2.3"><span class="graphics"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_micropost_model.png"
                          alt="demo_micropost_model"></span>
                      <div class="caption"><span class="header">Малюнок 2.3: </span><span
                          class="description">Модель даних для мікропостів. </span></div>
                    </div>
                    <p>Ми побачимо в <a href="#sec-demo_user_has_many_microposts"
                        class="hyperref">Розділі <span class="ref">2.3.3</span></a>
                      (та ще повніше в&nbsp;<a href="#cha-user_microposts" class="hyperref">Розділі
                        <span class="ref">11</span></a>), як цей атрибут <code>user_id</code>
                      дозволяє нам успішно відзеркалити той факт, що користувач
                      потенційно має багато асоційованих мікропостів.</p>
                  </div>
                </div>
                <div id="_sec-demo_users_resource" data-tralics-id="cid11" class="section"
                  data-number="2.2">
                  <h2><a href="#sec-demo_users_resource" class="heading hyperref"><span
                        class="number">2.2 </span>Ресурс Users</a></h2>
                  <p>В цьому розділі ми реалізуємо модель даних для користувачів
                    з <a href="#sec-modeling_demo_users" class="hyperref">Розділу
                      <span class="ref">2.1.1</span></a>, разом з веб
                    інтерфейсом для цієї моделі.<span class="intersentencespace"></span>
                    Комбінація буде складати <em>ресурс Users</em>, що
                    дозволить нам міркувати про користувачів, як про об'єкт, що
                    може бути створений, прочитаний, оновлений, та видалений
                    через веб по <a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
                      target="_blank">протоколу HTTP</a>.<span class="intersentencespace"></span>
                    Як ми і обіцяли у вступі, ресурс Users буде створено
                    програмою генерації підпорок, що стандартно іде з кожним
                    проектом Rails.<span class="intersentencespace"></span> Я
                    застерігаю вас не дуже придивлятись до згенерованого коду;
                    на цьому етапі це тільки прислужиться вашому збентеженню.</p>
                  <p>Підпорки Rails генеруються, передаючи команду&nbsp;<code>scaffold</code>
                    в скрипт <code>rails generate</code>.<span class="intersentencespace"></span>
                    Аргумент команди <code>scaffold</code> є сингулярною
                    версією імені ресурсу (в цьому випадку <code>User</code>),
                    разом з опціональними параметрами для атрибутів моделі
                    даних:<sup id="_cha-2_footnote-ref-3" class="footnote"><a href="#cha-2_footnote-3">3</a></sup></p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="hll">$ rails generate scaffold User name:string email:string
</span>      invoke  active_record
      create    db/migrate/20140821011110_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
      invoke  resource_route
       route    resources :users
      invoke  scaffold_controller
      create    app/controllers/users_controller.rb
      invoke    erb
      create      app/views/users
      create      app/views/users/index.html.erb
      create      app/views/users/edit.html.erb
      create      app/views/users/show.html.erb
      create      app/views/users/new.html.erb
      create      app/views/users/_form.html.erb
      invoke    test_unit
      create      test/controllers/users_controller_test.rb
      invoke    helper
      create      app/helpers/users_helper.rb
      invoke      test_unit
      create        test/helpers/users_helper_test.rb
      invoke    jbuilder
      create      app/views/users/index.json.jbuilder
      create      app/views/users/show.json.jbuilder
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/users.js.coffee
      invoke    scss
      create      app/assets/stylesheets/users.css.scss
      invoke  scss
      create    app/assets/stylesheets/scaffolds.css.scss
</pre></div>
                  </div>
                  <p>Включаючи <code>name:string</code> та <code>email:string</code>,
                    ми створили для моделі User форму, відображену на <a href="#fig-demo_user_model"
                      class="hyperref">Малюнку <span class="ref">2.2</span></a>.<span
                      class="intersentencespace"></span> (Зауважте, що ми не
                    включили параметр для&nbsp;<code>id</code>; він створений
                    автоматично самим Rails, щоб використовуватись як&nbsp;<em>первинний
                      ключ</em> в базі даних).</p>
                  <p>Щоб просунути іграшкове застосування, спочатку нам треба <em>мігрувати</em>
                    базу даних за допомогою&nbsp;<em>Rake</em> (<a href="#aside-rake"
                      class="hyperref">Врізка <span class="ref">2.1</span></a>):</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="hll">$ bundle exec rake db:migrate
</span>==  CreateUsers: migrating ====================================================
-- create_table(:users)
   -&gt; 0.0017s
==  CreateUsers: migrated (0.0018s) ===========================================
</pre></div>
                  </div>
                  <p>Це просто оновлює базу даних новою моделлю&nbsp;<code>users</code>.<span
                      class="intersentencespace"></span> (Ми вивчимо більше щодо
                    міграції баз даних починаючи з&nbsp;<a href="#sec-database_migrations"
                      class="hyperref">Розділу&nbsp;<span class="ref">6.1.1</span></a>).
                    Зауважте, що для впевненості, що команда використовує версію
                    Rake, що відповідає нашому <code>Gemfile</code>, ми
                    потребуємо виконати <code>rake</code> з використанням <code>bundle
                      exec</code>.<span class="intersentencespace"></span> На
                    багатьох системах, включаючи хмарне IDE, ви можете оминути <code>bundle
                      exec</code>, але це потрібно на деяких системах, так що я
                    включаю це для повноти викладання.</p>
                  Маючи це, ми можемо виконати локальний сервер на окремій
                  вкладинці (<a href="#fig-rails_server_new_tab" class="hyperref">Малюнок
                    <span class="ref">1.7</span></a>) наступним чином:<sup id="_cha-2_footnote-ref-4"
                    class="footnote"><a href="#cha-2_footnote-4">4</a></sup>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> rails server -b <span class="nv">$IP</span> -p <span
class="nv">$PORT</span> <span class="c"># Якщо ви не на хмарі, виконуйте `rails server`</span></pre>
                    </div>
                  </div>
                  <p>Тепер іграшкове застосування повинне бути доступне на
                    локальному сервері як описано в <a href="#sec-rails_server"
                      class="hyperref">Розділі <span class="ref">1.3.2</span></a>.<span
                      class="intersentencespace"></span> (Якщо ви використовуєте
                    хмарне IDE, переконайтесь, що отриманий сервер розробки
                    відкривається в новій вкладинці <em>переглядача</em>, а не
                    в самому IDE).</p>
                  <div class="aside" id="_aside-rake" data-tralics-id="uid128" data-number="2.1">
                    <div class="heading"><span class="number">Врізка 2.1.</span>
                      <span class="description">Rake</span></div>
                    <p>В традиції Unix, утіліта <a href="http://en.wikipedia.org/wiki/Make_%28software%29"
                        target="_blank"><em>make</em></a> відігравала важливу
                      роль в побудові виконавчих програм з первинного коду;
                      багато хакерів на рівні мускульної пам'яті запам'ятали
                      рядок</p>
                    <pre>  $ ./configure &amp;&amp; make &amp;&amp; sudo make install</pre>
                    <p>що має загальне використання для користування коду Unix
                      систем (включаючи&nbsp; Linux та Mac OS&nbsp;X).</p>
                    <p>Rake - це <em>Ruby make</em>, make-подібна мова,
                      написана на Ruby. Rails <span class="intersentencespace"></span>екстенсивно
                      використовує Rake, особливо для незчісленних малих
                      адміністративних завдань, потрібних для розробки веб
                      застосунків з підтримкою баз даних.<span class="intersentencespace"></span>
                      Команда <code>rake db:migrate</code> вірогідно є найбільш
                      загальною, та є багато інших; Ви можете бачати перелік
                      завдань баз даних виконавши <code>-T db</code>:</p>
                    <pre>  $ bundle exec rake -T db</pre>
                    <p>Щоб побачити всі можливі завдання, виконайте</p>
                    <pre>  $ bundle exec rake -T</pre>
                    <p>Список буде приголомшливим, але не хвилюйтесь, ви не
                      повинні знати всі (або навіть більшість) з ціх команд.<span
                        class="intersentencespace"></span> До кінця&nbsp;<em>Rails
                        Tutorial</em> ви будете знати більшість важливих команд.
                    </p>
                  </div>
                  <div id="_sec-a_user_tour" data-tralics-id="uid129" class="subsection"
                    data-number="2.2.1">
                    <h3><a href="#sec-a_user_tour" class="heading hyperref"><span
                          class="number">2.2.1 </span>Тур по користувачам</a></h3>
                    <p>Якщо ви зайдете на кореневий URL по / (читається “слеш”
                      або <em>коса лінія</em>, як зазначено в <a href="#sec-hello_world"
                        class="hyperref">Розділі <span class="ref">1.3.4</span></a>),
                      ми отримаємо ту ж саму сторінку Rails по замовчанню,
                      показану на <a href="#fig-riding_rails" class="hyperref">Малюнку
                        <span class="ref">1.9</span></a>, але в генерації
                      підпорок для ресурсу Users ми також створили велику
                      кількість сторінок для маніпулювання користувачами.<span class="intersentencespace"></span>
                      Наприклад, сторінка для переліку всіх користувачів
                      знаходиться на <a href="http://localhost:3000/users" target="_blank">/users</a>,
                      та сторінка для створення нового користувача на <a href="http://localhost:3000/users/new"
                        target="_blank">/users/new</a>.<span class="intersentencespace"></span>
                      Залишок цього розділу присвячений карколомному туру по цім
                      сторінках. По мірі просування може допомогти посилання
                      на&nbsp;<a href="#table-user_urls" class="hyperref">Таблицю
                        <span class="ref">2.1</span></a>, що показує
                      відповідність між сторінками та URL.</p>
                    <div class="table" id="_table-user_urls" data-tralics-id="uid130"
                      data-number="2.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Дія</strong></td>
                            <td class="align_left"><strong>Призначення</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><a href="http://localhost:3000/users"
                                target="_blank">/users</a></td>
                            <td class="align_left"><code>index</code></td>
                            <td class="align_left">перелік всіх користувачів</td>
                          </tr>
                          <tr>
                            <td class="align_left"><a href="http://localhost:3000/users/1"
                                target="_blank">/users/1</a></td>
                            <td class="align_left"><code>show</code></td>
                            <td class="align_left">сторінка для відображення
                              кристувача з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><a href="http://localhost:3000/users/new"
                                target="_blank">/users/new</a></td>
                            <td class="align_left"><code>new</code></td>
                            <td class="align_left">сторінка для створення нового
                              користувача</td>
                          </tr>
                          <tr>
                            <td class="align_left"><a href="http://localhost:3000/users/1/edit"
                                target="_blank">/users/1/edit</a></td>
                            <td class="align_left"><code>edit</code></td>
                            <td class="align_left">сторінка для редагування
                              користувача з id <code>1</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Таблиця 2.1: </span><span
                          class="description">Відповідність між сторінками та
                          URL для ресурсу Users. </span></div>
                    </div>
                    <p>Ми почали з сторінки, що відображує всіх користувачів в
                      нашому застосуванні, що називається&nbsp;<a href="http://localhost:3000/users"
                        target="_blank"><span class="tt">index</span></a>; як
                      ми, можливо, очікували, спочатку немає жодних користувачів
                      (<a href="#fig-demo_blank_user_index_rails_3" class="hyperref">Малюнок
                        <span class="ref">2.4</span></a>).</p>
                    <div class="center figure" id="_fig-demo_blank_user_index_rails_3"
                      data-tralics-id="uid131" data-number="2.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_blank_user_index_3rd_edition.png"
                          alt="images/figures/demo_blank_user_index_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.4: </span><span
                          class="description">Початкова сторінка index для
                          ресурсу Users (<a href="http://localhost:3000/users" target="_blank">/users</a>).
                          </span></div> </div>
                    <p>Щоб створити нового користувача, ми заходимо на
                      сторінку&nbsp;<a href="http://localhost:3000/users/new" target="_blank"><span
                          class="tt">new</span></a>, як показано на <a href="#fig-demo_new_user_rails_3"
                        class="hyperref">Малюнку <span class="ref">2.5</span></a>.<span
                        class="intersentencespace"></span> (Оскільки
                      http://0.0.0.0:3000 або частина адреси в хмарній IDE є
                      неявною, коли ми розробляємо локально, відтепер я буду
                      випускати її).<span class="intersentencespace"></span> В <a
                        href="#cha-sign_up" class="hyperref">Главі <span class="ref">7</span></a>,
                      це перетвориться в сторінку реєстрації користувача.</p>
                    <div class="center figure" id="_fig-demo_new_user_rails_3" data-tralics-id="uid132"
                      data-number="2.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_new_user_3rd_edition.png"
                          alt="images/figures/demo_new_user_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.5: </span><span
                          class="description">Нова сторінка користувача (<a href="http://localhost:3000/users/new"
                            target="_blank">/users/new</a>). </span></div>
                    </div>
                    <p>Ми можемо створити користувача, ввівши значення ім'я та електронної
                      пошти, на потім натиснувши на кнопку Create User.<span class="intersentencespace"></span>
                      Результатом буде сторінка користувача&nbsp;<a href="http://localhost:3000/users/1"
                        target="_blank"><span class="tt">show</span></a>, як
                      показано на <a href="#fig-demo_show_user_rails_3" class="hyperref">Малюнку
                        <span class="ref">2.6</span></a>.<span class="intersentencespace"></span>
                      (Зелене повідомлення привітання зроблене з використанням <em>flash</em>,
                      який ми вивчимо в <a href="#sec-the_flash" class="hyperref">Розділі
                        <span class="ref">7.4.2</span></a>.)<span class="intersentencespace"></span>
                      Зауважте, що URL є <a href="http://localhost:3000/users/1"
                        target="_blank">/users/1</a>; як ви могли підозрювати,
                      число <code>1</code> є просто атрибут <code>id</code>
                      користувача з <a href="#fig-demo_user_model" class="hyperref">Малюнка
                        <span class="ref">2.2</span></a>.<span class="intersentencespace"></span>
                      В&nbsp; <a href="#sec-showing_users" class="hyperref">Розділі
                        <span class="ref">7.1</span></a> ця сторінка
                      перетвориться на профіль користувача.</p>
                    <div class="center figure" id="_fig-demo_show_user_rails_3"
                      data-tralics-id="uid133" data-number="2.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_show_user_3rd_edition.png"
                          alt="images/figures/demo_show_user_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.6: </span><span
                          class="description">Сторінка відображує дані про
                          користувача (<a href="http://localhost:3000/users/1" target="_blank">/users/1</a>).
                          </span></div> </div>
                    <p>Щоб змінити інформацію про користувача, ми завітаємо на
                      сторінку <a href="http://localhost:3000/users/1/edit" target="_blank"><span
                          class="tt">edit</span></a> (<a href="#fig-demo_edit_user_rails_3"
                        class="hyperref">Малюнок <span class="ref">2.7</span></a>).<span
                        class="intersentencespace"></span> Модифікуючи
                      інформацію про користувача ми натискаємо на кнопку Update
                      User, та так змінюємо інформацію щодо користувача в
                      іграшковому застосуванні (<a href="#fig-demo_update_user_rails_3"
                        class="hyperref">Малюнок <span class="ref">2.8</span></a>).<span
                        class="intersentencespace"></span> (Як ми побачимо в
                      деталях в <a href="#cha-modeling_users" class="hyperref">Розділі
                        <span class="ref">6</span></a>, Ці дані зберігаються в
                      базі даних).<span class="intersentencespace"></span> Ми
                      додамо функціонал редагування/оновлення до простого
                      застосування в&nbsp;<a href="#sec-updating_users" class="hyperref">Розділі
                        <span class="ref">9.1</span></a>.</p>
                    <div class="center figure" id="_fig-demo_edit_user_rails_3"
                      data-tralics-id="uid134" data-number="2.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_edit_user_3rd_edition.png"
                          alt="images/figures/demo_edit_user_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.7: </span><span
                          class="description">Сторінка редагування користувача (<a
                            href="http://localhost:3000/users/1/edit" target="_blank">/users/1/edit</a>).
                          </span></div> </div>
                    <div class="center figure" id="_fig-demo_update_user_rails_3"
                      data-tralics-id="uid135" data-number="2.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_update_user_3rd_edition.png"
                          alt="images/figures/demo_update_user_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.8: </span><span
                          class="description">Користувач з оновленою інформацією.
                        </span></div>
                    </div>
                    <p>Тепер ми створими другого користувача, знову навідавшись
                      на сторінку <a href="http://localhost:3000/users/new" target="_blank"><span
                          class="tt">new</span></a>, та ввівши другий набір
                      інформації користувача; утворена сторінка користувача <a
                        href="http://localhost:3000/users" target="_blank"><span
                          class="tt">index</span></a> показана на&nbsp;<a href="#fig-demo_user_index_two_rails_3"
                        class="hyperref">Малюнку <span class="ref">2.9</span></a>.<span
                        class="intersentencespace"></span> <a href="#sec-showing_users"
                        class="hyperref">Розділ <span class="ref">7.1</span></a>
                      присвячений розробці списку користувачів в більш
                      відполірованому стилі, де відображатимуться всі
                      користувачі.</p>
                    <div class="center figure" id="_fig-demo_user_index_two_rails_3"
                      data-tralics-id="uid136" data-number="2.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_user_index_two_3rd_edition.png"
                          alt="images/figures/demo_user_index_two_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.9: </span><span
                          class="description">Сторінка списку користувачів (<a href="http://localhost:3000/users"
                            target="_blank">/users</a>) з другим користувачем. </span></div>
                    </div>
                    <p>Показавши, як створювати, відображати та редагувати
                      користувачів, ми нарешті дійшли до їх знищення (<a href="#fig-demo_destroy_user"
                        class="hyperref">Малюнок <span class="ref">2.10</span></a>).<span
                        class="intersentencespace"></span>Ви повинні перевірити,
                      що клацнувши на посиланні на <a href="#fig-demo_destroy_user"
                        class="hyperref">Малюнку <span class="ref">2.10</span></a>
                      знищить другого користувача, залишивши тілько одного в
                      списку. (Якщо це не працює, переконайтесь, що JavaScript
                      ввімкнено в вашому переглядачеві; Rails використовує
                      JavaScript, щоб віддавати запити, потрібні для знищення
                      користувача)<span class="intersentencespace"></span>. <a
                        href="#sec-deleting_users" class="hyperref">Розділ <span
                          class="ref">9.4</span></a> додає видалення користувача
                      до простого застосування, пілкуючись про його використання
                      окремим класом адміністративних користувачів.</p>
                    <div class="center figure" id="_fig-demo_destroy_user" data-tralics-id="uid137"
                      data-number="2.10">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_destroy_user_3rd_edition.png"
                          alt="images/figures/demo_destroy_user_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.10: </span><span
                          class="description">Видалення користувача. </span></div>
                    </div>
                  </div>
                  <div id="_sec-mvc_in_action" data-tralics-id="uid138" class="subsection"
                    data-number="2.2.2">
                    <h3><a href="#sec-mvc_in_action" class="heading hyperref"><span
                          class="number">2.2.2 </span>MVC в дії<br>
                      </a></h3>
                    <p>Тепер, коли ми закінчили швидкий огляд ресурсу Users,
                      давайте перевіримо одну окрему його частину в контексті
                      шаблону Model-View-Controller (MVC), що ми розглядали в <a
                        href="#sec-mvc" class="hyperref">Розділі <span class="ref">1.3.3</span></a>.<span
                        class="intersentencespace"></span> Наша стратегія буде
                      описати результати типового влучання переглядача — візит
                      до списку користувачів на <a href="http://localhost:3000/users"
                        target="_blank">/users</a>—в термінах&nbsp; MVC (<a href="#fig-mvc_detailed"
                        class="hyperref">Малюнок <span class="ref">2.11</span></a>).</p>
                    <div class="center figure" id="_fig-mvc_detailed" data-tralics-id="uid139"
                      data-number="2.11">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/mvc_detailed.png"
                          alt="images/figures/mvc_detailed"></div>
                      <div class="caption"><span class="header">Малюнок 2.11: </span><span
                          class="description">Деталізована діаграма MVC в Rails.
                        </span></div>
                    </div>
                    <p>Ось підсумок кроків, показаних на <a href="#fig-mvc_detailed"
                        class="hyperref">Малюнку <span class="ref">2.11</span></a>:</p>
                    <ol>
                      <li>Переглядач віддає запит для URL /users.</li>
                      <li>Rails маршрутизує /users до акції&nbsp;<code>index</code>
                        в контролері Users.<span class="intersentencespace"></span>
                      </li>
                      <li>Акція <code>index</code> запитує модель User щоб
                        отримати всіх користувачів (<code>User.all</code>).<span
                          class="intersentencespace"></span> </li>
                      <li>Модель User підтягує всіх користувачів з бази даних.<span
                          class="intersentencespace"></span> </li>
                      <li>Модель User повертає список користувачів в контролер.<span
                          class="intersentencespace"></span> </li>
                      <li>Контролер захоплює користувачів в змінній <code>@users</code>,
                        що передається до перегляду <code>index</code>.<span class="intersentencespace"></span>
                      </li>
                      <li>Перегляд використовує вбудований Ruby для малювання
                        сторінки як HTML. </li>
                      <li>Контролер передає HTML назад в переглядач.<sup id="_cha-2_footnote-ref-5"
                          class="footnote"><a href="#cha-2_footnote-5">5</a></sup>
                      </li>
                    </ol>
                    <p>Тепер давайте поглянемо на перелічені кроки більш детально.<span
                        class="intersentencespace"></span> Ми починаємо з запиту,
                      що походить від переглядача — тобто, результат набору URL
                      в адресному рядку або клацання по посиланню (Step 1 на <a
                        href="#fig-mvc_detailed" class="hyperref">Малюнку <span
                          class="ref">2.11</span></a>).<span class="intersentencespace"></span>
                      Цей запит потрапляє до&nbsp;<em>маршрутизатора Rails</em>
                      (Step&nbsp;2), що пересилає його до відповідної <em>дії
                        контролера</em> базуючись на URL (та, як ми побачимо у <a
                        href="#aside-get_etc" class="hyperref">Врізці <span class="ref">3.2</span></a>,
                      типі запиту).<span class="intersentencespace"></span> Код,
                      що створює відображення користувацьких URL на дії
                      контролера для ресурсу Usersпоказано в&nbsp; <a href="#code-rails_routes"
                        class="hyperref">Лістингу <span class="ref">2.2</span></a>;
                      цей код ефективно встановлює таблицю пар URL/дія, що
                      показана в&nbsp;<a href="#table-user_urls" class="hyperref">Таблиці
                        <span class="ref">2.1</span></a>.<span class="intersentencespace"></span>
                      (Дивна нотація <code>:users</code> є <em>символом</em>,
                      що ми вивчимо в <a href="#sec-hashes_and_symbols" class="hyperref">Розділі
                        <span class="ref">4.3.3</span></a>.)</p>
                    <div class="codelisting" id="_code-rails_routes" data-tralics-id="uid149"
                      data-number="2.2">
                      <div class="heading"><span class="number">Лістинг 2.2:</span>
                        Маршрути <span class="description">Rails, з правилами
                          для ресурсу Users.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:users</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Покі ми дивимось на файл маршрутів, давайте улучимо
                      момент, та асоціюємо кореневий маршрут зі списком
                      користувачів,
                      так щоб “коса” вела до /users.<span class="intersentencespace"></span>
                      Дивіться що ми змінюємо відносно <a href="#code-hello_root_route"
                        class="hyperref">Лістингу <span class="ref">1.10</span></a></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># root 'welcome#index'</span>
</pre></div>
                    </div>
                    <p>на наступне</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">root</span> <span class="s1">'application#hello'</span>
</pre></div>
                    </div>
                    <p>Таким чином кореневий маршрут приведе до дії <code>hello</code>
                      контролеру Application.<span class="intersentencespace"></span>
                      В попередньому випадку ми бажаємо використовувати дію <code>index</code>
                      в контролері Users, що ми можемо оброблити з використанням
                      коду з&nbsp;<a href="#code-rails_routes_root_route" class="hyperref">Лістингу
                        <span class="ref">2.3</span></a>.<span class="intersentencespace"></span>
                      (На цей момент я також рекомендую видалити дію&nbsp;<code>hello</code>
                      з контрелера Application, якщо ви додали її на початку
                      цього розділу).</p>
                    <div class="codelisting" id="_code-rails_routes_root_route"
                      data-tralics-id="uid150" data-number="2.3">
                      <div class="heading"><span class="number">Лістинг 2.3:</span>
                        Додавання кореневого маршруту для користувачів<span class="description">.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">resources</span> <span class="ss">:users</span>
<span class="hll">  <span class="n">root</span> <span class="s1">'users#index'</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Сторінки, показані в турі <a href="#sec-a_user_tour" class="hyperref">Розділу
                        <span class="ref">2.2.1</span></a> відповідають <em>діям</em>
                      в контролері Users<em></em>, що є набором пов'язаних дій.<span
                        class="intersentencespace"></span> Контролер,
                      згенерований підпорками, схематично показаний на <a href="#code-demo_users_controller"
                        class="hyperref">Лістингу <span class="ref">2.4</span></a>.<span
                        class="intersentencespace"></span> Зауважте нотацію <code>class
                        UsersController &lt; ApplicationController</code>, що є
                      прикладом&nbsp; Ruby <em>класу</em> з<em>наслідуванням</em>.<span
                        class="intersentencespace"></span> (Ми обсудимо
                      наслідування поверхнево в <a href="#sec-inheritance_hierarchies"
                        class="hyperref">Розділі <span class="ref">2.3.4</span></a>
                      та&nbsp; накриємо обоє теми більш детально в <a href="#sec-ruby_classes"
                        class="hyperref">Розділі <span class="ref">4.4</span></a>.)</p>
                    <div class="codelisting" id="_code-demo_users_controller" data-tralics-id="uid151"
                      data-number="2.4">
                      <div class="heading"><span class="number">Лістинг 2.4:</span>
                        Контролер <span class="description">Users в схематичній
                          формі.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">index</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Ви можете зауважити, що є більше дій, ніж сторінок; дії <code>index</code>,
                      <code>show</code>, <code>new</code> та <code>edit</code>
                      всі відповідають сторінкам з <a href="#sec-a_user_tour" class="hyperref">Розділу
                        <span class="ref">2.2.1</span></a>, але також є
                      додаткові дій <code>create</code>, <code>update</code>
                      та <code>destroy</code>.<span class="intersentencespace"></span>
                      Ці дії типово не рисують сторінки (хоча вони можуть);
                      замість цього їх головне призначення модифікувати
                      інформацію щодо користувачів в базі даних.<span class="intersentencespace"></span>
                      Це повний набір дій користувачів, підсумованих в <a href="#table-demo_RESTful_users"
                        class="hyperref">Таблиці <span class="ref">2.2</span></a>,
                      представляє реалізацію REST архітектури в Rails (<a href="#aside-REST"
                        class="hyperref">Врізка <span class="ref">2.2</span></a>),
                      що базується на ідеях <em>представницької передачі стану</em>
                      сформульовану та названу ком'ютерним дослідником&nbsp;<a href="http://en.wikipedia.org/wiki/Roy_Fielding"
                        target="_blank">Roy Fielding</a>.<sup id="_cha-2_footnote-ref-6"
                        class="footnote"><a href="#cha-2_footnote-6">6</a></sup><span
                        class="intersentencespace"></span> Зауважте з таблиці <a
                        href="#table-demo_RESTful_users" class="hyperref">Таблиці
                        <span class="ref">2.2</span></a> що є деяке перекриття
                      URL; наприклад, обоє дії з користувачами, <code>show</code>
                      та <code>update</code> відповідають до URL /users/1. Різниця
                      між ними є <a href="http://en.wikipedia.org/wiki/HTTP_request#Request_methods"
                        target="_blank">метод запиту HTTP</a> , на який вони
                      відповідають.<span class="intersentencespace"></span> Ми
                      познайомимось з запитами HTTP починаючи з <a href="#sec-getting_started_with_testing"
                        class="hyperref">Розділу <span class="ref">3.3</span></a>.</p>
                    <div class="table" id="_table-demo_RESTful_users" data-tralics-id="uid153"
                      data-number="2.2">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>HTTP запит</strong></td>
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Дія</strong></td>
                            <td class="align_left"><strong>Призначення</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users</td>
                            <td class="align_left"><code>index</code></td>
                            <td class="align_left">сторінка для переліку всіх
                              користувачів</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/1</td>
                            <td class="align_left"><code>show</code></td>
                            <td class="align_left">сторінка для відображення
                              користувача з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/new</td>
                            <td class="align_left"><code>new</code></td>
                            <td class="align_left">сторінка щоб створити нового
                              користувача</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">POST</span></td>
                            <td class="align_left">/users</td>
                            <td class="align_left"><code>create</code></td>
                            <td class="align_left">створити нового користувача</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/1/edit</td>
                            <td class="align_left"><code>edit</code></td>
                            <td class="align_left">сторінка для редагування
                              користувача з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">PATCH</span></td>
                            <td class="align_left">/users/1</td>
                            <td class="align_left"><code>update</code></td>
                            <td class="align_left">оновити користувача з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">DELETE</span></td>
                            <td class="align_left">/users/1</td>
                            <td class="align_left"><code>destroy</code></td>
                            <td class="align_left">видалити користувача з id <code>1</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 2.2: </span><span
                          class="description">RESTful routes provided by the
                          Users resource in <a href="#code-rails_routes" class="hyperref">Listing&nbsp;<span
                              class="ref">2.2</span></a>. </span></div>
                    </div>
                    <div class="aside" id="_aside-REST" data-tralics-id="uid154"
                      data-number="2.2">
                      <div class="heading"><span class="number">Врізка 2.2.</span>
                        <span class="description">REpresentational State
                          Transfer (REST)</span></div>
                      <p>Якщо ви читаєте більше про веб розробку на Ruby on
                        Rails, ви побачите багато посилань на “REST”, що є
                        акронімом від REpresentational State Transfer.<span class="intersentencespace"></span>
                        REST є архитектурним стилем для розробки розгалужених,
                        мережевих систем та програмних застосувань, таких, як
                        World Wide Web та веб застосування.<span class="intersentencespace"></span>
                        Хоча теорія REST є дещо абстрактною, в контексті Rails
                        застосувань REST означає, що більшість компонент
                        застосування (такі, як користувачі або мікропости)
                        моделюються як&nbsp;<em>ресурси</em>, що можуть бути
                        створені, прочитані, оновлені та видалені — операції, що
                        відповідають обом, <a href="http://en.wikipedia.org/wiki/Create,_read,_update_and_delete"
                          target="_blank">CRUD операціям реляційних баз даних</a>
                        та чотирьом фундаментальним <a href="http://en.wikipedia.org/wiki/HTTP_request#Request_methods"
                          target="_blank">методам запитів HTTP</a>: <span class="tt">POST</span>,
                        <span class="tt">GET</span>, <span class="tt">PATCH</span>
                        та <span class="tt">DELETE</span>.<sup id="_cha-2_footnote-ref-7"
                          class="footnote"><a href="#cha-2_footnote-7">7</a></sup><span
                          class="intersentencespace"></span> (Ми вивчимо більше
                        про HTTP в <a href="#sec-getting_started_with_testing"
                          class="hyperref">Розділі <span class="ref">3.3</span></a>
                        та особливо <a href="#aside-get_etc" class="hyperref">Врізці
                          <span class="ref">3.2</span></a>.)</p>
                      <p>Як для розробника Rails застосувань, RESTful стиль
                        розробки допоможе вам зробити вибір щодо того, які
                        конролери та дії писати: ви просто структуруєте
                        застосування з використанням ресурсів, що можна
                        створити, прочитати, оновити та видалити.<span class="intersentencespace"></span>
                        В випадку користувачів та мікропостів цей процес
                        прямолінійний, оскільки вони природно є ресурсами самі
                        по собі. В&nbsp;<a href="#cha-following_users" class="hyperref">Главі
                          <span class="ref">12</span></a> ми побачимо приклад,
                        де принципи REST дозволяють нам змоделювати тонкіші
                        проблеми, “слідування користувачів”, в природний та
                        зручний спосіб.</p>
                    </div>
                    <p>Щоб дослідити відношення між контролером Users та моделлю
                      User, давайте сфокусуємось на спрощеній версії дії&nbsp;<code>index</code>,
                      показаній на&nbsp;<a href="#code-demo_index_action" class="hyperref">Лістингу
                        <span class="ref">2.5</span></a>.<span class="intersentencespace"></span>
                      (Код підпорок огидний та збентежуючий, так що я не
                      показиватиму його).</p>
                    <div class="codelisting" id="_code-demo_index_action" data-tralics-id="uid156"
                      data-number="2.5">
                      <div class="heading"><span class="number">Лістинг 2.5:</span>
                        Спрощена дія користувача&nbsp;<span class="description"><code>index</code>
                          для іграшкового застосування.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">index</span>
<span class="hll">    <span class="vi">@users</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">all</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Ця дія&nbsp;<code>index</code> має рядок <code>@users =
                        User.all</code> (Step&nbsp;3 на <a href="#fig-mvc_detailed"
                        class="hyperref">Малюнку <span class="ref">2.11</span></a>),
що
                      змушує модель User отримати перелік всіх користувачів з
                      бази даних (Step&nbsp;4), т опотім розташувати їх в
                      змінній&nbsp;<code>@users</code> (вимовляється “ет-юзерс”)
                      (Step&nbsp;5).<span class="intersentencespace"></span>
                      Модель User сама по собі з'являється у&nbsp;<a href="#code-demo_user_model"
                        class="hyperref">Лістингу <span class="ref">2.6</span></a>;
                      хоча вона досить пласка, вона іде оздоблена великою
                      кількістю функціональності завдяки наслідуванню (<a href="#sec-inheritance_hierarchies"
                        class="hyperref">Розділ <span class="ref">2.3.4</span></a>
                      та <a href="#sec-ruby_classes" class="hyperref">Розділ <span
                          class="ref">4.4</span></a>).<span class="intersentencespace"></span>
                      Зокрема, з використанню бібліотеки Rails з назвою <em>Active
                        Record</em>, код в <a href="#code-demo_user_model" class="hyperref">Лістингу
                        <span class="ref">2.6</span></a> розуміє <code>User.all</code>
                      для повернення всіх користувачів з бази даних.</p>
                    <div class="codelisting" id="_code-demo_user_model" data-tralics-id="uid157"
                      data-number="2.6">
                      <div class="heading"><span class="number">Лістинг 2.6:</span>
                        Модель <span class="description">User для іграшкового
                          застосування.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Як тільки змінна&nbsp;<code>@users</code> визначена,
                      контролер викликає&nbsp;<em>view</em> (Step&nbsp;6),
                      показаний в <a href="#code-demo_index_view" class="hyperref">Лістингу
                        <span class="ref">2.7</span></a>.<span class="intersentencespace"></span>
                      Змінні, що починаються зі знаку <code>@</code>,
                      називаються <em>змінними екземпляру</em>, та автоматично
                      доступні для переглядів; в цьому випадку перегляд&nbsp; <code>index.html.erb</code>
                      в&nbsp;<a href="#code-demo_index_view" class="hyperref">Лістингу
                        <span class="ref">2.7</span></a> ітерує по списку <code>@users</code>
                      та виводить рядок HTML для кожного елементу.<span class="intersentencespace"></span>
                      (Пам'ятайте, ви не маєте розуміти цей код прямо зараз.<span
                        class="intersentencespace"></span> Він показаний тільки
                      для цілей ілюстрації).</p>
                    <div class="codelisting" id="_code-demo_index_view" data-tralics-id="uid158"
                      data-number="2.7">
                      <div class="heading"><span class="number">Лістинг 2.7:</span>
                        <span class="description">Перегляд view для списку
                          користувачів.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/index.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>Listing users<span
class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;table&gt;</span>
  <span class="nt">&lt;thead&gt;</span>
    <span class="nt">&lt;tr&gt;</span>
      <span class="nt">&lt;th&gt;</span>Name<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th&gt;</span>Email<span class="nt">&lt;/th&gt;</span>
      <span class="nt">&lt;th</span> <span class="na">colspan=</span><span class="s">"3"</span><span
class="nt">&gt;&lt;/th&gt;</span>
    <span class="nt">&lt;/tr&gt;</span>
  <span class="nt">&lt;/thead&gt;</span>

<span class="hll"><span class="cp">&lt;%</span> <span class="vi">@users</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">user</span><span class="o">|</span> <span class="cp">%&gt;</span>
</span>  <span class="nt">&lt;tr&gt;</span>
    <span class="nt">&lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s1">'Show'</span><span class="p">,</span> <span class="n">user</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s1">'Edit'</span><span class="p">,</span> <span class="n">edit_user_path</span><span
class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/td&gt;</span>
    <span class="nt">&lt;td&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s1">'Destroy'</span><span class="p">,</span> <span class="n">user</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="ss">:delete</span><span class="p">,</span>
                                     <span class="ss">data</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">confirm</span><span class="p">:</span> <span
class="s1">'Are you sure?'</span> <span class="p">}</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/td&gt;</span>
  <span class="nt">&lt;/tr&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/table&gt;</span>

<span class="nt">&lt;br&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s1">'New User'</span><span
class="p">,</span> <span class="n">new_user_path</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Перегляд конвертує свій вміст в HTML (Step&nbsp;7), що
                      потім повертається контролером в переглядач для
                      відображення (Step&nbsp;8).</p>
                  </div>
                  <div id="_sec-weaknesses_of_this_users_resource" data-tralics-id="uid159"
                    class="subsection" data-number="2.2.3">
                    <h3><a href="#sec-weaknesses_of_this_users_resource" class="heading hyperref"><span
                          class="number">2.2.3 </span>Слабкість ресурсу Users</a></h3>
                    <p>Хоча гарні для отримання загального огляду Rails, підпорки
                      ресурсу Users&nbsp; потерпають від декількох слабкостей.</p>
                    <ul>
                      <li><strong>Немає перевірки даних.</strong><span class="intersentencespace"></span>
                        Наша модель User сприймає дані, такі як пусті імена та
                        недійсні поштові адреси без заперечень.<span class="intersentencespace"></span>
                      </li>
                      <li><strong>Немає аутентифікації.</strong><span class="intersentencespace"></span>
                        Немає поняття входу в систему, або виходу, та немає
                        шляху запобігти користувачам від виконання довільних
                        операцій.<span class="intersentencespace"></span> </li>
                      <li><strong>Немає тестів.</strong><span class="intersentencespace"></span>
                        Технічно це невірно — підпорки включають рудиментарні
                        тести — але згенеровані тести не тестують жодних
                        перевірок, аутентифікації, або жодних специфічних вимог.
                        <span class="intersentencespace"></span> </li>
                      <li><strong>Немає а ні стилю, а ні розташування.</strong><span
                          class="intersentencespace"></span> Немає узгодженного
                        стилю сайту або навігації.<span class="intersentencespace"></span>
                      </li>
                      <li><strong>Немає дійсного розуміння.</strong><span class="intersentencespace"></span>
                        Якщо ви розумієте роботу коду підпорок, вам, напевне, не
                        треба читати цю книжку.&nbsp; </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-microposts_resource" data-tralics-id="cid12" class="section"
                  data-number="2.3">
                  <h2><a href="#sec-microposts_resource" class="heading hyperref"><span
                        class="number">2.3 </span>Ресурс мікропостів</a></h2>
                  <p>Маючи згенерований та вивчений ресурс Users, ми переходимо
                    тепер до ресурсу Microposts.<span class="intersentencespace"></span>
                    На протязі цього розділу я рекомендую порівняти елементи
                    ресурсу Microposts з аналогічними елементами з&nbsp;<a href="#sec-demo_users_resource"
                      class="hyperref">Розділу <span class="ref">2.2</span></a>;
                    ви повинні побачити, що ці два ресурси повторюють один одний
                    в багатьох аспектах.<span class="intersentencespace"></span>
                    RESTful структура застосувань Rails найкраще просякнута цім
                    типом повторення форми — біль того, спостереження за
                    паральною структурою Users та Microposts навіть на ранішній
                    стадії є одною з примітивних мотивацій цього розділу.</p>
                  <div id="_sec-a_micropost_microtour" data-tralics-id="uid165"
                    class="subsection" data-number="2.3.1">
                    <h3><a href="#sec-a_micropost_microtour" class="heading hyperref"><span
                          class="number">2.3.1 </span>Мікротур в мікропости</a></h3>
                    <p>Як і з ресурсом Users ми згенеруємо код підпорок для
                      ресурсу Microposts з використанням <code>rails generate
                        scaffold</code>, в цьому випадку реалізуючи модель даних
                      на&nbsp;<a href="#fig-demo_micropost_model" class="hyperref">Малюнку
                        <span class="ref">2.3</span></a>:<sup id="_cha-2_footnote-ref-8"
                        class="footnote"><a href="#cha-2_footnote-8">8</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll">$ rails generate scaffold Micropost content:text user_id:integer
</span>      invoke  active_record
      create    db/migrate/20140821012832_create_microposts.rb
      create    app/models/micropost.rb
      invoke    test_unit
      create      test/models/micropost_test.rb
      create      test/fixtures/microposts.yml
      invoke  resource_route
       route    resources :microposts
      invoke  scaffold_controller
      create    app/controllers/microposts_controller.rb
      invoke    erb
      create      app/views/microposts
      create      app/views/microposts/index.html.erb
      create      app/views/microposts/edit.html.erb
      create      app/views/microposts/show.html.erb
      create      app/views/microposts/new.html.erb
      create      app/views/microposts/_form.html.erb
      invoke    test_unit
      create      test/controllers/microposts_controller_test.rb
      invoke    helper
      create      app/helpers/microposts_helper.rb
      invoke      test_unit
      create        test/helpers/microposts_helper_test.rb
      invoke    jbuilder
      create      app/views/microposts/index.json.jbuilder
      create      app/views/microposts/show.json.jbuilder
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/microposts.js.coffee
      invoke    scss
      create      app/assets/stylesheets/microposts.css.scss
      invoke  scss
   identical    app/assets/stylesheets/scaffolds.css.scss
</pre></div>
                    </div>
                    <p>(Якщо ви отримали помилку, пов'язану зі Spring, просто
                      виконайте команду ще раз). Щоб оновити нашу базу даних
                      новою моделлю даних нам треба виконати міграцію, як
                      в&nbsp;<a href="#sec-demo_users_resource" class="hyperref">Розділі
                        <span class="ref">2.2</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll">$ bundle exec rake db:migrate
</span>==  CreateMicroposts: migrating ===============================================
-- create_table(:microposts)
   -&gt; 0.0023s
==  CreateMicroposts: migrated (0.0026s) ======================================
</pre></div>
                    </div>
                    <p>Тепер ми на позиції створення мікропостів в той же
                      спосіб, як ми створювали користувачів в <a href="#sec-a_user_tour"
                        class="hyperref">Розділі <span class="ref">2.2.1</span></a>.<span
                        class="intersentencespace"></span> Як ви могли
                      здогадатись, генератор підпорок оновив файл маршрутів
                      Rails для ресурсу Microposts, як бачимо у&nbsp;<a href="#code-demo_microposts_resource"
                        class="hyperref">Лістингу <span class="ref">2.8</span></a>.<sup
                        id="_cha-2_footnote-ref-9" class="footnote"><a href="#cha-2_footnote-9">9</a></sup><span
                        class="intersentencespace"></span> Як і з користувачами,
                      правило маршрутизації <code>resources :microposts</code>
                      відзеркалює URL мікропостів на дії в контролері
                      Microposts, як бачимо а <a href="#table-demo_RESTful_microposts"
                        class="hyperref">Таблиці <span class="ref">2.3</span></a>.</p>
                    <div class="codelisting" id="_code-demo_microposts_resource"
                      data-tralics-id="uid168" data-number="2.8">
                      <div class="heading"><span class="number">Лістинг 2.8:</span>
                        Маршрути <span class="description">Rails, з новими
                          правилами для ресурсів Microposts.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:microposts</span>
</span>  <span class="n">resources</span> <span class="ss">:users</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="table" id="_table-demo_RESTful_microposts" data-tralics-id="uid169"
                      data-number="2.3">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>HTTP запит</strong></td>
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Дія</strong></td>
                            <td class="align_left"><strong>Призначення</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/microposts</td>
                            <td class="align_left"><code>index</code></td>
                            <td class="align_left">сторінка для відображення всіх
                              мікропостів</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/microposts/1</td>
                            <td class="align_left"><code>show</code></td>
                            <td class="align_left">сторінка для відображення
                              мікропосту з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/microposts/new</td>
                            <td class="align_left"><code>new</code></td>
                            <td class="align_left">сторінка для створення нового
                              мікропосту</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">POST</span></td>
                            <td class="align_left">/microposts</td>
                            <td class="align_left"><code>create</code></td>
                            <td class="align_left">створення нового мікропосту</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/microposts/1/edit</td>
                            <td class="align_left"><code>edit</code></td>
                            <td class="align_left">сторінка для редагування
                              мікропосту з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">PATCH</span></td>
                            <td class="align_left">/microposts/1</td>
                            <td class="align_left"><code>update</code></td>
                            <td class="align_left">оновлення мікропосту з id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">DELETE</span></td>
                            <td class="align_left">/microposts/1</td>
                            <td class="align_left"><code>destroy</code></td>
                            <td class="align_left">видалення мікропосту з id <code>1</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Таблиця 2.3: </span><span
                          class="description">RESTful процедури для ресурсу
                          Microposts в <a href="#code-demo_microposts_resource"
                            class="hyperref">Лістингу <span class="ref">2.8</span></a>.
                        </span></div>
                    </div>
                    <p>Контролер Microposts сам з'являється в схематичному
                      вигляді в <a href="#code-demo_microposts_controller" class="hyperref">Лістингу
                        <span class="ref">2.9</span></a>.<span class="intersentencespace"></span>
                      Зауважте, що окрім маючи <code>MicropostsController</code>
                      замість <code>UsersController</code>, <a href="#code-demo_microposts_controller"
                        class="hyperref">Лістинг <span class="ref">2.9</span></a>
                      є <em>ідентичним</em> до коду <a href="#code-demo_users_controller"
                        class="hyperref">Лістингу <span class="ref">2.4</span></a>.<span
                        class="intersentencespace"></span> Це відображення
                      архітектури REST, загальної для обох ресурсів.</p>
                    <div class="codelisting" id="_code-demo_microposts_controller"
                      data-tralics-id="uid170" data-number="2.9">
                      <div class="heading"><span class="number">Лістинг 2.9:</span>
                        Контролер <span class="description">Microposts в
                          схематичній формі.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">MicropostsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">index</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Щоб створити декілька реальних мікропостів ми введемо
                      інформацію на сторінці нового мікропосту,&nbsp;<a href="http://localhost:3000/microposts/new"
                        target="_blank">/microposts/new</a>, як показано на <a
                        href="#fig-demo_new_micropost" class="hyperref">Малюнку
                        <span class="ref">2.12</span></a>.</p>
                    <div class="center figure" id="_fig-demo_new_micropost" data-tralics-id="uid171"
                      data-number="2.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_new_micropost_3rd_edition.png"
                          alt="images/figures/demo_new_micropost_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.12:
                          Сторінка створення</span><span class="description">мікропостів
                          (<a href="http://localhost:3000/microposts/new" target="_blank">/microposts/new</a>).
                          </span></div> </div>
                    <p>На цьому місці введіть один або два мікропости, пілкуючись,
                      щоб щонайменьше один мав&nbsp;<code>user_id</code> рівне <code>1</code>,
                      щоб співпадати з id першого користувача, створеного в <a
                        href="#sec-a_user_tour" class="hyperref">Розділі <span
                          class="ref">2.2.1</span></a>.<span class="intersentencespace"></span>
                      Результат повинен виглядати дещо схожим на&nbsp;<a href="#fig-demo_micropost_index"
                        class="hyperref">Малюнок <span class="ref">2.13</span></a>.</p>
                    <div class="center figure" id="_fig-demo_micropost_index" data-tralics-id="uid172"
                      data-number="2.13">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_micropost_index_3rd_edition.png"
                          alt="images/figures/demo_micropost_index_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.13: </span><span
                          class="description">Сторінка списку мікропостів (<a href="http://localhost:3000/microposts"
                            target="_blank">/microposts</a>). </span></div>
                    </div>
                  </div>
                  <div id="_sec-putting_the_micro_in_microposts" data-tralics-id="uid173"
                    class="subsection" data-number="2.3.2">
                    <h3><a href="#sec-putting_the_micro_in_microposts" class="heading hyperref"><span
                          class="number">2.3.2 </span>Додаємо&nbsp;<em>мікро</em>
                        до мікропостів</a></h3>
                    <p>Кожний <em>мікро</em>пост, що вартий свого ім'я, повинен
                      мати деякі механізми для змушення довжини постів.<span class="intersentencespace"></span>
                      Реалізація цього обмеження в Rails легка, за допомогою <em>валідаторів</em>;
                      щоб сприймати мікропости щонайбільше 140 символів (à la
                      Twitter), ми використовуємо валідатор довжини.<span class="intersentencespace"></span>
                      В цей момент ви відкриваєте файл <code>app/models/micropost.rb</code>
                      в вашому текстовому редакторі або IDE та вводите туди
                      наступний вміст з&nbsp;<a href="#code-demo_length_validation"
                        class="hyperref">Лістингу&nbsp;<span class="ref">2.10</span></a>.</p>
                    <div class="codelisting" id="_code-demo_length_validation" data-tralics-id="uid174"
                      data-number="2.10">
                      <div class="heading"><span class="number">Лістинг 2.10:</span>
                        Обмеження мікропостів щоб вони не перевищували 140
                        символів<span class="description">.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:content</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">140</span> <span class="p">}</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Код в <a href="#code-demo_length_validation" class="hyperref">Лістингу
                        <span class="ref">2.10</span></a> може виглядати дещо
                      містичним — ми розкажемо про валідацію більш докладно
                      починаючи з&nbsp;<a href="#sec-user_validations" class="hyperref">Розділу
                        <span class="ref">6.2 </span></a>— але її ефект вже
                      зрозумілий, якщо ми перейдемо створення нового мікропосту,
                      та введемо більше ніж 140 символів в якості тексту
                      мікропоста. Як бачимо на <a href="#fig-micropost_length_error"
                        class="hyperref">Малюнку <span class="ref">2.14</span></a>,
                      Rails відтворює <em>повідомлення про помилку</em>, що
                      вказує, що вміст мікропосту задовгий. (Ми вивчимо більше
                      про повідомлення помилок в&nbsp; <a href="#sec-signup_error_messages"
                        class="hyperref">Розділі <span class="ref">7.3.3</span></a>.)</p>
                    <div class="center figure" id="_fig-micropost_length_error"
                      data-tralics-id="uid175" data-number="2.14">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_length_error_3rd_edition.png"
                          alt="images/figures/micropost_length_error_3rd_edition"></div>
                      <div class="caption"><span class="header">Малюнок 2.14: </span><span
                          class="description">Повідомлення про помилку для
                          помилки створення мікропосту. </span></div>
                    </div>
                  </div>
                  <div id="_sec-demo_user_has_many_microposts" data-tralics-id="uid176"
                    class="subsection" data-number="2.3.3">
                    <h3><a href="#sec-demo_user_has_many_microposts" class="heading hyperref"><span
                          class="number">2.3.3 </span>Користувач <span class="tt">has_many</span>
                        мікропостів <br>
                      </a></h3>
                    <p>Одна з найбільш потужних можливостей Rails є спроможність
                      формувати&nbsp;<em>асоціації</em> між різними можелями
                      даних.<span class="intersentencespace"></span> В випадку
                      нашої моделі User кожний користувач потенційно має
                      декілька мікропостів. Ми можемо виразити це в коді,
                      оновивши моделі User та Micropost, як у <a href="#code-demo_user_has_many_microposts"
                        class="hyperref">Лістингу <span class="ref">2.11</span></a>
                      та <a href="#code-demo_micropost_belongs_to_user" class="hyperref">Лістингу
                        <span class="ref">2.12</span></a>.</p>
                    <div class="codelisting" id="_code-demo_user_has_many_microposts"
                      data-tralics-id="uid177" data-number="2.11">
                      <div class="heading"><span class="number">Лістинг 2.11:</span>
                        Користувач має декілька мікропостів<span class="description">.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:microposts</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-demo_micropost_belongs_to_user"
                      data-tralics-id="uid178" data-number="2.12">
                      <div class="heading"><span class="number">Лістинг 2.12:</span>
                        Мікропост належить користувачеві<span class="description">.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span>  <span class="n">validates</span> <span class="ss">:content</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">140</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Ми можемо візуалізувати результат цієї асоціації на&nbsp;<a
                        href="#fig-micropost_user_association" class="hyperref">Малюнку
                        <span class="ref">2.15</span></a>.<span class="intersentencespace"></span>
                      Оскільки стовпчик <code>user_id</code> в таблиці&nbsp;<code>microposts</code>,
                      Rails (з використанням Active Record) може вивести, що
                      мікропости асоційовані з кожним користувачем.</p>
                    <div class="center figure" id="_fig-micropost_user_association"
                      data-tralics-id="uid179" data-number="2.15">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_user_association.png"
                          alt="images/figures/micropost_user_association"></div>
                      <div class="caption"><span class="header">Малюнок 2.15: </span><span
                          class="description">Асоціація між мікропостами та
                          користувачами. </span></div>
                    </div>
                    <p>В <a href="#cha-user_microposts" class="hyperref">Главі
                        <span class="ref">11</span></a> та <a href="#cha-following_users"
                        class="hyperref">Главі <span class="ref">12</span></a>
                      ми будемо використовувати асоціації користувачей та
                      мікропостів обох, щоб відобразити всі з мікропостів
                      користувача, та створити фід мікропостів в стилі Twitter.<span
                        class="intersentencespace"></span> Поки що ми можемо
                      перевірити вплив асоціації користувач-мікропост з
                      використанням <em>консолі</em>, що є корисним
                      інструментом для взаємодії з застосуваннями Rails.<span class="intersentencespace"></span>
                      Спочатку ми викличемо консоль за допомогою <code>rails
                        console</code>в командному рядку , та потім отримаємо
                      першого користувача з бази данихз використанням&nbsp;<code>User.first</code>
                      (зберігаючи результат в змінній <code>first_user</code>):<sup
                        id="_cha-2_footnote-ref-10" class="footnote"><a href="#cha-2_footnote-10">10</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="go">$ rails console</span>
</span><span class="gp">&gt;&gt; </span><span class="n">first_user</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "michael@example.org",</span>
<span class="go">created_at: "2014-07-21 02:01:31", updated_at: "2014-07-21 02:01:31"&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">first_user</span><span class="o">.</span><span
class="n">microposts</span>
<span class="go">=&gt; [#&lt;Micropost id: 1, content: "First micropost!", user_id: 1, created_at:</span>
<span class="go">"2014-07-21 02:37:37", updated_at: "2014-07-21 02:37:37"&gt;, #&lt;Micropost id: 2,</span>
<span class="go">content: "Second micropost", user_id: 1, created_at: "2014-07-21 02:38:54",</span>
<span class="go">updated_at: "2014-07-21 02:38:54"&gt;]</span>
<span class="gp">&gt;&gt; </span><span class="n">micropost</span> <span class="o">=</span> <span
class="n">first_user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">first</span>    <span class="c1"># Micropost.first would also work.</span>
<span class="go">=&gt; #&lt;Micropost id: 1, content: "First micropost!", user_id: 1, created_at:</span>
<span class="go">"2014-07-21 02:37:37", updated_at: "2014-07-21 02:37:37"&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">micropost</span><span class="o">.</span><span
class="n">user</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "michael@example.org",</span>
<span class="go">created_at: "2014-07-21 02:01:31", updated_at: "2014-07-21 02:01:31"&gt;</span>
<span class="gp">&gt;&gt; </span><span class="nb">exit</span>
</pre></div>
                    </div>
                    <p>(Я включив <code>exit</code> в останній рядок тільки для
                      демонстрації як вийти з консолі.<span class="intersentencespace"></span>
                      На більшості систем ви також можете використовувати Ctrl-D
                      для тієї ж цілі).<sup id="_cha-2_footnote-ref-11" class="footnote"><a
                          href="#cha-2_footnote-11">11</a></sup> Тут ми отримали
                      доступ до мікропостів користувача використовуючи код <code>first_user.microposts</code>.<span
                        class="intersentencespace"></span> Маючи цей код Active
                      Record автоматично повертає всі мікропости з&nbsp;<code>user_id</code>
                      , що дорівнює id з <code>first_user</code> (в цьому
                      випадку <code>1</code>).<span class="intersentencespace"></span>
                      Ми навчимось більше щодо можливостей асоціації в Active
                      Record в <a href="#cha-user_microposts" class="hyperref">Главі
                        <span class="ref">11</span></a> та <a href="#cha-following_users"
                        class="hyperref">Главі <span class="ref">12</span></a>.</p>
                  </div>
                  <div id="_sec-inheritance_hierarchies" data-tralics-id="uid182"
                    class="subsection" data-number="2.3.4">
                    <h3><a href="#sec-inheritance_hierarchies" class="heading hyperref"><span
                          class="number">2.3.4 </span>Наслідування наслідувань</a></h3>
                    <p>Ми завершили наше обговорення іграшкового застосування з
                      короткого опису ієрархій класів контролерів та моделей в
                      Rails.<span class="intersentencespace"></span> Ця
                      дискуссія набере більше сенсу, якщо ми матимемо деякий
                      досвід з об'єктно-орієнтовним програмуванням; якщо ви не
                      вивчали його, можете вільно пропустити цей розділ.<span class="intersentencespace"></span>
                      Зокрема, якщо ви не знайомі з <em>класами </em>(що
                      обговорюються в <a href="#sec-ruby_classes" class="hyperref">Розділі
                        <span class="ref">4.4</span></a>), я рекомендую
                      повернутись до цього розділу піздніше.</p>
                    <p>Ми почнемо з структури наслідування моделей. Порівнюючи&nbsp;<a
                        href="#code-demo_user_class" class="hyperref">Лістинг <span
                          class="ref">2.13</span></a> та <a href="#code-demo_micropost_class"
                        class="hyperref">Лістинг <span class="ref">2.14</span></a>,
                      ми бачимо, що обоє моделі, User
                      та Micropost наслідують (через ліву кутову дужку <code>&lt;</code>)
                      від <code>ActiveRecord::Base</code>, що є базовим класом
                      для моделей, що провадить ActiveRecord; діаграма, що
                      підсумовує це відношення, зображена на&nbsp;<a href="#fig-demo_model_inheritance"
                        class="hyperref">Малюнку <span class="ref">2.16</span></a>.<span
                        class="intersentencespace"></span> Це завдячуючи
                      наслідуванню від&nbsp; <code>ActiveRecord::Base</code>
                      об'єкти нашої моделі отримують можливість взаємодіяти з
                      базою даних, трактувати стовпчики бази даних як атрибути
                      Ruby, і таке інше.</p>
                    <div class="codelisting" id="_code-demo_user_class" data-tralics-id="uid183"
                      data-number="2.13">
                      <div class="heading"><span class="number">Лістинг 2.13:</span>
                        Клас&nbsp;<span class="description"><code>User</code>,
                          наслідування виділене.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="k">class</span> <span
class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span
class="o">::</span><span class="no">Base</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-demo_micropost_class" data-tralics-id="uid184"
                      data-number="2.14">
                      <div class="heading"><span class="number">Лістинг 2.14:</span>
                        Клас&nbsp;<span class="description"><code>Micropost</code>,
                          наслідування виділене.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="k">class</span> <span
class="nc">Micropost</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span
class="o">::</span><span class="no">Base</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-demo_model_inheritance"
                      data-tralics-id="uid185" data-number="2.16">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_model_inheritance.png"
                          alt="images/figures/demo_model_inheritance"></div>
                      <div class="caption"><span class="header">Малюнок 2.16: </span><span
                          class="description">Ієрархія наслідування для моделей
                          User та Micropost. </span></div>
                    </div>
                    <p>Структура наслідування для контролерів є тільки трхи
                      складнішою.<span class="intersentencespace"></span>
                      Порівнюючи <a href="#code-demo_users_controller_class" class="hyperref">Лістинг
                        <span class="ref">2.15</span></a> та <a href="#code-demo_microposts_controller_class"
                        class="hyperref">Лістинг <span class="ref">2.16</span></a>,
                      ми бачимо, що обоє контролери,&nbsp; Users та Microposts,
                      походять від контролеру Application.<span class="intersentencespace"></span>
                      Вивчаючи <a href="#code-toy_application_controller_class"
                        class="hyperref">Лістинг <span class="ref">2.17</span></a>
                      ми бачимо, що цей <code>ApplicationController</code> сам
                      походить від&nbsp; <code>ActionController::Base</code>;
                      це базовий клас для контролерів, що провадяться
                      бібліотекою Rails Action Pack.<span class="intersentencespace"></span>
                      Відношення між ціма класами проілючтровано на&nbsp;<a href="#fig-demo_controller_inheritance"
                        class="hyperref">Малюнку <span class="ref">2.17</span></a>.</p>
                    <div class="codelisting" id="_code-demo_users_controller_class"
                      data-tralics-id="uid186" data-number="2.15">
                      <div class="heading"><span class="number">Лістинг 2.15:</span>
                        Клас<span class="description"> <code>UsersController</code>,
                          наслідування виділене.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="k">class</span> <span
class="nc">UsersController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-demo_microposts_controller_class"
                      data-tralics-id="uid187" data-number="2.16">
                      <div class="heading"><span class="number">Лістинг 2.16:</span>
                        Клас&nbsp;<span class="description"><code>MicropostsController</code>,
                          наслідування виділене.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="k">class</span> <span
class="nc">MicropostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-toy_application_controller_class"
                      data-tralics-id="uid188" data-number="2.17">
                      <div class="heading"><span class="number">Лістинг 2.17:</span>
                        Клас&nbsp;<span class="description"><code>ApplicationController</code>,
                          наслідування виділене.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/application_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="k">class</span> <span
class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="no">ActionController</span><span
class="o">::</span><span class="no">Base</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-demo_controller_inheritance"
                      data-tralics-id="uid189" data-number="2.17">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/demo_controller_inheritance.png"
                          alt="images/figures/demo_controller_inheritance"></div>
                      <div class="caption"><span class="header">Малюнок 2.17: </span><span
                          class="description">Ієрархія наслідування для
                          контролерів Users та Microposts. </span></div>
                    </div>
                    <p>Як і з наслідуванням моделей, обоє контролери, Users та
                      Microposts, отримують велику кількість функціональності,
                      наслідуя від базового класу (в цьому випадку від&nbsp;<code>ActionController::Base</code>),
включаючи
                      можливість маніпулювати об'єктами моделей, фільтрувати
                      входящі запити HTTP, та малювати перегляди як HTML.
                      Оскільки всі контролери Rails наслідують від <code>ApplicationController</code>,
                      правила, визначені в контролері Application автоматично
                      застосовуються до кожної дії в застосуванні.<span class="intersentencespace"></span>
                      Наприклад, в <a href="#sec-remember_me" class="hyperref">Розділі
                        <span class="ref">8.4</span></a> ми побачимо, як
                      включити допоміжники для журналювання всіх контролерів в
                      застосуванні-прикладі.&nbsp;</p>
                  </div>
                  <div id="_sec-deploying_the_toy_app" data-tralics-id="uid190"
                    class="subsection" data-number="2.3.5">
                    <h3><a href="#sec-deploying_the_toy_app" class="heading hyperref"><span
                          class="number">2.3.5 </span>Розгортання іграшкового
                        застосування</a></h3>
                    <p>З завершенням ресурсу Microposts тепер є гарна нагода для
                      просування нашого репозитарію на Bitbucket:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git status
<span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Finish toy app"</span>
<span class="gp">$</span> git push
</pre></div>
                    </div>
                    <p>Звичайно ви будете мати меньші, більш части коміти, але
                      для цілей цього розділу один великий коміт є достатньо
                      гарним.&nbsp;</p>
                    <p>На цьому місці ви можете також розгорнути ваше іграшкове
                      застосування на Heroku
                      як в <a href="#sec-deploying" class="hyperref">Розділі <span
                          class="ref">1.5</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git push heroku
</pre></div>
                    </div>
                    <p>(Вважається, що ви створили Heroku застосування в <a href="#sec-planning_the_application"
                        class="hyperref">Розділі <span class="ref">2.1</span></a>.<span
                        class="intersentencespace"></span> Інакше ви маєте
                      виконати <code>heroku create</code> та потім <code>git
                        push heroku master</code>.)</p>
                    <p>Щоб отримати робочу базу даних вам треба також мігрувати
                      на виробничу базу даних:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> heroku run rake db:migrate
</pre></div>
                    </div>
                    <p>Це оновить базу даних на Heroku необхідними моделями
                      користувача та мікропоста. Після виконання міграції ви
                      маєте бути в змозі використовувати іграшкове застосування
                      в реальному оточенні, з підтримкою справжньої бази даних
                      PostgreSQL (<a href="#fig-toy_app_production" class="hyperref">Малюнок
                        <span class="ref">2.18</span></a>).</p>
                    <div class="center figure" id="_fig-toy_app_production" data-tralics-id="uid191"
                      data-number="2.18">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/toy_app_production.png"
                          alt="images/figures/toy_app_production"></div>
                      <div class="caption"><span class="header">Малюнок 2.18: </span><span
                          class="description">Виконання іграшкового застосування
                          в виробничому оточенні. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-toy_app_conclusion" data-tralics-id="cid13" class="section"
                  data-number="2.4">
                  <h2><a href="#sec-toy_app_conclusion" class="heading hyperref"><span
                        class="number">2.4 </span>Висновок</a></h2>
                  <p>Тепер ми дійшли кінця високорівневого огляду застосування
                    Rails.<span class="intersentencespace"></span> Іграшкове
                    застосування, розроблене в цій главі, має деяких потужних
                    можливостей, та купу недоліків.<span class="intersentencespace"></span>
                    <span class="break"></span></p>
                  <p><strong>Сильни сторони</strong></p>
                  <ul>
                    <li>Високорівневий погляд на Rails </li>
                    <li>Вступ до MVC </li>
                    <li>Перший присмак архитектури REST</li>
                    <li>Початок моделювання даних</li>
                    <li>Живе, основане на базах даних, веб застосування в
                      інтернеті</li>
                  </ul>
                  <p><strong>Слабкості</strong></p>
                  <ul>
                    <li>Немає власного розташування або стилю</li>
                    <li>Немає статичних сторінок (таких як “Головна” або “Про
                      нас”) </li>
                    <li>Немає паролів користувачів</li>
                    <li>Немає зображень користувачів</li>
                    <li>Немає входу на сайт</li>
                    <li>Немає безпеки</li>
                    <li>Немає автоматичної асоціації користувач/мікропост</li>
                    <li>Немає нотації “слідування”</li>
                    <li>Немає фіду мікропостів</li>
                    <li>Немає осмислених тестів</li>
                    <li><strong>Немає дійсного розуміння</strong> </li>
                  </ul>
                  <p>Залишок цього туторіала присвячено побудові на сильних
                    сторнах та уникання слабким.</p>
                  <div id="_sec-toy_app_what_we_learned_in_this_chapter" data-tralics-id="uid208"
                    class="subsection" data-number="2.4.1">
                    <h3><a href="#sec-toy_app_what_we_learned_in_this_chapter" class="heading hyperref"><span
                          class="number">2.4.1 </span>Що ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Підпорки автоматично створюють код та модель даних, та
                        взаємодіють з ними через веб. </li>
                      <li>Підпорти гарні для швидкого старту, але погані для
                        розуміння. </li>
                      <li>Rails використовує шаблон Model-View-Controller (MVC)
                        для структурування веб застосувань. </li>
                      <li>Інтерпретована&nbsp;Rails, REST архітектура включає
                        стандартний набір URL та дій контролера для взаємодії з
                        моделями даних. </li>
                      <li>Rails підтримує валідацію даних, щоб надавати обмежень
                        на значення атрибутів моделі даних. </li>
                      <li>Rails іде з вбудованими функціями для визначення
                        асоціацій між різними моделями даних. </li>
                      <li>Ми можемо взаємодіяти з застосуваннями Rails з
                        командного рядка з використанням консолі Rails. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-toy_app_exercises" data-tralics-id="cid14" class="section"
                  data-number="2.5">
                  <h2><a href="#sec-toy_app_exercises" class="heading hyperref"><span
                        class="number">2.5 </span>Вправи</a></h2>
                  <p><em>Зауваженя</em>: <em>Рішення вправ</em>, з рішенням
                    кожного завдання в книжці <em>Ruby on Rails Tutorial</em>,
                    включене безкоштовно з кожним придбанням на&nbsp; <a href="http://www.railstutorial.org/"
                      target="_blank">www.railstutorial.org</a>.</p>
                  <ol>
                    <li>Код <a href="#code-validates_content_presence" class="hyperref">Лістингу
                        <span class="ref">2.18</span></a> показує, як додати
                      перевірку для наявності вмісту мікропосту, щоб впевнитись,
                      що мікропост не може бути пустим.<span class="intersentencespace"></span>
                      Перевірте, що отримали поведінку, що показана на <a href="#fig-micropost_content_cant_be_blank"
                        class="hyperref">Малюнку <span class="ref">2.19</span></a>.
                    </li>
                    <li>Оновіть <a href="#code-toy_user_presence_valications" class="hyperref">Лістинг
                        <span class="ref">2.19</span></a> замінюючи&nbsp;<code>FILL_IN</code>
                      на відповідний код, щоб перевірити наявність атрибутів
                      імені та поштової адреси в моделі User (<a href="#fig-user_presence_validations"
                        class="hyperref">Малюнок <span class="ref">2.20</span></a>).
                      </li>
                  </ol>
                  <div class="codelisting" id="_code-validates_content_presence"
                    data-tralics-id="uid218" data-number="2.18">
                    <div class="heading"><span class="number">Лістинг 2.18:</span>
                      Код для перевірки наявності вмісту мікропосту<span class="description">.<span
                          class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/models/micropost.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">maximum</span><span class="p">:</span> <span class="mi">140</span> <span
class="p">},</span>
<span class="hll">                      <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="center figure" id="_fig-micropost_content_cant_be_blank"
                    data-tralics-id="uid219" data-number="2.19">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_content_cant_be_blank.png"
                        alt="images/figures/micropost_content_cant_be_blank"></div>
                    <div class="caption"><span class="header">Малюнок 2.19: </span><span
                        class="description">Ефект перевірки наявності
                        мікропосту. </span></div>
                  </div>
                  <div class="codelisting" id="_code-toy_user_presence_valications"
                    data-tralics-id="uid220" data-number="2.19">
                    <div class="heading"><span class="number">Лістинг 2.19:</span>
                      Додавання перевірки наявності до моделі <span class="description">User.<span
                          class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/models/user.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span>
<span class="hll">  <span class="n">validates</span> <span class="no">FILL_IN</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="hll">  <span class="n">validates</span> <span class="no">FILL_IN</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="center figure" id="_fig-user_presence_validations"
                    data-tralics-id="uid221" data-number="2.20">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_presence_validations.png"
                        alt="images/figures/user_presence_validations"></div>
                    <div class="caption"><span class="header">Малюнок 2.20: </span><span
                        class="description">Ефект наявності валідації моделі
                        User. </span></div>
                  </div>
                </div>
                <div id="cha-2_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-2_footnote-1">Головна причина для цього в тому,
                      що сторінка по замовчанню Rails типово не працює на
                      Heroku, що робить складним сказати, чи було розгорнення
                      вдалим чи ні.&nbsp;<a class="arrow" href="#cha-2_footnote-ref-1">↑</a></li>
                    <li id="_cha-2_footnote-2">Оскільки мікропости стислі по
                      задуму, тип <code>string</code> насправді є досить довгим,
                      щоб містити їх, але використання&nbsp;<code>text</code>
                      краще виказує наші наміри, при тому надаючи нам більшу
                      гнучкість, якщо в майбутньому ми вирішимо пом'якшити
                      обмеження на довжину. <a class="arrow" href="#cha-2_footnote-ref-2">↑</a></li>
                    <li id="_cha-2_footnote-3">Ім'я підпорок слідує домовленості
                      <em>моделей</em>, що є сингулярним, скоріше, ніж для
                      ресурсів та контролерів, що є множинним. Таким чином, ми
                      маємо&nbsp;<code>User</code>
                      замість <code>Users</code>.&nbsp;<a class="arrow" href="#cha-2_footnote-ref-3">↑</a></li>
                    <li id="_cha-2_footnote-4">Скрипт <code>rails</code>
                      задуманий так, що вам не треба використовувати&nbsp;<code>bundle
                        exec</code>.&nbsp;<a class="arrow" href="#cha-2_footnote-ref-4">↑</a></li>
                    <li id="_cha-2_footnote-5">Деякі посилання вказують, що
                      перегляд повертає HTML напряму до переглядача (через веб
                      сервер, такий, як Apache або Nginx).<span class="intersentencespace"></span>
                      Безвідносно від деталей реалізації я обираю мислити про
                      контролер як про центральний хаб, через який проходять всі
                      потоки застосування.&nbsp;<a class="arrow" href="#cha-2_footnote-ref-5">↑</a></li>
                    <li id="_cha-2_footnote-6">Fielding, Roy Thomas.<span class="intersentencespace"></span>
                      <em>Architectural Styles and the Design of Network-based
                        Software Architectures</em>.<span class="intersentencespace"></span>
                      Doctoral dissertation, University of California, Irvine,
                      2000.&nbsp;<a class="arrow" href="#cha-2_footnote-ref-6">↑</a></li>
                    <li id="_cha-2_footnote-7">Ранішні версії Rails
                      використовували <span class="tt">PUT</span> для оновлень
                      даних, але <span class="tt">PATCH</span> є більше
                      відповідним методом згідно стандарту HTTP.&nbsp;<a class="arrow"
                        href="#cha-2_footnote-ref-7">↑</a></li>
                    <li id="_cha-2_footnote-8">Як з підпорками User, генератор
                      підпорок для мікропостів слідує сингулярній домовленості
                      для моделей Rails; таким чином ми маємо <code>generate
                        Micropost</code>.&nbsp;<a class="arrow" href="#cha-2_footnote-ref-8">↑</a></li>
                    <li id="_cha-2_footnote-9">Код підпорок може мати додаткові
                      нові рядки порівняно з&nbsp;<a href="#code-demo_microposts_resource"
                        class="hyperref">Листингом <span class="ref">2.8</span></a>.<span
                        class="intersentencespace"></span> Це не спричинятиме
                      турботу, оскільки Ruby ігнорує нові рядки.&nbsp;<a class="arrow"
                        href="#cha-2_footnote-ref-9">↑</a></li>
                    <li id="_cha-2_footnote-10">Ваша підказка консолі може бути
                      щось подібне до <span class="tt">2.1.1 :001 &gt;</span>,
                      але приклад використовує <span class="inline_verbatim">&gt;&gt;</span>
                      ,&nbsp; оскільки версії Ruby будуть відрізнятись.&nbsp;<a
                        class="arrow" href="#cha-2_footnote-ref-10">↑</a></li>
                    <li id="_cha-2_footnote-11">Як і з “Ctrl-C”, домовились
                      писати “Ctrl-D”, навіть хоча насправді це “Ctrl-d”.&nbsp;<a
                        class="arrow" href="#cha-2_footnote-ref-11">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-static_pages" data-tralics-id="cid15" class="chapter"
                  data-number="3">
                  <h1><a name="cha-static_pages" class="heading hyperref"><span
                        class="number">Глава 3</span>Здебільше статичні сторінки</a></h1>
                  <p>В цій главі ми почнемо розробляти приклад застосування
                    професійного рівня, що буде служити як наш приклад на протязі
                    залишку цієї книги.<span class="intersentencespace"></span>
                    Хоча приклад застосування буде мати користувачів,
                    мікропости, та повний фреймворк логіну та аутентифікації, ми
                    будемо починати з досить обмеженої теми: створення статичних
                    сторінок.<span class="intersentencespace"></span> Не зажаючи
                    на простоту, створення статичних сторінок є високозмістовним
                    прикладом, багатим на застосування — чудовий початок для
                    нашого майбутнього застосунку.</p>
                  <p>Хоча Rails розроблений для створення динамічних веб сайтів
                    з підтримкою баз даних, він також блискуче здібний
                    створювати той тип статичних сторінок, що ми можемо зробити
                    з використанням тільки HTML файлів.<span class="intersentencespace"></span>
                    Фактично, використовуючи Rails навіть для статичних сторінок
                    надає помітну перевагу: ми можемо просто додати тільки <em>невелику</em>
                    кількість динамічного вмісту. В цій главі ми навчимось як.
                    По ходу дії ми набумо першого досвіду в&nbsp;<em>автоматичному
                      тестуванні</em>, що допоможе нам бути більше впевненими,
                    що наш код вірний. Більше того, маючи гарний тестовий
                    інструмент дозволить нам&nbsp;<em>рефакторизувати </em>наш
                    код з легкістю, змінюючи його форму без зміни
                    функціональності.</p>
                </div>
                <div id="_sec-sample_app_setup" data-tralics-id="cid16" class="section"
                  data-number="3.1">
                  <h2><a href="#sec-sample_app_setup" class="heading hyperref"><span
                        class="number">3.1 </span>Настроювання простого
                      застосування</a></h2>
                  <p>Як і в&nbsp;<a href="#cha-a_toy_app" class="hyperref">Главі
                      <span class="ref">2</span></a>, перед початком нам треба
                    створити новий проект Rails, цього разу з назвою&nbsp;<code>sample_app</code>,
                    як показано в <a href="#code-rails_new_sample_app" class="hyperref">Лістингу
                      <span class="ref">3.1</span></a>.<sup id="_cha-3_footnote-ref-1"
                      class="footnote"><a href="#cha-3_footnote-1">1</a></sup><span
                      class="intersentencespace"></span> Якщо команда в <a href="#code-rails_new_sample_app"
                      class="hyperref">Лістингу <span class="ref">3.1</span></a>
                    повертає помилку на кшталт “Could not find ’railties”’, це
                    означає, що ви не маєте встановленою вірну версію Rails, та
                    вам треба ще раз перевірити, що ви слідували командам
                    в&nbsp;<a href="#code-installing_rails" class="hyperref">Лістингу
                      <span class="ref">1.1</span></a> точно по написаному.</p>
                  <div class="codelisting" id="_code-rails_new_sample_app" data-tralics-id="uid223"
                    data-number="3.1">
                    <div class="heading"><span class="number">Лістинг 3.1:</span>
                      Генерація нового застосування-прикладу.<span class="description"></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> <span class="nb">cd</span> ~/workspace
<span class="gp">$</span> rails _4.2.0_ new sample_app
<span class="gp">$</span> <span class="nb">cd </span>sample_app/
</pre></div>
                    </div>
                  </div>
                  <p>(Як в <a href="#sec-planning_the_application" class="hyperref">Розділі
                      <span class="ref">2.1</span></a>, зауважте, що користувачі
                    хмарної IDE можуть створювати проект в тому ж робочому
                    просторі, що і застосування з двох попередніх глав.<span class="intersentencespace"></span>
                    Не треба створювати новий робочий простір).</p>
                  <p>Як в <a href="#sec-planning_the_application" class="hyperref">Розділі
                      <span class="ref">2.1</span></a>, наш наступний крок в
                    використанні текстового редактора для оновлення&nbsp;<code>Gemfile</code>
                    новими джемами, що треба для нашого застосування.<span class="intersentencespace"></span>
                    <a href="#code-gemfile_sample_app" class="hyperref">Лістинг
                      <span class="ref">3.2</span></a> ідентичний до <a href="#code-gemfile_sqlite_version"
                      class="hyperref">Лістинга <span class="ref">1.5</span></a>
                    та <a href="#code-demo_gemfile_sqlite_version_redux" class="hyperref">Лістинга
                      <span class="ref">2.1</span></a>, за винятком джемів з
                    групи <code>test</code>, що треба для опціонального
                    розширеного налаштування тестування (<a href="#sec-advanced_testing_setup"
                      class="hyperref">Розділ <span class="ref">3.7</span></a>).<span
                      class="intersentencespace"></span> <em>Зауваження</em>:
                    Якщо ви бажаєте встановити <em>всі</em> джеми, що треба для
                    прикладу застосування, вам треба використовувати код з <a href="#code-final_gemfile"
                      class="hyperref">Лістингу <span class="ref">11.66</span></a>
                    в такому випадку.</p>
                  <div class="codelisting" id="_code-gemfile_sample_app" data-tralics-id="uid224"
                    data-number="3.2">
                    <div class="heading"><span class="number">Лістинг 3.2:</span><span
                        class="description"><code>Gemfile</code> для прикладу
                        застосування.</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span><span class="p">,</span>           <span
class="s1">'5.0.1'</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span>             <span
class="s1">'2.5.3'</span>
<span class="n">gem</span> <span class="s1">'coffee-rails'</span><span class="p">,</span>         <span
class="s1">'4.1.0'</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span><span class="p">,</span>         <span
class="s1">'4.0.3'</span>
<span class="n">gem</span> <span class="s1">'turbolinks'</span><span class="p">,</span>           <span
class="s1">'2.3.0'</span>
<span class="n">gem</span> <span class="s1">'jbuilder'</span><span class="p">,</span>             <span
class="s1">'2.2.3'</span>
<span class="n">gem</span> <span class="s1">'sdoc'</span><span class="p">,</span>                 <span
class="s1">'0.4.0'</span><span class="p">,</span> <span class="ss">group</span><span
class="p">:</span> <span class="ss">:doc</span>

<span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span
class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'sqlite3'</span><span class="p">,</span>     <span
class="s1">'1.3.9'</span>
  <span class="n">gem</span> <span class="s1">'byebug'</span><span class="p">,</span>      <span
class="s1">'3.4.0'</span>
  <span class="n">gem</span> <span class="s1">'web-console'</span><span class="p">,</span> <span
class="s1">'2.0.0.beta3'</span>
  <span class="n">gem</span> <span class="s1">'spring'</span><span class="p">,</span>      <span
class="s1">'1.1.3'</span>
<span class="k">end</span>

<span class="n">group</span> <span class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'minitest-reporters'</span><span class="p">,</span> <span
class="s1">'1.0.5'</span>
  <span class="n">gem</span> <span class="s1">'mini_backtrace'</span><span class="p">,</span>     <span
class="s1">'0.1.3'</span>
  <span class="n">gem</span> <span class="s1">'guard-minitest'</span><span class="p">,</span>     <span
class="s1">'2.3.1'</span>
<span class="k">end</span>

<span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'pg'</span><span class="p">,</span>             <span
class="s1">'0.17.1'</span>
  <span class="n">gem</span> <span class="s1">'rails_12factor'</span><span class="p">,</span> <span
class="s1">'0.0.2'</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>Як в двох попередніх главах, ми виконуємо&nbsp;<code>bundle
                      install</code> для встановлення та включення джемів,
                    вказаних в&nbsp;<code>Gemfile</code>, для пропуску
                    встановлення виробничих джемів використовуючи опцію <span class="inline_verbatim">--without</span>
                    <span class="inline_verbatim">production</span>:<sup id="_cha-3_footnote-ref-2"
                      class="footnote"><a href="#cha-3_footnote-2">2</a></sup></p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> bundle install --without production
</pre></div>
                  </div>
                  <p>Це призведе до пропуску джему <span class="tt">pg</span>
                    для PostgreSQL під розробкою, та використаємо SQLite для
                    розробки та тестування.<span class="intersentencespace"></span>
                    Heroku
                    рекомендує не використовувати різні бази даних під розробкою
                    та в продакшині, але для простого застосування це не зробить
                    жодної різниці, та SQLite <em>значно </em>простіше
                    встановити на налаштувати локально, ніж PostgreSQL.<sup id="_cha-3_footnote-ref-3"
                      class="footnote intersentence"><a href="#cha-3_footnote-3">3</a></sup><span
                      class="intersentencespace"></span> В випадку, коли ви вже
                    заздалегідь встановили версію джема (такого, як сам Rails),
                    інший, ніж вказаний в&nbsp;<code>Gemfile</code>, буде гарною
                    ідеєю&nbsp;<em>обновити</em>джеми за допомогою <code>bundle
                      update</code>, щоб впевнитись, що версії співпадають:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> bundle update
</pre></div>
                  </div>
                  <p>Маюче це, все що залишилось - це ініціалізувати наш
                    репозитарій Git:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git init
<span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Initialize repository"</span>
</pre></div>
                  </div>
                  <p>Як і з перзим застосуванням, я рекомендую оновити файл <code>README</code>&nbsp;
                    (розміщений в кореневому каталозі застосування), щоб він був
                    більш корисним та описовим.<span class="intersentencespace"></span>
                    Ми починаємо змінюючи формат з RDoc на Markdown:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git mv README.rdoc README.md
</pre></div>
                  </div>
                  <p>Потім ми заповнюємо вміст на показаний в&nbsp;<a href="#code-sample_app_readme"
                      class="hyperref">Лістингу <span class="ref">3.3</span></a>.</p>
                  <div class="codelisting" id="_code-sample_app_readme" data-tralics-id="uid227"
                    data-number="3.3">
                    <div class="heading"><span class="number">Лістинг 3.3:</span>
                      <span class="description">Покращений файл <code>README</code>
                        для прикладу застосування.</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre># Ruby on Rails Tutorial: sample application

This is the sample application for the
[*Ruby on Rails Tutorial:
Learn Web Development with Rails*](http://www.railstutorial.org/)
by [Michael Hartl](http://www.michaelhartl.com/).
</pre></div>
                    </div>
                  </div>
                  <p>Нарешті, ми комітимо зміни:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git commit -am <span class="s2">"Improve the README"</span>
</pre></div>
                  </div>
                  <p>Ви можете пригадати з <a href="#sec-git_commands" class="hyperref">Розділу
                      <span class="ref">1.4.4</span></a>, що ми використовували
                    команду Git&nbsp; <code>git commit -a -m "Message"</code>,
                    з флагами “всі зміни” (<code>-a</code>) та повідомлення (<code>-m</code>).<span
                      class="intersentencespace"></span> Як показано в другій
                    команді вище, Git також дозволяє надавати два флаги
                    разом&nbsp; <code>git commit -am "Message"</code>.</p>
                  <p>Оскільки ми будемо використовувати цей приклад до кінця
                    книги, буде доброю ідєю&nbsp;<a href="https://bitbucket.org/repo/create"
                      target="_blank">створити новий репозиторій на Bitbucket</a>
                    та заштовхнути його туди:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git remote add origin git@bitbucket.org:&lt;username&gt;/sample_app.git
<span class="gp">$</span> git push -u origin --all <span class="c"># pushes up the repo and its refs for the first time</span>
</pre></div>
                  </div>
                  <p>Щоб запобігти головнякам інтеграції в майбутньому, також
                    буде гарною ідеєю розвернути застосування на Heroku, навіть
                    на цій ранішній стадії.<span class="intersentencespace"></span>
                    Як в <a href="#cha-beginning" class="hyperref">Главі <span
                        class="ref">1</span></a> та <a href="#cha-a_toy_app" class="hyperref">Главі
                      <span class="ref">2</span></a>, я рекомендую слідувати
                    крокам “hello, world!” в <a href="#code-hello_action" class="hyperref">Лістингу
                      <span class="ref">1.8</span></a> та <a href="#code-default_root_route"
                      class="hyperref">Лістингу <span class="ref">1.9</span></a>.<sup
                      id="_cha-3_footnote-ref-4" class="footnote"><a href="#cha-3_footnote-4">4</a></sup><span
                      class="intersentencespace"></span> Потім закомітьте зміни,
                    та проштовхніть їх на Heroku:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git commit -am <span class="s2">"Add hello"</span>
<span class="gp">$</span> heroku create
<span class="gp">$</span> git push heroku master
</pre></div>
                  </div>
                  <p>(Як в <a href="#sec-deploying" class="hyperref">Розділі <span
                        class="ref">1.5</span></a>, ви можете побачити деякі
                    попередження, що ви повинні покі що ігнорувати.<span class="intersentencespace"></span>
                    Ми здихаємось їх&nbsp;<a href="#sec-professional_grade_deployment"
                      class="hyperref">Розділі <span class="ref">7.5</span></a>).<span
                      class="intersentencespace"></span> За винятком імені
                    застосування Heroku, результат повинен співпадати з&nbsp;<a
                      href="#fig-heroku_app" class="hyperref">Лістингом <span class="ref">1.18</span></a>.</p>
                  <p>По мірі просування по залишку книжки, я рекомендую
                    просувати репозитарій та розгортати застосування регулярно,
                    що автоматично робить віддалені резервні копії, та дозволяє
                    вам перехоплювати любі помилки так швидко, як це можливо.
                    Якщо ви маєте проблеми на Heroku, впевніться, що подивились
                    на журнали, щоб спробувати діагностувати проблему:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> heroku logs
</pre></div>
                  </div>
                  <p><em>Зауваження</em>: Якщо ви дійдете використання Heroku
                    для справжнього застосування, впевніться, що слідуєте конфігурації
                    сервера для продакшина з&nbsp;<a href="#sec-professional_grade_deployment"
                      class="hyperref">Розділу <span class="ref">7.5</span></a>.</p>
                </div>
                <div id="_sec-static_pages" data-tralics-id="cid17" class="section"
                  data-number="3.2">
                  <h2><a href="#sec-static_pages" class="heading hyperref"><span
                        class="number">3.2 </span>Статичні сторінки</a></h2>
                  <p>Коли закінчено всі приготування з&nbsp;<a href="#sec-sample_app_setup"
                      class="hyperref">Розділу <span class="ref">3.1</span></a>,
                    ми готові почати розробку приклада застосування.<span class="intersentencespace"></span>
                    В цьому розділі ми зробимо перший крок в напрямку динамічних
                    сторінок, створивши набір дій та переглядів Rails<em></em><em></em>,
                    що містять тільки статичний HTML.<sup id="_cha-3_footnote-ref-5"
                      class="footnote"><a href="#cha-3_footnote-5">5</a></sup><span
                      class="intersentencespace"></span> Дії Rails зібрані разом
                    в <em>контролерах</em>(це C в MVC з <a href="#sec-mvc" class="hyperref">Розділу
                      <span class="ref">1.3.3</span></a>), що містять набори
                    дій, зв'язаних загальним призначенням.<span class="intersentencespace"></span>
                    Ми мали декілька контролерів в <a href="#cha-a_toy_app" class="hyperref">Главі
                      <span class="ref">2</span></a>, та будемо набувати
                    глибшого розуміння, коли ми ознайомимось з&nbsp; <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer"
                      target="_blank">REST-архитектурою</a> більш докладно
                    (починаючи з <a href="#cha-modeling_users" class="hyperref">Глави
                      <span class="ref">6</span></a>).<span class="intersentencespace"></span>
                    Щоб знайти наших підопічних буде корисним нагадати структуру
                    каталогів Rails з <a href="#sec-the_hello_application" class="hyperref">Розділу
                      <span class="ref">1.3</span></a> (<a href="#fig-directory_structure_rails"
                      class="hyperref">Малюнок <span class="ref">1.4</span></a>).<span
                      class="intersentencespace"></span>
                    В цьому розділі ми будемо робити здебільшого в каталогах <code>app/controllers</code>
                    та&nbsp; <code>app/views</code>.</p>
                  <p>Згадайте з&nbsp;<a href="#sec-git_commands" class="hyperref">Розділу
                      <span class="ref">1.4.4</span></a> що, коли ви
                    використовуєте Git, є гарною практикою робити нашу роботу на
                    окремомій гілці, ніж на головній.<span class="intersentencespace"></span>
                    Якщо ви використовуєте Git для контроля версій, ви повинні
                    виконати наступну команду для чек-аута гілки для статичних
                    сторінок:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b static-pages
</pre></div>
                  </div>
                  <p>(Тут перший рядок треба тільки для того, щоб переконатись,
                    що ми починаємо з мастер бранчу, так що гілка&nbsp;<code>static-pages</code>
                    базується на <code>master</code>.<span class="intersentencespace"></span>
                    Ви можете пропустити цю команду, якщо ви вже на мастер гілці).</p>
                  <div id="_sec-generated_static_pages" data-tralics-id="uid230"
                    class="subsection" data-number="3.2.1">
                    <h3><a href="#sec-generated_static_pages" class="heading hyperref"><span
                          class="number">3.2.1 </span>Згенеровані статичні
                        сторінки</a></h3>
                    <p>Щоб почати зі статичними сторінками, ми з початку
                      згенеруємо контролер, використовуючи той же скрипт Rails <code>generate</code>,
                      що ми використовували в&nbsp;<a href="#cha-a_toy_app" class="hyperref">Главі
                        <span class="ref">2</span></a> для генерації підпорок.<span
                        class="intersentencespace"></span> Оскільки ми будемо
                      робити Since we’ll be making a controller to handle static
                      pages, we’ll call it the Static Pages controller,
                      designated by the <a href="https://en.wikipedia.org/wiki/CamelCase"
                        target="_blank">CamelCase</a> name <code>StaticPages</code>.<span
                        class="intersentencespace"></span> We’ll also plan to
                      make actions for a Home page, a Help page, and an About
                      page, designated by the lower-case action names <code>home</code>,
                      <code>help</code>, and <code>about</code>.<span class="intersentencespace"></span>
                      The <code>generate</code> script takes an optional list
                      of actions, so we’ll include actions for the Home and Help
                      pages directly on the command line, while intentionally
                      leaving off the action for the About page so that we can
                      see how to add it (<a href="#sec-getting_started_with_testing"
                        class="hyperref">Section&nbsp;<span class="ref">3.3</span></a>).<span
                        class="intersentencespace"></span> The resulting command
                      to generate the Static Pages controller appears in <a href="#code-generating_pages"
                        class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>.</p>
                    <div class="codelisting" id="_code-generating_pages" data-tralics-id="uid231"
                      data-number="3.4">
                      <div class="heading"><span class="number">Listing 3.4:</span>
                        <span class="description">Generating a Static Pages
                          controller.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll">$ rails generate controller StaticPages home help
</span>      create  app/controllers/static_pages_controller.rb
       route  get 'static_pages/help'
       route  get 'static_pages/home'
      invoke  erb
      create    app/views/static_pages
      create    app/views/static_pages/home.html.erb
      create    app/views/static_pages/help.html.erb
      invoke  test_unit
      create    test/controllers/static_pages_controller_test.rb
      invoke  helper
      create    app/helpers/static_pages_helper.rb
      invoke    test_unit
      create      test/helpers/static_pages_helper_test.rb
      invoke  assets
      invoke    coffee
      create      app/assets/javascripts/static_pages.js.coffee
      invoke    scss
      create      app/assets/stylesheets/static_pages.css.scss
</pre></div>
                      </div>
                    </div>
                    <p>By the way, it’s worth noting that <code>rails g</code>
                      is a shortcut for <code>rails generate</code>, which is
                      only one of several shortcuts supported by Rails (<a href="#table-shortcuts"
                        class="hyperref">Table&nbsp;<span class="ref">3.1</span></a>).<span
                        class="intersentencespace"></span> For clarity, this
                      tutorial always uses the full command, but in real life
                      most Rails developers use one or more of the shortcuts
                      shown in <a href="#table-shortcuts" class="hyperref">Table&nbsp;<span
                          class="ref">3.1</span></a>.</p>
                    <div class="table" id="_table-shortcuts" data-tralics-id="uid232"
                      data-number="3.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left right_border"><strong>Full
                                command</strong></td>
                            <td class="align_left"><strong>Shortcut</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left right_border"><code>$ rails
                                server</code></td>
                            <td class="align_left"><code>$ rails s</code></td>
                          </tr>
                          <tr>
                            <td class="align_left right_border"><code>$ rails
                                console</code></td>
                            <td class="align_left"><code>$ rails c</code></td>
                          </tr>
                          <tr>
                            <td class="align_left right_border"><code>$ rails
                                generate</code></td>
                            <td class="align_left"><code>$ rails g</code></td>
                          </tr>
                          <tr>
                            <td class="align_left right_border"><code>$ bundle
                                install</code></td>
                            <td class="align_left"><code>$ bundle</code></td>
                          </tr>
                          <tr>
                            <td class="align_left right_border"><code>$ rake
                                test</code></td>
                            <td class="align_left"><code>$ rake</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 3.1: </span><span
                          class="description">Some Rails shortcuts. </span></div>
                    </div>
                    <p>Before moving on, if you’re using Git it’s a good idea to
                      add the files for the Static Pages controller to the
                      remote repository:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git status
<span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Add a Static Pages controller"</span>
<span class="gp">$</span> git push -u origin static-pages
</pre></div>
                    </div>
                    <p>The final command here arranges to push the <code>static-pages</code>
                      topic branch up to Bitbucket.<span class="intersentencespace"></span>
                      Subsequent pushes can omit the other arguments and write
                      simply</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git push
</pre></div>
                    </div>
                    <p>The commit and push sequence above represents the kind of
                      pattern I would ordinarily follow in real-life
                      development, but for simplicity I’ll typically omit such
                      intermediate commits from now on.</p>
                    <p>In <a href="#code-generating_pages" class="hyperref">Listing&nbsp;<span
                          class="ref">3.4</span></a>, note that we have passed
                      the controller name as CamelCase, which leads to the
                      creation of a controller file written in <a href="https://en.wikipedia.org/wiki/Snake_case"
                        target="_blank">snake case</a>, so that a controller
                      called StaticPages yields a file called <code>static_pages_controller.rb</code>.<span
                        class="intersentencespace"></span> This is merely a
                      convention, and in fact using snake case at the command
                      line also works: the command</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller static_pages ...
</pre></div>
                    </div>
                    <p>also generates a controller called <code>static_pages_controller.rb</code>.<span
                        class="intersentencespace"></span> Because Ruby uses
                      CamelCase for class names (<a href="#sec-ruby_classes" class="hyperref">Section&nbsp;<span
                          class="ref">4.4</span></a>), my preference is to refer
                      to controllers using their CamelCase names, but this is a
                      matter of taste.<span class="intersentencespace"></span>
                      (Since Ruby filenames typically use snake case, the Rails
                      generator converts CamelCase to snake case using the <a href="http://api.rubyonrails.org/classes/ActiveSupport/Inflector.html#method-i-underscore"
                        target="_blank"><span class="tt">underscore</span></a>
                      method.)</p>
                    <p>By the way, if you ever make a mistake when generating
                      code, it’s useful to know how to reverse the process.<span
                        class="intersentencespace"></span> See <a href="#aside-undoing_things"
                        class="hyperref">Box&nbsp;<span class="ref">3.1</span></a>
                      for some techniques on how to undo things in Rails.</p>
                    <div class="aside" id="_aside-undoing_things" data-tralics-id="uid233"
                      data-number="3.1">
                      <div class="heading"><span class="number">Box 3.1.</span>
                        <span class="description">Undoing things</span></div>
                      <p>Even when you’re very careful, things can sometimes go
                        wrong when developing Rails applications.<span class="intersentencespace"></span>
                        Happily, Rails has some facilities to help you recover.</p>
                      <p>One common scenario is wanting to undo code
                        generation—for example, when you change your mind on the
                        name of a controller and want to eliminate the generated
                        files.<span class="intersentencespace"></span> Because
                        Rails creates a substantial number of auxiliary files
                        along with the controller (as seen in <a href="#code-generating_pages"
                          class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>),
                        this isn’t as easy as removing the controller file
                        itself; undoing the generation means removing not only
                        the principal generated file, but all the ancillary
                        files as well.<span class="intersentencespace"></span>
                        (In fact, as we saw in <a href="#sec-demo_users_resource"
                          class="hyperref">Section&nbsp;<span class="ref">2.2</span></a>
                        and <a href="#sec-microposts_resource" class="hyperref">Section&nbsp;<span
                            class="ref">2.3</span></a>, <span class="tt">rails
                          generate</span> can make automatic edits to the <span
                          class="tt">routes.rb</span> file, which we also want
                        to undo automatically.)<span class="intersentencespace"></span>
                        In Rails, this can be accomplished with <span class="tt">rails
                          destroy</span> followed by the name of the generated
                        element.<span class="intersentencespace"></span> In
                        particular, these two commands cancel each other out:</p>
                      <pre>  $ rails generate controller StaticPages home help
  $ rails destroy  controller StaticPages home help</pre>
                      <p>Similarly, in <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                            class="ref">6</span></a> we’ll generate a <em>model</em>
                        as follows:</p>
                      <pre>  $ rails generate model User name:string email:string</pre>
                      <p>This can be undone using</p>
                      <pre>  $ rails destroy model User</pre>
                      <p>(In this case, it turns out we can omit the other
                        command-line arguments.<span class="intersentencespace"></span>
                        When you get to <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                            class="ref">6</span></a>, see if you can figure out
                        why.)</p>
                      <p>Another technique related to models involves undoing <em>migrations</em>,
                        which we saw briefly in <a href="#cha-a_toy_app" class="hyperref">Chapter&nbsp;<span
                            class="ref">2</span></a> and will see much more of
                        starting in <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                            class="ref">6</span></a>.<span class="intersentencespace"></span>
                        Migrations change the state of the database using the
                        command</p>
                      <pre>  $ bundle exec rake db:migrate</pre>
                      <p>We can undo a single migration step using</p>
                      <pre>  $ bundle exec rake db:rollback</pre>
                      <p>To go all the way back to the beginning, we can use</p>
                      <pre>  $ bundle exec rake db:migrate VERSION=0</pre>
                      <p>As you might guess, substituting any other number for <span
                          class="tt">0</span> migrates to that version number,
                        where the version numbers come from listing the
                        migrations sequentially.</p>
                      <p>With these techniques in hand, we are well-equipped to
                        recover from the inevitable development <a href="http://en.wikipedia.org/wiki/Military_slang#SNAFU"
                          target="_blank">snafus</a>.<span class="intersentencespace"></span></p>
                    </div>
                    <p>The Static Pages controller generation in <a href="#code-generating_pages"
                        class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>
                      automatically updates the routes file (<code>config/routes.rb</code>),
                      which we saw briefly in <a href="#sec-hello_world" class="hyperref">Section&nbsp;<span
                          class="ref">1.3.4</span></a>.<span class="intersentencespace"></span>
                      The routes file is responsible for implementing the router
                      (seen in <a href="#fig-mvc_detailed" class="hyperref">Figure&nbsp;<span
                          class="ref">2.11</span></a>) that defines the
                      correspondence between URLs and web pages.<span class="intersentencespace"></span>
                      The routes file is located in the <code>config</code>
                      directory, where Rails collects files needed for the
                      application configuration (<a href="#fig-config_directory_rails"
                        class="hyperref">Figure&nbsp;<span class="ref">3.1</span></a>).</p>
                    <div class="center figure" id="_fig-config_directory_rails"
                      data-tralics-id="uid234" data-number="3.1">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/config_directory_3rd_edition.png"
                          alt="images/figures/config_directory_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 3.1: </span><span
                          class="description">Contents of the sample app’s <code>config</code>
                          directory. </span></div>
                    </div>
                    <p>Since we included the <code>home</code> and <code>help</code>
                      actions in <a href="#code-generating_pages" class="hyperref">Listing&nbsp;<span
                          class="ref">3.4</span></a>, the routes file already
                      has a rule for each one, as seen in <a href="#code-pages_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">3.5</span></a>.</p>
                    <div class="codelisting" id="_code-pages_routes" data-tralics-id="uid235"
                      data-number="3.5">
                      <div class="heading"><span class="number">Listing 3.5:</span>
                        <span class="description">The routes for the <code>home</code>
                          and <code>help</code> actions in the Static Pages
                          controller.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
<span class="hll">  <span class="n">get</span> <span class="s1">'static_pages/home'</span>
</span><span class="hll">  <span class="n">get</span> <span class="s1">'static_pages/help'</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here the rule</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">get</span> <span class="s1">'static_pages/home'</span>
</pre></div>
                    </div>
                    <p>maps requests for the URL /static_pages/home to the <code>home</code>
                      action in the Static Pages controller.<span class="intersentencespace"></span>
                      Moreover, by using <code>get</code> we arrange for the
                      route to respond to a <span class="tt">GET</span>
                      request, which is one of the fundamental <em>HTTP verbs</em>
                      supported by the hypertext transfer protocol (<a href="#aside-get_etc"
                        class="hyperref">Box&nbsp;<span class="ref">3.2</span></a>).<span
                        class="intersentencespace"></span> In our case, this
                      means that when we generate a <code>home</code> action
                      inside the Static Pages controller we automatically get a
                      page at the address /static_pages/home.<span class="intersentencespace"></span>
                      To see the result, start a Rails development server as
                      described in <a href="#sec-rails_server" class="hyperref">Section&nbsp;<span
                          class="ref">1.3.2</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails server -b <span class="nv">$IP</span> -p <span
class="nv">$PORT</span>    <span class="c"># Use only `rails server` if running locally</span>
</pre></div>
                    </div>
                    <p>Then navigate to <a href="http://localhost:3000/static_pages/home"
                        target="_blank">/static_pages/home</a> (<a href="#fig-raw_home_view"
                        class="hyperref">Figure&nbsp;<span class="ref">3.2</span></a>).</p>
                    <div class="center figure" id="_fig-raw_home_view" data-tralics-id="uid236"
                      data-number="3.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/raw_home_view_3rd_edition.png"
                          alt="images/figures/raw_home_view_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 3.2: </span><span
                          class="description">The raw home view (<a href="http://localhost:3000/static_pages/home"
                            target="_blank">/static_pages/home</a>). </span></div>
                    </div>
                    <div class="aside" id="_aside-get_etc" data-tralics-id="uid237"
                      data-number="3.2">
                      <div class="heading"><span class="number">Box 3.2.</span>
                        <span class="description"><span class="tt">GET</span>,
                          et cet.</span></div>
                      <p>The hypertext transfer protocol (<a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods"
                          target="_blank">HTTP</a>) defines the basic operations
                        <span class="tt">GET</span>, <span class="tt">POST</span>,
                        <span class="tt">PATCH</span>, and <span class="tt">DELETE</span>.<span
                          class="intersentencespace"></span> These refer to
                        operations between a <em>client</em> computer
                        (typically running a web browser such as Chrome,
                        Firefox, or Safari) and a <em>server</em> (typically
                        running a web server such as Apache or Nginx).<span class="intersentencespace"></span>
                        (It’s important to understand that, when developing
                        Rails applications on a local computer, the client and
                        server are the same physical machine, but in general
                        they are different.)<span class="intersentencespace"></span>
                        An emphasis on HTTP verbs is typical of web frameworks
                        (including Rails) influenced by the <em>REST
                          architecture</em>, which we saw briefly in <a href="#cha-a_toy_app"
                          class="hyperref">Chapter&nbsp;<span class="ref">2</span></a>
                        and will start learning about more in <a href="#cha-sign_up"
                          class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>.</p>
                      <p><span class="tt">GET</span> is the most common HTTP
                        operation, used for <em>reading</em> data on the web;
                        it just means “get a page”, and every time you visit a
                        site like <a href="http://www.google.com/" target="_blank">http://www.google.com/</a>
                        or <a href="http://www.wikipedia.org/" target="_blank">http://www.wikipedia.org/</a>
                        your browser is submitting a <span class="tt">GET</span>
                        request.<span class="intersentencespace"></span> <span
                          class="tt">POST</span> is the next most common
                        operation; it is the request sent by your browser when
                        you submit a form.<span class="intersentencespace"></span>
                        In Rails applications, <span class="tt">POST</span>
                        requests are typically used for <em>creating</em>
                        things (although HTTP also allows <span class="tt">POST</span>
                        to perform updates).<span class="intersentencespace"></span>
                        For example, the <span class="tt">POST</span> request
                        sent when you submit a registration form creates a new
                        user on the remote site.<span class="intersentencespace"></span>
                        The other two verbs, <span class="tt">PATCH</span> and
                        <span class="tt">DELETE</span>, are designed for <em>updating</em>
                        and <em>destroying</em> things on the remote server.<span
                          class="intersentencespace"></span> These requests are
                        less common than <span class="tt">GET</span> and <span
                          class="tt">POST</span> since browsers are incapable of
                        sending them natively, but some web frameworks
                        (including Ruby on Rails) have clever ways of making it
                        <em>seem</em> like browsers are issuing such requests.<span
                          class="intersentencespace"></span> As a result, Rails
                        supports all four of the request types <span class="tt">GET</span>,
                        <span class="tt">POST</span>, <span class="tt">PATCH</span>,
                        and <span class="tt">DELETE</span>.<span class="intersentencespace"></span></p>
                    </div>
                    <p>To understand where this page comes from, let’s start by
                      taking a look at the Static Pages controller in a text
                      editor, which should look something like <a href="#code-static_pages_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">3.6</span></a>.<span
                        class="intersentencespace"></span> You may note that,
                      unlike the demo Users and Microposts controllers from <a
                        href="#cha-a_toy_app" class="hyperref">Chapter&nbsp;<span
                          class="ref">2</span></a>, the Static Pages controller
                      does not use the standard REST actions.<span class="intersentencespace"></span>
                      This is normal for a collection of static pages: the REST
                      architecture isn’t the best solution to every problem.</p>
                    <div class="codelisting" id="_code-static_pages_controller"
                      data-tralics-id="uid238" data-number="3.6">
                      <div class="heading"><span class="number">Listing 3.6:</span>
                        <span class="description">The Static Pages controller
                          made by <a href="#code-generating_pages" class="hyperref">Listing&nbsp;<span
                              class="ref">3.4</span></a>.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/static_pages_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">help</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We see from the <code>class</code> keyword in <a href="#code-static_pages_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">3.6</span></a>
                      that <code>static_pages_controller.rb</code> defines a <em>class</em>,
                      in this case called <code>StaticPagesController</code>.<span
                        class="intersentencespace"></span> Classes are simply a
                      convenient way to organize <em>functions</em> (also
                      called <em>methods</em>) like the <code>home</code> and
                      <code>help</code> actions, which are defined using the <code>def</code>
                      keyword.<span class="intersentencespace"></span> As
                      discussed in <a href="#sec-inheritance_hierarchies" class="hyperref">Section&nbsp;<span
                          class="ref">2.3.4</span></a>, the angle bracket&nbsp;<code>&lt;</code>
                      indicates that <code>StaticPagesController</code> <em>inherits</em>
                      from the Rails class <code>ApplicationController</code>;
                      as we’ll see momentarily, this means that our pages come
                      equipped with a large amount of Rails-specific
                      functionality.<span class="intersentencespace"></span>
                      (We’ll learn more about both classes and inheritance in <a
                        href="#sec-ruby_classes" class="hyperref">Section&nbsp;<span
                          class="ref">4.4</span></a>.)</p>
                    <p>In the case of the Static Pages controller, both of its
                      methods are initially empty:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">home</span>
<span class="k">end</span>

<span class="k">def</span> <span class="nf">help</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>In plain Ruby, these methods would simply do nothing.<span
                        class="intersentencespace"></span> In Rails, the
                      situation is different—<code>StaticPagesController</code>
                      is a Ruby class, but because it inherits from <code>ApplicationController</code>
                      the behavior of its methods is specific to Rails: when
                      visiting the URL /static_pages/home, Rails looks in the
                      Static Pages controller and executes the code in the <code>home</code>
                      action, and then renders the <em>view</em> (the V in MVC
                      from <a href="#sec-mvc" class="hyperref">Section&nbsp;<span
                          class="ref">1.3.3</span></a>) corresponding to the
                      action.<span class="intersentencespace"></span> In the
                      present case, the <code>home</code> action is empty, so
                      all visiting /static_pages/home does is render the view.<span
                        class="intersentencespace"></span> So, what does a view
                      look like, and how do we find it?</p>
                    <p>If you take another look at the output in <a href="#code-generating_pages"
                        class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>,
                      you might be able to guess the correspondence between
                      actions and views: an action like <code>home</code> has a
                      corresponding view called <code>home.html.erb</code>.<span
                        class="intersentencespace"></span> We’ll learn in <a href="#sec-slightly_dynamic_pages"
                        class="hyperref">Section&nbsp;<span class="ref">3.4</span></a>
                      what the <code>.erb</code> part means; from the <code>.html</code>
                      part you probably won’t be surprised that it basically
                      looks like HTML (<a href="#code-raw_home_view" class="hyperref">Listing&nbsp;<span
                          class="ref">3.7</span></a>).</p>
                    <div class="codelisting" id="_code-raw_home_view" data-tralics-id="uid239"
                      data-number="3.7">
                      <div class="heading"><span class="number">Listing 3.7:</span>
                        <span class="description">The generated view for the
                          Home page.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>StaticPages#home<span
class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>Find me in app/views/static_pages/home.html.erb<span
class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The view for the <code>help</code> action is analogous (<a
                        href="#code-raw_help_view" class="hyperref">Listing&nbsp;<span
                          class="ref">3.8</span></a>).</p>
                    <div class="codelisting" id="_code-raw_help_view" data-tralics-id="uid240"
                      data-number="3.8">
                      <div class="heading"><span class="number">Listing 3.8:</span>
                        <span class="description">The generated view for the
                          Help page.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/static_pages/help.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>StaticPages#help<span
class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>Find me in app/views/static_pages/help.html.erb<span
class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Both of these views are just placeholders: they have a
                      top-level heading (inside the <code>h1</code> tag) and a
                      paragraph (<code>p</code> tag) with the full path to the
                      corresponding file.</p>
                  </div>
                  <div id="_sec-custom_static_pages" data-tralics-id="uid241" class="subsection"
                    data-number="3.2.2">
                    <h3><a href="#sec-custom_static_pages" class="heading hyperref"><span
                          class="number">3.2.2 </span>Custom static pages</a></h3>
                    <p>We’ll add some (very slightly) dynamic content starting
                      in <a href="#sec-slightly_dynamic_pages" class="hyperref">Section&nbsp;<span
                          class="ref">3.4</span></a>, but as they stand the
                      views in <a href="#code-raw_home_view" class="hyperref">Listing&nbsp;<span
                          class="ref">3.7</span></a> and <a href="#code-raw_help_view"
                        class="hyperref">Listing&nbsp;<span class="ref">3.8</span></a>
                      underscore an important point: Rails views can simply
                      contain static HTML. This means we can begin customizing
                      the Home and Help pages even with no knowledge of Rails,
                      as shown in <a href="#code-custom_home_page" class="hyperref">Listing&nbsp;<span
                          class="ref">3.9</span></a> and <a href="#code-custom_help_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.10</span></a>.</p>
                    <div class="codelisting" id="_code-custom_home_page" data-tralics-id="uid242"
                      data-number="3.9">
                      <div class="heading"><span class="number">Listing 3.9:</span>
                        <span class="description">Custom HTML for the Home page.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>Sample App<span
class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  This is the home page for the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
  sample application.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-custom_help_page" data-tralics-id="uid243"
                      data-number="3.10">
                      <div class="heading"><span class="number">Listing 3.10:</span>
                        <span class="description">Custom HTML for the Help page.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/static_pages/help.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>Help<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  Get help on the Ruby on Rails Tutorial at the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/#help"</span><span
class="nt">&gt;</span>Rails Tutorial help section<span class="nt">&lt;/a&gt;</span>.
  To get help on this sample app, see the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/em&gt;</span>
  book<span class="nt">&lt;/a&gt;</span>.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The results of <a href="#code-custom_home_page" class="hyperref">Listing&nbsp;<span
                          class="ref">3.9</span></a> and <a href="#code-custom_help_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.10</span></a>
                      are shown in <a href="#fig-custom_home_page" class="hyperref">Figure&nbsp;<span
                          class="ref">3.3</span></a> and <a href="#fig-custom_help_page"
                        class="hyperref">Figure&nbsp;<span class="ref">3.4</span></a>.</p>
                    <div class="center figure" id="_fig-custom_home_page" data-tralics-id="uid244"
                      data-number="3.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/custom_home_page.png"
                          alt="images/figures/custom_home_page"></div>
                      <div class="caption"><span class="header">Figure 3.3: </span><span
                          class="description">A custom Home page. </span></div>
                    </div>
                    <div class="center figure" id="_fig-custom_help_page" data-tralics-id="uid245"
                      data-number="3.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/custom_help_page_3rd_edition.png"
                          alt="images/figures/custom_help_page_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 3.4: </span><span
                          class="description">A custom Help page. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-getting_started_with_testing" data-tralics-id="cid18"
                  class="section" data-number="3.3">
                  <h2><a href="#sec-getting_started_with_testing" class="heading hyperref"><span
                        class="number">3.3 </span>Getting started with testing</a></h2>
                  <p>Having created and filled in the Home and Help pages for
                    our sample app (<a href="#sec-custom_static_pages" class="hyperref">Section&nbsp;<span
                        class="ref">3.2.2</span></a>), now we’re going to add an
                    About page as well.<span class="intersentencespace"></span>
                    When making a change of this nature, it’s a good practice to
                    write an <em>automated test</em> to verify that the feature
                    is implemented correctly.<span class="intersentencespace"></span>
                    Developed over the course of building an application, the
                    resulting <em>test suite</em> serves as a safety net and as
                    executable documentation of the application source code.<span
                      class="intersentencespace"></span> When done right,
                    writing tests also allows us to develop <em>faster</em>
                    despite requiring extra code, because we’ll end up wasting
                    less time trying to track down bugs.<span class="intersentencespace"></span>
                    This is true only once we get good at writing tests, though,
                    which is one reason it’s important to start practicing as
                    early as possible.</p>
                  <p>Although virtually all Rails developers agree that testing
                    is a good idea, there is a diversity of opinion on the
                    details.<span class="intersentencespace"></span> There is an
                    especially lively debate over the use of test-driven
                    development (TDD),<sup id="_cha-3_footnote-ref-6" class="footnote"><a
                        href="#cha-3_footnote-6">6</a></sup> a testing technique
                    in which the programmer writes failing tests first, and then
                    writes the application code to get the tests to pass.<span class="intersentencespace"></span>
                    The <em>Ruby on Rails Tutorial</em> takes a lightweight,
                    intuitive approach to testing, employing TDD when convenient
                    without being dogmatic about it (<a href="#aside-when_to_test"
                      class="hyperref">Box&nbsp;<span class="ref">3.3</span></a>).</p>
                  <div class="aside" id="_aside-when_to_test" data-tralics-id="uid247"
                    data-number="3.3">
                    <div class="heading"><span class="number">Box 3.3.</span> <span
                        class="description">When to test</span></div>
                    <p>When deciding when and how to test, it’s helpful to
                      understand <em>why</em> to test.<span class="intersentencespace"></span>
                      In my view, writing automated tests has three main
                      benefits:</p>
                    <ol>
                      <li>Tests protect against <em>regressions</em>, where a
                        functioning feature stops working for some reason.<span
                          class="intersentencespace"></span> </li>
                      <li>Tests allow code to be <em>refactored</em> (i.e.,
                        changing its form without changing its function) with
                        greater confidence.<span class="intersentencespace"></span>
                      </li>
                      <li>Tests act as a <em>client</em> for the application
                        code, thereby helping determine its design and its
                        interface with other parts of the system.<span class="intersentencespace"></span>
                      </li>
                    </ol>
                    <p>Although none of the above benefits <em>require</em>
                      that tests be written first, there are many circumstances
                      where test-driven development (TDD) is a valuable tool to
                      have in your kit.<span class="intersentencespace"></span>
                      Deciding when and how to test depends in part on how
                      comfortable you are writing tests; many developers find
                      that, as they get better at writing tests, they are more
                      inclined to write them first.<span class="intersentencespace"></span>
                      It also depends on how difficult the test is relative to
                      the application code, how precisely the desired features
                      are known, and how likely the feature is to break in the
                      future.</p>
                    <p>In this context, it’s helpful to have a set of guidelines
                      on when we should test first (or test at all).<span class="intersentencespace"></span>
                      Here are some suggestions based on my own experience:</p>
                    <ul>
                      <li>When a test is especially short or simple compared to
                        the application code it tests, lean toward writing the
                        test first. </li>
                      <li>When the desired behavior isn’t yet crystal clear,
                        lean toward writing the application code first, then
                        write a test to codify the result. </li>
                      <li>Because security is a top priority, err on the side of
                        writing tests of the security model first. </li>
                      <li>Whenever a bug is found, write a test to reproduce it
                        and protect against regressions, then write the
                        application code to fix it. </li>
                      <li>Lean against writing tests for code (such as detailed
                        HTML structure) likely to change in the future. </li>
                      <li>Write tests before refactoring code, focusing on
                        testing error-prone code that’s especially likely to
                        break.<span class="intersentencespace"></span> </li>
                    </ul>
                    <p>In practice, the guidelines above mean that we’ll usually
                      write controller and model tests first and integration
                      tests (which test functionality across models, views, and
                      controllers) second.<span class="intersentencespace"></span>
                      And when we’re writing application code that isn’t
                      particularly brittle or error-prone, or is likely to
                      change (as is often the case with views), we’ll often skip
                      testing altogether.<span class="intersentencespace"></span></p>
                  </div>
                  <p>Our main testing tools will be <em>controller tests</em>
                    (starting in this section), <em>model tests</em> (starting
                    in <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">6</span></a>), and <em>integration tests</em>
                    (starting in <a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                        class="ref">7</span></a>).<span class="intersentencespace"></span>
                    Integration tests are especially powerful, as they allow us
                    to simulate the actions of a user interacting with our
                    application using a web browser.<span class="intersentencespace"></span>
                    Integration tests will eventually be our primary testing
                    technique, but controller tests give us an easier place to
                    start.</p>
                  <div id="_sec-our_first_test" data-tralics-id="uid257" class="subsection"
                    data-number="3.3.1">
                    <h3><a href="#sec-our_first_test" class="heading hyperref"><span
                          class="number">3.3.1 </span>Our first test</a></h3>
                    <p>Now it’s time to add an About page to our application.<span
                        class="intersentencespace"></span> As we’ll see, the
                      test is short and simple, so we’ll follow the guidelines
                      from <a href="#aside-when_to_test" class="hyperref">Box&nbsp;<span
                          class="ref">3.3</span></a> and write the test first.<span
                        class="intersentencespace"></span> We’ll then use the
                      failing test to drive the writing of the application code.</p>
                    <p>Getting started with testing can be challenging,
                      requiring extensive knowledge of both Rails and Ruby.<span
                        class="intersentencespace"></span> At this early stage,
                      writing tests might thus seem hopelessly intimidating.<span
                        class="intersentencespace"></span> Luckily, Rails has
                      already done the hardest part for us, because <code>rails
                        generate controller</code> (<a href="#code-generating_pages"
                        class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>)
                      automatically generated a test file to get us started:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> ls <span class="nb">test</span>/controllers/
<span class="go">static_pages_controller_test.rb</span>
</pre></div>
                    </div>
                    <p>Let’s take a look at it (<a href="#code-default_controller_test"
                        class="hyperref">Listing&nbsp;<span class="ref">3.11</span></a>).</p>
                    <div class="codelisting" id="_code-default_controller_test"
                      data-tralics-id="uid258" data-number="3.11">
                      <div class="heading"><span class="number">Listing 3.11:</span>
                        <span class="description">The default tests for the
                          StaticPages controller.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/static_pages_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">StaticPagesControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"should get home"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:home</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get help"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:help</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>It’s not important at this point to understand the syntax
                      in <a href="#code-default_controller_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.11</span></a> in detail, but we can see
                      that there are two tests, one for each controller action
                      we included on the command line in <a href="#code-generating_pages"
                        class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>.<span
                        class="intersentencespace"></span> Each test simply gets
                      an action and verifies (via an <em>assertion</em>) that
                      the result is a success.<span class="intersentencespace"></span>
                      Here the use of <code>get</code> indicates that our tests
                      expect the Home and Help pages to be ordinary web pages,
                      accessed using a <span class="tt">GET</span> request (<a
                        href="#aside-get_etc" class="hyperref">Box&nbsp;<span class="ref">3.2</span></a>).<span
                        class="intersentencespace"></span> The response <code>:success</code>
                      is an abstract representation of the underlying HTTP <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes"
                        target="_blank">status code</a> (in this case, <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success"
                        target="_blank">200 OK</a>).<span class="intersentencespace"></span>
                      In other words, a test like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">test</span> <span class="s2">"should get home"</span> <span
class="k">do</span>
  <span class="n">get</span> <span class="ss">:home</span>
  <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>says “Let’s test the Home page by issuing a <span class="tt">GET</span>
                      request to the <code>home</code> action and then making
                      sure we receive a ‘success’ status code in response.”</p>
                    <p>To begin our testing cycle, we need to run our test suite
                      to verify that the tests currently pass.<span class="intersentencespace"></span>
                      We can do this with the <code>rake</code> utility (<a href="#aside-rake"
                        class="hyperref">Box&nbsp;<span class="ref">2.1</span></a>)
                      as follows:<sup id="_cha-3_footnote-ref-7" class="footnote"><a
                          href="#cha-3_footnote-7">7</a></sup></p>
                    <div class="codelisting" id="_uid260" data-tralics-id="uid260"
                      data-number="3.12">
                      <div class="heading"><span class="number">Listing 3.12:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
2 tests, 2 assertions, 0 failures, 0 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                    <p>As required, initially our test suite is passing (<span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>).<span class="intersentencespace"></span>
                      (You won’t actually see the color green unless you add
                      MiniTest reporters in the optional <a href="#sec-minitest_reporters"
                        class="hyperref">Section&nbsp;<span class="ref">3.7.1</span></a>.)<span
                        class="intersentencespace"></span> By the way, the tests
                      take some time to start, which is due to two factors: (1)
                      starting the <em>Spring server</em> to preload parts of
                      the Rails environment, which only happens the first time;
                      and (2) overhead associated with Ruby startup time.<span class="intersentencespace"></span>
                      (The second factor is ameliorated when using Guard as
                      suggested in <a href="#sec-guard" class="hyperref">Section&nbsp;<span
                          class="ref">3.7.3</span></a>.)</p>
                  </div>
                  <div id="_sec-red" data-tralics-id="uid261" class="subsection"
                    data-number="3.3.2">
                    <h3><a href="#sec-red" class="heading hyperref"><span class="number">3.3.2
                          </span>Red</a></h3>
                    <p>As noted in <a href="#aside-when_to_test" class="hyperref">Box&nbsp;<span
                          class="ref">3.3</span></a>, test-driven development
                      involves writing a failing test first, writing the
                      application code needed to get it to pass, and then
                      refactoring the code if necessary.<span class="intersentencespace"></span>
                      Because many testing tools represent failing tests with
                      the color red and passing tests with the color green, this
                      sequence is sometimes known as the “Red, Green, Refactor”
                      cycle.<span class="intersentencespace"></span> In this
                      section, we’ll complete the first step in this cycle,
                      getting to <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>
                      by writing a failing test.<span class="intersentencespace"></span>
                      Then we’ll get to <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span> in <a href="#sec-green" class="hyperref">Section&nbsp;<span
                          class="ref">3.3.3</span></a>, and refactor in <a href="#sec-layouts_and_embedded_ruby"
                        class="hyperref">Section&nbsp;<span class="ref">3.4.3</span></a>.<sup
                        id="_cha-3_footnote-ref-8" class="footnote"><a href="#cha-3_footnote-8">8</a></sup></p>
                    <p>Our first step is to write a failing test for the About
                      page.<span class="intersentencespace"></span> Following
                      the models from <a href="#code-default_controller_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.11</span></a>, you can probably guess
                      the right test, which is shown in <a href="#code-about_test"
                        class="hyperref">Listing&nbsp;<span class="ref">3.13</span></a>.</p>
                    <div class="codelisting" id="_code-about_test" data-tralics-id="uid263"
                      data-number="3.13">
                      <div class="heading"><span class="number">Listing 3.13:</span>
                        <span class="description">A test for the About page.<span
                            class="intersentencespace"></span> <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/controllers/static_pages_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">StaticPagesControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"should get home"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:home</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get help"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:help</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should get about"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">get</span> <span class="ss">:about</span>
</span><span class="hll">    <span class="n">assert_response</span> <span class="ss">:success</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We see from the highlighted lines in <a href="#code-about_test"
                        class="hyperref">Listing&nbsp;<span class="ref">3.13</span></a>
                      that the test for the About page is the same as the Home
                      and Help tests with the word “about” in place of “home” or
                      “help”.</p>
                    <p>As required, the test initially fails:</p>
                    <div class="codelisting" id="_uid264" data-tralics-id="uid264"
                      data-number="3.14">
                      <div class="heading"><span class="number">Listing 3.14:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
3 tests, 2 assertions, 0 failures, 1 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-green" data-tralics-id="uid265" class="subsection"
                    data-number="3.3.3">
                    <h3><a href="#sec-green" class="heading hyperref"><span class="number">3.3.3
                          </span>Green</a></h3>
                    <p>Now that we have a failing test (<span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>), we’ll use the failing
                      test’s error messages to guide us to a passing test (<span
                        style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>),
                      thereby implementing a working About page.</p>
                    <p>We can get started by examining the error message output
                      by the failing test:<sup id="_cha-3_footnote-ref-9" class="footnote"><a
                          href="#cha-3_footnote-9">9</a></sup></p>
                    <div class="codelisting" id="_uid267" data-tralics-id="uid267"
                      data-number="3.15">
                      <div class="heading"><span class="number">Listing 3.15:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
ActionController::UrlGenerationError:
No route matches {:action=&gt;"about", :controller=&gt;"static_pages"}
</pre></div>
                      </div>
                    </div>
                    <p>The error message here says that no route matches the
                      desired action/controller combination, which is a hint
                      that we need to add a line to the routes file.<span class="intersentencespace"></span>
                      We can accomplish this by following the pattern in <a href="#code-pages_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">3.5</span></a>,
                      as shown in <a href="#code-about_route" class="hyperref">Listing&nbsp;<span
                          class="ref">3.16</span></a>.</p>
                    <div class="codelisting" id="_code-about_route" data-tralics-id="uid268"
                      data-number="3.16">
                      <div class="heading"><span class="number">Listing 3.16:</span>
                        <span class="description">Adding the <code>about</code>
                          route.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">get</span> <span class="s1">'static_pages/home'</span>
  <span class="n">get</span> <span class="s1">'static_pages/help'</span>
<span class="hll">  <span class="n">get</span> <span class="s1">'static_pages/about'</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The highlighted line in <a href="#code-about_route" class="hyperref">Listing&nbsp;<span
                          class="ref">3.16</span></a> tells Rails to route a <span
                        class="tt">GET</span> request for the URL
                      /static_pages/about to the <code>about</code> action in
                      the Static Pages controller.</p>
                    <p>Running our test suite again, we see that it is still <span
                        style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>, but now the error message
                      has changed:</p>
                    <div class="codelisting" id="_uid269" data-tralics-id="uid269"
                      data-number="3.17">
                      <div class="heading"><span class="number">Listing 3.17:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
AbstractController::ActionNotFound:
The action 'about' could not be found for StaticPagesController
</pre></div>
                      </div>
                    </div>
                    <p>The error message now indicates a missing <code>about</code>
                      action in the Static Pages controller, which we can add by
                      following the model provided by <code>home</code> and <code>help</code>
                      in <a href="#code-static_pages_controller" class="hyperref">Listing&nbsp;<span
                          class="ref">3.6</span></a>, as shown in <a href="#code-adding_the_about_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.18</span></a>.</p>
                    <div class="codelisting" id="_code-adding_the_about_page" data-tralics-id="uid270"
                      data-number="3.18">
                      <div class="heading"><span class="number">Listing 3.18:</span>
                        <span class="description">The Static Pages controller
                          with added <code>about</code> action.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/static_pages_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">help</span>
  <span class="k">end</span>

<span class="hll">  <span class="k">def</span> <span class="nf">about</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As before, our test suite is still <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>, but the error message has
                      changed again:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
ActionView::MissingTemplate: Missing template static_pages/about
</pre></div>
                    </div>
                    <p>This indicates a missing template, which in the context
                      of Rails is essentially the same thing as a view.<span class="intersentencespace"></span>
                      As described in <a href="#sec-generated_static_pages" class="hyperref">Section&nbsp;<span
                          class="ref">3.2.1</span></a>, an action called <code>home</code>
                      is associated with a view called <code>home.html.erb</code>
                      located in the <code>app/views/static_pages</code>
                      directory, which means that we need to create a new file
                      called <code>about.html.erb</code> in the same directory.</p>
                    <p>The way to create a file varies by system setup, but most
                      text editors will let you control-click inside the
                      directory where you want to create the file to bring up a
                      menu with a “New File” menu item.<span class="intersentencespace"></span>
                      Alternately, you can use the File menu to create a new
                      file and then pick the proper directory when saving it.<span
                        class="intersentencespace"></span> Finally, you can use
                      my favorite trick by applying the <a href="http://en.wikipedia.org/wiki/Touch_%28Unix%29"
                        target="_blank">Unix touch command</a> as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> touch app/views/static_pages/about.html.erb
</pre></div>
                    </div>
                    <p>Although <code>touch</code> is designed to update the
                      modification timestamp of a file or directory without
                      otherwise affecting it, as a side-effect it creates a new
                      (blank) file if one doesn’t already exist.<span class="intersentencespace"></span>
                      (If using the cloud IDE, you may have to refresh the file
                      tree as described in <a href="#sec-bundler" class="hyperref">Section&nbsp;<span
                          class="ref">1.3.1</span></a>.)</p>
                    <p>Once you’ve created the <code>about.html.erb</code> file
                      in the right directory, you should fill it with the
                      contents shown in <a href="#code-custom_about_page" class="hyperref">Listing&nbsp;<span
                          class="ref">3.19</span></a>.</p>
                    <div class="codelisting" id="_code-custom_about_page" data-tralics-id="uid271"
                      data-number="3.19">
                      <div class="heading"><span class="number">Listing 3.19:</span>
                        <span class="description">Code for the About page.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/views/static_pages/about.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>About<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  The <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails
  Tutorial<span class="nt">&lt;/em&gt;&lt;/a&gt;</span> is a
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;</span>book<span class="nt">&lt;/a&gt;</span> and
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://screencasts.railstutorial.org/"</span><span
class="nt">&gt;</span>screencast series<span class="nt">&lt;/a&gt;</span>
  to teach web development with
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://rubyonrails.org/"</span><span
class="nt">&gt;</span>Ruby on Rails<span class="nt">&lt;/a&gt;</span>.
  This is the sample application for the tutorial.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, running <code>rake test</code> should get
                      us back to <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid272" data-tralics-id="uid272"
                      data-number="3.20">
                      <div class="heading"><span class="number">Listing 3.20:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
3 tests, 3 assertions, 0 failures, 0 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                    <p>Of course, it’s never a bad idea to take a look at the
                      page in a browser to make sure our tests aren’t completely
                      crazy (<a href="#fig-about_us" class="hyperref">Figure&nbsp;<span
                          class="ref">3.5</span></a>).</p>
                    <div class="center figure" id="_fig-about_us" data-tralics-id="uid273"
                      data-number="3.5">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/about_us_3rd_edition.png"
                          alt="images/figures/about_us_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 3.5: </span><span
                          class="description">The new About page (<a href="http://localhost:3000/static_pages/about"
                            target="_blank">/static_pages/about</a>). </span></div>
                    </div>
                  </div>
                  <div id="_sec-refactor" data-tralics-id="uid274" class="subsection"
                    data-number="3.3.4">
                    <h3><a href="#sec-refactor" class="heading hyperref"><span class="number">3.3.4
                          </span>Refactor</a></h3>
                    <p>Now that we’ve gotten to <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>, we are free to refactor our
                      code with confidence.<span class="intersentencespace"></span>
                      When developing an application, often code will start to
                      “smell”, meaning that it gets ugly, bloated, or filled
                      with repetition.<span class="intersentencespace"></span>
                      The computer doesn’t care what the code looks like, of
                      course, but humans do, so it is important to keep the code
                      base clean by refactoring frequently.<span class="intersentencespace"></span>
                      Although our sample app is a little too small to refactor
                      right now, <a href="https://en.wikipedia.org/wiki/Code_smell"
                        target="_blank">code smell</a> seeps in at every crack,
                      and we’ll get started refactoring in <a href="#sec-layouts_and_embedded_ruby"
                        class="hyperref">Section&nbsp;<span class="ref">3.4.3</span></a>.</p>
                  </div>
                </div>
                <div id="_sec-slightly_dynamic_pages" data-tralics-id="cid19" class="section"
                  data-number="3.4">
                  <h2><a href="#sec-slightly_dynamic_pages" class="heading hyperref"><span
                        class="number">3.4 </span>Slightly dynamic pages</a></h2>
                  <p>Now that we’ve created the actions and views for some
                    static pages, we’ll make them <em>slightly</em> dynamic by
                    adding some content that changes on a per-page basis: we’ll
                    have the title of each page change to reflect its content.<span
                      class="intersentencespace"></span> Whether a changing
                    title represents <em>truly</em> dynamic content is
                    debatable, but in any case it lays the necessary foundation
                    for unambiguously dynamic content in <a href="#cha-sign_up"
                      class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>.</p>
                  <p>Our plan is to edit the Home, Help, and About pages to make
                    page titles that change on each page.<span class="intersentencespace"></span>
                    This will involve using the <code>&lt;title&gt;</code> tag
                    in our page views.<span class="intersentencespace"></span>
                    Most browsers display the contents of the title tag at the
                    top of the browser window, and it is also important for
                    search-engine optimization.<span class="intersentencespace"></span>
                    We’ll be using the full “Red, Green, Refactor” cycle: first
                    by adding simple tests for our page titles (<span style="color: red"><span
                        class="sc"></span><span class="sc"><strong>red</strong></span><span
                        class="sc"></span></span>), then by adding titles to
                    each of our three pages (<span style="color: ForestGreen"><span
                        class="sc"></span><span class="sc"><strong>green</strong></span><span
                        class="sc"></span></span>), and finally using a <em>layout</em>
                    file to eliminate duplication (Refactor).<span class="intersentencespace"></span>
                    By the end of this section, all three of our static pages
                    will have titles of the form “&lt;page name&gt; | Ruby on
                    Rails Tutorial Sample App”, where the first part of the
                    title will vary depending on the page (<a href="#table-static_pages"
                      class="hyperref">Table&nbsp;<span class="ref">3.2</span></a>).</p>
                  <p>The <code>rails new</code> command (<a href="#code-rails_new_sample_app"
                      class="hyperref">Listing&nbsp;<span class="ref">3.1</span></a>)
                    creates a layout file by default, but it’s instructive to
                    ignore it initially, which we can do by changing its name:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> mv app/views/layouts/application.html.erb layout_file   <span
class="c"># temporary change</span>
</pre></div>
                  </div>
                  <p>You wouldn’t normally do this in a real application, but
                    it’s easier to understand the purpose of the layout file if
                    we start by disabling it.</p>
                  <div class="table" id="_table-static_pages" data-tralics-id="uid275"
                    data-number="3.2">
                    <table class="tabular">
                      <tbody>
                        <tr class="bottom_border">
                          <td class="align_center"><strong>Page</strong></td>
                          <td class="align_left"><strong>URL</strong></td>
                          <td class="align_left"><strong>Base title</strong></td>
                          <td class="align_left"><strong>Variable title</strong></td>
                        </tr>
                        <tr>
                          <td class="align_center">Home</td>
                          <td class="align_left">/static_pages/home</td>
                          <td class="align_left"><code>"Ruby on Rails Tutorial
                              Sample App"</code></td>
                          <td class="align_left"><code>"Home"</code></td>
                        </tr>
                        <tr>
                          <td class="align_center">Help</td>
                          <td class="align_left">/static_pages/help</td>
                          <td class="align_left"><code>"Ruby on Rails Tutorial
                              Sample App"</code></td>
                          <td class="align_left"><code>"Help"</code></td>
                        </tr>
                        <tr>
                          <td class="align_center">About</td>
                          <td class="align_left">/static_pages/about</td>
                          <td class="align_left"><code>"Ruby on Rails Tutorial
                              Sample App"</code></td>
                          <td class="align_left"><code>"About"</code></td>
                        </tr>
                      </tbody>
                    </table>
                    <div class="caption"><span class="header">Table 3.2: </span><span
                        class="description">The (mostly) static pages for the
                        sample app. </span></div>
                  </div>
                  <div id="_sec-testing_titles" data-tralics-id="uid276" class="subsection"
                    data-number="3.4.1">
                    <h3><a href="#sec-testing_titles" class="heading hyperref"><span
                          class="number">3.4.1 </span>Testing titles (Red)</a></h3>
                    <p>To add page titles, we need to learn (or review) the
                      structure of a typical web page, which takes the form
                      shown in <a href="#code-html_structure" class="hyperref">Listing&nbsp;<span
                          class="ref">3.21</span></a>.</p>
                    <div class="codelisting" id="_code-html_structure" data-tralics-id="uid277"
                      data-number="3.21">
                      <div class="heading"><span class="number">Listing 3.21:</span>
                        <span class="description">The HTML structure of a
                          typical web page.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Greeting<span class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;p&gt;</span>Hello, world!<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The structure in <a href="#code-html_structure" class="hyperref">Listing&nbsp;<span
                          class="ref">3.21</span></a> includes a <em>document
                        type</em>, or doctype, declaration at the top to tell
                      browsers which version of HTML we’re using (in this case,
                      <a href="http://en.wikipedia.org/wiki/HTML5" target="_blank">HTML5</a>);<sup
                        id="_cha-3_footnote-ref-10" class="footnote"><a href="#cha-3_footnote-10">10</a></sup>
                      a <code>head</code> section, in this case with “Greeting”
                      inside a <code>title</code> tag; and a <code>body</code>
                      section, in this case with “Hello, world!”<span class="intersentencespace"></span>
                      inside a <code>p</code> (paragraph) tag.<span class="intersentencespace"></span>
                      (The indentation is optional—HTML is not sensitive to
                      whitespace, and ignores both tabs and spaces—but it makes
                      the document’s structure easier to see.)</p>
                    <p>We’ll write simple tests for each of the titles in <a href="#table-static_pages"
                        class="hyperref">Table&nbsp;<span class="ref">3.2</span></a>
                      by combining the tests in <a href="#code-about_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.13</span></a> with the <code>assert_select</code>
                      method, which lets us test for the presence of a
                      particular HTML tag (sometimes called a “selector”, hence
                      the name):<sup id="_cha-3_footnote-ref-11" class="footnote"><a
                          href="#cha-3_footnote-11">11</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Home | Ruby on Rails Tutorial Sample App"</span>
</pre></div>
                    </div>
                    <p>In particular, the code above checks for the presence of
                      a <code>&lt;title&gt;</code> tag containing the string
                      “Home | Ruby on Rails Tutorial Sample App”.<span class="intersentencespace"></span>
                      Applying this idea to all three static pages gives the
                      tests shown in <a href="#code-title_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">3.22</span></a>.</p>
                    <div class="codelisting" id="_code-title_tests" data-tralics-id="uid280"
                      data-number="3.22">
                      <div class="heading"><span class="number">Listing 3.22:</span>
                        <span class="description">The Static Pages controller
                          test with title tests.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/static_pages_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">StaticPagesControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"should get home"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:home</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Home | Ruby on Rails Tutorial Sample App"</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get help"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:help</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Help | Ruby on Rails Tutorial Sample App"</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get about"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:about</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"About | Ruby on Rails Tutorial Sample App"</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>(If the repetition of the base title “Ruby on Rails
                      Tutorial Sample App” bothers you, see the Вправи in <a href="#sec-static_pages_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">3.6</span></a>.)</p>
                    <p>With the tests from <a href="#code-title_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">3.22</span></a> in place, you should
                      verify that the test suite is currently <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid281" data-tralics-id="uid281"
                      data-number="3.23">
                      <div class="heading"><span class="number">Listing 3.23:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
3 tests, 6 assertions, 3 failures, 0 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-adding_page_titles" data-tralics-id="uid282" class="subsection"
                    data-number="3.4.2">
                    <h3><a href="#sec-adding_page_titles" class="heading hyperref"><span
                          class="number">3.4.2 </span>Adding page titles
                        (Green)</a></h3>
                    <p>Now we’ll add a title to each page, getting the tests
                      from <a href="#sec-testing_titles" class="hyperref">Section&nbsp;<span
                          class="ref">3.4.1</span></a> to pass in the process.<span
                        class="intersentencespace"></span> Applying the basic
                      HTML structure from <a href="#code-html_structure" class="hyperref">Listing&nbsp;<span
                          class="ref">3.21</span></a> to the custom Home page
                      from <a href="#code-custom_home_page" class="hyperref">Listing&nbsp;<span
                          class="ref">3.9</span></a> yields <a href="#code-home_view_full_html"
                        class="hyperref">Listing&nbsp;<span class="ref">3.24</span></a>.</p>
                    <div class="codelisting" id="_code-home_view_full_html" data-tralics-id="uid283"
                      data-number="3.24">
                      <div class="heading"><span class="number">Listing 3.24:</span>
                        <span class="description">The view for the Home page
                          with full HTML structure.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Home | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Sample App<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      This is the home page for the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
      sample application.
    <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The corresponding web page appears in <a href="#fig-home_view_full_html"
                        class="hyperref">Figure&nbsp;<span class="ref">3.6</span></a>.<sup
                        id="_cha-3_footnote-ref-12" class="footnote"><a href="#cha-3_footnote-12">12</a></sup></p>
                    <div class="center figure" id="_fig-home_view_full_html" data-tralics-id="uid285"
                      data-number="3.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_view_full_html.png"
                          alt="images/figures/home_view_full_html"></div>
                      <div class="caption"><span class="header">Figure 3.6: </span><span
                          class="description">The Home page with a title. </span></div>
                    </div>
                    <p>Following this model for the Help page (<a href="#code-custom_help_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.10</span></a>)
                      and the About page (<a href="#code-custom_about_page" class="hyperref">Listing&nbsp;<span
                          class="ref">3.19</span></a>) yields the code in <a href="#code-help_view_full_html"
                        class="hyperref">Listing&nbsp;<span class="ref">3.25</span></a>
                      and <a href="#code-about_view_full_html" class="hyperref">Listing&nbsp;<span
                          class="ref">3.26</span></a>.</p>
                    <div class="codelisting" id="_code-help_view_full_html" data-tralics-id="uid286"
                      data-number="3.25">
                      <div class="heading"><span class="number">Listing 3.25:</span>
                        <span class="description">The view for the Help page
                          with full HTML structure.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/help.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Help | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Help<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      Get help on the Ruby on Rails Tutorial at the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/#help"</span><span
class="nt">&gt;</span>Rails Tutorial help
      section<span class="nt">&lt;/a&gt;</span>.
      To get help on this sample app, see the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails
      Tutorial<span class="nt">&lt;/em&gt;</span> book<span class="nt">&lt;/a&gt;</span>.
    <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-about_view_full_html" data-tralics-id="uid287"
                      data-number="3.26">
                      <div class="heading"><span class="number">Listing 3.26:</span>
                        <span class="description">The view for the About page
                          with full HTML structure.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/about.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>About | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>About<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      The <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails
      Tutorial<span class="nt">&lt;/em&gt;&lt;/a&gt;</span> is a
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;</span>book<span class="nt">&lt;/a&gt;</span> and
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://screencasts.railstutorial.org/"</span><span
class="nt">&gt;</span>screencast series<span class="nt">&lt;/a&gt;</span>
      to teach web development with
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://rubyonrails.org/"</span><span
class="nt">&gt;</span>Ruby on Rails<span class="nt">&lt;/a&gt;</span>.
      This is the sample application for the tutorial.
    <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the test suite should be back to <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid288" data-tralics-id="uid288"
                      data-number="3.27">
                      <div class="heading"><span class="number">Listing 3.27:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
3 tests, 6 assertions, 0 failures, 0 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-layouts_and_embedded_ruby" data-tralics-id="uid289"
                    class="subsection" data-number="3.4.3">
                    <h3><a href="#sec-layouts_and_embedded_ruby" class="heading hyperref"><span
                          class="number">3.4.3 </span>Layouts and embedded Ruby
                        (Refactor)</a></h3>
                    <p>We’ve achieved a lot already in this section, generating
                      three valid pages using Rails controllers and actions, but
                      they are purely static HTML and hence don’t show off the
                      power of Rails.<span class="intersentencespace"></span>
                      Moreover, they suffer from terrible duplication:</p>
                    <ul>
                      <li>The page titles are almost (but not quite) exactly the
                        same.<span class="intersentencespace"></span> </li>
                      <li>“Ruby on Rails Tutorial Sample App” is common to all
                        three titles.<span class="intersentencespace"></span> </li>
                      <li>The entire HTML skeleton structure is repeated on each
                        page.<span class="intersentencespace"></span> </li>
                    </ul>
                    <p>This repeated code is a violation of the important “Don’t
                      Repeat Yourself” (DRY) principle; in this section we’ll
                      “DRY out our code” by removing the repetition.<span class="intersentencespace"></span>
                      At the end, we’ll re-run the tests from <a href="#sec-adding_page_titles"
                        class="hyperref">Section&nbsp;<span class="ref">3.4.2</span></a>
                      to verify that the titles are still correct.</p>
                    <p>Paradoxically, we’ll take the first step toward
                      eliminating duplication by first adding some more: we’ll
                      make the titles of the pages, which are currently quite
                      similar, match <em>exactly</em>.<span class="intersentencespace"></span>
                      This will make it much simpler to remove all the
                      repetition at a stroke.</p>
                    <p>The technique involves using <em>embedded Ruby</em> in
                      our views.<span class="intersentencespace"></span> Since
                      the Home, Help, and About page titles have a variable
                      component, we’ll use a special Rails function called <code>provide</code>
                      to set a different title on each page.<span class="intersentencespace"></span>
                      We can see how this works by replacing the literal title
                      “Home” in the <code>home.html.erb</code> view with the
                      code in <a href="#code-home_view_erb_title" class="hyperref">Listing&nbsp;<span
                          class="ref">3.28</span></a>.</p>
                    <div class="codelisting" id="_code-home_view_erb_title" data-tralics-id="uid293"
                      data-number="3.28">
                      <div class="heading"><span class="number">Listing 3.28:</span>
                        <span class="description">The view for the Home page
                          with an embedded Ruby title.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%</span> <span
class="n">provide</span><span class="p">(</span><span class="ss">:title</span><span
class="p">,</span> <span class="s2">"Home"</span><span class="p">)</span> <span
class="cp">%&gt;</span>
</span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
<span class="hll">    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</span>  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Sample App<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      This is the home page for the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
      sample application.
    <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-home_view_erb_title" class="hyperref">Listing&nbsp;<span
                          class="ref">3.28</span></a> is our first example of
                      embedded Ruby, also called <em>ERb</em>.<span class="intersentencespace"></span>
                      (Now you know why HTML views have the file extension <code>.html.erb</code>.)<span
                        class="intersentencespace"></span> ERb is the primary
                      template system for including dynamic content in web
                      pages.<sup id="_cha-3_footnote-ref-13" class="footnote"><a
                          href="#cha-3_footnote-13">13</a></sup><span class="intersentencespace"></span>
                      The code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Home"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>indicates using <span class="inline_verbatim">&lt;% ...
                        %&gt;</span> that Rails should call the <code>provide</code>
                      function and associate the string <code>"Home"</code>
                      with the label <code>:title</code>.<sup id="_cha-3_footnote-ref-14"
                        class="footnote"><a href="#cha-3_footnote-14">14</a></sup><span
                        class="intersentencespace"></span> Then, in the title,
                      we use the closely related notation <span class="inline_verbatim">&lt;%=
                        ... %&gt;</span> to insert the title into the template
                      using Ruby’s <code>yield</code> function:<sup id="_cha-3_footnote-ref-15"
                        class="footnote"><a href="#cha-3_footnote-15">15</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</pre></div>
                    </div>
                    <p>(The distinction between the two types of embedded Ruby
                      is that <span class="inline_verbatim">&lt;% ... %&gt;</span>
                      <em>executes</em> the code inside, while <span class="inline_verbatim">&lt;%=
                        ... %&gt;</span> executes it <em>and inserts</em> the
                      result into the template.)<span class="intersentencespace"></span>
                      The resulting page is exactly the same as before, only now
                      the variable part of the title is generated dynamically by
                      ERb.</p>
                    <p>We can verify that all this works by running the tests
                      from <a href="#sec-adding_page_titles" class="hyperref">Section&nbsp;<span
                          class="ref">3.4.2</span></a> and see that they are
                      still <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid297" data-tralics-id="uid297"
                      data-number="3.29">
                      <div class="heading"><span class="number">Listing 3.29:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
3 tests, 6 assertions, 0 failures, 0 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                    <p>Then we can make the corresponding replacements for the
                      Help and About pages (<a href="#code-help_view_erb_title"
                        class="hyperref">Listing&nbsp;<span class="ref">3.30</span></a>
                      and <a href="#code-about_view_erb_title" class="hyperref">Listing&nbsp;<span
                          class="ref">3.31</span></a>).</p>
                    <div class="codelisting" id="_code-help_view_erb_title" data-tralics-id="uid298"
                      data-number="3.30">
                      <div class="heading"><span class="number">Listing 3.30:</span>
                        <span class="description">The view for the Help page
                          with an embedded Ruby title.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/help.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%</span> <span
class="n">provide</span><span class="p">(</span><span class="ss">:title</span><span
class="p">,</span> <span class="s2">"Help"</span><span class="p">)</span> <span
class="cp">%&gt;</span>
</span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
<span class="hll">    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</span>  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Help<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      Get help on the Ruby on Rails Tutorial at the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/#help"</span><span
class="nt">&gt;</span>Rails Tutorial help
      section<span class="nt">&lt;/a&gt;</span>.
      To get help on this sample app, see the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails
      Tutorial<span class="nt">&lt;/em&gt;</span> book<span class="nt">&lt;/a&gt;</span>.
    <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-about_view_erb_title" data-tralics-id="uid299"
                      data-number="3.31">
                      <div class="heading"><span class="number">Listing 3.31:</span>
                        <span class="description">The view for the About page
                          with an embedded Ruby title.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/about.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%</span> <span
class="n">provide</span><span class="p">(</span><span class="ss">:title</span><span
class="p">,</span> <span class="s2">"About"</span><span class="p">)</span> <span
class="cp">%&gt;</span>
</span><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
<span class="hll">    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</span>  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;h1&gt;</span>About<span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;p&gt;</span>
      The <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails
      Tutorial<span class="nt">&lt;/em&gt;&lt;/a&gt;</span> is a
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;</span>book<span class="nt">&lt;/a&gt;</span> and
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://screencasts.railstutorial.org/"</span><span
class="nt">&gt;</span>screencast series<span class="nt">&lt;/a&gt;</span>
      to teach web development with
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://rubyonrails.org/"</span><span
class="nt">&gt;</span>Ruby on Rails<span class="nt">&lt;/a&gt;</span>.
      This is the sample application for the tutorial.
    <span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now that we’ve replaced the variable part of the page
                      titles with ERb, each of our pages looks something like
                      this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"The Title"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="k">yield</span><span
class="p">(</span><span class="ss">:title</span><span class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    Contents
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                    </div>
                    <p>In other words, all the pages are identical in structure,
                      including the contents of the title tag, with the sole
                      exception of the material inside the <code>body</code>
                      tag.</p>
                    <p>In order to factor out this common structure, Rails comes
                      with a special <em>layout</em> file called <code>application.html.erb</code>,
                      which we renamed in the beginning of this section (<a href="#sec-slightly_dynamic_pages"
                        class="hyperref">Section&nbsp;<span class="ref">3.4</span></a>)
                      and which we’ll now restore:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> mv layout_file app/views/layouts/application.html.erb
</pre></div>
                    </div>
                    <p>To get the layout to work, we have to replace the default
                      title with the embedded Ruby from the examples above:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</pre></div>
                    </div>
                    <p>The resulting layout appears in <a href="#code-application_layout"
                        class="hyperref">Listing&nbsp;<span class="ref">3.32</span></a>.</p>
                    <div class="codelisting" id="_code-application_layout" data-tralics-id="uid300"
                      data-number="3.32">
                      <div class="heading"><span class="number">Listing 3.32:</span>
                        <span class="description">The sample application site
                          layout.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
<span class="hll">    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</span>    <span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span>    <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                              <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note here the special line</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="k">yield</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>This code is responsible for inserting the contents of
                      each page into the layout.<span class="intersentencespace"></span>
                      It’s not important to know exactly how this works; what
                      matters is that using this layout ensures that, for
                      example, visiting the page /static_pages/home converts the
                      contents of <code>home.html.erb</code> to HTML and then
                      inserts it in place of <span class="inline_verbatim">&lt;%=
                        yield %&gt;</span>.</p>
                    <p>It’s also worth noting that the default Rails layout
                      includes several additional lines:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span
class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s2">"application"</span><span class="p">,</span> <span class="o">.</span><span
class="n">.</span><span class="o">.</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>This code arranges to include the application stylesheet
                      and JavaScript, which are part of the asset pipeline (<a href="#sec-the_asset_pipeline"
                        class="hyperref">Section&nbsp;<span class="ref">5.2.1</span></a>),
                      together with the Rails method <code>csrf_meta_tags</code>,
                      which prevents <a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery"
                        target="_blank">cross-site request forgery</a> (CSRF), a
                      type of malicious web attack.</p>
                    <p>Of course, the views in <a href="#code-home_view_erb_title"
                        class="hyperref">Listing&nbsp;<span class="ref">3.28</span></a>,
                      <a href="#code-help_view_erb_title" class="hyperref">Listing&nbsp;<span
                          class="ref">3.30</span></a>, and <a href="#code-about_view_erb_title"
                        class="hyperref">Listing&nbsp;<span class="ref">3.31</span></a>
                      are still filled with all the HTML structure included in
                      the layout, so we have to remove it, leaving only the
                      interior contents.<span class="intersentencespace"></span>
                      The resulting cleaned-up views appear in <a href="#code-home_view_interior"
                        class="hyperref">Listing&nbsp;<span class="ref">3.33</span></a>,
                      <a href="#code-help_view_interior" class="hyperref">Listing&nbsp;<span
                          class="ref">3.34</span></a>, and <a href="#code-about_view_interior"
                        class="hyperref">Listing&nbsp;<span class="ref">3.35</span></a>.</p>
                    <div class="codelisting" id="_code-home_view_interior" data-tralics-id="uid301"
                      data-number="3.33">
                      <div class="heading"><span class="number">Listing 3.33:</span>
                        <span class="description">The Home page with HTML
                          structure removed.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Home"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sample App<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  This is the home page for the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
  sample application.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-help_view_interior" data-tralics-id="uid302"
                      data-number="3.34">
                      <div class="heading"><span class="number">Listing 3.34:</span>
                        <span class="description">The Help page with HTML
                          structure removed.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/help.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Help"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Help<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  Get help on the Ruby on Rails Tutorial at the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/#help"</span><span
class="nt">&gt;</span>Rails Tutorial help section<span class="nt">&lt;/a&gt;</span>.
  To get help on this sample app, see the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/em&gt;</span>
  book<span class="nt">&lt;/a&gt;</span>.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-about_view_interior" data-tralics-id="uid303"
                      data-number="3.35">
                      <div class="heading"><span class="number">Listing 3.35:</span>
                        <span class="description">The About page with HTML
                          structure removed.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/static_pages/about.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"About"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>About<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  The <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;&lt;em&gt;</span>Ruby on Rails
  Tutorial<span class="nt">&lt;/em&gt;&lt;/a&gt;</span> is a
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/book"</span><span
class="nt">&gt;</span>book<span class="nt">&lt;/a&gt;</span> and
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://screencasts.railstutorial.org/"</span><span
class="nt">&gt;</span>screencast series<span class="nt">&lt;/a&gt;</span>
  to teach web development with
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://rubyonrails.org/"</span><span
class="nt">&gt;</span>Ruby on Rails<span class="nt">&lt;/a&gt;</span>.
  This is the sample application for the tutorial.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>With these views defined, the Home, Help, and About pages
                      are the same as before, but they have much less
                      duplication.</p>
                    <p>Experience shows that even fairly simple refactoring is
                      error-prone and can easily go awry.<span class="intersentencespace"></span>
                      This is one reason why having a good test suite is so
                      valuable.<span class="intersentencespace"></span> Rather
                      than double-checking every page for correctness—a
                      procedure that isn’t too hard early on but rapidly becomes
                      unwieldy as an application grows—we can simply verify that
                      the test suite is still <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid304" data-tralics-id="uid304"
                      data-number="3.36">
                      <div class="heading"><span class="number">Listing 3.36:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
3 tests, 6 assertions, 0 failures, 0 errors, 0 skips
</pre></div>
                      </div>
                    </div>
                    <p>This isn’t a <em>proof</em> that our code is still
                      correct, but it greatly increases the probability, thereby
                      providing a safety net to protect us against future bugs.</p>
                  </div>
                  <div id="_sec-setting_the_root_route" data-tralics-id="uid305"
                    class="subsection" data-number="3.4.4">
                    <h3><a href="#sec-setting_the_root_route" class="heading hyperref"><span
                          class="number">3.4.4 </span>Setting the root route</a></h3>
                    <p>Now that we’ve customized our site’s pages and gotten a
                      good start on the test suite, let’s set the application’s
                      root route before moving on.<span class="intersentencespace"></span>
                      As in <a href="#sec-hello_world" class="hyperref">Section&nbsp;<span
                          class="ref">1.3.4</span></a> and <a href="#sec-mvc_in_action"
                        class="hyperref">Section&nbsp;<span class="ref">2.2.2</span></a>,
                      this involves editing the <code>routes.rb</code> file to
                      connect / to a page of our choice, which in this case will
                      be the Home page.<span class="intersentencespace"></span>
                      (At this point, I also recommend removing the <code>hello</code>
                      action from the Application controller if you added it in
                      <a href="#sec-sample_app_setup" class="hyperref">Section&nbsp;<span
                          class="ref">3.1</span></a>.)<span class="intersentencespace"></span>
                      As shown in <a href="#code-home_root_route" class="hyperref">Listing&nbsp;<span
                          class="ref">3.37</span></a>, this means replacing the
                      generated <code>get</code> rule from <a href="#code-pages_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">3.5</span></a>
                      with the following code:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">root</span> <span class="s1">'static_pages#home'</span>
</pre></div>
                    </div>
                    <p>This changes the URL <code>static_pages/home</code> to
                      the controller/action pair <code>static_pages#home</code>,
                      which ensures that <span class="tt">GET</span> requests
                      for / get routed to the <code>home</code> action in the
                      Static Pages controller.<span class="intersentencespace"></span>
                      The resulting routes file is shown in <a href="#fig-home_root_route"
                        class="hyperref">Figure&nbsp;<span class="ref">3.7</span></a>.<span
                        class="intersentencespace"></span> (Note that, with the
                      code in <a href="#code-home_root_route" class="hyperref">Listing&nbsp;<span
                          class="ref">3.37</span></a>, the previous route <code>static_pages/home</code>
                      will no longer work.)</p>
                    <div class="codelisting" id="_code-home_root_route" data-tralics-id="uid306"
                      data-number="3.37">
                      <div class="heading"><span class="number">Listing 3.37:</span>
                        <span class="description">Setting the root route to the
                          Home page.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
<span class="hll">  <span class="n">root</span> <span class="s1">'static_pages#home'</span>
</span>  <span class="n">get</span>  <span class="s1">'static_pages/help'</span>
  <span class="n">get</span>  <span class="s1">'static_pages/about'</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-home_root_route" data-tralics-id="uid307"
                      data-number="3.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_root_route.png"
                          alt="images/figures/home_root_route"></div>
                      <div class="caption"><span class="header">Figure 3.7: </span><span
                          class="description">The Home page at the root route. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-static_pages_conclusion" data-tralics-id="cid20" class="section"
                  data-number="3.5">
                  <h2><a href="#sec-static_pages_conclusion" class="heading hyperref"><span
                        class="number">3.5 </span>Висновок</a></h2>
                  <p>Seen from the outside, this chapter hardly accomplished
                    anything: we started with static pages, and ended with…<em>mostly</em>
                    static pages.<span class="intersentencespace"></span> But
                    appearances are deceiving: by developing in terms of Rails
                    controllers, actions, and views, we are now in a position to
                    add arbitrary amounts of dynamic content to our site.<span class="intersentencespace"></span>
                    Seeing exactly how this plays out is the task for the rest
                    of this tutorial.</p>
                  <p>Before moving on, let’s take a minute to commit the changes
                    on our topic branch and merge them into the master branch.<span
                      class="intersentencespace"></span> Back in <a href="#sec-static_pages"
                      class="hyperref">Section&nbsp;<span class="ref">3.2</span></a>
                    we created a Git branch for the development of static pages.<span
                      class="intersentencespace"></span> If you haven’t been
                    making commits as we’ve been moving along, first make a
                    commit indicating that we’ve reached a stopping point:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Finish static pages"</span>
</pre></div>
                  </div>
                  <p>Then merge the changes back into the master branch using
                    the same technique as in <a href="#sec-git_commands" class="hyperref">Section&nbsp;<span
                        class="ref">1.4.4</span></a>:<sup id="_cha-3_footnote-ref-16"
                      class="footnote"><a href="#cha-3_footnote-16">16</a></sup></p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git merge static-pages
</pre></div>
                  </div>
                  <p>Once you reach a stopping point like this, it’s usually a
                    good idea to push your code up to a remote repository
                    (which, if you followed the steps in <a href="#sec-bitbucket"
                      class="hyperref">Section&nbsp;<span class="ref">1.4.3</span></a>,
                    will be Bitbucket):</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git push
</pre></div>
                  </div>
                  <p>I also recommend deploying the application to Heroku:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git push heroku
</pre></div>
                  </div>
                  <p>Here we’ve taken care to run the test suite before
                    deploying, which is a good habit to develop.</p>
                  <div id="_sec-static_pages_what_we_learned_in_this_chapter" data-tralics-id="uid309"
                    class="subsection" data-number="3.5.1">
                    <h3><a href="#sec-static_pages_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">3.5.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>For a third time, we went through the full procedure
                        of creating a new Rails application from scratch,
                        installing the necessary gems, pushing it up to a remote
                        repository, and deploying it to production. </li>
                      <li>The <code>rails</code> script generates a new
                        controller with <code>rails generate controller
                          ControllerName &lt;optional action names&gt;</code>. </li>
                      <li>New routes are defined in the file <code>config/routes.rb</code>.
                      </li>
                      <li>Rails views can contain static HTML or embedded Ruby
                        (ERb). </li>
                      <li>Automated testing allows us to write test suites that
                        drive the development of new features, allow for
                        confident refactoring, and catch regressions. </li>
                      <li>Test-driven development uses a “Red, Green, Refactor”
                        cycle. </li>
                      <li>Rails layouts allow the use of a common template for
                        pages in our application, thereby eliminating
                        duplication. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-static_pages_exercises" data-tralics-id="cid21" class="section"
                  data-number="3.6">
                  <h2><a href="#sec-static_pages_exercises" class="heading hyperref"><span
                        class="number">3.6 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>From this point until the end of the tutorial, I recommend
                    solving the Вправи on a separate topic branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout static-pages
<span class="gp">$</span> git checkout -b static-pages-Вправи
</pre></div>
                  </div>
                  <p>This practice will prevent conflicts with the main
                    tutorial.</p>
                  <p>Once you’re satisfied with your solutions, you can push up
                    the Вправи branch to a remote repository (if you’ve set one
                    up):</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="go">&lt;solve first exercise&gt;</span>
<span class="gp">$</span> git commit -am <span class="s2">"Eliminate repetition (solves exercise 3.1)"</span>
<span class="go">&lt;solve second exercise&gt;</span>
<span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Add a Contact page (solves exercise 3.2)"</span>
<span class="gp">$</span> git push -u origin static-pages-Вправи
<span class="gp">$</span> git checkout master
</pre></div>
                  </div>
                  <p>(As preparation for future development, the last step here
                    checks out the master branch, but we <em>don’t</em> merge
                    in the changes in order to avoid conflicts with the rest of
                    the tutorial.)<span class="intersentencespace"></span> In
                    future chapters, the branches and commit messages will
                    differ, of course, but the basic idea is the same.</p>
                  <ol>
                    <li>You may have noticed some repetition in the Static Pages
                      controller test (<a href="#code-title_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">3.22</span></a>).<span class="intersentencespace"></span>
                      In particular, the base title, “Ruby on Rails Tutorial
                      Sample App”, is the same for every title test.<span class="intersentencespace"></span>
                      Using the special function <code>setup</code>, which is
                      automatically run before every test, verify that the tests
                      in <a href="#code-base_title_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.38</span></a> are still <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>.<span class="intersentencespace"></span>
                      (<a href="#code-base_title_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.38</span></a> uses an <em>instance
                        variable</em>, seen briefly in <a href="#sec-mvc_in_action"
                        class="hyperref">Section&nbsp;<span class="ref">2.2.2</span></a>
                      and covered further in <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a>, combined with <em>string
                        interpolation</em>, which is covered further in <a href="#sec-strings"
                        class="hyperref">Section&nbsp;<span class="ref">4.2.2</span></a>.)
                      </li>
                    <li>Make a Contact page for the sample app.<sup id="_cha-3_footnote-ref-17"
                        class="footnote"><a href="#cha-3_footnote-17">17</a></sup><span
                        class="intersentencespace"></span> Following the model
                      in <a href="#code-about_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.13</span></a>, first write a test for
                      the existence of a page at the URL /static_pages/contact
                      by testing for the title “Contact | Ruby on Rails Tutorial
                      Sample App”.<span class="intersentencespace"></span> Get
                      your test to pass by following the same steps as when
                      making the About page in <a href="#sec-green" class="hyperref">Section&nbsp;<span
                          class="ref">3.3.3</span></a>, including filling the
                      Contact page with the content from <a href="#code-proposed_contact_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.39</span></a>.<span
                        class="intersentencespace"></span> (Note that, to keep
                      the Вправи independent, <a href="#code-proposed_contact_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.39</span></a>
                      doesn’t incorporate the changes made in <a href="#code-base_title_test"
                        class="hyperref">Listing&nbsp;<span class="ref">3.38</span></a>.)
                      </li>
                  </ol>
                  <div class="codelisting" id="_code-base_title_test" data-tralics-id="uid320"
                    data-number="3.38">
                    <div class="heading"><span class="number">Listing 3.38:</span>
                      <span class="description">The Static Pages controller test
                        with a base title.<span class="intersentencespace"></span>
                        <span style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">test/controllers/static_pages_controller_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">StaticPagesControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

<span class="hll">  <span class="k">def</span> <span class="nf">setup</span>
</span><span class="hll">    <span class="vi">@base_title</span> <span class="o">=</span> <span
class="s2">"Ruby on Rails Tutorial Sample App"</span>
</span><span class="hll">  <span class="k">end</span>
</span>
  <span class="nb">test</span> <span class="s2">"should get home"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:home</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Home | </span><span class="si">#{</span><span
class="vi">@base_title</span><span class="si">}</span><span class="s2">"</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get help"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:help</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Help | </span><span class="si">#{</span><span
class="vi">@base_title</span><span class="si">}</span><span class="s2">"</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get about"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:about</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"About | </span><span class="si">#{</span><span
class="vi">@base_title</span><span class="si">}</span><span class="s2">"</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-proposed_contact_page" data-tralics-id="uid321"
                    data-number="3.39">
                    <div class="heading"><span class="number">Listing 3.39:</span>
                      <span class="description">Code for a proposed Contact
                        page.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/views/static_pages/contact.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Contact"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Contact<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  Contact the Ruby on Rails Tutorial about the sample app at the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/#contact"</span><span
class="nt">&gt;</span>contact page<span class="nt">&lt;/a&gt;</span>.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-advanced_testing_setup" data-tralics-id="cid22" class="section"
                  data-number="3.7">
                  <h2><a href="#sec-advanced_testing_setup" class="heading hyperref"><span
                        class="number">3.7 </span>Advanced testing setup</a></h2>
                  <p>This optional section describes the testing setup used in
                    the <a href="http://screencasts.railstutorial.org/" target="_blank">Ruby
                      on Rails Tutorial screencast series</a>.<span class="intersentencespace"></span>
                    There are three main elements: an enhanced pass/fail
                    reporter (<a href="#sec-minitest_reporters" class="hyperref">Section&nbsp;<span
                        class="ref">3.7.1</span></a>), a utility to filter the
                    backtrace produced by failing tests (<a href="#sec-backtrace_silencer"
                      class="hyperref">Section&nbsp;<span class="ref">3.7.2</span></a>),
                    and an automated test runner that detects file changes and
                    automatically runs the corresponding tests (<a href="#sec-guard"
                      class="hyperref">Section&nbsp;<span class="ref">3.7.3</span></a>).<span
                      class="intersentencespace"></span> The code in this
                    section is advanced and is presented for convenience only;
                    you are not expected to understand it at this time.</p>
                  <p>The changes in this section should be made on the master
                    branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
</pre></div>
                  </div>
                  <div id="_sec-minitest_reporters" data-tralics-id="uid322" class="subsection"
                    data-number="3.7.1">
                    <h3><a href="#sec-minitest_reporters" class="heading hyperref"><span
                          class="number">3.7.1 </span>MiniTest reporters</a></h3>
                    <p>To get the default Rails tests to show <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span> and <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span> at the appropriate times, I
                      recommend adding the code in <a href="#code-minitest_reporters"
                        class="hyperref">Listing&nbsp;<span class="ref">3.40</span></a>
                      to your test helper file,<sup id="_cha-3_footnote-ref-18"
                        class="footnote"><a href="#cha-3_footnote-18">18</a></sup>
                      thereby making use of the <a href="https://github.com/kern/minitest-reporters"
                        target="_blank"><span class="tt">minitest-reporters</span></a>
                      gem included in <a href="#code-gemfile_sample_app" class="hyperref">Listing&nbsp;<span
                          class="ref">3.2</span></a>.</p>
                    <div class="codelisting" id="_code-minitest_reporters" data-tralics-id="uid324"
                      data-number="3.40">
                      <div class="heading"><span class="number">Listing 3.40:</span>
                        <span class="description">Configuring the tests to show
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span>
                          and <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span>.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">test/test_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">ENV</span><span class="o">[</span><span
class="s1">'RAILS_ENV'</span><span class="o">]</span> <span class="o">||=</span> <span
class="s1">'test'</span>
<span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span
class="n">expand_path</span><span class="p">(</span><span class="s1">'../../config/environment'</span><span
class="p">,</span> <span class="bp">__FILE__</span><span class="p">)</span>
<span class="nb">require</span> <span class="s1">'rails/test_help'</span>
<span class="hll"><span class="nb">require</span> <span class="s2">"minitest/reporters"</span>
</span><span class="hll"><span class="no">Minitest</span><span class="o">::</span><span
class="no">Reporters</span><span class="o">.</span><span class="n">use!</span>
</span>
<span class="k">class</span> <span class="nc">ActiveSupport</span><span class="o">::</span><span
class="no">TestCase</span>
  <span class="c1"># Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical</span>
  <span class="c1"># order.</span>
  <span class="n">fixtures</span> <span class="ss">:all</span>

  <span class="c1"># Add more helper methods to be used by all tests here...</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The resulting transition from <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span> to <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span> in the cloud IDE appears as
                      in <a href="#fig-red_to_green" class="hyperref">Figure&nbsp;<span
                          class="ref">3.8</span></a>.</p>
                    <div class="center figure" id="_fig-red_to_green" data-tralics-id="uid325"
                      data-number="3.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/red_to_green.png"
                          alt="images/figures/red_to_green"></div>
                      <div class="caption"><span class="header">Figure 3.8: </span><span
                          class="description">Going from <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span> to <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span> in the cloud IDE. </span></div>
                    </div>
                  </div>
                  <div id="_sec-backtrace_silencer" data-tralics-id="uid326" class="subsection"
                    data-number="3.7.2">
                    <h3><a href="#sec-backtrace_silencer" class="heading hyperref"><span
                          class="number">3.7.2 </span>Backtrace silencer</a></h3>
                    <p>Upon encountering an error or failing test, the test
                      runner shows a “stack trace” or “backtrace” that traces
                      the course of a failed test through the application.<span
                        class="intersentencespace"></span> While this backtrace
                      is usually very useful for tracking down the problem, on
                      some systems (including the cloud IDE) it goes past the
                      application code and into the various gem dependencies,
                      including Rails itself.<span class="intersentencespace"></span>
                      The resulting backtrace is often inconveniently long,
                      especially since the source of the problem is usually the
                      application and not one of its dependencies.</p>
                    <p>The solution is to filter the backtrace to eliminate
                      unwanted lines.<span class="intersentencespace"></span>
                      This requires the <a href="https://github.com/metaskills/mini_backtrace"
                        target="_blank"><span class="tt">mini_backtrace</span></a>
                      gem included in <a href="#code-gemfile_sample_app" class="hyperref">Listing&nbsp;<span
                          class="ref">3.2</span></a>, combined with a <em>backtrace
                        silencer</em>.<span class="intersentencespace"></span>
                      On the cloud IDE, most unwanted lines contain the string <code>rvm</code>
                      (referring to the Ruby Version Manager), so I recommend
                      using the silencer shown in <a href="#code-backtrace_silencer"
                        class="hyperref">Listing&nbsp;<span class="ref">3.41</span></a>
                      to filter them out.</p>
                    <div class="codelisting" id="_code-backtrace_silencer" data-tralics-id="uid327"
                      data-number="3.41">
                      <div class="heading"><span class="number">Listing 3.41:</span>
                        <span class="description">Adding a backtrace silencer
                          for RVM. <span class="break"></span> <span class="filepath">config/initializers/backtrace_silencers.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Be sure to restart your server when you modify this file.</span>

<span class="c1"># You can add backtrace silencers for libraries that you're using but don't</span>
<span class="c1"># wish to see in your backtraces.</span>
<span class="hll"><span class="no">Rails</span><span class="o">.</span><span class="n">backtrace_cleaner</span><span
class="o">.</span><span class="n">add_silencer</span> <span class="p">{</span> <span
class="o">|</span><span class="n">line</span><span class="o">|</span> <span class="n">line</span> <span
class="o">=~</span> <span class="sr">/rvm/</span> <span class="p">}</span>
</span>
<span class="c1"># You can also remove all the silencers if you're trying to debug a problem</span>
<span class="c1"># that might stem from framework code.</span>
<span class="c1"># Rails.backtrace_cleaner.remove_silencers!</span>
</pre></div>
                      </div>
                    </div>
                    <p>As noted in a comment in <a href="#code-backtrace_silencer"
                        class="hyperref">Listing&nbsp;<span class="ref">3.41</span></a>,
                      you should restart the local webserver after adding the
                      silencer.</p>
                  </div>
                  <div id="_sec-guard" data-tralics-id="uid328" class="subsection"
                    data-number="3.7.3">
                    <h3><a href="#sec-guard" class="heading hyperref"><span class="number">3.7.3
                          </span>Automated tests with Guard</a></h3>
                    <p>One annoyance associated with using the <code>rake test</code>
                      command is having to switch to the command line and run
                      the tests by hand.<span class="intersentencespace"></span>
                      To avoid this inconvenience, we can use <a href="https://github.com/guard/guard"
                        target="_blank"><em>Guard</em></a> to automate the
                      running of the tests.<span class="intersentencespace"></span>
                      Guard monitors changes in the filesystem so that, for
                      example, when we change the <code>static_pages_controller_test.rb</code>
                      file, only those tests get run.<span class="intersentencespace"></span>
                      Even better, we can configure Guard so that when, say, the
                      <code>home.html.erb</code> file is modified, the <code>static_pages_controller_test.rb</code>
                      automatically runs.</p>
                    <p>The <code>Gemfile</code> in <a href="#code-gemfile_sample_app"
                        class="hyperref">Listing&nbsp;<span class="ref">3.2</span></a>
                      has already included the <span class="tt">guard</span>
                      gem in our application, so to get started we just need to
                      initialize it:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec guard init
Writing new Guardfile to /home/ubuntu/workspace/sample_app/Guardfile
00:51:32 - INFO - minitest guard added to Guardfile, feel free to edit it
</pre></div>
                    </div>
                    <p>We then edit the resulting <code>Guardfile</code> so
                      that Guard will run the right tests when the integration
                      tests and views are updated (<a href="#code-guardfile" class="hyperref">Listing&nbsp;<span
                          class="ref">3.42</span></a>).<span class="intersentencespace"></span>
                      (Given its length and advanced nature, I recommend just
                      copy-and-pasting the contents of <a href="#code-guardfile"
                        class="hyperref">Listing&nbsp;<span class="ref">3.42</span></a>.)</p>
                    <div class="codelisting" id="_code-guardfile" data-tralics-id="uid329"
                      data-number="3.42">
                      <div class="heading"><span class="number">Listing 3.42:</span>
                        <span class="description">A custom <code>Guardfile</code>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Defines the matching rules for Guard.</span>
<span class="hll"><span class="n">guard</span> <span class="ss">:minitest</span><span
class="p">,</span> <span class="ss">spring</span><span class="p">:</span> <span
class="kp">true</span><span class="p">,</span> <span class="ss">all_on_start</span><span
class="p">:</span> <span class="kp">false</span> <span class="k">do</span>
</span>  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^test/(.*)/?(.*)_test\.rb$}</span><span
class="p">)</span>
  <span class="n">watch</span><span class="p">(</span><span class="s1">'test/test_helper.rb'</span><span
class="p">)</span> <span class="p">{</span> <span class="s1">'test'</span> <span
class="p">}</span>
  <span class="n">watch</span><span class="p">(</span><span class="s1">'config/routes.rb'</span><span
class="p">)</span>    <span class="p">{</span> <span class="n">integration_tests</span> <span
class="p">}</span>
  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^app/models/(.*?)\.rb$}</span><span
class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">matches</span><span
class="o">|</span>
    <span class="s2">"test/models/</span><span class="si">#{</span><span class="n">matches</span><span
class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="si">}</span><span
class="s2">_test.rb"</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^app/controllers/(.*?)_controller\.rb$}</span><span
class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">matches</span><span
class="o">|</span>
    <span class="n">resource_tests</span><span class="p">(</span><span class="n">matches</span><span
class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^app/views/([^/]*?)/.*\.html\.erb$}</span><span
class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">matches</span><span
class="o">|</span>
    <span class="o">[</span><span class="s2">"test/controllers/</span><span class="si">#{</span><span
class="n">matches</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span><span
class="si">}</span><span class="s2">_controller_test.rb"</span><span class="o">]</span> <span
class="o">+</span>
    <span class="n">integration_tests</span><span class="p">(</span><span class="n">matches</span><span
class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{^app/helpers/(.*?)_helper\.rb$}</span><span
class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">matches</span><span
class="o">|</span>
    <span class="n">integration_tests</span><span class="p">(</span><span class="n">matches</span><span
class="o">[</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="s1">'app/views/layouts/application.html.erb'</span><span
class="p">)</span> <span class="k">do</span>
    <span class="s1">'test/integration/site_layout_test.rb'</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="s1">'app/helpers/sessions_helper.rb'</span><span
class="p">)</span> <span class="k">do</span>
    <span class="n">integration_tests</span> <span class="o">&lt;&lt;</span> <span
class="s1">'test/helpers/sessions_helper_test.rb'</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="s1">'app/controllers/sessions_controller.rb'</span><span
class="p">)</span> <span class="k">do</span>
    <span class="o">[</span><span class="s1">'test/controllers/sessions_controller_test.rb'</span><span
class="p">,</span>
     <span class="s1">'test/integration/users_login_test.rb'</span><span class="o">]</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="s1">'app/controllers/account_activations_controller.rb'</span><span
class="p">)</span> <span class="k">do</span>
    <span class="s1">'test/integration/users_signup_test.rb'</span>
  <span class="k">end</span>
  <span class="n">watch</span><span class="p">(</span><span class="sr">%r{app/views/users/*}</span><span
class="p">)</span> <span class="k">do</span>
    <span class="n">resource_tests</span><span class="p">(</span><span class="s1">'users'</span><span
class="p">)</span> <span class="o">+</span>
    <span class="o">[</span><span class="s1">'test/integration/microposts_interface_test.rb'</span><span
class="o">]</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Returns the integration tests corresponding to the given resource.</span>
<span class="k">def</span> <span class="nf">integration_tests</span><span class="p">(</span><span
class="n">resource</span> <span class="o">=</span> <span class="ss">:all</span><span
class="p">)</span>
  <span class="k">if</span> <span class="n">resource</span> <span class="o">==</span> <span
class="ss">:all</span>
    <span class="no">Dir</span><span class="o">[</span><span class="s2">"test/integration/*"</span><span
class="o">]</span>
  <span class="k">else</span>
    <span class="no">Dir</span><span class="o">[</span><span class="s2">"test/integration/</span><span
class="si">#{</span><span class="n">resource</span><span class="si">}</span><span
class="s2">_*.rb"</span><span class="o">]</span>
  <span class="k">end</span>
<span class="k">end</span>

<span class="c1"># Returns the controller tests corresponding to the given resource.</span>
<span class="k">def</span> <span class="nf">controller_test</span><span class="p">(</span><span
class="n">resource</span><span class="p">)</span>
  <span class="s2">"test/controllers/</span><span class="si">#{</span><span class="n">resource</span><span
class="si">}</span><span class="s2">_controller_test.rb"</span>
<span class="k">end</span>

<span class="c1"># Returns all tests for the given resource.</span>
<span class="k">def</span> <span class="nf">resource_tests</span><span class="p">(</span><span
class="n">resource</span><span class="p">)</span>
  <span class="n">integration_tests</span><span class="p">(</span><span class="n">resource</span><span
class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">controller_test</span><span
class="p">(</span><span class="n">resource</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here the line</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">guard</span> <span class="ss">:minitest</span><span
class="p">,</span> <span class="ss">spring</span><span class="p">:</span> <span
class="kp">true</span><span class="p">,</span> <span class="ss">all_on_start</span><span
class="p">:</span> <span class="kp">false</span> <span class="k">do</span>
</pre></div>
                    </div>
                    <p>causes Guard to use the Spring server supplied by Rails
                      to speed up loading times, while also preventing Guard
                      from running the full test suite upon starting.</p>
                    <p>To prevent conflicts between Spring and Git when using
                      Guard, you should add the <code>spring/</code> directory
                      to the <code>.gitignore</code> file used by Git to
                      determine what to ignore when adding files or directories
                      to the repository.<span class="intersentencespace"></span>
                      The way to do this using the cloud IDE is as follows:</p>
                    <ol>
                      <li>Click on the gear icon in the upper right part of the
                        file navigation pane (<a href="#fig-file_navigator_gear_icon"
                          class="hyperref">Figure&nbsp;<span class="ref">3.9</span></a>).<span
                          class="intersentencespace"></span> </li>
                      <li>Select “Show hidden files” to show the <code>.gitignore</code>
                        file in the application’s root directory (<a href="#fig-show_hidden_files"
                          class="hyperref">Figure&nbsp;<span class="ref">3.10</span></a>).<span
                          class="intersentencespace"></span> </li>
                      <li>Double-click on the <code>.gitignore</code> file (<a
                          href="#fig-gitignore" class="hyperref">Figure&nbsp;<span
                            class="ref">3.11</span></a>) to open it, and then
                        fill it with the contents of <a href="#code-gitignore_spring"
                          class="hyperref">Listing&nbsp;<span class="ref">3.43</span></a>.<span
                          class="intersentencespace"></span> </li>
                    </ol>
                    <div class="center figure" id="_fig-file_navigator_gear_icon"
                      data-tralics-id="uid333" data-number="3.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/file_navigator_gear_icon.png"
                          alt="images/figures/file_navigator_gear_icon"></div>
                      <div class="caption"><span class="header">Figure 3.9: </span><span
                          class="description">The (rather subtle) gear icon in
                          the file navigator pane. </span></div>
                    </div>
                    <div class="center figure" id="_fig-show_hidden_files" data-tralics-id="uid334"
                      data-number="3.10">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/show_hidden_files.png"
                          alt="images/figures/show_hidden_files"></div>
                      <div class="caption"><span class="header">Figure 3.10: </span><span
                          class="description">Showing hidden files in the file
                          navigator. </span></div>
                    </div>
                    <div class="center figure" id="_fig-gitignore" data-tralics-id="uid335"
                      data-number="3.11">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/gitignore.png"
                          alt="images/figures/gitignore"></div>
                      <div class="caption"><span class="header">Figure 3.11: </span><span
                          class="description">The normally hidden <code>.gitignore</code>
                          file made visible. </span></div>
                    </div>
                    <div class="codelisting" id="_code-gitignore_spring" data-tralics-id="uid336"
                      data-number="3.43">
                      <div class="heading"><span class="number">Listing 3.43:</span>
                        <span class="description">Adding Spring to the <code>.gitignore</code>
                          file.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre># See https://help.github.com/articles/ignoring-files for more about ignoring
# files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*.log
/tmp

<span class="hll"># Ignore Spring files.
</span><span class="hll">/spring/*.pid
</span></pre></div>
                      </div>
                    </div>
                    <p>The Spring server is still a little quirky as of this
                      writing, and sometimes Spring <em>processes</em> will
                      accumulate and slow performance of your tests.<span class="intersentencespace"></span>
                      If your tests seem to be getting unusually sluggish, it’s
                      thus a good idea to inspect the system processes and kill
                      them if necessary (<a href="#aside-processes" class="hyperref">Box&nbsp;<span
                          class="ref">3.4</span></a>).</p>
                    <div class="aside" id="_aside-processes" data-tralics-id="uid337"
                      data-number="3.4">
                      <div class="heading"><span class="number">Box 3.4.</span>
                        <span class="description">Unix processes</span></div>
                      <p>On Unix-like systems such as Linux and OS X, user and
                        system tasks each take place within a well-defined
                        container called a <em>process</em>.<span class="intersentencespace"></span>
                        To see all the processes on your system, you can use the
                        <span class="tt">ps</span> command with the <span class="tt">aux</span>
                        options:</p>
                      <pre>  $ ps aux</pre>
                      <p>To filter the processes by type, you can run the
                        results of <span class="tt">ps</span> through the <span
                          class="tt">grep</span> pattern-matcher using a Unix
                        pipe&nbsp;<span class="tt">|</span>:</p>
                      <pre>  $ ps aux | grep spring
  ubuntu 12241 0.3 0.5 589960 178416 ? Ssl Sep20 1:46
  spring app | sample_app | started 7 hours ago</pre>
                      <p>The result shown gives some details about the process,
                        but the most important thing is the first number, which
                        is the <em>process id</em>, or pid.<span class="intersentencespace"></span>
                        To eliminate an unwanted process, use the <span class="tt">kill</span>
                        command to issue the Unix kill code (which <a href="https://en.wikipedia.org/wiki/Unix_signal#List_of_signals"
                          target="_blank">happens to be&nbsp;9</a>) to the pid:</p>
                      <pre>  $ kill -9 12241</pre>
                      <p>This is the technique I recommend for killing
                        individual processes, such as a rogue Rails server (with
                        the pid found via <span class="tt">ps aux | grep server</span>),
                        but sometimes it’s convenient to kill all the processes
                        matching a particular process name, such as when you
                        want to kill all the <span class="tt">spring</span>
                        processes gunking up your system.<span class="intersentencespace"></span>
                        In this particular case, you should first try stopping
                        the processes with the <span class="tt">spring</span>
                        command itself:</p>
                      <pre>  $ spring stop</pre>
                      <p>Sometimes this doesn’t work, though, and you can kill
                        all the processes with name <span class="tt">spring</span>
                        using the <span class="tt">pkill</span> command as
                        follows:</p>
                      <pre>  $ pkill -9 -f spring</pre>
                      <p>Any time something isn’t behaving as expected or a
                        process appears to be frozen, it’s a good idea to run <span
                          class="tt">ps aux</span> to see what’s going on, and
                        then run <span class="tt">kill -9 &lt;pid&gt;</span> or
                        <span class="tt">pkill -9 -f &lt;name&gt;</span> to
                        clear things up.</p>
                    </div>
                    <p>Once Guard is configured, you should open a new terminal
                      and (as with the Rails server in <a href="#sec-rails_server"
                        class="hyperref">Section&nbsp;<span class="ref">1.3.2</span></a>)
                      run it at the command line as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec guard
</pre></div>
                    </div>
                    <p>The rules in <a href="#code-guardfile" class="hyperref">Listing&nbsp;<span
                          class="ref">3.42</span></a> are optimized for this
                      tutorial, automatically running (for example) the
                      integration tests when a controller is changed.<span class="intersentencespace"></span>
                      To run <em>all</em> the tests, hit return at the <code>guard&gt;</code>
                      prompt.<span class="intersentencespace"></span> (This may
                      sometimes give an error indicating a failure to connect to
                      the Spring server.<span class="intersentencespace"></span>
                      To fix the problem, just hit return again.)</p>
                    <p>To exit Guard, press Ctrl-D. To add additional matchers
                      to Guard, refer to the examples in <a href="#code-guardfile"
                        class="hyperref">Listing&nbsp;<span class="ref">3.42</span></a>,
                      the <a href="https://github.com/guard/guard" target="_blank">Guard
                        README</a>, and the <a href="https://github.com/guard/guard/wiki"
                        target="_blank">Guard wiki</a>.</p>
                  </div>
                </div>
                <div id="cha-3_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-3_footnote-1">If you’re using the cloud IDE,
                      it’s often useful to use the “Goto Anything” command,
                      which makes it easy to navigate the filesystem by typing
                      in partial filenames.<span class="intersentencespace"></span>
                      In this context, having the hello, toy, and sample apps
                      present in the same project can be inconvenient due to the
                      many common filenames.<span class="intersentencespace"></span>
                      For example, when searching for a file called “Gemfile”,
                      six possibilities will show up, because each project has
                      matching files called <code>Gemfile</code> and <code>Gemfile.lock</code>.<span
                        class="intersentencespace"></span> Thus, you may want to
                      consider removing the first two apps before proceeding,
                      which you can do by navigating to the <code>workspace</code>
                      directory and running <code>rm -rf hello_app/ toy_app/</code>
                      (<a href="#table-unix_commands" class="hyperref">Table&nbsp;<span
                          class="ref">1.1</span></a>).<span class="intersentencespace"></span>
                      (As long as you pushed the corresponding repositories up
                      to Bitbucket, you can always recover them later.)&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-1">↑</a></li>
                    <li id="_cha-3_footnote-2">It’s worth noting that <span class="inline_verbatim">--without</span>
                      <span class="inline_verbatim">production</span> is a
                      “remembered option”, which means it will be included
                      automatically the next time we run <code>bundle install</code>.&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-2">↑</a></li>
                    <li id="_cha-3_footnote-3">I recommend eventually learning
                      how to install and configure PostgreSQL in development,
                      but the chances are now is not that time.<span class="intersentencespace"></span>
                      When the time comes, Google “install configure postgresql
                      &lt;your system&gt;” and “rails postgresql setup” and
                      prepare for a challenge.<span class="intersentencespace"></span>
                      (On the cloud IDE, &lt;your system&gt; is Ubuntu.)&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-3">↑</a></li>
                    <li id="_cha-3_footnote-4">As noted in <a href="#cha-a_toy_app"
                        class="hyperref">Chapter&nbsp;<span class="ref">2</span></a>,
                      the main reason for this is that the default Rails page
                      typically breaks at Heroku, which makes it hard to tell if
                      the deployment was successful or not.&nbsp;<a class="arrow"
                        href="#cha-3_footnote-ref-4">↑</a></li>
                    <li id="_cha-3_footnote-5">Our method for making static
                      pages is probably the simplest, but it’s not the only way.<span
                        class="intersentencespace"></span> The optimal method
                      really depends on your needs; if you expect a <em>large</em>
                      number of static pages, using a Static Pages controller
                      can get quite cumbersome, but in our sample app we’ll only
                      need a few.<span class="intersentencespace"></span> If you
                      do need a lot of static pages, take a look at the <a href="https://github.com/thoughtbot/high_voltage"
                        target="_blank"><span class="tt">high_voltage</span></a>
                      gem.<span class="intersentencespace"></span> For a dated
                      but still useful discussion of this issue, see the <a href="http://blog.hasmanythrough.com/2008/4/2/simple-pages"
                        target="_blank">simple pages post on hasmanythrough</a>.&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-5">↑</a></li>
                    <li id="_cha-3_footnote-6">See, e.g., “<a href="http://david.heinemeierhansson.com/2014/tdd-is-dead-long-live-testing.html"
                        target="_blank">TDD is dead. Long live testing.</a>” by
                      Rails creator David Heinemeier Hansson.&nbsp;<a class="arrow"
                        href="#cha-3_footnote-ref-6">↑</a></li>
                    <li id="_cha-3_footnote-7">As noted in <a href="#sec-demo_users_resource"
                        class="hyperref">Section&nbsp;<span class="ref">2.2</span></a>,
                      the use of <code>bundle exec</code> is unnecessary on
                      some systems, including the cloud IDE recommended in <a href="#sec-development_environment"
                        class="hyperref">Section&nbsp;<span class="ref">1.2.1</span></a>,
                      but I include it for completeness.<span class="intersentencespace"></span>
                      In practice, my usual algorithm is to omit <code>bundle
                        exec</code> unless I get an error, in which case I
                      re-try with <code>bundle exec</code> and see if it
                      works.&nbsp;<a class="arrow" href="#cha-3_footnote-ref-7">↑</a></li>
                    <li id="_cha-3_footnote-8">By default, <code>rake test</code>
                      shows red when the tests fail, but doesn’t show green when
                      the tests pass.<span class="intersentencespace"></span> To
                      arrange for a true Red–Green cycle, see <a href="#sec-minitest_reporters"
                        class="hyperref">Section&nbsp;<span class="ref">3.7.1</span></a>.&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-8">↑</a></li>
                    <li id="_cha-3_footnote-9">On some systems, you may have to
                      scroll past the “stack trace” or “backtrace” that traces
                      the error’s path through the source code.<span class="intersentencespace"></span>
                      See <a href="#sec-backtrace_silencer" class="hyperref">Section&nbsp;<span
                          class="ref">3.7.2</span></a> for information on how to
                      filter this backtrace to eliminate unwanted lines.&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-9">↑</a></li>
                    <li id="_cha-3_footnote-10">HTML changes with time; by
                      explicitly making a doctype declaration we make it
                      likelier that browsers will render our pages properly in
                      the future.<span class="intersentencespace"></span> The
                      simple doctype <code>&lt;!DOCTYPE html&gt;</code> is
                      characteristic of the latest HTML standard, HTML5.&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-10">↑</a></li>
                    <li id="_cha-3_footnote-11">For a list of common MiniTest
                      assertions, see the <a href="http://guides.rubyonrails.org/testing.html#available-assertions"
                        target="_blank">table of available assertions in the
                        Rails Guides testing article</a>.&nbsp;<a class="arrow"
                        href="#cha-3_footnote-ref-11">↑</a></li>
                    <li id="_cha-3_footnote-12">Most of the screenshots in this
                      book use Google Chrome, but <a href="#fig-home_view_full_html"
                        class="hyperref">Figure&nbsp;<span class="ref">3.6</span></a>
                      uses Safari because Chrome doesn’t display the full page
                      title.&nbsp;<a class="arrow" href="#cha-3_footnote-ref-12">↑</a></li>
                    <li id="_cha-3_footnote-13">There is a second popular
                      template system called <a href="http://haml-lang.com/" target="_blank">Haml</a>,
                      which I personally love, but it’s not <em>quite</em>
                      standard enough yet for use in an introductory
                      tutorial.&nbsp;<a class="arrow" href="#cha-3_footnote-ref-13">↑</a></li>
                    <li id="_cha-3_footnote-14">Experienced Rails developers
                      might have expected the use of <code>content_for</code>
                      at this point, but it doesn’t work well with the asset
                      pipeline.<span class="intersentencespace"></span> The <code>provide</code>
                      function is its replacement.&nbsp;<a class="arrow" href="#cha-3_footnote-ref-14">↑</a></li>
                    <li id="_cha-3_footnote-15">If you’ve studied Ruby before,
                      you might suspect that Rails is <em>yielding</em> the
                      contents to a block, and your suspicion would be correct.<span
                        class="intersentencespace"></span> But you don’t need to
                      know this to develop applications with Rails.&nbsp;<a class="arrow"
                        href="#cha-3_footnote-ref-15">↑</a></li>
                    <li id="_cha-3_footnote-16">If you get an error message
                      saying that the Spring process id (pid) file would be
                      overwritten by the merge, just remove the file using <code>rm
                        -f *.pid</code> at the command line.&nbsp;<a class="arrow"
                        href="#cha-3_footnote-ref-16">↑</a></li>
                    <li id="_cha-3_footnote-17">This exercise is solved in <a href="#sec-contact_page"
                        class="hyperref">Section&nbsp;<span class="ref">5.3.1</span></a>.&nbsp;<a
                        class="arrow" href="#cha-3_footnote-ref-17">↑</a></li>
                    <li id="_cha-3_footnote-18">The code in <a href="#code-minitest_reporters"
                        class="hyperref">Listing&nbsp;<span class="ref">3.40</span></a>
                      mixes single- and double-quoted strings.<span class="intersentencespace"></span>
                      This is because <code>rails new</code> generates
                      single-quoted strings, whereas the <a href="https://github.com/kern/minitest-reporters"
                        target="_blank">MiniTest reporters documentation</a>
                      uses double-quoted strings.<span class="intersentencespace"></span>
                      This mixing of the two string types is common in Ruby; see
                      <a href="#sec-strings" class="hyperref">Section&nbsp;<span
                          class="ref">4.2.2</span></a> for more
                      information.&nbsp;<a class="arrow" href="#cha-3_footnote-ref-18">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-rails_flavored_ruby" data-tralics-id="cid23" class="chapter"
                  data-number="4">
                  <h1><a name="cha-rails_flavored_ruby" class="heading hyperref"><span
                        class="number">Chapter 4 </span>Rails-flavored Ruby</a></h1>
                  <p>Grounded in examples from <a href="#cha-static_pages" class="hyperref">Chapter&nbsp;<span
                        class="ref">3</span></a>, this chapter explores some
                    elements of the Ruby programming language that are important
                    for Rails.<span class="intersentencespace"></span> Ruby is a
                    big language, but fortunately the subset needed to be
                    productive as a Rails developer is relatively small.<span class="intersentencespace"></span>
                    It also differs somewhat from the usual material covered in
                    an introduction to Ruby.<span class="intersentencespace"></span>
                    This chapter is designed to give you a solid foundation in
                    Rails-flavored Ruby, whether or not you have prior
                    experience in the language.<span class="intersentencespace"></span>
                    It covers a lot of material, and it’s OK not to get it all
                    on the first pass.<span class="intersentencespace"></span>
                    I’ll refer back to it frequently in future chapters.</p>
                </div>
                <div id="_sec-motivation" data-tralics-id="cid24" class="section"
                  data-number="4.1">
                  <h2><a href="#sec-motivation" class="heading hyperref"><span class="number">4.1
                        </span>Motivation</a></h2>
                  <p>As we saw in the last chapter, it’s possible to develop the
                    skeleton of a Rails application, and even start testing it,
                    with essentially no knowledge of the underlying Ruby
                    language.<span class="intersentencespace"></span> We did
                    this by relying on the test code provided by the tutorial
                    and addressing each error message until the test suite was
                    passing.<span class="intersentencespace"></span> This
                    situation can’t last forever, though, and we’ll open this
                    chapter with an addition to the site that brings us
                    face-to-face with our Ruby limitations.</p>
                  <p>When we last saw our new application, we had just updated
                    our mostly static pages to use Rails layouts to eliminate
                    duplication in our views, as shown in <a href="#code-application_layout_redux"
                      class="hyperref">Listing&nbsp;<span class="ref">4.1</span></a>
                    (which is the same as <a href="#code-application_layout" class="hyperref">Listing&nbsp;<span
                        class="ref">3.32</span></a>).</p>
                  <div class="codelisting" id="_code-application_layout_redux" data-tralics-id="uid338"
                    data-number="4.1">
                    <div class="heading"><span class="number">Listing 4.1:</span>
                      <span class="description">The sample application site
                        layout.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/views/layouts/application.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="k">yield</span><span
class="p">(</span><span class="ss">:title</span><span class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span>    <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                              <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                    </div>
                  </div>
                  <p>Let’s focus on one particular line in <a href="#code-application_layout_redux"
                      class="hyperref">Listing&nbsp;<span class="ref">4.1</span></a>:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                       <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
</pre></div>
                  </div>
                  <p>This uses the built-in Rails function <code>stylesheet_link_tag</code>
                    (which you can read more about at the <a href="http://api.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-stylesheet_link_tag"
                      target="_blank">Rails API</a>) to include <code>application.css</code>
                    for all <a href="http://www.w3.org/TR/CSS2/media.html" target="_blank">media
                      types</a> (including computer screens and printers).<span
                      class="intersentencespace"></span> To an experienced Rails
                    developer, this line looks simple, but there are at least
                    four potentially confusing Ruby ideas: built-in Rails
                    methods, method invocation with missing parentheses,
                    symbols, and hashes.<span class="intersentencespace"></span>
                    We’ll cover all of these ideas in this chapter.</p>
                  <p>In addition to coming equipped with a large number of
                    built-in functions for use in the views, Rails also allows
                    the creation of new ones.<span class="intersentencespace"></span>
                    Such functions are called <em>helpers</em>; to see how to
                    make a custom helper, let’s start by examining the title
                    line from <a href="#code-application_layout_redux" class="hyperref">Listing&nbsp;<span
                        class="ref">4.1</span></a>:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="cp">&lt;%=</span> <span class="k">yield</span><span
class="p">(</span><span class="ss">:title</span><span class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App
</pre></div>
                  </div>
                  <p>This relies on the definition of a page title (using <code>provide</code>)
                    in each view, as in</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Home"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sample App<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  This is the home page for the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
  sample application.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                  </div>
                  <p>But what if we don’t provide a title?<span class="intersentencespace"></span>
                    It’s a good convention to have a <em>base title</em> we use
                    on every page, with an optional page title if we want to be
                    more specific.<span class="intersentencespace"></span> We’ve
                    <em>almost</em> achieved that with our current layout, with
                    one wrinkle: as you can see if you delete the <code>provide</code>
                    call in one of the views, in the absence of a page-specific
                    title the full title appears as follows:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre> | Ruby on Rails Tutorial Sample App
</pre></div>
                  </div>
                  <p>In other words, there’s a suitable base title, but there’s
                    also a leading vertical bar character <code>|</code> at the
                    beginning.</p>
                  <p>To solve the problem of a missing page title, we’ll define
                    a custom helper called <code>full_title</code>.<span class="intersentencespace"></span>
                    The <code>full_title</code> helper returns a base title,
                    “Ruby on Rails Tutorial Sample App”, if no page title is
                    defined, and adds a vertical bar preceded by the page title
                    if one is defined (<a href="#code-title_helper" class="hyperref">Listing&nbsp;<span
                        class="ref">4.2</span></a>).<sup id="_cha-4_footnote-ref-1"
                      class="footnote"><a href="#cha-4_footnote-1">1</a></sup></p>
                  <div class="codelisting" id="_code-title_helper" data-tralics-id="uid340"
                    data-number="4.2">
                    <div class="heading"><span class="number">Listing 4.2:</span>
                      <span class="description">Defining a <code>full_title</code>
                        helper.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/helpers/application_helper.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">module</span> <span class="nn">ApplicationHelper</span>

  <span class="c1"># Returns the full title on a per-page basis.</span>
  <span class="k">def</span> <span class="nf">full_title</span><span class="p">(</span><span
class="n">page_title</span> <span class="o">=</span> <span class="s1">''</span><span
class="p">)</span>
    <span class="n">base_title</span> <span class="o">=</span> <span class="s2">"Ruby on Rails Tutorial Sample App"</span>
    <span class="k">if</span> <span class="n">page_title</span><span class="o">.</span><span
class="n">empty?</span>
      <span class="n">base_title</span>
    <span class="k">else</span>
      <span class="s2">"</span><span class="si">#{</span><span class="n">page_title</span><span
class="si">}</span><span class="s2"> | </span><span class="si">#{</span><span class="n">base_title</span><span
class="si">}</span><span class="s2">"</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>Now that we have a helper, we can use it to simplify our
                    layout by replacing</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">)</span> <span class="cp">%&gt;</span> | Ruby on Rails Tutorial Sample App<span
class="nt">&lt;/title&gt;</span>
</pre></div>
                  </div>
                  <p>with</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="n">full_title</span><span class="p">(</span><span class="k">yield</span><span
class="p">(</span><span class="ss">:title</span><span class="p">))</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/title&gt;</span>
</pre></div>
                  </div>
                  <p>as seen in <a href="#code-application_layout_full_title" class="hyperref">Listing&nbsp;<span
                        class="ref">4.3</span></a>.</p>
                  <div class="codelisting" id="_code-application_layout_full_title"
                    data-tralics-id="uid341" data-number="4.3">
                    <div class="heading"><span class="number">Listing 4.3:</span>
                      <span class="description">The site layout with the <code>full_title</code>
                        helper.<span class="intersentencespace"></span> <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span><span class="break"></span>
                        <span class="filepath">app/views/layouts/application.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
<span class="hll">    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span
class="n">full_title</span><span class="p">(</span><span class="k">yield</span><span
class="p">(</span><span class="ss">:title</span><span class="p">))</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/title&gt;</span>
</span>    <span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span>    <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                              <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                    </div>
                  </div>
                  <p>To put our helper to work, we can eliminate the unnecessary
                    word “Home” from the Home page, allowing it to revert to the
                    base title.<span class="intersentencespace"></span> We do
                    this by first updating our test with the code in <a href="#code-home_base_title_spec"
                      class="hyperref">Listing&nbsp;<span class="ref">4.4</span></a>,
                    which updates the previous title test and adds one to test
                    for the absence of the custom <code>"Home"</code> string in
                    the title.<span class="intersentencespace"></span> (<em>Note</em>:
                    If you completed the exercise corresponding to <a href="#code-base_title_test"
                      class="hyperref">Listing&nbsp;<span class="ref">3.38</span></a>,
                    you should retain the <code>setup</code> method defining
                    the <code>@base_title</code> variable.)</p>
                  <div class="codelisting" id="_code-home_base_title_spec" data-tralics-id="uid342"
                    data-number="4.4">
                    <div class="heading"><span class="number">Listing 4.4:</span>
                      <span class="description">An updated test for the Home
                        page’s title.<span class="intersentencespace"></span> <span
                          style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                            class="sc"></span></span><span class="break"></span>
                        <span class="filepath">test/controllers/static_pages_controller_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">StaticPagesControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>
  <span class="nb">test</span> <span class="s2">"should get home"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:home</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Ruby on Rails Tutorial Sample App"</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get help"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:help</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
    <span class="n">assert_select</span> <span class="s2">"title"</span><span class="p">,</span> <span
class="s2">"Help | Ruby on Rails Tutorial Sample App"</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get about"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:about</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
    <span class="n">assert_select</span> <span class="s2">"title"</span><span class="p">,</span> <span
class="s2">"About | Ruby on Rails Tutorial Sample App"</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>Let’s run the test suite to verify that one test fails:</p>
                  <div class="codelisting" id="_uid343" data-tralics-id="uid343"
                    data-number="4.5">
                    <div class="heading"><span class="number">Listing 4.5:</span>
                      <span class="description"><span style="color: red"><span class="sc"></span><span
                            class="sc"><strong>red</strong></span><span class="sc"></span></span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
3 tests, 6 assertions, 1 failures, 0 errors, 0 skips
</pre></div>
                    </div>
                  </div>
                  <p>To get the test suite to pass, we’ll remove the <code>provide</code>
                    line from the Home page’s view, as seen in <a href="#code-home_page_base_title"
                      class="hyperref">Listing&nbsp;<span class="ref">4.6</span></a>.</p>
                  <div class="codelisting" id="_code-home_page_base_title" data-tralics-id="uid344"
                    data-number="4.6">
                    <div class="heading"><span class="number">Listing 4.6:</span>
                      <span class="description">The Home page with no custom
                        page title.<span class="intersentencespace"></span> <span
                          style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;h1&gt;</span>Sample App<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  This is the home page for the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
  sample application.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                    </div>
                  </div>
                  <p>At this point the tests should pass:</p>
                  <div class="codelisting" id="_uid345" data-tralics-id="uid345"
                    data-number="4.7">
                    <div class="heading"><span class="number">Listing 4.7:</span>
                      <span class="description"><span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span></span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
</pre></div>
                    </div>
                  </div>
                  <p>(<em>Note</em>: Previous examples have included partial
                    output of running <code>rake test</code>, including the
                    number of passing and failing tests, but for brevity these
                    will usually be omitted from here on.)</p>
                  <p>As with the line to include the application stylesheet, the
                    code in <a href="#code-title_helper" class="hyperref">Listing&nbsp;<span
                        class="ref">4.2</span></a> may look simple to the eyes
                    of an experienced Rails developer, but it’s <em>full</em>
                    of important Ruby ideas: modules, method definition,
                    optional method arguments, comments, local variable
                    assignment, booleans, control flow, string interpolation,
                    and return values.<span class="intersentencespace"></span>
                    This chapter will cover all of these ideas as well.</p>
                </div>
                <div id="_sec-strings_and_methods" data-tralics-id="cid25" class="section"
                  data-number="4.2">
                  <h2><a href="#sec-strings_and_methods" class="heading hyperref"><span
                        class="number">4.2 </span>Strings and methods</a></h2>
                  <p>Our principal tool for learning Ruby will be the <em>Rails
                      console</em>, a command-line tool for interacting with
                    Rails applications first seen in <a href="#sec-demo_user_has_many_microposts"
                      class="hyperref">Section&nbsp;<span class="ref">2.3.3</span></a>.<span
                      class="intersentencespace"></span> The console itself is
                    built on top of interactive Ruby (<code>irb</code>), and
                    thus has access to the full power of the Ruby language.<span
                      class="intersentencespace"></span> (As we’ll see in <a href="#sec-a_controller_class"
                      class="hyperref">Section&nbsp;<span class="ref">4.4.4</span></a>,
                    the console also has access to the Rails environment.)</p>
                  <p>If you’re using the cloud IDE, there are a couple of irb
                    configuration parameters I recommend including.<span class="intersentencespace"></span>
                    Using the simple <code>nano</code> text editor, fill a file
                    called <code>.irbrc</code> in the home directory with the
                    contents of <a href="#code-irbrc" class="hyperref">Listing&nbsp;<span
                        class="ref">4.8</span></a>:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> nano ~/.irbrc
</pre></div>
                  </div>
                  <p><a href="#code-irbrc" class="hyperref">Listing&nbsp;<span class="ref">4.8</span></a>
                    arranges to simplify the irb prompt and suppress some
                    annoying auto-indent behavior.</p>
                  <div class="codelisting" id="_code-irbrc" data-tralics-id="uid346"
                    data-number="4.8">
                    <div class="heading"><span class="number">Listing 4.8:</span>
                      <span class="description">Adding some irb configuration.<span
                          class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">~/.irbrc</span></span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">IRB</span><span class="o">.</span><span
class="n">conf</span><span class="o">[</span><span class="ss">:PROMPT_MODE</span><span
class="o">]</span> <span class="o">=</span> <span class="ss">:SIMPLE</span>
<span class="no">IRB</span><span class="o">.</span><span class="n">conf</span><span
class="o">[</span><span class="ss">:AUTO_INDENT_MODE</span><span class="o">]</span> <span
class="o">=</span> <span class="kp">false</span>
</pre></div>
                    </div>
                  </div>
                  <p>Whether you included the configuration in <a href="#code-irbrc"
                      class="hyperref">Listing&nbsp;<span class="ref">4.8</span></a>,
                    you can start the console at the command line as follows:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="go">$ rails console</span>
<span class="go">Loading development environment</span>
<span class="go">&gt;&gt;</span>
</pre></div>
                  </div>
                  <p>By default, the console starts in a <em>development
                      environment</em>, which is one of three separate
                    environments defined by Rails (the others are <em>test</em>
                    and <em>production</em>).<span class="intersentencespace"></span>
                    This distinction won’t be important in this chapter, but
                    we’ll learn more about environments in <a href="#sec-rails_environments"
                      class="hyperref">Section&nbsp;<span class="ref">7.1.1</span></a>.</p>
                  <p>The console is a great learning tool, and you should feel
                    free to explore—don’t worry, you (probably) won’t break
                    anything.<span class="intersentencespace"></span> When using
                    the console, type Ctrl-C if you get stuck, or Ctrl-D to exit
                    the console altogether.<span class="intersentencespace"></span>
                    Throughout the rest of this chapter, you might find it
                    helpful to consult the <a href="http://ruby-doc.org/" target="_blank">Ruby
                      API</a>.<span class="intersentencespace"></span> It’s
                    packed (perhaps even <em>too</em> packed) with information;
                    for example, to learn more about Ruby strings you can look
                    at the Ruby API entry for the <code>String</code> class.</p>
                  <div id="_sec-comments" data-tralics-id="uid347" class="subsection"
                    data-number="4.2.1">
                    <h3><a href="#sec-comments" class="heading hyperref"><span class="number">4.2.1
                          </span>Comments</a></h3>
                    <p>Ruby <em>comments</em> start with the pound sign&nbsp;<code>#</code>
                      (also called the “hash mark” or (more poetically) the
                      “octothorpe”) and extend to the end of the line.<span class="intersentencespace"></span>
                      Ruby ignores comments, but they are useful for human
                      readers (including, often, the original author!).<span class="intersentencespace"></span>
                      In the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Returns the full title on a per-page basis.</span>
<span class="k">def</span> <span class="nf">full_title</span><span class="p">(</span><span
class="n">page_title</span> <span class="o">=</span> <span class="s1">''</span><span
class="p">)</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>the first line is a comment indicating the purpose of the
                      subsequent function definition.</p>
                    <p>You don’t ordinarily include comments in console
                      sessions, but for instructional purposes I’ll include some
                      comments in what follows, like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="mi">17</span> <span class="o">+</span> <span
class="mi">42</span>   <span class="c1"># Integer addition</span>
<span class="go">=&gt; 59</span>
</pre></div>
                    </div>
                    <p>If you follow along in this section typing or
                      copying-and-pasting commands into your own console, you
                      can of course omit the comments if you like; the console
                      will ignore them in any case.</p>
                  </div>
                  <div id="_sec-strings" data-tralics-id="uid348" class="subsection"
                    data-number="4.2.2">
                    <h3><a href="#sec-strings" class="heading hyperref"><span class="number">4.2.2
                          </span>Strings</a></h3>
                    <p><em>Strings</em> are probably the most important data
                      structure for web applications, since web pages ultimately
                      consist of strings of characters sent from the server to
                      the browser.<span class="intersentencespace"></span> Let’s
                      start exploring strings with the console:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="s2">""</span>         <span class="c1"># An empty string</span>
<span class="go">=&gt; ""</span>
<span class="gp">&gt;&gt; </span><span class="s2">"foo"</span>      <span class="c1"># A nonempty string</span>
<span class="go">=&gt; "foo"</span>
</pre></div>
                    </div>
                    <p>These are <em>string literals</em> (also, amusingly,
                      called <em>literal strings</em>), created using the
                      double quote character&nbsp;<code>"</code>.<span class="intersentencespace"></span>
                      The console prints the result of evaluating each line,
                      which in the case of a string literal is just the string
                      itself.</p>
                    <p>We can also concatenate strings with the <code>+</code>
                      operator:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"foo"</span> <span
class="o">+</span> <span class="s2">"bar"</span>    <span class="c1"># String concatenation</span>
<span class="go">=&gt; "foobar"</span>
</pre></div>
                    </div>
                    <p>Here the result of evaluating <code>"foo"</code> plus <code>"bar"</code>
                      is the string <code>"foobar"</code>.<sup id="_cha-4_footnote-ref-2"
                        class="footnote"><a href="#cha-4_footnote-2">2</a></sup></p>
                    <p>Another way to build up strings is via <em>interpolation</em>
                      using the special syntax <code>#{}</code>:<sup id="_cha-4_footnote-ref-3"
                        class="footnote"><a href="#cha-4_footnote-3">3</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">first_name</span> <span
class="o">=</span> <span class="s2">"Michael"</span>    <span class="c1"># Variable assignment</span>
<span class="go">=&gt; "Michael"</span>
<span class="gp">&gt;&gt; </span><span class="s2">"</span><span class="si">#{</span><span
class="n">first_name</span><span class="si">}</span><span class="s2"> Hartl"</span>     <span
class="c1"># String interpolation</span>
<span class="go">=&gt; "Michael Hartl"</span>
</pre></div>
                    </div>
                    <p>Here we’ve <em>assigned</em> the value <code>"Michael"</code>
                      to the variable <code>first_name</code> and then
                      interpolated it into the string <code>"#{first_name}
                        Hartl"</code>.<span class="intersentencespace"></span>
                      We could also assign both strings a variable name:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">first_name</span> <span
class="o">=</span> <span class="s2">"Michael"</span>
<span class="go">=&gt; "Michael"</span>
<span class="gp">&gt;&gt; </span><span class="n">last_name</span> <span class="o">=</span> <span
class="s2">"Hartl"</span>
<span class="go">=&gt; "Hartl"</span>
<span class="gp">&gt;&gt; </span><span class="n">first_name</span> <span class="o">+</span> <span
class="s2">" "</span> <span class="o">+</span> <span class="n">last_name</span>    <span
class="c1"># Concatenation, with a space in between</span>
<span class="go">=&gt; "Michael Hartl"</span>
<span class="gp">&gt;&gt; </span><span class="s2">"</span><span class="si">#{</span><span
class="n">first_name</span><span class="si">}</span><span class="s2"> </span><span
class="si">#{</span><span class="n">last_name</span><span class="si">}</span><span
class="s2">"</span>    <span class="c1"># The equivalent interpolation</span>
<span class="go">=&gt; "Michael Hartl"</span>
</pre></div>
                    </div>
                    <p>Note that the final two expressions are equivalent, but I
                      prefer the interpolated version; having to add the single
                      space <code>"&nbsp;"</code> seems a bit awkward.</p>
                    <div id="_sec-printing" data-tralics-id="uid351" class="subsubsection"
                      data-number="4.2.2.1">
                      <h4><a href="#sec-printing" class="heading">Printing</a></h4>
                      <p>To <em>print</em> a string, the most commonly used
                        Ruby function is <code>puts</code> (pronounced “put
                        ess”, for “put string”):</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span
class="s2">"foo"</span>     <span class="c1"># put string</span>
<span class="go">foo</span>
<span class="go">=&gt; nil</span>
</pre></div>
                      </div>
                      <p>The <code>puts</code> method operates as a <em>side-effect</em>:
                        the expression <code>puts "foo"</code> prints the
                        string to the screen and then returns <a href="http://www.answers.com/nil"
                          target="_blank">literally nothing</a>: <code>nil</code>
                        is a special Ruby value for “nothing at all”.<span class="intersentencespace"></span>
                        (In what follows, I’ll sometimes suppress the <code>=&gt;
                          nil</code> part for simplicity.)</p>
                      <p>As seen in the examples above, using <code>puts</code>
                        automatically appends a newline character&nbsp;<span class="inline_verbatim">\n</span>
                        to the output.<span class="intersentencespace"></span>
                        The related <code>print</code> method does not:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="nb">print</span> <span
class="s2">"foo"</span>    <span class="c1"># print string (same as puts, but without the newline)</span>
<span class="go">foo=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="nb">print</span> <span class="s2">"foo</span><span
class="se">\n</span><span class="s2">"</span>  <span class="c1"># Same as puts "foo"</span>
<span class="go">foo</span>
<span class="go">=&gt; nil</span>
</pre></div>
                      </div>
                    </div>
                    <div id="_sec-single_quoted_strings" data-tralics-id="uid352"
                      class="subsubsection" data-number="4.2.2.2">
                      <h4><a href="#sec-single_quoted_strings" class="heading">Single-quoted
                          strings</a></h4>
                      <p>All the examples so far have used <em>double-quoted
                          strings</em>, but Ruby also supports <em>single-quoted</em>
                        strings.<span class="intersentencespace"></span> For
                        many uses, the two types of strings are effectively
                        identical:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="s1">'foo'</span>          <span
class="c1"># A single-quoted string</span>
<span class="go">=&gt; "foo"</span>
<span class="gp">&gt;&gt; </span><span class="s1">'foo'</span> <span class="o">+</span> <span
class="s1">'bar'</span>
<span class="go">=&gt; "foobar"</span>
</pre></div>
                      </div>
                      <p>There’s an important difference, though; Ruby won’t
                        interpolate into single-quoted strings:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="s1">'#{foo} bar'</span>     <span
class="c1"># Single-quoted strings don't allow interpolation</span>
<span class="go">=&gt; "\#{foo} bar"</span>
</pre></div>
                      </div>
                      <p>Note how the console returns values using double-quoted
                        strings, which requires a backslash to <em>escape</em>
                        special character combinations such as&nbsp;<code>#{</code>.</p>
                      <p>If double-quoted strings can do everything that
                        single-quoted strings can do, and interpolate to boot,
                        what’s the point of single-quoted strings?<span class="intersentencespace"></span>
                        They are often useful because they are truly literal,
                        and contain exactly the characters you type.<span class="intersentencespace"></span>
                        For example, the “backslash” character is special on
                        most systems, as in the literal newline&nbsp;<span class="inline_verbatim">\n</span>.<span
                          class="intersentencespace"></span> If you want a
                        variable to contain a literal backslash, single quotes
                        make it easier:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="s1">'\n'</span>       <span
class="c1"># A literal 'backslash n' combination</span>
<span class="go">=&gt; "\\n"</span>
</pre></div>
                      </div>
                      <p>As with the&nbsp;<code>#{</code> combination in our
                        previous example, Ruby needs to escape the backslash
                        with an additional backslash; inside double-quoted
                        strings, a literal backslash is represented with <em>two</em>
                        backslashes.<span class="intersentencespace"></span> For
                        a small example like this, there’s not much savings, but
                        if there are lots of things to escape it can be a real
                        help:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="s1">'Newlines (\n) and tabs (\t) both use the backslash character \.'</span>
<span class="go">=&gt; "Newlines (\\n) and tabs (\\t) both use the backslash character \\."</span>
</pre></div>
                      </div>
                      <p>Finally, it’s worth noting that, in the common case
                        that single and double quotes are essentially
                        interchangeable, you’ll often find that the source code
                        switches between the two without any apparent pattern.<span
                          class="intersentencespace"></span> There’s really
                        nothing to be done about this, except to say, “Welcome
                        to Ruby!”</p>
                    </div>
                  </div>
                  <div id="_sec-objects_and_message_passing" data-tralics-id="uid353"
                    class="subsection" data-number="4.2.3">
                    <h3><a href="#sec-objects_and_message_passing" class="heading hyperref"><span
                          class="number">4.2.3 </span>Objects and message
                        passing</a></h3>
                    <p>Everything in Ruby, including strings and even <code>nil</code>,
                      is an <em>object</em>.<span class="intersentencespace"></span>
                      We’ll see the technical meaning of this in <a href="#sec-a_class_of_our_own"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.2</span></a>,
                      but I don’t think anyone ever understood objects by
                      reading the definition in a book; you have to build up
                      your intuition for objects by seeing lots of examples.</p>
                    <p>It’s easier to describe what objects <em>do</em>, which
                      is respond to messages.<span class="intersentencespace"></span>
                      An object like a string, for example, can respond to the
                      message <code>length</code>, which returns the number of
                      characters in the string:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"foobar"</span><span
class="o">.</span><span class="n">length</span>        <span class="c1"># Passing the "length" message to a string</span>
<span class="go">=&gt; 6</span>
</pre></div>
                    </div>
                    <p>Typically, the messages that get passed to objects are <em>methods</em>,
                      which are functions defined on those objects.<sup id="_cha-4_footnote-ref-4"
                        class="footnote"><a href="#cha-4_footnote-4">4</a></sup><span
                        class="intersentencespace"></span> Strings also respond
                      to the <code>empty?</code> method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"foobar"</span><span
class="o">.</span><span class="n">empty?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="s2">""</span><span class="o">.</span><span
class="n">empty?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>Note the question mark at the end of the <code>empty?</code>
                      method.<span class="intersentencespace"></span> This is a
                      Ruby convention indicating that the return value is <em>boolean</em>:
                      <code>true</code> or <code>false</code>.<span class="intersentencespace"></span>
                      Booleans are especially useful for <em>control flow</em>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">s</span> <span
class="o">=</span> <span class="s2">"foobar"</span>
<span class="gp">&gt;&gt; </span><span class="k">if</span> <span class="n">s</span><span
class="o">.</span><span class="n">empty?</span>
<span class="gp">&gt;&gt; </span>  <span class="s2">"The string is empty"</span>
<span class="gp">&gt;&gt; </span><span class="k">else</span>
<span class="gp">&gt;&gt; </span>  <span class="s2">"The string is nonempty"</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; "The string is nonempty"</span>
</pre></div>
                    </div>
                    <p>To include more than one clause, we can use <code>elsif</code>
                      (<code>else</code> + <code>if</code>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">if</span> <span
class="n">s</span><span class="o">.</span><span class="n">nil?</span>
<span class="gp">&gt;&gt; </span>  <span class="s2">"The variable is nil"</span>
<span class="gp">&gt;&gt; </span><span class="k">elsif</span> <span class="n">s</span><span
class="o">.</span><span class="n">empty?</span>
<span class="gp">&gt;&gt; </span>  <span class="s2">"The string is empty"</span>
<span class="gp">&gt;&gt; </span><span class="k">elsif</span> <span class="n">s</span><span
class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">"foo"</span><span
class="p">)</span>
<span class="gp">&gt;&gt; </span>  <span class="s2">"The string includes 'foo'"</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; "The string includes 'foo'"</span>
</pre></div>
                    </div>
                    <p>Booleans can also be combined using the <code>&amp;&amp;</code>
                      (“and”), <code>||</code> (“or”), and <code>!</code>
                      (“not”) operators:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">x</span> <span
class="o">=</span> <span class="s2">"foo"</span>
<span class="go">=&gt; "foo"</span>
<span class="gp">&gt;&gt; </span><span class="n">y</span> <span class="o">=</span> <span
class="s2">""</span>
<span class="go">=&gt; ""</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="s2">"Both strings are empty"</span> <span
class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">empty?</span> <span
class="o">&amp;&amp;</span> <span class="n">y</span><span class="o">.</span><span
class="n">empty?</span>
<span class="go">=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="s2">"One of the strings is empty"</span> <span
class="k">if</span> <span class="n">x</span><span class="o">.</span><span class="n">empty?</span> <span
class="o">||</span> <span class="n">y</span><span class="o">.</span><span class="n">empty?</span>
<span class="go">"One of the strings is empty"</span>
<span class="go">=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="s2">"x is not empty"</span> <span
class="k">if</span> <span class="o">!</span><span class="n">x</span><span class="o">.</span><span
class="n">empty?</span>
<span class="go">"x is not empty"</span>
<span class="go">=&gt; nil</span>
</pre></div>
                    </div>
                    <p>Since everything in Ruby is an object, it follows that <code>nil</code>
                      is an object, so it too can respond to methods.<span class="intersentencespace"></span>
                      One example is the <code>to_s</code> method that can
                      convert virtually any object to a string:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="kp">nil</span><span
class="o">.</span><span class="n">to_s</span>
<span class="go">=&gt; ""</span>
</pre></div>
                    </div>
                    <p>This certainly appears to be an empty string, as we can
                      verify by <em>chaining</em> the messages we pass to <code>nil</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="kp">nil</span><span
class="o">.</span><span class="n">empty?</span>
<span class="go">NoMethodError: undefined method `empty?' for nil:NilClass</span>
<span class="gp">&gt;&gt; </span><span class="kp">nil</span><span class="o">.</span><span
class="n">to_s</span><span class="o">.</span><span class="n">empty?</span>      <span
class="c1"># Message chaining</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>We see here that the <code>nil</code> object doesn’t
                      itself respond to the <code>empty?</code> method, but <code>nil.to_s</code>
                      does.</p>
                    <p>There’s a special method for testing for <code>nil</code>-ness,
                      which you might be able to guess:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"foo"</span><span
class="o">.</span><span class="n">nil?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="s2">""</span><span class="o">.</span><span
class="n">nil?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="kp">nil</span><span class="o">.</span><span
class="n">nil?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>The code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">puts</span> <span class="s2">"x is not empty"</span> <span
class="k">if</span> <span class="o">!</span><span class="n">x</span><span class="o">.</span><span
class="n">empty?</span>
</pre></div>
                    </div>
                    <p>also shows an alternate use of the <code>if</code>
                      keyword: Ruby allows you to write a statement that is
                      evaluated only if the statement following <code>if</code>
                      is true.<span class="intersentencespace"></span> There’s a
                      complementary <code>unless</code> keyword that works the
                      same way:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">string</span> <span
class="o">=</span> <span class="s2">"foobar"</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="s2">"The string '</span><span
class="si">#{</span><span class="n">string</span><span class="si">}</span><span
class="s2">' is nonempty."</span> <span class="k">unless</span> <span class="n">string</span><span
class="o">.</span><span class="n">empty?</span>
<span class="go">The string 'foobar' is nonempty.</span>
<span class="go">=&gt; nil</span>
</pre></div>
                    </div>
                    <p>It’s worth noting that the <code>nil</code> object is
                      special, in that it is the <em>only</em> Ruby object that
                      is false in a boolean context, apart from <code>false</code>
                      itself.<span class="intersentencespace"></span> We can see
                      this using <code>!!</code> (read “bang bang”), which
                      negates an object twice, thereby coercing it to its
                      boolean value:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="o">!!</span><span
class="kp">nil</span>
<span class="go">=&gt; false</span>
</pre></div>
                    </div>
                    <p>In particular, all other Ruby objects are <em>true</em>,
                      even 0:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="o">!!</span><span
class="mi">0</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-method_definitions" data-tralics-id="uid355" class="subsection"
                    data-number="4.2.4">
                    <h3><a href="#sec-method_definitions" class="heading hyperref"><span
                          class="number">4.2.4 </span>Method definitions</a></h3>
                    <p>The console allows us to define methods the same way we
                      did with the <code>home</code> action from <a href="#code-static_pages_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">3.6</span></a>
                      or the <code>full_title</code> helper from <a href="#code-title_helper"
                        class="hyperref">Listing&nbsp;<span class="ref">4.2</span></a>.<span
                        class="intersentencespace"></span> (Defining methods in
                      the console is a bit cumbersome, and ordinarily you would
                      use a file, but it’s convenient for demonstration
                      purposes.)<span class="intersentencespace"></span> For
                      example, let’s define a function <code>string_message</code>
                      that takes a single <em>argument</em> and returns a
                      message based on whether the argument is empty or not:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">def</span> <span
class="nf">string_message</span><span class="p">(</span><span class="n">str</span> <span
class="o">=</span> <span class="s1">''</span><span class="p">)</span>
<span class="gp">&gt;&gt; </span>  <span class="k">if</span> <span class="n">str</span><span
class="o">.</span><span class="n">empty?</span>
<span class="gp">&gt;&gt; </span>    <span class="s2">"It's an empty string!"</span>
<span class="gp">&gt;&gt; </span>  <span class="k">else</span>
<span class="gp">&gt;&gt; </span>    <span class="s2">"The string is nonempty."</span>
<span class="gp">&gt;&gt; </span>  <span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; :string_message</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="n">string_message</span><span
class="p">(</span><span class="s2">"foobar"</span><span class="p">)</span>
<span class="go">The string is nonempty.</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="n">string_message</span><span
class="p">(</span><span class="s2">""</span><span class="p">)</span>
<span class="go">It's an empty string!</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="n">string_message</span>
<span class="go">It's an empty string!</span>
</pre></div>
                    </div>
                    <p>As seen in the final example, it’s possible to leave out
                      the argument entirely (in which case we can also omit the
                      parentheses).<span class="intersentencespace"></span> This
                      is because the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">string_message</span><span
class="p">(</span><span class="n">str</span> <span class="o">=</span> <span class="s1">''</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>contains a <em>default</em> argument, which in this case
                      is the empty string.<span class="intersentencespace"></span>
                      This makes the <code>str</code> argument optional, and if
                      we leave it off it automatically takes the given default
                      value.</p>
                    <p>Note that Ruby functions have an <em>implicit return</em>,
                      meaning they return the last statement evaluated—in this
                      case, one of the two message strings, depending on whether
                      the method’s argument <code>str</code> is empty or not.<span
                        class="intersentencespace"></span> Ruby also has an
                      explicit return option; the following function is
                      equivalent to the one above:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">def</span> <span
class="nf">string_message</span><span class="p">(</span><span class="n">str</span> <span
class="o">=</span> <span class="s1">''</span><span class="p">)</span>
<span class="gp">&gt;&gt; </span>  <span class="k">return</span> <span class="s2">"It's an empty string!"</span> <span
class="k">if</span> <span class="n">str</span><span class="o">.</span><span class="n">empty?</span>
<span class="gp">&gt;&gt; </span>  <span class="k">return</span> <span class="s2">"The string is nonempty."</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
</pre></div>
                    </div>
                    <p>(The alert reader might notice at this point that the
                      second <code>return</code> here is actually
                      unnecessary—being the last expression in the function, the
                      string <code>"The string is nonempty."</code> will be
                      returned regardless of the <code>return</code> keyword,
                      but using <code>return</code> in both places has a
                      pleasing symmetry to it.)</p>
                    <p>It’s also important to understand that the name of the
                      function argument is irrelevant as far as the caller is
                      concerned.<span class="intersentencespace"></span> In
                      other words, the first example above could replace <code>str</code>
                      with any other valid variable name, such as <code>the_function_argument</code>,
                      and it would work just the same:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">def</span> <span
class="nf">string_message</span><span class="p">(</span><span class="n">the_function_argument</span> <span
class="o">=</span> <span class="s1">''</span><span class="p">)</span>
<span class="gp">&gt;&gt; </span>  <span class="k">if</span> <span class="n">the_function_argument</span><span
class="o">.</span><span class="n">empty?</span>
<span class="gp">&gt;&gt; </span>    <span class="s2">"It's an empty string!"</span>
<span class="gp">&gt;&gt; </span>  <span class="k">else</span>
<span class="gp">&gt;&gt; </span>    <span class="s2">"The string is nonempty."</span>
<span class="gp">&gt;&gt; </span>  <span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="n">string_message</span><span
class="p">(</span><span class="s2">""</span><span class="p">)</span>
<span class="go">It's an empty string!</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="n">string_message</span><span
class="p">(</span><span class="s2">"foobar"</span><span class="p">)</span>
<span class="go">The string is nonempty.</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-back_to_the_title_helper" data-tralics-id="uid356"
                    class="subsection" data-number="4.2.5">
                    <h3><a href="#sec-back_to_the_title_helper" class="heading hyperref"><span
                          class="number">4.2.5 </span>Back to the title helper</a></h3>
                    <p>We are now in a position to understand the <code>full_title</code>
                      helper from <a href="#code-title_helper" class="hyperref">Listing&nbsp;<span
                          class="ref">4.2</span></a>,<sup id="_cha-4_footnote-ref-5"
                        class="footnote"><a href="#cha-4_footnote-5">5</a></sup>
                      which appears with commented annotations in <a href="#code-annotated_title_helper"
                        class="hyperref">Listing&nbsp;<span class="ref">4.9</span></a>.</p>
                    <div class="codelisting" id="_code-annotated_title_helper" data-tralics-id="uid358"
                      data-number="4.9">
                      <div class="heading"><span class="number">Listing 4.9:</span>
                        <span class="description">An annotated <code>title_helper</code>.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/helpers/application_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">ApplicationHelper</span>

  <span class="c1"># Returns the full title on a per-page basis.       # Documentation comment</span>
  <span class="k">def</span> <span class="nf">full_title</span><span class="p">(</span><span
class="n">page_title</span> <span class="o">=</span> <span class="s1">''</span><span
class="p">)</span>                     <span class="c1"># Method def, optional arg</span>
    <span class="n">base_title</span> <span class="o">=</span> <span class="s2">"Ruby on Rails Tutorial Sample App"</span>  <span
class="c1"># Variable assignment</span>
    <span class="k">if</span> <span class="n">page_title</span><span class="o">.</span><span
class="n">empty?</span>                              <span class="c1"># Boolean test</span>
      <span class="n">base_title</span>                                      <span
class="c1"># Implicit return</span>
    <span class="k">else</span>
      <span class="s2">"</span><span class="si">#{</span><span class="n">page_title</span><span
class="si">}</span><span class="s2"> | </span><span class="si">#{</span><span class="n">base_title</span><span
class="si">}</span><span class="s2">"</span>                 <span class="c1"># String interpolation</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>These elements—function definition (with an optional
                      argument), variable assignment, boolean tests, control
                      flow, and string interpolation—come together to make a
                      compact helper method for use in our site layout.<span class="intersentencespace"></span>
                      The final element is <code>module ApplicationHelper</code>:
                      modules give us a way to package together related methods,
                      which can then be <em>mixed in</em> to Ruby classes using
                      <code>include</code>.<span class="intersentencespace"></span>
                      When writing ordinary Ruby, you often write modules and
                      include them explicitly yourself, but in the case of a
                      helper module Rails handles the inclusion for us.<span class="intersentencespace"></span>
                      The result is that the <code>full_title</code> method is
                      <a href="http://catb.org/jargon/html/A/automagically.html"
                        target="_blank">automagically</a> available in all our
                      views.</p>
                  </div>
                </div>
                <div id="_sec-other_data_structures" data-tralics-id="cid26" class="section"
                  data-number="4.3">
                  <h2><a href="#sec-other_data_structures" class="heading hyperref"><span
                        class="number">4.3 </span>Other data structures</a></h2>
                  <p>Although web apps are ultimately about strings, actually <em>making</em>
                    those strings requires using other data structures as well.<span
                      class="intersentencespace"></span> In this section, we’ll
                    learn about some Ruby data structures important for writing
                    Rails applications.</p>
                  <div id="_sec-arrays_and_ranges" data-tralics-id="uid359" class="subsection"
                    data-number="4.3.1">
                    <h3><a href="#sec-arrays_and_ranges" class="heading hyperref"><span
                          class="number">4.3.1 </span>Arrays and ranges</a></h3>
                    <p>An array is just a list of elements in a particular
                      order.<span class="intersentencespace"></span> We haven’t
                      discussed arrays yet in the <em>Rails Tutorial</em>, but
                      understanding them gives a good foundation for
                      understanding hashes (<a href="#sec-hashes_and_symbols" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.3</span></a>) and for aspects of Rails
                      data modeling (such as the <code>has_many</code>
                      association seen in <a href="#sec-demo_user_has_many_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">2.3.3</span></a>
                      and covered more in <a href="#sec-user_micropost_associations"
                        class="hyperref">Section&nbsp;<span class="ref">11.1.3</span></a>).</p>
                    <p>So far we’ve spent a lot of time understanding strings,
                      and there’s a natural way to get from strings to arrays
                      using the <code>split</code> method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span> <span class="s2">"foo bar     baz"</span><span
class="o">.</span><span class="n">split</span>     <span class="c1"># Split a string into a three-element array.</span>
<span class="go">=&gt; ["foo", "bar", "baz"]</span>
</pre></div>
                    </div>
                    <p>The result of this operation is an array of three
                      strings.<span class="intersentencespace"></span> By
                      default, <code>split</code> divides a string into an
                      array by splitting on whitespace, but you can split on
                      nearly anything else as well:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"fooxbarxbazx"</span><span
class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">'x'</span><span
class="p">)</span>
<span class="go">=&gt; ["foo", "bar", "baz"]</span>
</pre></div>
                    </div>
                    <p>As is conventional in most computer languages, Ruby
                      arrays are <em>zero-offset</em>, which means that the
                      first element in the array has index&nbsp;0, the second
                      has index&nbsp;1, and so on:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span> <span
class="o">=</span> <span class="o">[</span><span class="mi">42</span><span class="p">,</span> <span
class="mi">8</span><span class="p">,</span> <span class="mi">17</span><span class="o">]</span>
<span class="go">=&gt; [42, 8, 17]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[</span><span
class="mi">0</span><span class="o">]</span>               <span class="c1"># Ruby uses square brackets for array access.</span>
<span class="go">=&gt; 42</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[</span><span
class="mi">1</span><span class="o">]</span>
<span class="go">=&gt; 8</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[</span><span
class="mi">2</span><span class="o">]</span>
<span class="go">=&gt; 17</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[-</span><span
class="mi">1</span><span class="o">]</span>              <span class="c1"># Indices can even be negative!</span>
<span class="go">=&gt; 17</span>
</pre></div>
                    </div>
                    <p>We see here that Ruby uses square brackets to access
                      array elements.<span class="intersentencespace"></span> In
                      addition to this bracket notation, Ruby offers synonyms
                      for some commonly accessed elements:<sup id="_cha-4_footnote-ref-6"
                        class="footnote"><a href="#cha-4_footnote-6">6</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span>                  <span
class="c1"># Just a reminder of what 'a' is</span>
<span class="go">=&gt; [42, 8, 17]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">first</span>
<span class="go">=&gt; 42</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">second</span>
<span class="go">=&gt; 8</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">last</span>
<span class="go">=&gt; 17</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">last</span> <span class="o">==</span> <span class="n">a</span><span class="o">[-</span><span
class="mi">1</span><span class="o">]</span>    <span class="c1"># Comparison using ==</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>This last line introduces the equality comparison
                      operator <code>==</code>, which Ruby shares with many
                      other languages, along with the associated <code>!=</code>
                      (“not equal”), etc.:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">x</span> <span
class="o">=</span> <span class="n">a</span><span class="o">.</span><span class="n">length</span>       <span
class="c1"># Like strings, arrays respond to the 'length' method.</span>
<span class="go">=&gt; 3</span>
<span class="gp">&gt;&gt; </span><span class="n">x</span> <span class="o">==</span> <span
class="mi">3</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">x</span> <span class="o">==</span> <span
class="mi">1</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="n">x</span> <span class="o">!=</span> <span
class="mi">1</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">x</span> <span class="o">&gt;=</span> <span
class="mi">1</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">x</span> <span class="o">&lt;</span> <span
class="mi">1</span>
<span class="go">=&gt; false</span>
</pre></div>
                    </div>
                    <p>In addition to <code>length</code> (seen in the first
                      line above), arrays respond to a wealth of other methods:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span>
<span class="go">=&gt; [42, 8, 17]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">empty?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">include?</span><span class="p">(</span><span class="mi">42</span><span
class="p">)</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">sort</span>
<span class="go">=&gt; [8, 17, 42]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">reverse</span>
<span class="go">=&gt; [17, 8, 42]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">shuffle</span>
<span class="go">=&gt; [17, 42, 8]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span>
<span class="go">=&gt; [42, 8, 17]</span>
</pre></div>
                    </div>
                    <p>Note that none of the methods above changes <code>a</code>
                      itself.<span class="intersentencespace"></span> To <em>mutate</em>
                      the array, use the corresponding “bang” methods (so-called
                      because the exclamation point is usually pronounced “bang”
                      in this context):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span>
<span class="go">=&gt; [42, 8, 17]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">sort!</span>
<span class="go">=&gt; [8, 17, 42]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span>
<span class="go">=&gt; [8, 17, 42]</span>
</pre></div>
                    </div>
                    <p>You can also add to arrays with the <code>push</code>
                      method or its equivalent operator, <span class="inline_verbatim">&lt;&lt;</span>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span><span
class="o">.</span><span class="n">push</span><span class="p">(</span><span class="mi">6</span><span
class="p">)</span>                  <span class="c1"># Pushing 6 onto an array</span>
<span class="go">=&gt; [42, 8, 17, 6]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span> <span class="o">&lt;&lt;</span> <span
class="mi">7</span>                     <span class="c1"># Pushing 7 onto an array</span>
<span class="go">=&gt; [42, 8, 17, 6, 7]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span> <span class="o">&lt;&lt;</span> <span
class="s2">"foo"</span> <span class="o">&lt;&lt;</span> <span class="s2">"bar"</span>        <span
class="c1"># Chaining array pushes</span>
<span class="go">=&gt; [42, 8, 17, 6, 7, "foo", "bar"]</span>
</pre></div>
                    </div>
                    <p>This last example shows that you can chain pushes
                      together, and also that, unlike arrays in many other
                      languages, Ruby arrays can contain a mixture of different
                      types (in this case, integers and strings).</p>
                    <p>Before we saw <code>split</code> convert a string to an
                      array.<span class="intersentencespace"></span> We can also
                      go the other way with the <code>join</code> method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span>
<span class="go">=&gt; [42, 8, 17, 7, "foo", "bar"]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">join</span>                       <span class="c1"># Join on nothing.</span>
<span class="go">=&gt; "428177foobar"</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">join</span><span class="p">(</span><span class="s1">', '</span><span class="p">)</span>                 <span
class="c1"># Join on comma-space.</span>
<span class="go">=&gt; "42, 8, 17, 7, foo, bar"</span>
</pre></div>
                    </div>
                    <p>Closely related to arrays are <em>ranges</em>, which can
                      probably most easily be understood by converting them to
                      arrays using the <code>to_a</code> method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="mi">0</span><span
class="o">.</span><span class="n">.</span><span class="mi">9</span>
<span class="go">=&gt; 0..9</span>
<span class="gp">&gt;&gt; </span><span class="mi">0</span><span class="o">.</span><span
class="n">.</span><span class="mi">9</span><span class="o">.</span><span class="n">to_a</span>              <span
class="c1"># Oops, call to_a on 9.</span>
<span class="go">NoMethodError: undefined method `to_a' for 9:Fixnum</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="mi">0</span><span
class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span><span
class="o">.</span><span class="n">to_a</span>            <span class="c1"># Use parentheses to call to_a on the range.</span>
<span class="go">=&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
</pre></div>
                    </div>
                    <p>Though <code>0..9</code> is a valid range, the second
                      expression above shows that we need to add parentheses to
                      call a method on it.</p>
                    <p>Ranges are useful for pulling out array elements:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span> <span
class="o">=</span> <span class="sx">%w[foo bar baz quux]</span>         <span class="c1"># Use %w to make a string array.</span>
<span class="go">=&gt; ["foo", "bar", "baz", "quux"]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[</span><span
class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">2</span><span
class="o">]</span>
<span class="go">=&gt; ["foo", "bar", "baz"]</span>
</pre></div>
                    </div>
                    <p>A particularly useful trick is to use the index -1 at the
                      end of the range to select every element from the starting
                      point to the end of the array <em>without</em> explicitly
                      having to use the array’s length:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span> <span
class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span
class="n">.</span><span class="mi">9</span><span class="p">)</span><span class="o">.</span><span
class="n">to_a</span>
<span class="go">=&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[</span><span
class="mi">2</span><span class="o">.</span><span class="n">.</span><span class="p">(</span><span
class="n">a</span><span class="o">.</span><span class="n">length</span><span class="o">-</span><span
class="mi">1</span><span class="p">)</span><span class="o">]</span>               <span
class="c1"># Explicitly use the array's length.</span>
<span class="go">=&gt; [2, 3, 4, 5, 6, 7, 8, 9]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">[</span><span
class="mi">2</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span
class="mi">1</span><span class="o">]</span>                         <span class="c1"># Use the index -1 trick.</span>
<span class="go">=&gt; [2, 3, 4, 5, 6, 7, 8, 9]</span>
</pre></div>
                    </div>
                    <p>Ranges also work with characters:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="p">(</span><span
class="s1">'a'</span><span class="o">.</span><span class="n">.</span><span class="s1">'e'</span><span
class="p">)</span><span class="o">.</span><span class="n">to_a</span>
<span class="go">=&gt; ["a", "b", "c", "d", "e"]</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-blocks" data-tralics-id="uid361" class="subsection"
                    data-number="4.3.2">
                    <h3><a href="#sec-blocks" class="heading hyperref"><span class="number">4.3.2
                          </span>Blocks</a></h3>
                    <p>Both arrays and ranges respond to a host of methods that
                      accept <em>blocks</em>, which are simultaneously one of
                      Ruby’s most powerful and most confusing features:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="p">(</span><span
class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span
class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span
class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="nb">puts</span> <span
class="mi">2</span> <span class="o">*</span> <span class="n">i</span> <span class="p">}</span>
<span class="go">2</span>
<span class="go">4</span>
<span class="go">6</span>
<span class="go">8</span>
<span class="go">10</span>
<span class="go">=&gt; 1..5</span>
</pre></div>
                    </div>
                    <p>This code calls the <code>each</code> method on the
                      range <code>(1..5)</code> and passes it the block <code>{
                        |i| puts 2 * i }</code>.<span class="intersentencespace"></span>
                      The vertical bars around the variable name in&nbsp;<code>|i|</code>
                      are Ruby syntax for a block variable, and it’s up to the
                      method to know what to do with the block.<span class="intersentencespace"></span>
                      In this case, the range’s <code>each</code> method can
                      handle a block with a single local variable, which we’ve
                      called&nbsp;<code>i</code>, and it just executes the block
                      for each value in the range.</p>
                    <p>Curly braces are one way to indicate a block, but there
                      is a second way as well:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="p">(</span><span
class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span
class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span
class="o">|</span><span class="n">i</span><span class="o">|</span>
<span class="gp">?&gt; </span>  <span class="nb">puts</span> <span class="mi">2</span> <span
class="o">*</span> <span class="n">i</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">2</span>
<span class="go">4</span>
<span class="go">6</span>
<span class="go">8</span>
<span class="go">10</span>
<span class="go">=&gt; 1..5</span>
</pre></div>
                    </div>
                    <p>Blocks can be more than one line, and often are.<span class="intersentencespace"></span>
                      In the <em>Rails Tutorial</em> we’ll follow the common
                      convention of using curly braces only for short one-line
                      blocks and the <code>do..end</code> syntax for longer
                      one-liners and for multi-line blocks:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="p">(</span><span
class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span
class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span
class="o">|</span><span class="n">number</span><span class="o">|</span>
<span class="gp">?&gt; </span>  <span class="nb">puts</span> <span class="mi">2</span> <span
class="o">*</span> <span class="n">number</span>
<span class="gp">&gt;&gt; </span>  <span class="nb">puts</span> <span class="s1">'--'</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">2</span>
<span class="go">--</span>
<span class="go">4</span>
<span class="go">--</span>
<span class="go">6</span>
<span class="go">--</span>
<span class="go">8</span>
<span class="go">--</span>
<span class="go">10</span>
<span class="go">--</span>
<span class="go">=&gt; 1..5</span>
</pre></div>
                    </div>
                    <p>Here I’ve used <code>number</code> in place of&nbsp;<code>i</code>
                      just to emphasize that any variable name will do.</p>
                    <p>Unless you already have a substantial programming
                      background, there is no shortcut to understanding blocks;
                      you just have to see them a lot, and eventually you’ll get
                      used to them.<sup id="_cha-4_footnote-ref-7" class="footnote"><a
                          href="#cha-4_footnote-7">7</a></sup><span class="intersentencespace"></span>
                      Luckily, humans are quite good at making generalizations
                      from concrete examples; here are a few more, including a
                      couple using the <code>map</code> method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="mi">3</span><span
class="o">.</span><span class="n">times</span> <span class="p">{</span> <span class="nb">puts</span> <span
class="s2">"Betelgeuse!"</span> <span class="p">}</span>   <span class="c1"># 3.times takes a block with no variables.</span>
<span class="go">"Betelgeuse!"</span>
<span class="go">"Betelgeuse!"</span>
<span class="go">"Betelgeuse!"</span>
<span class="go">=&gt; 3</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="mi">1</span><span
class="o">.</span><span class="n">.</span><span class="mi">5</span><span class="p">)</span><span
class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span
class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">**</span><span
class="mi">2</span> <span class="p">}</span>          <span class="c1"># The ** notation is for 'power'.</span>
<span class="go">=&gt; [1, 4, 9, 16, 25]</span>
<span class="gp">&gt;&gt; </span><span class="sx">%w[a b c]</span>                        <span
class="c1"># Recall that %w makes string arrays.</span>
<span class="go">=&gt; ["a", "b", "c"]</span>
<span class="gp">&gt;&gt; </span><span class="sx">%w[a b c]</span><span class="o">.</span><span
class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">char</span><span
class="o">|</span> <span class="n">char</span><span class="o">.</span><span class="n">upcase</span> <span
class="p">}</span>
<span class="go">=&gt; ["A", "B", "C"]</span>
<span class="gp">&gt;&gt; </span><span class="sx">%w[A B C]</span><span class="o">.</span><span
class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">char</span><span
class="o">|</span> <span class="n">char</span><span class="o">.</span><span class="n">downcase</span> <span
class="p">}</span>
<span class="go">=&gt; ["a", "b", "c"]</span>
</pre></div>
                    </div>
                    <p>As you can see, the <code>map</code> method returns the
                      result of applying the given block to each element in the
                      array or range.<span class="intersentencespace"></span> In
                      the final two examples, the block inside <code>map</code>
                      involves calling a particular method on the block
                      variable, and in this case there’s a commonly used
                      shorthand:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="sx">%w[A B C]</span><span
class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span
class="n">char</span><span class="o">|</span> <span class="n">char</span><span class="o">.</span><span
class="n">downcase</span> <span class="p">}</span>
<span class="go">=&gt; ["a", "b", "c"]</span>
<span class="gp">&gt;&gt; </span><span class="sx">%w[A B C]</span><span class="o">.</span><span
class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:downcase</span><span
class="p">)</span>
<span class="go">=&gt; ["a", "b", "c"]</span>
</pre></div>
                    </div>
                    <p>(This strange-looking but compact code uses a <em>symbol</em>,
                      which we’ll discuss in <a href="#sec-hashes_and_symbols"
                        class="hyperref">Section&nbsp;<span class="ref">4.3.3</span></a>.)<span
                        class="intersentencespace"></span> One interesting thing
                      about this construction is that it was originally added to
                      Ruby on Rails, and people liked it so much that it has now
                      been incorporated into core Ruby.</p>
                    <p>As one final example of blocks, we can take a look at an
                      individual test from the file in <a href="#code-home_base_title_spec"
                        class="hyperref">Listing&nbsp;<span class="ref">4.4</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="nb">test</span> <span
class="s2">"should get home"</span> <span class="k">do</span>
</span>  <span class="n">get</span> <span class="ss">:home</span>
  <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="n">assert_select</span> <span class="s2">"title"</span><span class="p">,</span> <span
class="s2">"Ruby on Rails Tutorial Sample App"</span>
<span class="hll"><span class="k">end</span>
</span></pre></div>
                    </div>
                    <p>It’s not important to understand the details (and in fact
                      <em>I</em> don’t know the details offhand), but we can
                      infer from the presence of the <code>do</code> keyword
                      that the body of the test is a block.<span class="intersentencespace"></span>
                      The <code>test</code> method takes in a string argument
                      (the description) and a block, and then executes the body
                      of the block as part of running the test suite.</p>
                    <p>By the way, we’re now in a position to understand the
                      line of Ruby I threw into <a href="#sec-heroku_commands"
                        class="hyperref">Section&nbsp;<span class="ref">1.5.4</span></a>
                      to generate random subdomains:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">(</span><span class="s1">'a'</span><span
class="o">.</span><span class="n">.</span><span class="s1">'z'</span><span class="p">)</span><span
class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">shuffle</span><span
class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span
class="mi">7</span><span class="o">].</span><span class="n">join</span>
</pre></div>
                    </div>
                    <p>Let’s build it up step-by-step:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="p">(</span><span
class="s1">'a'</span><span class="o">.</span><span class="n">.</span><span class="s1">'z'</span><span
class="p">)</span><span class="o">.</span><span class="n">to_a</span>                     <span
class="c1"># An alphabet array</span>
<span class="go">=&gt; ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",</span>
<span class="go">"p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="s1">'a'</span><span
class="o">.</span><span class="n">.</span><span class="s1">'z'</span><span class="p">)</span><span
class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">shuffle</span>             <span
class="c1"># Shuffle it.</span>
<span class="go">=&gt; ["c", "g", "l", "k", "h", "z", "s", "i", "n", "d", "y", "u", "t", "j", "q",</span>
<span class="go">"b", "r", "o", "f", "e", "w", "v", "m", "a", "x", "p"]</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="s1">'a'</span><span
class="o">.</span><span class="n">.</span><span class="s1">'z'</span><span class="p">)</span><span
class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">shuffle</span><span
class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span
class="mi">7</span><span class="o">]</span>       <span class="c1"># Pull out the first eight elements.</span>
<span class="go">=&gt; ["f", "w", "i", "a", "h", "p", "c", "x"]</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="s1">'a'</span><span
class="o">.</span><span class="n">.</span><span class="s1">'z'</span><span class="p">)</span><span
class="o">.</span><span class="n">to_a</span><span class="o">.</span><span class="n">shuffle</span><span
class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span
class="mi">7</span><span class="o">].</span><span class="n">join</span>  <span class="c1"># Join them together to make one string.</span>
<span class="go">=&gt; "mznpybuj"</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-hashes_and_symbols" data-tralics-id="uid363" class="subsection"
                    data-number="4.3.3">
                    <h3><a href="#sec-hashes_and_symbols" class="heading hyperref"><span
                          class="number">4.3.3 </span>Hashes and symbols</a></h3>
                    <p>Hashes are essentially arrays that aren’t limited to
                      integer indices.<span class="intersentencespace"></span>
                      (In fact, some languages, especially Perl, sometimes call
                      hashes <em>associative arrays</em> for this reason.)<span
                        class="intersentencespace"></span> Instead, hash
                      indices, or <em>keys</em>, can be almost any object.<span
                        class="intersentencespace"></span> For example, we can
                      use strings as keys:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="p">{}</span>                          <span class="c1"># {} is an empty hash.</span>
<span class="go">=&gt; {}</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">[</span><span
class="s2">"first_name"</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Michael"</span>     <span class="c1"># Key "first_name", value "Michael"</span>
<span class="go">=&gt; "Michael"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">[</span><span
class="s2">"last_name"</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Hartl"</span>        <span class="c1"># Key "last_name", value "Hartl"</span>
<span class="go">=&gt; "Hartl"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">[</span><span
class="s2">"first_name"</span><span class="o">]</span>                 <span class="c1"># Element access is like arrays.</span>
<span class="go">=&gt; "Michael"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span>                               <span
class="c1"># A literal representation of the hash</span>
<span class="go">=&gt; {"last_name"=&gt;"Hartl", "first_name"=&gt;"Michael"}</span>
</pre></div>
                    </div>
                    <p>Hashes are indicated with curly braces containing
                      key-value pairs; a pair of braces with no key-value
                      pairs—i.e., <code>{}</code>—is an empty hash.<span class="intersentencespace"></span>
                      It’s important to note that the curly braces for hashes
                      have nothing to do with the curly braces for blocks.<span
                        class="intersentencespace"></span> (Yes, this can be
                      confusing.)<span class="intersentencespace"></span>
                      Although hashes resemble arrays, one important difference
                      is that hashes don’t generally guarantee keeping their
                      elements in a particular order.<sup id="_cha-4_footnote-ref-8"
                        class="footnote"><a href="#cha-4_footnote-8">8</a></sup><span
                        class="intersentencespace"></span> If order matters, use
                      an array.</p>
                    <p>Instead of defining hashes one item at a time using
                      square brackets, it’s easy to use a literal representation
                      with keys and values separated by&nbsp;<code>=&gt;</code>,
                      called a “hashrocket”:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="p">{</span> <span class="s2">"first_name"</span> <span
class="o">=&gt;</span> <span class="s2">"Michael"</span><span class="p">,</span> <span
class="s2">"last_name"</span> <span class="o">=&gt;</span> <span class="s2">"Hartl"</span> <span
class="p">}</span>
<span class="go">=&gt; {"last_name"=&gt;"Hartl", "first_name"=&gt;"Michael"}</span>
</pre></div>
                    </div>
                    <p>Here I’ve used the usual Ruby convention of putting an
                      extra space at the two ends of the hash—a convention
                      ignored by the console output.<span class="intersentencespace"></span>
                      (Don’t ask me why the spaces are conventional; probably
                      some early influential Ruby programmer liked the look of
                      the extra spaces, and the convention stuck.)</p>
                    <p>So far we’ve used strings as hash keys, but in Rails it
                      is much more common to use <em>symbols</em> instead.<span
                        class="intersentencespace"></span> Symbols look kind of
                      like strings, but prefixed with a colon instead of
                      surrounded by quotes.<span class="intersentencespace"></span>
                      For example, <code>:name</code> is a symbol.<span class="intersentencespace"></span>
                      You can think of symbols as basically strings without all
                      the extra baggage:<sup id="_cha-4_footnote-ref-9" class="footnote"><a
                          href="#cha-4_footnote-9">9</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"name"</span><span
class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">''</span><span
class="p">)</span>
<span class="go">=&gt; ["n", "a", "m", "e"]</span>
<span class="gp">&gt;&gt; </span><span class="ss">:name</span><span class="o">.</span><span
class="n">split</span><span class="p">(</span><span class="s1">''</span><span class="p">)</span>
<span class="go">NoMethodError: undefined method `split' for :name:Symbol</span>
<span class="gp">&gt;&gt; </span><span class="s2">"foobar"</span><span class="o">.</span><span
class="n">reverse</span>
<span class="go">=&gt; "raboof"</span>
<span class="gp">&gt;&gt; </span><span class="ss">:foobar</span><span class="o">.</span><span
class="n">reverse</span>
<span class="go">NoMethodError: undefined method `reverse' for :foobar:Symbol</span>
</pre></div>
                    </div>
                    <p>Symbols are a special Ruby data type shared with very few
                      other languages, so they may seem weird at first, but
                      Rails uses them a lot, so you’ll get used to them fast.<span
                        class="intersentencespace"></span> Unlike strings, not
                      all characters are valid:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="ss">:foo</span><span
class="o">-</span><span class="n">bar</span>
<span class="go">NameError: undefined local variable or method `bar' for main:Object</span>
<span class="gp">&gt;&gt; </span><span class="p">:</span><span class="mi">2</span><span
class="n">foo</span>
<span class="go">SyntaxError</span>
</pre></div>
                    </div>
                    <p>As long as you start your symbols with a letter and stick
                      to normal word characters, you should be fine.</p>
                    <p>In terms of symbols as hash keys, we can define a <code>user</code>
                      hash as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="p">{</span> <span class="ss">:name</span> <span
class="o">=&gt;</span> <span class="s2">"Michael Hartl"</span><span class="p">,</span> <span
class="ss">:email</span> <span class="o">=&gt;</span> <span class="s2">"michael@example.com"</span> <span
class="p">}</span>
<span class="go">=&gt; {:name=&gt;"Michael Hartl", :email=&gt;"michael@example.com"}</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">[</span><span
class="ss">:name</span><span class="o">]</span>              <span class="c1"># Access the value corresponding to :name.</span>
<span class="go">=&gt; "Michael Hartl"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">[</span><span
class="ss">:password</span><span class="o">]</span>          <span class="c1"># Access the value of an undefined key.</span>
<span class="go">=&gt; nil</span>
</pre></div>
                    </div>
                    <p>We see here from the last example that the hash value for
                      an undefined key is simply <code>nil</code>.</p>
                    <p>Since it’s so common for hashes to use symbols as keys,
                      as of version 1.9 Ruby supports a new syntax just for this
                      special case:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">h1</span> <span
class="o">=</span> <span class="p">{</span> <span class="ss">:name</span> <span
class="o">=&gt;</span> <span class="s2">"Michael Hartl"</span><span class="p">,</span> <span
class="ss">:email</span> <span class="o">=&gt;</span> <span class="s2">"michael@example.com"</span> <span
class="p">}</span>
<span class="go">=&gt; {:name=&gt;"Michael Hartl", :email=&gt;"michael@example.com"}</span>
<span class="gp">&gt;&gt; </span><span class="n">h2</span> <span class="o">=</span> <span
class="p">{</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">"Michael Hartl"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"michael@example.com"</span> <span
class="p">}</span>
<span class="go">=&gt; {:name=&gt;"Michael Hartl", :email=&gt;"michael@example.com"}</span>
<span class="gp">&gt;&gt; </span><span class="n">h1</span> <span class="o">==</span> <span
class="n">h2</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>The second syntax replaces the symbol/hashrocket
                      combination with the name of the key followed by a colon
                      and a value:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">{</span> <span class="nb">name</span><span
class="p">:</span> <span class="s2">"Michael Hartl"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"michael@example.com"</span> <span
class="p">}</span>
</pre></div>
                    </div>
                    <p>This construction more closely follows the hash notation
                      in other languages (such as JavaScript) and enjoys growing
                      popularity in the Rails community.<span class="intersentencespace"></span>
                      Because both hash syntaxes are still in common use, it’s
                      essential to be able to recognize both of them.<span class="intersentencespace"></span>
                      Unfortunately, this can be confusing, especially since <code>:name</code>
                      is valid on its own (as a standalone symbol) but <code>name:</code>
                      has no meaning by itself.<span class="intersentencespace"></span>
                      The bottom line is that <code>:name =&gt;</code> and <code>name:</code>
                      are effectively the same <em>only inside literal hashes</em>,
                      so that</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">{</span> <span class="ss">:name</span> <span
class="o">=&gt;</span> <span class="s2">"Michael Hartl"</span> <span class="p">}</span>
</pre></div>
                    </div>
                    <p>and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">{</span> <span class="nb">name</span><span
class="p">:</span> <span class="s2">"Michael Hartl"</span> <span class="p">}</span>
</pre></div>
                    </div>
                    <p>are equivalent, but otherwise you need to use <code>:name</code>
                      (with the colon coming first) to denote a symbol</p>
                    <p>Hash values can be virtually anything, even other hashes,
                      as seen in <a href="#code-nested_hashes" class="hyperref">Listing&nbsp;<span
                          class="ref">4.10</span></a>.</p>
                    <div class="codelisting" id="_code-nested_hashes" data-tralics-id="uid366"
                      data-number="4.10">
                      <div class="heading"><span class="number">Listing 4.10:</span>
                        <span class="description">Nested hashes.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="n">params</span> <span
class="o">=</span> <span class="p">{}</span>        <span class="c1"># Define a hash called 'params' (short for 'parameters').</span>
<span class="go">=&gt; {}</span>
<span class="gp">&gt;&gt; </span><span class="n">params</span><span class="o">[</span><span
class="ss">:user</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span> <span class="s2">"Michael Hartl"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"mhartl@example.com"</span> <span
class="p">}</span>
<span class="go">=&gt; {:name=&gt;"Michael Hartl", :email=&gt;"mhartl@example.com"}</span>
<span class="gp">&gt;&gt; </span><span class="n">params</span>
<span class="go">=&gt; {:user=&gt;{:name=&gt;"Michael Hartl", :email=&gt;"mhartl@example.com"}}</span>
<span class="gp">&gt;&gt; </span> <span class="n">params</span><span class="o">[</span><span
class="ss">:user</span><span class="o">][</span><span class="ss">:email</span><span
class="o">]</span>
<span class="go">=&gt; "mhartl@example.com"</span>
</pre></div>
                      </div>
                    </div>
                    <p>These sorts of hashes-of-hashes, or <em>nested hashes</em>,
                      are heavily used by Rails, as we’ll see starting in <a href="#sec-unsuccessful_signups"
                        class="hyperref">Section&nbsp;<span class="ref">7.3</span></a>.</p>
                    <p>As with arrays and ranges, hashes respond to the <code>each</code>
                      method.<span class="intersentencespace"></span> For
                      example, consider a hash named <code>flash</code> with
                      keys for two conditions, <code>:success</code> and <code>:danger</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">flash</span> <span
class="o">=</span> <span class="p">{</span> <span class="ss">success</span><span
class="p">:</span> <span class="s2">"It worked!"</span><span class="p">,</span> <span
class="ss">danger</span><span class="p">:</span> <span class="s2">"It failed."</span> <span
class="p">}</span>
<span class="go">=&gt; {:success=&gt;"It worked!", :danger=&gt;"It failed."}</span>
<span class="gp">&gt;&gt; </span><span class="n">flash</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span
class="p">,</span> <span class="n">value</span><span class="o">|</span>
<span class="gp">?&gt; </span>  <span class="nb">puts</span> <span class="s2">"Key </span><span
class="si">#{</span><span class="n">key</span><span class="o">.</span><span class="n">inspect</span><span
class="si">}</span><span class="s2"> has value </span><span class="si">#{</span><span
class="n">value</span><span class="o">.</span><span class="n">inspect</span><span
class="si">}</span><span class="s2">"</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">Key :success has value "It worked!"</span>
<span class="go">Key :danger has value "It failed."</span>
</pre></div>
                    </div>
                    <p>Note that, while the <code>each</code> method for arrays
                      takes a block with only one variable, <code>each</code>
                      for hashes takes two, a <em>key</em> and a <em>value</em>.<span
                        class="intersentencespace"></span> Thus, the <code>each</code>
                      method for a hash iterates through the hash one key-value
                      <em>pair</em> at a time.</p>
                    <p>The last example uses the useful <code>inspect</code>
                      method, which returns a string with a literal
                      representation of the object it’s called on:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span
class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span
class="mi">5</span><span class="p">)</span><span class="o">.</span><span class="n">to_a</span>            <span
class="c1"># Put an array as a string.</span>
<span class="go">1</span>
<span class="go">2</span>
<span class="go">3</span>
<span class="go">4</span>
<span class="go">5</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="p">(</span><span
class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">5</span><span
class="p">)</span><span class="o">.</span><span class="n">to_a</span><span class="o">.</span><span
class="n">inspect</span>    <span class="c1"># Put a literal array.</span>
<span class="go">[1, 2, 3, 4, 5]</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="ss">:name</span><span
class="p">,</span> <span class="ss">:name</span><span class="o">.</span><span class="n">inspect</span>
<span class="go">name</span>
<span class="go">:name</span>
<span class="gp">&gt;&gt; </span><span class="nb">puts</span> <span class="s2">"It worked!"</span><span
class="p">,</span> <span class="s2">"It worked!"</span><span class="o">.</span><span
class="n">inspect</span>
<span class="go">It worked!</span>
<span class="go">"It worked!"</span>
</pre></div>
                    </div>
                    <p>By the way, using <code>inspect</code> to print an
                      object is common enough that there’s a shortcut for it,
                      the <code>p</code> function:<sup id="_cha-4_footnote-ref-10"
                        class="footnote"><a href="#cha-4_footnote-10">10</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="nb">p</span> <span
class="ss">:name</span>             <span class="c1"># Same output as 'puts :name.inspect'</span>
<span class="go">:name</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-css_revisited" data-tralics-id="uid368" class="subsection"
                    data-number="4.3.4">
                    <h3><a href="#sec-css_revisited" class="heading hyperref"><span
                          class="number">4.3.4 </span>CSS revisited</a></h3>
                    <p>It’s time now to revisit the line from <a href="#code-application_layout_redux"
                        class="hyperref">Listing&nbsp;<span class="ref">4.1</span></a>
                      used in the layout to include the cascading style sheets:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                       <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>We are now nearly in a position to understand this.<span
                        class="intersentencespace"></span> As mentioned briefly
                      in <a href="#sec-motivation" class="hyperref">Section&nbsp;<span
                          class="ref">4.1</span></a>, Rails defines a special
                      function to include stylesheets, and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">stylesheet_link_tag</span> <span class="s1">'application'</span><span
class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s1">'all'</span><span
class="p">,</span>
                                   <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>is a call to this function.<span class="intersentencespace"></span>
                      But there are several mysteries.<span class="intersentencespace"></span>
                      First, where are the parentheses?<span class="intersentencespace"></span>
                      In Ruby, they are optional, so these two are equivalent:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Parentheses on function calls are optional.</span>
<span class="n">stylesheet_link_tag</span><span class="p">(</span><span class="s1">'application'</span><span
class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s1">'all'</span><span
class="p">,</span>
                                   <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span><span class="p">)</span>
<span class="n">stylesheet_link_tag</span> <span class="s1">'application'</span><span
class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s1">'all'</span><span
class="p">,</span>
                                   <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>Second, the <code>media</code> argument sure looks like
                      a hash, but where are the curly braces?<span class="intersentencespace"></span>
                      When hashes are the <em>last</em> argument in a function
                      call, the curly braces are optional, so these two are
                      equivalent:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Curly braces on final hash arguments are optional.</span>
<span class="n">stylesheet_link_tag</span> <span class="s1">'application'</span><span
class="p">,</span> <span class="p">{</span> <span class="ss">media</span><span class="p">:</span> <span
class="s1">'all'</span><span class="p">,</span>
                                     <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span>
<span class="n">stylesheet_link_tag</span> <span class="s1">'application'</span><span
class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s1">'all'</span><span
class="p">,</span>
                                   <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>Next, why does the <code>data-turbolinks-track</code>
                      key-value pair use the old-style hashrocket syntax?<span class="intersentencespace"></span>
                      This is because using the newer syntax to write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">data</span><span class="o">-</span><span
class="n">turbolinks</span><span class="o">-</span><span class="ss">track</span><span
class="p">:</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>is invalid because of the hyphens.<span class="intersentencespace"></span>
                      (Recall from <a href="#sec-hashes_and_symbols" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.3</span></a> that hyphens can’t be
                      used in symbols.)<span class="intersentencespace"></span>
                      This forces us to use the older syntax, yielding</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>Finally, why does Ruby correctly interpret the lines</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">stylesheet_link_tag</span> <span class="s1">'application'</span><span
class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s1">'all'</span><span
class="p">,</span>
                                   <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>even with a line break between the final elements?<span class="intersentencespace"></span>
                      The answer is that Ruby doesn’t distinguish between
                      newlines and other whitespace in this context.<sup id="_cha-4_footnote-ref-11"
                        class="footnote"><a href="#cha-4_footnote-11">11</a></sup><span
                        class="intersentencespace"></span> The <em>reason</em>
                      I chose to break the code into pieces is that I prefer to
                      keep lines of source code under 80 characters for
                      legibility.<sup id="_cha-4_footnote-ref-12" class="footnote"><a
                          href="#cha-4_footnote-12">12</a></sup></p>
                    <p>So, we see now that the line</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">stylesheet_link_tag</span> <span class="s1">'application'</span><span
class="p">,</span> <span class="ss">media</span><span class="p">:</span> <span class="s1">'all'</span><span
class="p">,</span>
                                   <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>calls the <code>stylesheet_link_tag</code> function with
                      two arguments: a string, indicating the path to the
                      stylesheet, and a hash with two elements, indicating the
                      media type and telling Rails to use the <a href="https://github.com/rails/turbolinks"
                        target="_blank">turbolinks</a> feature added in
                      Rails&nbsp;4.0.<span class="intersentencespace"></span>
                      Because of the <span class="inline_verbatim">&lt;%= %&gt;</span>
                      brackets, the results are inserted into the template by
                      ERb, and if you view the source of the page in your
                      browser you should see the HTML needed to include a
                      stylesheet (<a href="#code-scss_source" class="hyperref">Listing&nbsp;<span
                          class="ref">4.11</span></a>).<span class="intersentencespace"></span>
                      (You may see some extra things, like <code>?body=1</code>,
                      after the CSS filenames.<span class="intersentencespace"></span>
                      These are inserted by Rails to ensure that browsers reload
                      the CSS when it changes on the server.)</p>
                    <div class="codelisting" id="_code-scss_source" data-tralics-id="uid371"
                      data-number="4.11">
                      <div class="heading"><span class="number">Listing 4.11:</span>
                        <span class="description">The HTML source produced by
                          the CSS includes.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;link</span> <span class="na">data-turbolinks-track=</span><span
class="s">"true"</span> <span class="na">href=</span><span class="s">"/assets/application.css"</span> <span
class="na">media=</span><span class="s">"all"</span>
<span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="nt">/&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>If you actually view the CSS file by navigating to <a href="http://localhost:3000/assets/application.css"
                        target="_blank">http://localhost:3000/assets/application.css</a>,
                      you’ll see that (apart from some comments) it is empty.<span
                        class="intersentencespace"></span> We’ll set about
                      changing this in <a href="#cha-filling_in_the_layout" class="hyperref">Chapter&nbsp;<span
                          class="ref">5</span></a>.</p>
                  </div>
                </div>
                <div id="_sec-ruby_classes" data-tralics-id="cid27" class="section"
                  data-number="4.4">
                  <h2><a href="#sec-ruby_classes" class="heading hyperref"><span
                        class="number">4.4 </span>Ruby classes</a></h2>
                  <p>We’ve said before that everything in Ruby is an object, and
                    in this section we’ll finally get to define some of our own.<span
                      class="intersentencespace"></span> Ruby, like many
                    object-oriented languages, uses <em>classes</em> to
                    organize methods; these classes are then <em>instantiated</em>
                    to create objects.<span class="intersentencespace"></span>
                    If you’re new to object-oriented programming, this may sound
                    like gibberish, so let’s look at some concrete examples.</p>
                  <div id="_sec-constructors" data-tralics-id="uid372" class="subsection"
                    data-number="4.4.1">
                    <h3><a href="#sec-constructors" class="heading hyperref"><span
                          class="number">4.4.1 </span>Constructors</a></h3>
                    <p>We’ve seen lots of examples of using classes to
                      instantiate objects, but we have yet to do so explicitly.<span
                        class="intersentencespace"></span> For example, we
                      instantiated a string using the double quote characters,
                      which is a <em>literal constructor</em> for strings:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">s</span> <span
class="o">=</span> <span class="s2">"foobar"</span>       <span class="c1"># A literal constructor for strings using double quotes</span>
<span class="go">=&gt; "foobar"</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span>
<span class="go">=&gt; String</span>
</pre></div>
                    </div>
                    <p>We see here that strings respond to the method <code>class</code>,
                      and simply return the class they belong to.</p>
                    <p>Instead of using a literal constructor, we can use the
                      equivalent <em>named constructor</em>, which involves
                      calling the <code>new</code> method on the class name:<sup
                        id="_cha-4_footnote-ref-13" class="footnote"><a href="#cha-4_footnote-13">13</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">s</span> <span
class="o">=</span> <span class="nb">String</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="s2">"foobar"</span><span class="p">)</span>   <span
class="c1"># A named constructor for a string</span>
<span class="go">=&gt; "foobar"</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span>
<span class="go">=&gt; String</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span> <span class="o">==</span> <span
class="s2">"foobar"</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>This is equivalent to the literal constructor, but it’s
                      more explicit about what we’re doing.</p>
                    <p>Arrays work the same way as strings:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">a</span> <span
class="o">=</span> <span class="nb">Array</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span
class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span><span
class="p">)</span>
<span class="go">=&gt; [1, 3, 2]</span>
</pre></div>
                    </div>
                    <p>Hashes, in contrast, are different.<span class="intersentencespace"></span>
                      While the array constructor <code>Array.new</code> takes
                      an initial value for the array, <code>Hash.new</code>
                      takes a <em>default</em> value for the hash, which is the
                      value of the hash for a nonexistent key:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">h</span> <span
class="o">=</span> <span class="no">Hash</span><span class="o">.</span><span class="n">new</span>
<span class="go">=&gt; {}</span>
<span class="gp">&gt;&gt; </span><span class="n">h</span><span class="o">[</span><span
class="ss">:foo</span><span class="o">]</span>            <span class="c1"># Try to access the value for the nonexistent key :foo.</span>
<span class="go">=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="n">h</span> <span class="o">=</span> <span
class="no">Hash</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="mi">0</span><span class="p">)</span>    <span class="c1"># Arrange for nonexistent keys to return 0 instead of nil.</span>
<span class="go">=&gt; {}</span>
<span class="gp">&gt;&gt; </span><span class="n">h</span><span class="o">[</span><span
class="ss">:foo</span><span class="o">]</span>
<span class="go">=&gt; 0</span>
</pre></div>
                    </div>
                    <p>When a method gets called on the class itself, as in the
                      case of <code>new</code>, it’s called a <em>class method</em>.<span
                        class="intersentencespace"></span> The result of calling
                      <code>new</code> on a class is an object of that class,
                      also called an <em>instance</em> of the class.<span class="intersentencespace"></span>
                      A method called on an instance, such as <code>length</code>,
                      is called an <em>instance method</em>.</p>
                  </div>
                  <div id="_sec-a_class_of_our_own" data-tralics-id="uid374" class="subsection"
                    data-number="4.4.2">
                    <h3><a href="#sec-a_class_of_our_own" class="heading hyperref"><span
                          class="number">4.4.2 </span>Class inheritance</a></h3>
                    <p>When learning about classes, it’s useful to find out the
                      <em>class hierarchy</em> using the <code>superclass</code>
                      method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">s</span> <span
class="o">=</span> <span class="nb">String</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="s2">"foobar"</span><span class="p">)</span>
<span class="go">=&gt; "foobar"</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span>                        <span class="c1"># Find the class of s.</span>
<span class="go">=&gt; String</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span>             <span
class="c1"># Find the superclass of String.</span>
<span class="go">=&gt; Object</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span>  <span class="c1"># Ruby 1.9 uses a new BasicObject base class</span>
<span class="go">=&gt; BasicObject</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span><span class="o">.</span><span
class="n">superclass</span>
<span class="go">=&gt; nil</span>
</pre></div>
                    </div>
                    <p>A diagram of this inheritance hierarchy appears in <a href="#fig-string_inheritance_ruby_1_9"
                        class="hyperref">Figure&nbsp;<span class="ref">4.1</span></a>.<span
                        class="intersentencespace"></span> We see here that the
                      superclass of <code>String</code> is <code>Object</code>
                      and the superclass of <code>Object</code> is <code>BasicObject</code>,
                      but <code>BasicObject</code> has no superclass.<span class="intersentencespace"></span>
                      This pattern is true of every Ruby object: trace back the
                      class hierarchy far enough and every class in Ruby
                      ultimately inherits from <code>BasicObject</code>, which
                      has no superclass itself.<span class="intersentencespace"></span>
                      This is the technical meaning of “everything in Ruby is an
                      object”.</p>
                    <div class="center figure" id="_fig-string_inheritance_ruby_1_9"
                      data-tralics-id="uid375" data-number="4.1"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/string_inheritance_ruby_1_9.png"
                          alt="string_inheritance_ruby_1_9"></span>
                      <div class="caption"><span class="header">Figure 4.1: </span><span
                          class="description">The inheritance hierarchy for the
                          <code>String</code> class. </span></div>
                    </div>
                    <p>To understand classes a little more deeply, there’s no
                      substitute for making one of our own.<span class="intersentencespace"></span>
                      Let’s make a <code>Word</code> class with a <code>palindrome?</code>
                      method that returns <code>true</code> if the word is the
                      same spelled forward and backward:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">class</span> <span
class="nc">Word</span>
<span class="gp">&gt;&gt; </span>  <span class="k">def</span> <span class="nf">palindrome?</span><span
class="p">(</span><span class="n">string</span><span class="p">)</span>
<span class="gp">&gt;&gt; </span>    <span class="n">string</span> <span class="o">==</span> <span
class="n">string</span><span class="o">.</span><span class="n">reverse</span>
<span class="gp">&gt;&gt; </span>  <span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; :palindrome?</span>
</pre></div>
                    </div>
                    <p>We can use it as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">w</span> <span
class="o">=</span> <span class="no">Word</span><span class="o">.</span><span class="n">new</span>              <span
class="c1"># Make a new Word object.</span>
<span class="go">=&gt; #&lt;Word:0x22d0b20&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">w</span><span class="o">.</span><span
class="n">palindrome?</span><span class="p">(</span><span class="s2">"foobar"</span><span
class="p">)</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="n">w</span><span class="o">.</span><span
class="n">palindrome?</span><span class="p">(</span><span class="s2">"level"</span><span
class="p">)</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>If this example strikes you as a bit contrived, good—this
                      is by design.<span class="intersentencespace"></span> It’s
                      odd to create a new class just to create a method that
                      takes a string as an argument.<span class="intersentencespace"></span>
                      Since a word <em>is a</em> string, it’s more natural to
                      have our <code>Word</code> class <em>inherit</em> from <code>String</code>,
                      as seen in <a href="#code-word_class" class="hyperref">Listing&nbsp;<span
                          class="ref">4.12</span></a>.<span class="intersentencespace"></span>
                      (You should exit the console and re-enter it to clear out
                      the old definition of <code>Word</code>.)</p>
                    <div class="codelisting" id="_code-word_class" data-tralics-id="uid376"
                      data-number="4.12">
                      <div class="heading"><span class="number">Listing 4.12:</span>
                        <span class="description">Defining a <code>Word</code>
                          class in the console.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;&gt; </span><span class="k">class</span> <span
class="nc">Word</span> <span class="o">&lt;</span> <span class="nb">String</span>             <span
class="c1"># Word inherits from String.</span>
<span class="gp">&gt;&gt; </span>  <span class="c1"># Returns true if the string is its own reverse.</span>
<span class="gp">&gt;&gt; </span>  <span class="k">def</span> <span class="nf">palindrome?</span>
<span class="gp">&gt;&gt; </span>    <span class="nb">self</span> <span class="o">==</span> <span
class="nb">self</span><span class="o">.</span><span class="n">reverse</span>        <span
class="c1"># self is the string itself.</span>
<span class="gp">&gt;&gt; </span>  <span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; nil</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here <code>Word &lt; String</code> is the Ruby syntax
                      for inheritance (discussed briefly in <a href="#sec-static_pages"
                        class="hyperref">Section&nbsp;<span class="ref">3.2</span></a>),
                      which ensures that, in addition to the new <code>palindrome?</code>
                      method, words also have all the same methods as strings:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">s</span> <span
class="o">=</span> <span class="no">Word</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="s2">"level"</span><span class="p">)</span>    <span
class="c1"># Make a new Word, initialized with "level".</span>
<span class="go">=&gt; "level"</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">palindrome?</span>            <span class="c1"># Words have the palindrome? method.</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">length</span>                 <span class="c1"># Words also inherit all the normal string methods.</span>
<span class="go">=&gt; 5</span>
</pre></div>
                    </div>
                    <p>Since the <code>Word</code> class inherits from <code>String</code>,
                      we can use the console to see the class hierarchy
                      explicitly:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">s</span><span
class="o">.</span><span class="n">class</span>
<span class="go">=&gt; Word</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span>
<span class="go">=&gt; String</span>
<span class="gp">&gt;&gt; </span><span class="n">s</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span>
<span class="go">=&gt; Object</span>
</pre></div>
                    </div>
                    <p>This hierarchy is illustrated in <a href="#fig-word_inheritance_ruby_1_9"
                        class="hyperref">Figure&nbsp;<span class="ref">4.2</span></a>.</p>
                    <div class="center figure" id="_fig-word_inheritance_ruby_1_9"
                      data-tralics-id="uid377" data-number="4.2"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/word_inheritance_ruby_1_9.png"
                          alt="word_inheritance_ruby_1_9"></span>
                      <div class="caption"><span class="header">Figure 4.2: </span><span
                          class="description">The inheritance hierarchy for the
                          (non-built-in) <code>Word</code> class from <a href="#code-word_class"
                            class="hyperref">Listing&nbsp;<span class="ref">4.12</span></a>.
                        </span></div>
                    </div>
                    <p>In <a href="#code-word_class" class="hyperref">Listing&nbsp;<span
                          class="ref">4.12</span></a>, note that checking that
                      the word is its own reverse involves accessing the word
                      inside the <code>Word</code> class.<span class="intersentencespace"></span>
                      Ruby allows us to do this using the <code>self</code>
                      keyword: inside the <code>Word</code> class, <code>self</code>
                      is the object itself, which means we can use</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span> <span class="o">==</span> <span
class="nb">self</span><span class="o">.</span><span class="n">reverse</span>
</pre></div>
                    </div>
                    <p>to check if the word is a palindrome.<sup id="_cha-4_footnote-ref-14"
                        class="footnote"><a href="#cha-4_footnote-14">14</a></sup><span
                        class="intersentencespace"></span> In fact, inside the
                      String class the use of <code>self.</code> is optional on
                      a method or attribute (unless we’re making an assignment),
                      so</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span> <span class="o">==</span> <span
class="n">reverse</span>
</pre></div>
                    </div>
                    <p>would work as well.</p>
                  </div>
                  <div id="_sec-modifying_built_in_classes" data-tralics-id="uid379"
                    class="subsection" data-number="4.4.3">
                    <h3><a href="#sec-modifying_built_in_classes" class="heading hyperref"><span
                          class="number">4.4.3 </span>Modifying built-in
                        classes</a></h3>
                    <p>While inheritance is a powerful idea, in the case of
                      palindromes it might be even more natural to add the <code>palindrome?</code>
                      method to the <code>String</code> class itself, so that
                      (among other things) we can call <code>palindrome?</code>
                      on a string literal, which we currently can’t do:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"level"</span><span
class="o">.</span><span class="n">palindrome?</span>
<span class="go">NoMethodError: undefined method `palindrome?' for "level":String</span>
</pre></div>
                    </div>
                    <p>Amazingly, Ruby lets you do just this; Ruby classes can
                      be <em>opened</em> and modified, allowing ordinary
                      mortals such as ourselves to add methods to them:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">class</span> <span
class="nc">String</span>
<span class="gp">&gt;&gt; </span>  <span class="c1"># Returns true if the string is its own reverse.</span>
<span class="gp">&gt;&gt; </span>  <span class="k">def</span> <span class="nf">palindrome?</span>
<span class="gp">&gt;&gt; </span>    <span class="nb">self</span> <span class="o">==</span> <span
class="nb">self</span><span class="o">.</span><span class="n">reverse</span>
<span class="gp">&gt;&gt; </span>  <span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="s2">"deified"</span><span class="o">.</span><span
class="n">palindrome?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>(I don’t know which is cooler: that Ruby lets you add
                      methods to built-in classes, or that <code>"deified"</code>
                      is a palindrome.)</p>
                    <p>Modifying built-in classes is a powerful technique, but
                      with great power comes great responsibility, and it’s
                      considered bad form to add methods to built-in classes
                      without having a <em>really</em> good reason for doing
                      so.<span class="intersentencespace"></span> Rails does
                      have some good reasons; for example, in web applications
                      we often want to prevent variables from being <em>blank</em>—e.g.,
                      a user’s name should be something other than spaces and
                      other <a href="http://en.wikipedia.org/wiki/Whitespace_%28computer_science%29"
                        target="_blank">whitespace</a>—so Rails adds a <code>blank?</code>
                      method to Ruby.<span class="intersentencespace"></span>
                      Since the Rails console automatically includes the Rails
                      extensions, we can see an example here (this won’t work in
                      plain <code>irb</code>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">""</span><span
class="o">.</span><span class="n">blank?</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="s2">"      "</span><span class="o">.</span><span
class="n">empty?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="s2">"      "</span><span class="o">.</span><span
class="n">blank?</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="kp">nil</span><span class="o">.</span><span
class="n">blank?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>We see that a string of spaces is not <em>empty</em>,
                      but it is <em>blank</em>.<span class="intersentencespace"></span>
                      Note also that <code>nil</code> is blank; since <code>nil</code>
                      isn’t a string, this is a hint that Rails actually adds <code>blank?</code>
                      to <code>String</code>’s base class, which (as we saw at
                      the beginning of this section) is <code>Object</code>
                      itself.<span class="intersentencespace"></span> We’ll see
                      some other examples of Rails additions to Ruby classes in
                      <a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                          class="ref">8.4</span></a>.</p>
                  </div>
                  <div id="_sec-a_controller_class" data-tralics-id="uid380" class="subsection"
                    data-number="4.4.4">
                    <h3><a href="#sec-a_controller_class" class="heading hyperref"><span
                          class="number">4.4.4 </span>A controller class</a></h3>
                    <p>All this talk about classes and inheritance may have
                      triggered a flash of recognition, because we have seen
                      both before, in the Static Pages controller (<a href="#code-adding_the_about_page"
                        class="hyperref">Listing&nbsp;<span class="ref">3.18</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">help</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">about</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>You’re now in a position to appreciate, at least vaguely,
                      what this code means: <code>StaticPagesController</code>
                      is a class that inherits from <code>ApplicationController</code>,
                      and comes equipped with <code>home</code>, <code>help</code>,
                      and <code>about</code> methods.<span class="intersentencespace"></span>
                      Since each Rails console session loads the local Rails
                      environment, we can even create a controller explicitly
                      and examine its class hierarchy:<sup id="_cha-4_footnote-ref-15"
                        class="footnote"><a href="#cha-4_footnote-15">15</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">controller</span> <span
class="o">=</span> <span class="no">StaticPagesController</span><span class="o">.</span><span
class="n">new</span>
<span class="go">=&gt; #&lt;StaticPagesController:0x22855d0&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">controller</span><span class="o">.</span><span
class="n">class</span>
<span class="go">=&gt; StaticPagesController</span>
<span class="gp">&gt;&gt; </span><span class="n">controller</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span>
<span class="go">=&gt; ApplicationController</span>
<span class="gp">&gt;&gt; </span><span class="n">controller</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span>
<span class="go">=&gt; ActionController::Base</span>
<span class="gp">&gt;&gt; </span><span class="n">controller</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span><span class="o">.</span><span
class="n">superclass</span>
<span class="go">=&gt; ActionController::Metal</span>
<span class="gp">&gt;&gt; </span><span class="n">controller</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span><span class="o">.</span><span
class="n">superclass</span><span class="o">.</span><span class="n">superclass</span>
<span class="go">=&gt; AbstractController::Base</span>
<span class="gp">&gt;&gt; </span><span class="n">controller</span><span class="o">.</span><span
class="n">class</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span><span class="o">.</span><span
class="n">superclass</span><span class="o">.</span><span class="n">superclass</span><span
class="o">.</span><span class="n">superclass</span>
<span class="go">=&gt; Object</span>
</pre></div>
                    </div>
                    <p>A diagram of this hierarchy appears in <a href="#fig-static_pages_controller_inheritance"
                        class="hyperref">Figure&nbsp;<span class="ref">4.3</span></a>.</p>
                    <div class="center figure" id="_fig-static_pages_controller_inheritance"
                      data-tralics-id="uid382" data-number="4.3"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/static_pages_controller_inheritance.png"
                          alt="static_pages_controller_inheritance"></span>
                      <div class="caption"><span class="header">Figure 4.3: </span><span
                          class="description">The inheritance hierarchy for the
                          Static Pages. </span></div>
                    </div>
                    <p>We can even call the controller actions inside the
                      console, which are just methods:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">controller</span><span
class="o">.</span><span class="n">home</span>
<span class="go">=&gt; nil</span>
</pre></div>
                    </div>
                    <p>Here the return value is <code>nil</code> because the <code>home</code>
                      action is blank.</p>
                    <p>But wait—actions don’t have return values, at least not
                      ones that matter.<span class="intersentencespace"></span>
                      The point of the <code>home</code> action, as we saw in <a
                        href="#cha-static_pages" class="hyperref">Chapter&nbsp;<span
                          class="ref">3</span></a>, is to render a web page, not
                      to return a value.<span class="intersentencespace"></span>
                      And I sure don’t remember ever calling <code>StaticPagesController.new</code>
                      anywhere.<span class="intersentencespace"></span> What’s
                      going on?</p>
                    <p>What’s going on is that Rails is <em>written in</em>
                      Ruby, but Rails isn’t Ruby.<span class="intersentencespace"></span>
                      Some Rails classes are used like ordinary Ruby objects,
                      but some are just <a href="http://www.answers.com/grist"
                        target="_blank">grist</a> for Rails’ magic mill.<span class="intersentencespace"></span>
                      Rails is <a href="http://en.wikipedia.org/wiki/Sui_generis"
                        target="_blank"><em>sui generis</em></a>, and should be
                      studied and understood separately from Ruby.</p>
                  </div>
                  <div id="_sec-a_user_class" data-tralics-id="uid383" class="subsection"
                    data-number="4.4.5">
                    <h3><a href="#sec-a_user_class" class="heading hyperref"><span
                          class="number">4.4.5 </span>A user class</a></h3>
                    <p>We end our tour of Ruby with a complete class of our own,
                      a <code>User</code> class that anticipates the User model
                      coming up in <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                          class="ref">6</span></a>.</p>
                    <p>So far we’ve entered class definitions at the console,
                      but this quickly becomes tiresome; instead, create the
                      file <code>example_user.rb</code> in your application
                      root directory and fill it with the contents of <a href="#code-example_user"
                        class="hyperref">Listing&nbsp;<span class="ref">4.13</span></a>.</p>
                    <div class="codelisting" id="_code-example_user" data-tralics-id="uid384"
                      data-number="4.13">
                      <div class="heading"><span class="number">Listing 4.13:</span>
                        <span class="description">Code for an example user.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">example_user.rb</span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span>
  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">:email</span>

  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span
class="n">attributes</span> <span class="o">=</span> <span class="p">{})</span>
    <span class="vi">@name</span>  <span class="o">=</span> <span class="n">attributes</span><span
class="o">[</span><span class="ss">:name</span><span class="o">]</span>
    <span class="vi">@email</span> <span class="o">=</span> <span class="n">attributes</span><span
class="o">[</span><span class="ss">:email</span><span class="o">]</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">formatted_email</span>
    <span class="s2">"</span><span class="si">#{</span><span class="vi">@name</span><span
class="si">}</span><span class="s2"> &lt;</span><span class="si">#{</span><span
class="vi">@email</span><span class="si">}</span><span class="s2">&gt;"</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>There’s quite a bit going on here, so let’s take it step
                      by step.<span class="intersentencespace"></span> The first
                      line,</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span>
</pre></div>
                    </div>
                    <p>creates <em>attribute accessors</em> corresponding to a
                      user’s name and email address.<span class="intersentencespace"></span>
                      This creates “getter” and “setter” methods that allow us
                      to retrieve (get) and assign (set) <code>@name</code> and
                      <code>@email</code> <em>instance variables</em>, which
                      were mentioned briefly in <a href="#sec-mvc_in_action" class="hyperref">Section&nbsp;<span
                          class="ref">2.2.2</span></a> and <a href="#sec-static_pages_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">3.6</span></a>.<span
                        class="intersentencespace"></span> In Rails, the
                      principal importance of instance variables is that they
                      are automatically available in the views, but in general
                      they are used for variables that need to be available
                      throughout a Ruby class.<span class="intersentencespace"></span>
                      (We’ll have more to say about this in a moment.)<span class="intersentencespace"></span>
                      Instance variables always begin with an&nbsp;<code>@</code>
                      sign, and are <code>nil</code> when undefined.</p>
                    <p>The first method, <code>initialize</code>, is special in
                      Ruby: it’s the method called when we execute <code>User.new</code>.<span
                        class="intersentencespace"></span> This particular <code>initialize</code>
                      takes one argument, <code>attributes</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>  <span class="k">def</span> <span class="nf">initialize</span><span
class="p">(</span><span class="n">attributes</span> <span class="o">=</span> <span
class="p">{})</span>
    <span class="vi">@name</span>  <span class="o">=</span> <span class="n">attributes</span><span
class="o">[</span><span class="ss">:name</span><span class="o">]</span>
    <span class="vi">@email</span> <span class="o">=</span> <span class="n">attributes</span><span
class="o">[</span><span class="ss">:email</span><span class="o">]</span>
  <span class="k">end</span>
</pre></div>
                    </div>
                    <p>Here the <code>attributes</code> variable has a <em>default
                        value</em> equal to the empty hash, so that we can
                      define a user with no name or email address.<span class="intersentencespace"></span>
                      (Recall from <a href="#sec-hashes_and_symbols" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.3</span></a> that hashes return <code>nil</code>
                      for nonexistent keys, so <code>attributes[:name]</code>
                      will be <code>nil</code> if there is no <code>:name</code>
                      key, and similarly for <code>attributes[:email]</code>.)</p>
                    <p>Finally, our class defines a method called <code>formatted_email</code>
                      that uses the values of the assigned <code>@name</code>
                      and <code>@email</code> variables to build up a nicely
                      formatted version of the user’s email address using string
                      interpolation (<a href="#sec-strings" class="hyperref">Section&nbsp;<span
                          class="ref">4.2.2</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>  <span class="k">def</span> <span class="nf">formatted_email</span>
    <span class="s2">"</span><span class="si">#{</span><span class="vi">@name</span><span
class="si">}</span><span class="s2"> &lt;</span><span class="si">#{</span><span
class="vi">@email</span><span class="si">}</span><span class="s2">&gt;"</span>
  <span class="k">end</span>
</pre></div>
                    </div>
                    <p>Because <code>@name</code> and <code>@email</code> are
                      both instance variables (as indicated with the&nbsp;<code>@</code>
                      sign), they are automatically available in the <code>formatted_email</code>
                      method.</p>
                    <p>Let’s fire up the console, <code>require</code> the
                      example user code, and take our User class out for a spin:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="nb">require</span> <span
class="s1">'./example_user'</span>     <span class="c1"># This is how you load the example_user code.</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">example</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span>
<span class="go">=&gt; #&lt;User:0x224ceec @email=nil, @name=nil&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">example</span><span class="o">.</span><span
class="n">name</span>                 <span class="c1"># nil since attributes[:name] is nil</span>
<span class="go">=&gt; nil</span>
<span class="gp">&gt;&gt; </span><span class="n">example</span><span class="o">.</span><span
class="n">name</span> <span class="o">=</span> <span class="s2">"Example User"</span>           <span
class="c1"># Assign a non-nil name</span>
<span class="go">=&gt; "Example User"</span>
<span class="gp">&gt;&gt; </span><span class="n">example</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="s2">"user@example.com"</span>      <span
class="c1"># and a non-nil email address</span>
<span class="go">=&gt; "user@example.com"</span>
<span class="gp">&gt;&gt; </span><span class="n">example</span><span class="o">.</span><span
class="n">formatted_email</span>
<span class="go">=&gt; "Example User &lt;user@example.com&gt;"</span>
</pre></div>
                    </div>
                    <p>Here the <code>’.’</code><span class="intersentencespace"></span>
                      is Unix for “current directory”, and <code>’./example_user’</code>
                      tells Ruby to look for an example user file relative to
                      that location.<span class="intersentencespace"></span> The
                      subsequent code creates an empty example user and then
                      fills in the name and email address by assigning directly
                      to the corresponding attributes (assignments made possible
                      by the <code>attr_accessor</code> line in <a href="#code-example_user"
                        class="hyperref">Listing&nbsp;<span class="ref">4.13</span></a>).<span
                        class="intersentencespace"></span> When we write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">example</span><span class="o">.</span><span
class="n">name</span> <span class="o">=</span> <span class="s2">"Example User"</span>
</pre></div>
                    </div>
                    <p>Ruby is setting the <code>@name</code> variable to <code>"Example
                        User"</code> (and similarly for the <code>email</code>
                      attribute), which we then use in the <code>formatted_email</code>
                      method.</p>
                    <p>Recalling from <a href="#sec-css_revisited" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.4</span></a> we can omit the curly
                      braces for final hash arguments, we can create another
                      user by passing a hash to the <code>initialize</code>
                      method to create a user with pre-defined attributes:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">"Michael Hartl"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"mhartl@example.com"</span><span
class="p">)</span>
<span class="go">=&gt; #&lt;User:0x225167c @email="mhartl@example.com", @name="Michael Hartl"&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">formatted_email</span>
<span class="go">=&gt; "Michael Hartl &lt;mhartl@example.com&gt;"</span>
</pre></div>
                    </div>
                    <p>We will see starting in <a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                          class="ref">7</span></a> that initializing objects
                      using a hash argument, a technique known as <em>mass
                        assignment</em>, is common in Rails applications.</p>
                  </div>
                </div>
                <div id="_sec-conclusion" data-tralics-id="cid28" class="section"
                  data-number="4.5">
                  <h2><a href="#sec-conclusion" class="heading hyperref"><span class="number">4.5
                        </span>Висновок</a></h2>
                  <p>This concludes our overview of the Ruby language.<span class="intersentencespace"></span>
                    In <a href="#cha-filling_in_the_layout" class="hyperref">Chapter&nbsp;<span
                        class="ref">5</span></a>, we’ll start putting it to good
                    use in developing the sample application.</p>
                  <p>We won’t be using the <code>example_user.rb</code> file
                    from <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                        class="ref">4.4.5</span></a>, so I suggest removing it:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> rm example_user.rb
</pre></div>
                  </div>
                  <p>Then commit the other changes to the main source code
                    repository, push up to Bitbucket, and deploy to Heroku:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git status
<span class="gp">$</span> git commit -am <span class="s2">"Add a full_title helper"</span>
<span class="gp">$</span> git push
<span class="gp">$</span> bundle <span class="nb">exec </span>rake <span class="nb">test</span>
<span class="gp">$</span><span class="nb"> </span>git push heroku
</pre></div>
                  </div>
                  <div id="_sec-rails_flavored_ruby_what_we_learned_in_this_chapter"
                    data-tralics-id="uid385" class="subsection" data-number="4.5.1">
                    <h3><a href="#sec-rails_flavored_ruby_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">4.5.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Ruby has a large number of methods for manipulating
                        strings of characters. </li>
                      <li>Everything in Ruby is an object. </li>
                      <li>Ruby supports method definition via the <code>def</code>
                        keyword. </li>
                      <li>Ruby supports class definition via the <code>class</code>
                        keyword. </li>
                      <li>Rails views can contain static HTML or embedded Ruby
                        (ERb). </li>
                      <li>Built-in Ruby data structures include arrays, ranges,
                        and hashes. </li>
                      <li>Ruby blocks are a flexible construct that (among other
                        things) allow natural iteration over enumerable data
                        structures. </li>
                      <li>Symbols are labels, like strings without any
                        additional structure. </li>
                      <li>Ruby supports object inheritance. </li>
                      <li>It is possible to open up and modify built-in Ruby
                        classes. </li>
                      <li>The word “deified” is a palindrome. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-exercises" data-tralics-id="cid29" class="section"
                  data-number="4.6">
                  <h2><a href="#sec-exercises" class="heading hyperref"><span class="number">4.6
                        </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <ol>
                    <li>By replacing the question marks in <a href="#code-string_shuffle"
                        class="hyperref">Listing&nbsp;<span class="ref">4.14</span></a>
                      with the appropriate methods, combine <code>split</code>,
                      <code>shuffle</code>, and <code>join</code> to write a
                      function that shuffles the letters in a given string. </li>
                    <li>Using <a href="#code-string_shuffle_two" class="hyperref">Listing&nbsp;<span
                          class="ref">4.15</span></a> as a guide, add a <code>shuffle</code>
                      method to the <code>String</code> class. </li>
                    <li>Create three hashes called <code>person1</code>, <code>person2</code>,
                      and <code>person3</code>, with first and last names under
                      the keys <code>:first</code> and <code>:last</code>.<span
                        class="intersentencespace"></span> Then create a <code>params</code>
                      hash so that <code>params[:father]</code> is <code>person1</code>,
                      <code>params[:mother]</code> is <code>person2</code>, and
                      <code>params[:child]</code> is <code>person3</code>.<span
                        class="intersentencespace"></span> Verify that, for
                      example, <code>params[:father][:first]</code> has the
                      right value. </li>
                    <li>Find an online version of the Ruby API and read about
                      the Hash method <code>merge</code>.<span class="intersentencespace"></span>
                      What is the value of the following expression?
                      <div class="code">
                        <div class="highlight">
                          <pre>  <span class="p">{</span> <span class="s2">"a"</span> <span
class="o">=&gt;</span> <span class="mi">100</span><span class="p">,</span> <span
class="s2">"b"</span> <span class="o">=&gt;</span> <span class="mi">200</span> <span
class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">({</span> <span
class="s2">"b"</span> <span class="o">=&gt;</span> <span class="mi">300</span> <span
class="p">})</span>
</pre></div>
                      </div>
                    </li>
                  </ol>
                  <div class="codelisting" id="_code-string_shuffle" data-tralics-id="uid401"
                    data-number="4.14">
                    <div class="heading"><span class="number">Listing 4.14:</span>
                      <span class="description">Skeleton for a string shuffle
                        function.</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">def</span> <span
class="nf">string_shuffle</span><span class="p">(</span><span class="n">s</span><span
class="p">)</span>
<span class="gp">&gt;&gt; </span>  <span class="n">s</span><span class="o">.</span><span
class="sc">?(</span><span class="s1">''</span><span class="p">)</span><span class="o">.</span><span
class="sc">?.</span><span class="p">?</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="n">string_shuffle</span><span class="p">(</span><span
class="s2">"foobar"</span><span class="p">)</span>
<span class="go">=&gt; "oobfra"</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-string_shuffle_two" data-tralics-id="uid402"
                    data-number="4.15">
                    <div class="heading"><span class="number">Listing 4.15:</span>
                      <span class="description">Skeleton for a <code>shuffle</code>
                        method attached to the <code>String</code> class.</span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="k">class</span> <span
class="nc">String</span>
<span class="gp">&gt;&gt; </span>  <span class="k">def</span> <span class="nf">shuffle</span>
<span class="gp">&gt;&gt; </span>    <span class="nb">self</span><span class="o">.</span><span
class="sc">?(</span><span class="s1">''</span><span class="p">)</span><span class="o">.</span><span
class="sc">?.</span><span class="p">?</span>
<span class="gp">&gt;&gt; </span>  <span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="gp">&gt;&gt; </span><span class="s2">"foobar"</span><span class="o">.</span><span
class="n">shuffle</span>
<span class="go">=&gt; "borafo"</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-4_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-4_footnote-1">If a helper is specific to a
                      particular controller, you should put it in the
                      corresponding helper file; for example, helpers for the
                      Static Pages controller generally go in <code>app/helpers/static_pages_helper.rb</code>.<span
                        class="intersentencespace"></span> In our case, we
                      expect the <code>full_title</code> helper to be used on
                      all the site’s pages, and Rails has a special helper file
                      for this case: <code>app/helpers/application_helper.rb</code>.&nbsp;<a
                        class="arrow" href="#cha-4_footnote-ref-1">↑</a></li>
                    <li id="_cha-4_footnote-2">For more on the origins of “foo”
                      and “bar”—and, in particular, the possible <em>non</em>-relation
                      of “foobar” to “FUBAR”—see the <a href="http://www.catb.org/jargon/html/F/foo.html"
                        target="_blank">Jargon File entry on “foo”</a>.&nbsp;<a
                        class="arrow" href="#cha-4_footnote-ref-2">↑</a></li>
                    <li id="_cha-4_footnote-3">Programmers familiar with Perl or
                      PHP should compare this to the automatic interpolation of
                      dollar sign variables in expressions like <code>"foo
                        $bar"</code>.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-3">↑</a></li>
                    <li id="_cha-4_footnote-4">Apologies in advance for
                      switching haphazardly between <em>function</em> and <em>method</em>
                      throughout this chapter; in Ruby, they’re the same thing:
                      all methods are functions, and all functions are methods,
                      because everything is an object.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-4">↑</a></li>
                    <li id="_cha-4_footnote-5">Well, there will still be <em>one</em>
                      thing left that we don’t understand, which is how Rails
                      ties this all together: mapping URLs to actions, making
                      the <code>full_title</code> helper available in views,
                      etc.<span class="intersentencespace"></span> This is an
                      interesting subject, and I encourage you to investigate it
                      further, but knowing exactly <em>how</em> Rails works is
                      not necessary when <em>using</em> Rails.<span class="intersentencespace"></span>
                      (For a deeper understanding, I recommend <em>The
                        Rails&nbsp;4 Way</em> by Obie Fernandez.)&nbsp;<a class="arrow"
                        href="#cha-4_footnote-ref-5">↑</a></li>
                    <li id="_cha-4_footnote-6">The <code>second</code> method
                      used here isn’t currently part of Ruby itself, but rather
                      is added by Rails.<span class="intersentencespace"></span>
                      It works in this case because the Rails console
                      automatically includes the Rails extensions to Ruby.&nbsp;<a
                        class="arrow" href="#cha-4_footnote-ref-6">↑</a></li>
                    <li id="_cha-4_footnote-7">Programming experts, on the other
                      hand, might benefit from knowing that blocks are <em>closures</em>,
                      which are one-shot anonymous functions with data
                      attached.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-7">↑</a></li>
                    <li id="_cha-4_footnote-8">Ruby versions 1.9 and later
                      actually guarantee that hashes keep their elements in the
                      same order entered, but it would be unwise ever to count
                      on a particular ordering.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-8">↑</a></li>
                    <li id="_cha-4_footnote-9">As a result of having less
                      baggage, symbols are easier to compare to each other;
                      strings need to be compared character by character, while
                      symbols can be compared all in one go.<span class="intersentencespace"></span>
                      This makes them ideal for use as hash keys.&nbsp;<a class="arrow"
                        href="#cha-4_footnote-ref-9">↑</a></li>
                    <li id="_cha-4_footnote-10">There’s actually a subtle
                      difference, which is that <code>p</code> returns the
                      object being printed while <code>puts</code> always
                      returns <code>nil</code>.<span class="intersentencespace"></span>
                      Thanks to reader Katarzyna Siwek for pointing this
                      out.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-10">↑</a></li>
                    <li id="_cha-4_footnote-11">A newline is what comes at the
                      end of a line, thereby starting a new line.<span class="intersentencespace"></span>
                      In code, it is represented by the character <span class="inline_verbatim">\n</span>.&nbsp;<a
                        class="arrow" href="#cha-4_footnote-ref-11">↑</a></li>
                    <li id="_cha-4_footnote-12">Actually <em>counting</em>
                      columns could drive you crazy, which is why many text
                      editors have a visual aid to help you.<span class="intersentencespace"></span>
                      For example, if you take a look back at <a href="#fig-cloud9_gemfile"
                        class="hyperref">Figure&nbsp;<span class="ref">1.5</span></a>,
                      you’ll see a small vertical line on the right to help keep
                      code under 80 characters.<span class="intersentencespace"></span>
                      The cloud IDE (<a href="#sec-development_environment" class="hyperref">Section&nbsp;<span
                          class="ref">1.2.1</span></a>) includes such a line by
                      default.<span class="intersentencespace"></span> If you
                      use TextMate, you can find this feature under <span class="tt">View
                        &gt; Wrap Column &gt; 78</span>.<span class="intersentencespace"></span>
                      In Sublime Text, you can use <span class="tt">View &gt;
                        Ruler &gt; 78</span> or <span class="tt">View &gt;
                        Ruler &gt; 80</span>.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-12">↑</a></li>
                    <li id="_cha-4_footnote-13">These results will vary based on
                      the version of Ruby you are using.<span class="intersentencespace"></span>
                      This example assumes you are using Ruby&nbsp;1.9.3 or
                      later.&nbsp;<a class="arrow" href="#cha-4_footnote-ref-13">↑</a></li>
                    <li id="_cha-4_footnote-14">For more on Ruby classes and the
                      <code>self</code> keyword, see the <a href="http://railstips.org/"
                        target="_blank">RailsTips</a> post “<a href="http://railstips.org/blog/archives/2006/11/18/class-and-instance-variables-in-ruby/"
                        target="_blank">Class and Instance Variables in Ruby</a>”.&nbsp;<a
                        class="arrow" href="#cha-4_footnote-ref-14">↑</a></li>
                    <li id="_cha-4_footnote-15">You don’t have to know what each
                      class in this hierarchy does.<span class="intersentencespace"></span>
                      <em>I</em> don’t know what they all do, and I’ve been
                      programming in Ruby on Rails since 2005.<span class="intersentencespace"></span>
                      This means either that (a) I’m grossly incompetent or (b)
                      you can be a skilled Rails developer without knowing all
                      its innards.<span class="intersentencespace"></span> I
                      hope for both our sakes that it’s the latter.&nbsp;<a class="arrow"
                        href="#cha-4_footnote-ref-15">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-filling_in_the_layout" data-tralics-id="cid30" class="chapter"
                  data-number="5">
                  <h1><a name="cha-filling_in_the_layout" class="heading hyperref"><span
                        class="number">Chapter 5 </span>Filling in the layout</a></h1>
                  <p>In the process of taking a brief tour of Ruby in <a href="#cha-rails_flavored_ruby"
                      class="hyperref">Chapter&nbsp;<span class="ref">4</span></a>,
                    we learned about including the application stylesheet into
                    the sample application (<a href="#sec-motivation" class="hyperref">Section&nbsp;<span
                        class="ref">4.1</span></a>), but (as noted in <a href="#sec-css_revisited"
                      class="hyperref">Section&nbsp;<span class="ref">4.3.4</span></a>)
                    the stylesheet doesn’t yet contain any CSS.<span class="intersentencespace"></span>
                    In this chapter, we’ll start filling in the custom
                    stylesheet by incorporating a CSS framework into our
                    application, and then we’ll add some custom styles of our
                    own.<sup id="_cha-5_footnote-ref-1" class="footnote"><a href="#cha-5_footnote-1">1</a></sup><span
                      class="intersentencespace"></span> We’ll also start
                    filling in the layout with links to the pages (such as Home
                    and About) that we’ve created so far (<a href="#sec-structure"
                      class="hyperref">Section&nbsp;<span class="ref">5.1</span></a>).<span
                      class="intersentencespace"></span> Along the way, we’ll
                    learn about partials, Rails routes, and the asset pipeline,
                    including an introduction to Sass (<a href="#sec-sass_and_the_asset_pipeline"
                      class="hyperref">Section&nbsp;<span class="ref">5.2</span></a>).<span
                      class="intersentencespace"></span> We’ll end by taking a
                    first important step toward letting users sign up to our
                    site (<a href="#sec-user_signup" class="hyperref">Section&nbsp;<span
                        class="ref">5.4</span></a>).</p>
                  <p>Most of the changes in this chapter involve adding and
                    editing markup in the sample application’s site layout,
                    which (based on the guidelines in <a href="#aside-when_to_test"
                      class="hyperref">Box&nbsp;<span class="ref">3.3</span></a>)
                    is exactly the kind of work that we wouldn’t ordinarily
                    test-drive, or even test at all.<span class="intersentencespace"></span>
                    As a result, we’ll spend most of our time in our text editor
                    and browser, using TDD only to add a Contact page (<a href="#sec-contact_page"
                      class="hyperref">Section&nbsp;<span class="ref">5.3.1</span></a>).<span
                      class="intersentencespace"></span> We will add an
                    important new test, though, writing our first <em>integration
                      test</em> to check that the links on the final layout are
                    correct (<a href="#sec-layout_link_tests" class="hyperref">Section&nbsp;<span
                        class="ref">5.3.4</span></a>).</p>
                </div>
                <div id="_sec-structure" data-tralics-id="cid31" class="section"
                  data-number="5.1">
                  <h2><a href="#sec-structure" class="heading hyperref"><span class="number">5.1
                        </span>Adding some structure</a></h2>
                  <p>The <em>Ruby on Rails Tutorial</em> is a book on web
                    development, not web design, but it would be depressing to
                    work on an application that looks like <em>complete</em>
                    crap, so in this section we’ll add some structure to the
                    layout and give it some minimal styling with CSS. In
                    addition to using some custom CSS rules, we’ll make use of <a
                      href="http://getbootstrap.com/" target="_blank"><em>Bootstrap</em></a>,
                    an open-source web design framework from Twitter.<span class="intersentencespace"></span>
                    We’ll also give our <em>code</em> some styling, so to
                    speak, using <em>partials</em> to tidy up the layout once
                    it gets a little cluttered.</p>
                  <p>When building web applications, it is often useful to get a
                    high-level overview of the user interface as early as
                    possible.<span class="intersentencespace"></span> Throughout
                    the rest of this book, I will thus often include <em>mockups</em>
                    (in a web context often called <em>wireframes</em>), which
                    are rough sketches of what the eventual application will
                    look like.<sup id="_cha-5_footnote-ref-2" class="footnote"><a
                        href="#cha-5_footnote-2">2</a></sup><span class="intersentencespace"></span>
                    In this chapter, we will principally be developing the
                    static pages introduced in <a href="#sec-static_pages" class="hyperref">Section&nbsp;<span
                        class="ref">3.2</span></a>, including a site logo, a
                    navigation header, and a site footer.<span class="intersentencespace"></span>
                    A mockup for the most important of these pages, the Home
                    page, appears in <a href="#fig-home_page_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">5.1</span></a>.<span class="intersentencespace"></span>
                    You can see the final result in <a href="#fig-site_with_footer"
                      class="hyperref">Figure&nbsp;<span class="ref">5.7</span></a>.<span
                      class="intersentencespace"></span> You’ll note that it
                    differs in some details—for example, we’ll end up adding a
                    Rails logo on the page—but that’s fine, since a mockup need
                    not be exact.</p>
                  <div class="center figure" id="_fig-home_page_mockup" data-tralics-id="uid405"
                    data-number="5.1">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_page_mockup_3rd_edition.png"
                        alt="images/figures/home_page_mockup_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 5.1: </span><span
                        class="description">A mockup of the sample application’s
                        Home page. </span></div>
                  </div>
                  <p>As usual, if you’re using Git for version control, now
                    would be a good time to make a new branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b filling-in-layout
</pre></div>
                  </div>
                  <div id="_sec-adding_to_the_layout" data-tralics-id="uid406" class="subsection"
                    data-number="5.1.1">
                    <h3><a href="#sec-adding_to_the_layout" class="heading hyperref"><span
                          class="number">5.1.1 </span>Site navigation</a></h3>
                    <p>As a first step toward adding links and styles to the
                      sample application, we’ll update the site layout file <code>application.html.erb</code>
                      (last seen in <a href="#code-application_layout_full_title"
                        class="hyperref">Listing&nbsp;<span class="ref">4.3</span></a>)
                      with additional HTML structure.<span class="intersentencespace"></span>
                      This includes some additional divisions, some CSS classes,
                      and the start of our site navigation.<span class="intersentencespace"></span>
                      The full file is in <a href="#code-layout_new_structure"
                        class="hyperref">Listing&nbsp;<span class="ref">5.1</span></a>;
                      explanations for the various pieces follow immediately
                      thereafter.<span class="intersentencespace"></span> If
                      you’d rather not delay gratification, you can see the
                      results in <a href="#fig-layout_no_logo_or_custom_css" class="hyperref">Figure&nbsp;<span
                          class="ref">5.2</span></a>.<span class="intersentencespace"></span>
                      (<em>Note</em>: it’s not (yet) very gratifying.)</p>
                    <div class="codelisting" id="_code-layout_new_structure" data-tralics-id="uid407"
                      data-number="5.1">
                      <div class="heading"><span class="number">Listing 5.1:</span>
                        <span class="description">The site layout with added
                          structure.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="n">full_title</span><span
class="p">(</span><span class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">))</span> <span class="cp">%&gt;</span><span class="nt">&lt;/title&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                           <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
    <span class="c">&lt;!--[if lt IE 9]&gt;</span>
<span class="c">      &lt;script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/r29/html5.min.js"&gt;</span>
<span class="c">      &lt;/script&gt;</span>
<span class="c">    &lt;![endif]--&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;header</span> <span class="na">class=</span><span class="s">"navbar navbar-fixed-top navbar-inverse"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"sample app"</span><span
class="p">,</span> <span class="s1">'#'</span><span class="p">,</span> <span class="nb">id</span><span
class="p">:</span> <span class="s2">"logo"</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;nav&gt;</span>
          <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
            <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Home"</span><span class="p">,</span>   <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Help"</span><span class="p">,</span>   <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
          <span class="nt">&lt;/ul&gt;</span>
        <span class="nt">&lt;/nav&gt;</span>
      <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;/header&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Let’s look at the new elements in <a href="#code-layout_new_structure"
                        class="hyperref">Listing&nbsp;<span class="ref">5.1</span></a>
                      from top to bottom.<span class="intersentencespace"></span>
                      As alluded to briefly in <a href="#sec-testing_titles" class="hyperref">Section&nbsp;<span
                          class="ref">3.4.1</span></a>, Rails uses HTML5 by
                      default (as indicated by the doctype <code>&lt;!DOCTYPE
                        html&gt;</code>); since the HTML5 standard is relatively
                      new, some browsers (especially older versions of Internet
                      Explorer) don’t fully support it, so we include some
                      JavaScript code (known as an “<a href="https://github.com/aFarkas/html5shiv"
                        target="_blank">HTML5 shim (or shiv)</a>”)<sup id="_cha-5_footnote-ref-3"
                        class="footnote"><a href="#cha-5_footnote-3">3</a></sup>
                      to work around the issue:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c">&lt;!--[if lt IE 9]&gt;</span>
<span class="c">  &lt;script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/r29/html5.min.js"&gt;</span>
<span class="c">  &lt;/script&gt;</span>
<span class="c">&lt;![endif]--&gt;</span>
</pre></div>
                    </div>
                    <p>The somewhat odd syntax</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c">&lt;!--[if lt IE 9]&gt;</span>
</pre></div>
                    </div>
                    <p>includes the enclosed line only if the version of
                      Microsoft Internet Explorer&nbsp;(IE) is less than&nbsp;9
                      (<code>if lt IE 9</code>).<span class="intersentencespace"></span>
                      The weird <code>[if lt IE 9]</code> syntax is <em>not</em>
                      part of Rails; it’s actually a <a href="http://en.wikipedia.org/wiki/Conditional_comment"
                        target="_blank">conditional comment</a> supported by
                      Internet Explorer browsers for just this sort of
                      situation.<span class="intersentencespace"></span> It’s a
                      good thing, too, because it means we can include the HTML5
                      shim <em>only</em> for IE browsers less than
                      version&nbsp;9, leaving other browsers such as Firefox,
                      Chrome, and Safari unaffected.</p>
                    <p>The next section includes a <code>header</code> for the
                      site’s (plain-text) logo, a couple of divisions (using the
                      <code>div</code> tag), and a list of elements with
                      navigation links:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"sample app"</span><span
class="p">,</span> <span class="s1">'#'</span><span class="p">,</span> <span class="nb">id</span><span
class="p">:</span> <span class="s2">"logo"</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;nav&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log in"</span><span class="p">,</span> <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/header&gt;</span>
</pre></div>
                    </div>
                    <p>Here the <code>header</code> tag indicates elements that
                      should go at the top of the page.<span class="intersentencespace"></span>
                      We’ve given the <code>header</code> tag three <em>CSS
                        classes</em>,<sup id="_cha-5_footnote-ref-4" class="footnote"><a
                          href="#cha-5_footnote-4">4</a></sup> called <code>navbar</code>,
                      <code>navbar-fixed-top</code>, and <code>navbar-inverse</code>,
                      separated by spaces:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
</pre></div>
                    </div>
                    <p>All HTML elements can be assigned both classes and <em>ids</em>;
                      these are merely labels, and are useful for styling with
                      CSS (<a href="#sec-custom_css" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.2</span></a>).<span class="intersentencespace"></span>
                      The main difference between classes and ids is that
                      classes can be used multiple times on a page, but ids can
                      be used only once.<span class="intersentencespace"></span>
                      In the present case, all the navbar classes have special
                      meaning to the Bootstrap framework, which we’ll install
                      and use in <a href="#sec-custom_css" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.2</span></a>.</p>
                    <p>Inside the <code>header</code> tag, we see a <code>div</code>
                      tag:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"container"</span><span class="nt">&gt;</span>
</pre></div>
                    </div>
                    <p>The <code>div</code> tag is a generic division; it
                      doesn’t do anything apart from divide the document into
                      distinct parts.<span class="intersentencespace"></span> In
                      older-style HTML, <code>div</code> tags are used for
                      nearly all site divisions, but HTML5 adds the <code>header</code>,
                      <code>nav</code>, and <code>section</code> elements for
                      divisions common to many applications.<span class="intersentencespace"></span>
                      In this case, the <code>div</code> has a CSS class as
                      well (<code>container</code>).<span class="intersentencespace"></span>
                      As with the <code>header</code> tag’s classes, this class
                      has special meaning to Bootstrap.</p>
                    <p>After the div, we encounter some embedded Ruby:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"sample app"</span><span class="p">,</span> <span class="s1">'#'</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">"logo"</span> <span
class="cp">%&gt;</span>
<span class="nt">&lt;nav&gt;</span>
  <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log in"</span><span class="p">,</span> <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;/nav&gt;</span>
</pre></div>
                    </div>
                    <p>This uses the Rails helper <code>link_to</code> to
                      create links (which we created directly with the anchor
                      tag&nbsp;<code>a</code> in <a href="#sec-custom_static_pages"
                        class="hyperref">Section&nbsp;<span class="ref">3.2.2</span></a>);
                      the first argument to <code>link_to</code> is the link
                      text, while the second is the URL. We’ll fill in the URLs
                      with <em>named routes</em> in <a href="#sec-named_routes"
                        class="hyperref">Section&nbsp;<span class="ref">5.3.3</span></a>,
                      but for now we use the stub URL <code>’#’</code> commonly
                      used in web design.<span class="intersentencespace"></span>
                      The third argument is an options hash, in this case adding
                      the CSS&nbsp;id <code>logo</code> to the sample app link.<span
                        class="intersentencespace"></span> (The other three
                      links have no options hash, which is fine since it’s
                      optional.)<span class="intersentencespace"></span> Rails
                      helpers often take options hashes in this way, giving us
                      the flexibility to add arbitrary HTML options without ever
                      leaving Rails.</p>
                    <p>The second element inside the divs is a list of
                      navigation links, made using the <em>unordered list</em>
                      tag <code>ul</code>, together with the <em>list item</em>
                      tag <code>li</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;nav&gt;</span>
  <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log in"</span><span class="p">,</span> <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
  <span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;/nav&gt;</span>
</pre></div>
                    </div>
                    <p>The <code>&lt;nav&gt;</code> tag, though formally
                      unnecessary here, is used to more clearly communicate the
                      purpose of the navigation links.<span class="intersentencespace"></span>
                      Meanwhile, the <code>nav</code>, <code>navbar-nav</code>,
                      and <code>navbar-right</code> classes on the <code>ul</code>
                      tag have special meaning to Bootstrap and will be styled
                      automatically when we include the Bootstrap CSS in <a href="#sec-custom_css"
                        class="hyperref">Section&nbsp;<span class="ref">5.1.2</span></a>.<span
                        class="intersentencespace"></span> As you can verify by
                      inspecting the navigation in your browser, once Rails has
                      processed the layout and evaluated the embedded Ruby the
                      list looks like this:<sup id="_cha-5_footnote-ref-5" class="footnote"><a
                          href="#cha-5_footnote-5">5</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;nav&gt;</span>
  <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span
class="nt">&gt;</span>Home<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
    <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span
class="nt">&gt;</span>Help<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
    <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span class="s">"#"</span><span
class="nt">&gt;</span>Log in<span class="nt">&lt;/a&gt;&lt;/li&gt;</span>
  <span class="nt">&lt;/ul&gt;</span>
<span class="nt">&lt;/nav&gt;</span>
</pre></div>
                    </div>
                    <p>This is the text that will be returned to the browser.</p>
                    <p>The final part of the layout is a <code>div</code> for
                      the main content:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"container"</span><span class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                    </div>
                    <p>As before, the <code>container</code> class has special
                      meaning to Bootstrap.<span class="intersentencespace"></span>
                      As we learned in <a href="#sec-layouts_and_embedded_ruby"
                        class="hyperref">Section&nbsp;<span class="ref">3.4.3</span></a>,
                      the <code>yield</code> method inserts the contents of
                      each page into the site layout.</p>
                    <p>Apart from the site footer, which we’ll add in <a href="#sec-partials"
                        class="hyperref">Section&nbsp;<span class="ref">5.1.3</span></a>,
                      our layout is now complete, and we can look at the results
                      by visiting the Home page.<span class="intersentencespace"></span>
                      To take advantage of the upcoming style elements, we’ll
                      add some extra elements to the <code>home.html.erb</code>
                      view (<a href="#code-signup_button" class="hyperref">Listing&nbsp;<span
                          class="ref">5.2</span></a>).</p>
                    <div class="codelisting" id="_code-signup_button" data-tralics-id="uid411"
                      data-number="5.2">
                      <div class="heading"><span class="number">Listing 5.2:</span>
                        <span class="description">The Home page with a link to
                          the signup page.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"center jumbotron"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h1&gt;</span>Welcome to the Sample App<span class="nt">&lt;/h1&gt;</span>

  <span class="nt">&lt;h2&gt;</span>
    This is the home page for the
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
    sample application.
  <span class="nt">&lt;/h2&gt;</span>

  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"Sign up now!"</span><span
class="p">,</span> <span class="s1">'#'</span><span class="p">,</span> <span class="ss">class</span><span
class="p">:</span> <span class="s2">"btn btn-lg btn-primary"</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/div&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">image_tag</span><span
class="p">(</span><span class="s2">"rails.png"</span><span class="p">,</span> <span
class="ss">alt</span><span class="p">:</span> <span class="s2">"Rails logo"</span><span
class="p">),</span>
            <span class="s1">'http://rubyonrails.org/'</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>In preparation for adding users to our site in <a href="#cha-sign_up"
                        class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>,
                      the first <code>link_to</code> creates a stub link of the
                      form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;a</span> <span class="na">href=</span><span
class="s">"#"</span> <span class="na">class=</span><span class="s">"btn btn-lg btn-primary"</span><span
class="nt">&gt;</span>Sign up now!<span class="nt">&lt;/a&gt;</span>
</pre></div>
                    </div>
                    <p>In the <code>div</code> tag, the <code>jumbotron</code>
                      CSS class has a special meaning to Bootstrap, as do the <code>btn</code>,
                      <code>btn-lg</code>, and <code>btn-primary</code> classes
                      in the signup button.</p>
                    <p>The second <code>link_to</code> shows off the <code>image_tag</code>
                      helper, which takes as arguments the path to an image and
                      an optional options hash, in this case setting the <code>alt</code>
                      attribute of the image tag using symbols.<span class="intersentencespace"></span>
                      For this to work, there needs to be an image called <code>rails.png</code>,
                      which you should download from the main Ruby on Rails page
                      at <a href="http://rubyonrails.org/images/rails.png" target="_blank">http://rubyonrails.org/images/rails.png</a>
                      and place in the <code>app/assets/images/</code>
                      directory.<span class="intersentencespace"></span> If
                      you’re using the cloud IDE or another Unix-like system,
                      you can accomplish this with the <code>curl</code>
                      utility as follows:<sup id="_cha-5_footnote-ref-6" class="footnote"><a
                          href="#cha-5_footnote-6">6</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> curl -O http://rubyonrails.org/images/rails.png
<span class="gp">$</span> mv rails.png app/assets/images/
</pre></div>
                    </div>
                    <p>(For more on <code>curl</code>, see <a href="http://conqueringthecommandline.com/book/curl"
                        target="_blank">Chapter 3 of <em>Conquering the Command
                          Line</em></a>.)<span class="intersentencespace"></span>
                      Because we used the <code>image_tag</code> helper in <a
                        href="#code-signup_button" class="hyperref">Listing&nbsp;<span
                          class="ref">5.2</span></a>, Rails will automatically
                      find any images in the <code>app/assets/images/</code>
                      directory using the asset pipeline (<a href="#sec-sass_and_the_asset_pipeline"
                        class="hyperref">Section&nbsp;<span class="ref">5.2</span></a>).</p>
                    <p>To make the effects of <code>image_tag</code> clearer,
                      let’s look at the HTML it produces:<sup id="_cha-5_footnote-ref-7"
                        class="footnote"><a href="#cha-5_footnote-7">7</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;img</span> <span class="na">alt=</span><span
class="s">"Rails logo"</span> <span class="na">src=</span><span class="s">"/assets/rails-9308b8f92fea4c19a3a0d8385b494526.png"</span> <span
class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>Here the string <code>9308b8f92fea4c19a3a0d8385b494526</code>
                      (which will differ on your system) is added by Rails to
                      ensure that the filename is unique, which causes browsers
                      to load images properly when they have been updated
                      (instead of retrieving them from the browser cache).<span
                        class="intersentencespace"></span> Note that the <code>src</code>
                      attribute <em>doesn’t</em> include <code>images</code>,
                      instead using an <code>assets</code> directory common to
                      all assets (images, JavaScript, CSS, etc.).<span class="intersentencespace"></span>
                      On the server, Rails associates images in the <code>assets</code>
                      directory with the proper <code>app/assets/images</code>
                      directory, but as far as the browser is concerned all the
                      assets look like they are in the same directory, which
                      allows them to be served faster.<span class="intersentencespace"></span>
                      Meanwhile, the <code>alt</code> attribute is what will be
                      displayed if the page is accessed by a program that can’t
                      display images (such as screen readers for the visually
                      impaired).</p>
                    <p>Now we’re finally ready to see the fruits of our labors,
                      as shown in <a href="#fig-layout_no_logo_or_custom_css" class="hyperref">Figure&nbsp;<span
                          class="ref">5.2</span></a>.<span class="intersentencespace"></span>
                      Pretty underwhelming, you say?<span class="intersentencespace"></span>
                      Perhaps so.<span class="intersentencespace"></span>
                      Happily, though, we’ve done a good job of giving our HTML
                      elements sensible classes, which puts us in a great
                      position to add style to the site with CSS.</p>
                    <div class="center figure" id="_fig-layout_no_logo_or_custom_css"
                      data-tralics-id="uid414" data-number="5.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/layout_no_logo_or_custom_css_bootstrap_3rd_edition.png"
                          alt="images/figures/layout_no_logo_or_custom_css_bootstrap_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.2: </span><span
                          class="description">The Home page with no custom CSS.
                        </span></div>
                    </div>
                  </div>
                  <div id="_sec-custom_css" data-tralics-id="uid415" class="subsection"
                    data-number="5.1.2">
                    <h3><a href="#sec-custom_css" class="heading hyperref"><span
                          class="number">5.1.2 </span>Bootstrap and custom CSS</a></h3>
                    <p>In <a href="#sec-adding_to_the_layout" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.1</span></a>, we associated many of
                      the HTML elements with CSS classes, which gives us
                      considerable flexibility in constructing a layout based on
                      CSS. As noted in <a href="#sec-adding_to_the_layout" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.1</span></a>, many of these classes
                      are specific to <a href="http://getbootstrap.com/" target="_blank">Bootstrap</a>,
                      a framework from Twitter that makes it easy to add nice
                      web design and user interface elements to an HTML5
                      application.<span class="intersentencespace"></span> In
                      this section, we’ll combine Bootstrap with some custom CSS
                      rules to start adding some style to the sample
                      application.<span class="intersentencespace"></span> It’s
                      worth noting that using Bootstrap automatically makes our
                      application’s design <a href="http://en.wikipedia.org/wiki/Responsive_web_design"
                        target="_blank"><em>responsive</em></a>, ensuring that
                      it looks sensible across a wide range of devices.</p>
                    <p>Our first step is to add Bootstrap, which in Rails
                      applications can be accomplished with the <span class="tt">bootstrap-sass</span>
                      gem, as shown in <a href="#code-bootstrap_sass" class="hyperref">Listing&nbsp;<span
                          class="ref">5.3</span></a>.<span class="intersentencespace"></span>
                      The Bootstrap framework natively uses the <a href="http://lesscss.org/"
                        target="_blank">Less CSS</a> language for making dynamic
                      stylesheets, but the Rails asset pipeline supports the
                      (very similar) Sass language by default (<a href="#sec-sass_and_the_asset_pipeline"
                        class="hyperref">Section&nbsp;<span class="ref">5.2</span></a>),
                      so <span class="tt">bootstrap-sass</span> converts Less
                      to Sass and makes all the necessary Bootstrap files
                      available to the current application.<sup id="_cha-5_footnote-ref-8"
                        class="footnote"><a href="#cha-5_footnote-8">8</a></sup></p>
                    <div class="codelisting" id="_code-bootstrap_sass" data-tralics-id="uid417"
                      data-number="5.3">
                      <div class="heading"><span class="number">Listing 5.3:</span>
                        <span class="description">Adding the <span class="tt">bootstrap-sass</span>
                          gem to the <code>Gemfile</code>.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'bootstrap-sass'</span><span class="p">,</span>       <span
class="s1">'3.2.0.0'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</pre></div>
                      </div>
                    </div>
                    <p>To install Bootstrap, we run <code>bundle install</code>
                      as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install
</pre></div>
                    </div>
                    <p>Although <code>rails generate</code> automatically
                      creates a separate CSS file for each controller, it’s
                      surprisingly hard to include them all properly and in the
                      right order, so for simplicity we’ll put all of the CSS
                      needed for this tutorial in a single file.<span class="intersentencespace"></span>
                      The first step toward getting custom CSS to work is to
                      create such a custom CSS file:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> touch app/assets/stylesheets/custom.css.scss
</pre></div>
                    </div>
                    <p>(This uses the <code>touch</code> trick from <a href="#sec-green"
                        class="hyperref">Section&nbsp;<span class="ref">3.3.3</span></a>
                      en route, but you can create the file however you like.)<span
                        class="intersentencespace"></span> Here both the
                      directory name and filename extension are important.<span
                        class="intersentencespace"></span> The directory</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">app/assets/stylesheets/</span>
</pre></div>
                    </div>
                    <p>is part of the asset pipeline (<a href="#sec-sass_and_the_asset_pipeline"
                        class="hyperref">Section&nbsp;<span class="ref">5.2</span></a>),
                      and any stylesheets in this directory will automatically
                      be included as part of the <code>application.css</code>
                      file included in the site layout.<span class="intersentencespace"></span>
                      Furthermore, the filename <code>custom.css.scss</code>
                      includes the <code>.css</code> extension, which indicates
                      a CSS file, and the <code>.scss</code> extension, which
                      indicates a “Sassy CSS” file and arranges for the asset
                      pipeline to process the file using Sass.<span class="intersentencespace"></span>
                      (We won’t be using Sass until <a href="#sec-sass" class="hyperref">Section&nbsp;<span
                          class="ref">5.2.2</span></a>, but it’s needed now for
                      the <span class="tt">bootstrap-sass</span> gem to work
                      its magic.)</p>
                    <p>Inside the file for the custom CSS, we can use the <code>@import</code>
                      function to include Bootstrap (together with the
                      associated Sprockets utility), as shown in <a href="#code-bootstrap_css"
                        class="hyperref">Listing&nbsp;<span class="ref">5.4</span></a>.<sup
                        id="_cha-5_footnote-ref-9" class="footnote"><a href="#cha-5_footnote-9">9</a></sup></p>
                    <div class="codelisting" id="_code-bootstrap_css" data-tralics-id="uid419"
                      data-number="5.4">
                      <div class="heading"><span class="number">Listing 5.4:</span>
                        <span class="description">Adding Bootstrap CSS. <span class="break"></span>
                          <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">@import</span> <span class="s2">"bootstrap-sprockets"</span><span
class="p">;</span>
<span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The two lines in <a href="#code-bootstrap_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.4</span></a> include the entire
                      Bootstrap CSS framework.<span class="intersentencespace"></span>
                      After restarting the web server to incorporate the changes
                      into the development application (by pressing Ctrl-C and
                      then running <code>rails server</code> as in <a href="#sec-rails_server"
                        class="hyperref">Section&nbsp;<span class="ref">1.3.2</span></a>),
                      the results appear as in <a href="#fig-sample_app_only_bootstrap"
                        class="hyperref">Figure&nbsp;<span class="ref">5.3</span></a>.<span
                        class="intersentencespace"></span> The placement of the
                      text isn’t good and the logo doesn’t have any style, but
                      the colors and signup button look promising.</p>
                    <div class="center figure" id="_fig-sample_app_only_bootstrap"
                      data-tralics-id="uid420" data-number="5.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sample_app_only_bootstrap_3rd_edition.png"
                          alt="images/figures/sample_app_only_bootstrap_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.3: </span><span
                          class="description">The sample application with
                          Bootstrap CSS. </span></div>
                    </div>
                    <p>Next we’ll add some CSS that will be used site-wide for
                      styling the layout and each individual page, as shown in <a
                        href="#code-universal_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.5</span></a>.<span class="intersentencespace"></span>
                      The result is shown in <a href="#fig-sample_app_universal"
                        class="hyperref">Figure&nbsp;<span class="ref">5.4</span></a>.<span
                        class="intersentencespace"></span> (There are quite a
                      few rules in <a href="#code-universal_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.5</span></a>; to get a sense of what a
                      CSS rule does, it’s often helpful to comment it out using
                      CSS comments, i.e., by putting it inside <code>/* … */</code>,
                      and seeing what changes.)</p>
                    <div class="codelisting" id="_code-universal_css" data-tralics-id="uid421"
                      data-number="5.5">
                      <div class="heading"><span class="number">Listing 5.5:</span>
                        <span class="description">Adding CSS for some universal
                          styling applying to all pages.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">@import</span> <span class="s2">"bootstrap-sprockets"</span><span
class="p">;</span>
<span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>

<span class="cm">/* universal */</span>

<span class="nt">body</span> <span class="p">{</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">60</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">section</span> <span class="p">{</span>
  <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">textarea</span> <span class="p">{</span>
  <span class="na">resize</span><span class="o">:</span> <span class="n">vertical</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nc">.center</span> <span class="p">{</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nc">.center</span> <span class="nt">h1</span> <span class="p">{</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-sample_app_universal" data-tralics-id="uid422"
                      data-number="5.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sample_app_universal_3rd_edition.png"
                          alt="images/figures/sample_app_universal_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.4: </span><span
                          class="description">Adding some spacing and other
                          universal styling. </span></div>
                    </div>
                    <p>Note that the CSS in <a href="#code-universal_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.5</span></a> has a consistent form.<span
                        class="intersentencespace"></span> In general, CSS rules
                      refer either to a class, an id, an HTML tag, or some
                      combination thereof, followed by a list of styling
                      commands.<span class="intersentencespace"></span> For
                      example,</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">body</span> <span class="p">{</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">60</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                    </div>
                    <p>puts 60&nbsp;pixels of padding at the top of the page.<span
                        class="intersentencespace"></span> Because of the <code>navbar-fixed-top</code>
                      class in the <code>header</code> tag, Bootstrap fixes the
                      navigation bar to the top of the page, so the padding
                      serves to separate the main text from the navigation.<span
                        class="intersentencespace"></span> (Because the default
                      navbar color changed after Bootstrap 2.0, we need the <code>navbar-inverse</code>
                      class to make it dark instead of light.)<span class="intersentencespace"></span>
                      Meanwhile, the CSS in the rule</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nc">.center</span> <span class="p">{</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
<span class="p">}</span>
</pre></div>
                    </div>
                    <p>associates the <code>center</code> class with the <code>text-align:
                        center</code> property.<span class="intersentencespace"></span>
                      In other words, the dot <code>.</code><span class="intersentencespace"></span>
                      in <code>.center</code> indicates that the rule styles a
                      class.<span class="intersentencespace"></span> (As we’ll
                      see in <a href="#code-logo_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.7</span></a>, the pound sign <code>#</code>
                      identifies a rule to style a CSS <em>id</em>.)<span class="intersentencespace"></span>
                      This means that elements inside any tag (such as a <code>div</code>)
                      with class <code>center</code> will be centered on the
                      page.<span class="intersentencespace"></span> (We saw an
                      example of this class in <a href="#code-signup_button" class="hyperref">Listing&nbsp;<span
                          class="ref">5.2</span></a>.)</p>
                    <p>Although Bootstrap comes with CSS rules for nice
                      typography, we’ll also add some custom rules for the
                      appearance of the text on our site, as shown in <a href="#code-typography_css"
                        class="hyperref">Listing&nbsp;<span class="ref">5.6</span></a>.<span
                        class="intersentencespace"></span> (Not all of these
                      rules apply to the Home page, but each rule here will be
                      used at some point in the sample application.)<span class="intersentencespace"></span>
                      The result of <a href="#code-typography_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.6</span></a> is shown in <a href="#fig-sample_app_typography"
                        class="hyperref">Figure&nbsp;<span class="ref">5.5</span></a>.</p>
                    <div class="codelisting" id="_code-typography_css" data-tralics-id="uid423"
                      data-number="5.6">
                      <div class="heading"><span class="number">Listing 5.6:</span>
                        <span class="description">Adding CSS for nice
                          typography.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">@import</span> <span class="s2">"bootstrap-sprockets"</span><span
class="p">;</span>
<span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">typography</span> <span class="o">*/</span>

<span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span
class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span
class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span
class="p">{</span>
  <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">h1</span> <span class="p">{</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">3</span><span
class="kt">em</span><span class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-2</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">30</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">h2</span> <span class="p">{</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.2</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">30</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
  <span class="na">font-weight</span><span class="o">:</span> <span class="no">normal</span><span
class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#777</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">p</span> <span class="p">{</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.1</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.7</span><span class="kt">em</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-sample_app_typography" data-tralics-id="uid424"
                      data-number="5.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sample_app_typography_3rd_edition.png"
                          alt="images/figures/sample_app_typography_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.5: </span><span
                          class="description">Adding some typographic styling. </span></div>
                    </div>
                    <p>Finally, we’ll add some rules to style the site’s logo,
                      which simply consists of the text “sample app”.<span class="intersentencespace"></span>
                      The CSS in <a href="#code-logo_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.7</span></a> converts the text to
                      uppercase and modifies its size, color, and placement.<span
                        class="intersentencespace"></span> (We’ve used a
                      CSS&nbsp;id because we expect the site logo to appear on
                      the page only once, but you could use a class instead.)</p>
                    <div class="codelisting" id="_code-logo_css" data-tralics-id="uid425"
                      data-number="5.7">
                      <div class="heading"><span class="number">Listing 5.7:</span>
                        <span class="description">Adding CSS for the site logo.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">@import</span> <span class="s2">"bootstrap-sprockets"</span><span
class="p">;</span>
<span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">header</span> <span class="o">*/</span>

<span class="nn">#logo</span> <span class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.7</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#fff</span><span
class="p">;</span>
  <span class="na">text-transform</span><span class="o">:</span> <span class="no">uppercase</span><span
class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">9</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nn">#logo</span><span class="nd">:hover</span> <span class="p">{</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#fff</span><span
class="p">;</span>
  <span class="na">text-decoration</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here <code>color: #fff</code> changes the color of the
                      logo to white.<span class="intersentencespace"></span>
                      HTML colors can be coded with three pairs of base-16
                      (hexadecimal) numbers, one each for the primary colors
                      red, green, and blue (in that order).<span class="intersentencespace"></span>
                      The code <code>#ffffff</code> maxes out all three colors,
                      yielding pure white, and <code>#fff</code> is a shorthand
                      for the full <code>#ffffff</code>.<span class="intersentencespace"></span>
                      The CSS standard also defines a large number of synonyms
                      for common <a href="http://www.w3schools.com/html/html_colornames.asp"
                        target="_blank">HTML colors</a>, including <code>white</code>
                      for <code>#fff</code>.<span class="intersentencespace"></span>
                      The result of the CSS in <a href="#code-logo_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.7</span></a> is shown in <a href="#fig-sample_app_logo"
                        class="hyperref">Figure&nbsp;<span class="ref">5.6</span></a>.</p>
                    <div class="center figure" id="_fig-sample_app_logo" data-tralics-id="uid426"
                      data-number="5.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sample_app_logo_3rd_edition.png"
                          alt="images/figures/sample_app_logo_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.6: </span><span
                          class="description">The sample app with nicely styled
                          logo. </span></div>
                    </div>
                  </div>
                  <div id="_sec-partials" data-tralics-id="uid427" class="subsection"
                    data-number="5.1.3">
                    <h3><a href="#sec-partials" class="heading hyperref"><span class="number">5.1.3
                          </span>Partials</a></h3>
                    <p>Although the layout in <a href="#code-layout_new_structure"
                        class="hyperref">Listing&nbsp;<span class="ref">5.1</span></a>
                      serves its purpose, it’s getting a little cluttered.<span
                        class="intersentencespace"></span> The HTML shim takes
                      up three lines and uses weird IE-specific syntax, so it
                      would be nice to tuck it away somewhere on its own.<span class="intersentencespace"></span>
                      In addition, the header HTML forms a logical unit, so it
                      should all be packaged up in one place.<span class="intersentencespace"></span>
                      The way to achieve this in Rails is to use a facility
                      called <em>partials</em>.<span class="intersentencespace"></span>
                      Let’s first take a look at what the layout looks like
                      after the partials are defined (<a href="#code-layout_with_partials"
                        class="hyperref">Listing&nbsp;<span class="ref">5.8</span></a>).</p>
                    <div class="codelisting" id="_code-layout_with_partials" data-tralics-id="uid428"
                      data-number="5.8">
                      <div class="heading"><span class="number">Listing 5.8:</span>
                        <span class="description">The site layout with partials
                          for the stylesheets and header.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="n">full_title</span><span
class="p">(</span><span class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">))</span> <span class="cp">%&gt;</span><span class="nt">&lt;/title&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s1">'all'</span><span class="p">,</span>
                                           <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s1">'application'</span><span class="p">,</span> <span class="s1">'data-turbolinks-track'</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'layouts/shim'</span> <span class="cp">%&gt;</span>
</span>  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'layouts/header'</span> <span class="cp">%&gt;</span>
</span>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>In <a href="#code-layout_with_partials" class="hyperref">Listing&nbsp;<span
                          class="ref">5.8</span></a>, we’ve replaced the HTML
                      shim stylesheet lines with a single call to a Rails helper
                      called <code>render</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'layouts/shim'</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>The effect of this line is to look for a file called <code>app/views/layouts/_shim.html.erb</code>,
                      evaluate its contents, and insert the results into the
                      view.<sup id="_cha-5_footnote-ref-10" class="footnote"><a
                          href="#cha-5_footnote-10">10</a></sup><span class="intersentencespace"></span>
                      (Recall that <span class="inline_verbatim">&lt;%= ...
                        %&gt;</span> is the embedded Ruby syntax needed to
                      evaluate a Ruby expression and then insert the results
                      into the template.)<span class="intersentencespace"></span>
                      Note the leading underscore on the filename <code>_shim.html.erb</code>;
                      this underscore is the universal convention for naming
                      partials, and among other things makes it possible to
                      identify all the partials in a directory at a glance.</p>
                    <p>Of course, to get the partial to work, we have to create
                      the corresponding file and fill it with some content.<span
                        class="intersentencespace"></span> In the case of the
                      shim partial, this is just the three lines of shim code
                      from <a href="#code-layout_new_structure" class="hyperref">Listing&nbsp;<span
                          class="ref">5.1</span></a>.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-stylesheets_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">5.9</span></a>.</p>
                    <div class="codelisting" id="_code-stylesheets_partial" data-tralics-id="uid430"
                      data-number="5.9">
                      <div class="heading"><span class="number">Listing 5.9:</span>
                        <span class="description">A partial for the HTML shim.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/layouts/_shim.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c">&lt;!--[if lt IE 9]&gt;</span>
<span class="c">  &lt;script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/r29/html5.min.js"&gt;</span>
<span class="c">  &lt;/script&gt;</span>
<span class="c">&lt;![endif]--&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Similarly, we can move the header material into the
                      partial shown in <a href="#code-header_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">5.10</span></a> and insert it into the
                      layout with another call to <code>render</code>.<span class="intersentencespace"></span>
                      (As usual with partials, you will have to create the file
                      by hand using your text editor.)</p>
                    <div class="codelisting" id="_code-header_partial" data-tralics-id="uid431"
                      data-number="5.10">
                      <div class="heading"><span class="number">Listing 5.10:</span>
                        <span class="description">A partial for the site header.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/layouts/_header.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"sample app"</span><span
class="p">,</span> <span class="s1">'#'</span><span class="p">,</span> <span class="nb">id</span><span
class="p">:</span> <span class="s2">"logo"</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;nav&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log in"</span><span class="p">,</span> <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/header&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now that we know how to make partials, let’s add a site
                      footer to go along with the header.<span class="intersentencespace"></span>
                      By now you can probably guess that we’ll call it <code>_footer.html.erb</code>
                      and put it in the layouts directory (<a href="#code-footer_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">5.11</span></a>).<sup
                        id="_cha-5_footnote-ref-11" class="footnote"><a href="#cha-5_footnote-11">11</a></sup></p>
                    <div class="codelisting" id="_code-footer_partial" data-tralics-id="uid433"
                      data-number="5.11">
                      <div class="heading"><span class="number">Listing 5.11:</span>
                        <span class="description">A partial for the site footer.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/layouts/_footer.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;footer</span> <span class="na">class=</span><span
class="s">"footer"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;small&gt;</span>
    The <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
    by <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.michaelhartl.com/"</span><span
class="nt">&gt;</span>Michael Hartl<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/small&gt;</span>
  <span class="nt">&lt;nav&gt;</span>
    <span class="nt">&lt;ul&gt;</span>
      <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"About"</span><span class="p">,</span>   <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
      <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Contact"</span><span class="p">,</span> <span class="s1">'#'</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span
class="s">"http://news.railstutorial.org/"</span><span class="nt">&gt;</span>News<span
class="nt">&lt;/a&gt;&lt;/li&gt;</span>
    <span class="nt">&lt;/ul&gt;</span>
  <span class="nt">&lt;/nav&gt;</span>
<span class="nt">&lt;/footer&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>As with the header, in the footer we’ve used <code>link_to</code>
                      for the internal links to the About and Contact pages and
                      stubbed out the URLs with <code>’#’</code> for now.<span
                        class="intersentencespace"></span> (As with <code>header</code>,
                      the <code>footer</code> tag is new in HTML5.)</p>
                    <p>We can render the footer partial in the layout by
                      following the same pattern as the stylesheets and header
                      partials (<a href="#code-layout_with_footer" class="hyperref">Listing&nbsp;<span
                          class="ref">5.12</span></a>).</p>
                    <div class="codelisting" id="_code-layout_with_footer" data-tralics-id="uid434"
                      data-number="5.12">
                      <div class="heading"><span class="number">Listing 5.12:</span>
                        <span class="description">The site layout with a footer
                          partial.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span><span class="cp">&lt;%=</span> <span class="n">full_title</span><span
class="p">(</span><span class="k">yield</span><span class="p">(</span><span class="ss">:title</span><span
class="p">))</span> <span class="cp">%&gt;</span><span class="nt">&lt;/title&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">stylesheet_link_tag</span> <span
class="s2">"application"</span><span class="p">,</span> <span class="ss">media</span><span
class="p">:</span> <span class="s2">"all"</span><span class="p">,</span>
                                           <span class="s2">"data-turbolinks-track"</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">javascript_include_tag</span> <span
class="s2">"application"</span><span class="p">,</span> <span class="s2">"data-turbolinks-track"</span> <span
class="o">=&gt;</span> <span class="kp">true</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">csrf_meta_tags</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'layouts/shim'</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'layouts/header'</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'layouts/footer'</span> <span class="cp">%&gt;</span>
</span>    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Of course, the footer will be ugly without some styling (<a
                        href="#code-footer_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.13</span></a>).<span class="intersentencespace"></span>
                      The results appear in <a href="#fig-site_with_footer" class="hyperref">Figure&nbsp;<span
                          class="ref">5.7</span></a>.</p>
                    <div class="codelisting" id="_code-footer_css" data-tralics-id="uid435"
                      data-number="5.13">
                      <div class="heading"><span class="number">Listing 5.13:</span>
                        <span class="description">Adding the CSS for the site
                          footer.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">footer</span> <span class="o">*/</span>

<span class="nt">footer</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">45</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">border-top</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="mh">#eaeaea</span><span
class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#777</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">footer</span> <span class="nt">a</span> <span class="p">{</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#555</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">footer</span> <span class="nt">a</span><span class="nd">:hover</span> <span
class="p">{</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#222</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">footer</span> <span class="nt">small</span> <span class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">footer</span> <span class="nt">ul</span> <span class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">right</span><span
class="p">;</span>
  <span class="na">list-style</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">footer</span> <span class="nt">ul</span> <span class="nt">li</span> <span
class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-left</span><span class="o">:</span> <span class="mi">15</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-site_with_footer" data-tralics-id="uid436"
                      data-number="5.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/site_with_footer_bootstrap_3rd_edition.png"
                          alt="images/figures/site_with_footer_bootstrap_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.7: </span><span
                          class="description">The Home page with an added
                          footer. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-sass_and_the_asset_pipeline" data-tralics-id="cid32"
                  class="section" data-number="5.2">
                  <h2><a href="#sec-sass_and_the_asset_pipeline" class="heading hyperref"><span
                        class="number">5.2 </span>Sass and the asset pipeline</a></h2>
                  <p>One of the most notable additions in recent versions of
                    Rails is the <em>asset pipeline</em>, which significantly
                    improves the production and management of static assets such
                    as CSS, JavaScript, and images.<span class="intersentencespace"></span>
                    This section first gives a high-level overview of the asset
                    pipeline, and then shows how to use <em>Sass</em>, a
                    powerful tool for writing CSS.</p>
                  <div id="_sec-the_asset_pipeline" data-tralics-id="uid437" class="subsection"
                    data-number="5.2.1">
                    <h3><a href="#sec-the_asset_pipeline" class="heading hyperref"><span
                          class="number">5.2.1 </span>The asset pipeline</a></h3>
                    <p>The asset pipeline involves lots of changes under Rails’
                      hood, but from the perspective of a typical Rails
                      developer there are three principal features to
                      understand: asset directories, manifest files, and
                      preprocessor engines.<sup id="_cha-5_footnote-ref-12" class="footnote"><a
                          href="#cha-5_footnote-12">12</a></sup><span class="intersentencespace"></span>
                      Let’s consider each in turn.</p>
                    <div id="_uid439" data-tralics-id="uid439" class="subsubsection"
                      data-number="5.2.1.1">
                      <h4><a href="#uid439" class="heading">Asset directories</a></h4>
                      <p>In Rails version 3.0 and earlier, static assets lived
                        in the <code>public/</code> directory, as follows:</p>
                      <ul>
                        <li><code>public/stylesheets</code> </li>
                        <li><code>public/javascripts</code> </li>
                        <li><code>public/images</code> </li>
                      </ul>
                      <p>Files in these directories are (even post-3.0)
                        automatically served up via requests to
                        http://www.example.com/stylesheets, etc.</p>
                      <p>In the latest version of Rails, there are <em>three</em>
                        canonical directories for static assets, each with its
                        own purpose:</p>
                      <ul>
                        <li><code>app/assets</code>: assets specific to the
                          present application </li>
                        <li><code>lib/assets</code>: assets for libraries
                          written by your dev team </li>
                        <li><code>vendor/assets</code>: assets from third-party
                          vendors </li>
                      </ul>
                      <p>As you might guess, each of these directories has a
                        subdirectory for each asset class, e.g.,</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> ls app/assets/
<span class="go">images/  javascripts/  stylesheets/</span>
</pre></div>
                      </div>
                      <p>At this point, we’re in a position to understand the
                        motivation behind the location of the custom CSS file in
                        <a href="#sec-custom_css" class="hyperref">Section&nbsp;<span
                            class="ref">5.1.2</span></a>: <code>custom.css.scss</code>
                        is specific to the sample application, so it goes in <code>app/assets/stylesheets</code>.</p>
                    </div>
                    <div id="_uid446" data-tralics-id="uid446" class="subsubsection"
                      data-number="5.2.1.2">
                      <h4><a href="#uid446" class="heading">Manifest files</a></h4>
                      <p>Once you’ve placed your assets in their logical
                        locations, you can use <em>manifest files</em> to tell
                        Rails (via the <a href="https://github.com/sstephenson/sprockets"
                          target="_blank">Sprockets</a> gem) how to combine them
                        to form single files.<span class="intersentencespace"></span>
                        (This applies to CSS and JavaScript but not to images.)<span
                          class="intersentencespace"></span> As an example,
                        let’s take a look at the default manifest file for app
                        stylesheets (<a href="#code-app_css_manifest" class="hyperref">Listing&nbsp;<span
                            class="ref">5.14</span></a>).</p>
                      <div class="codelisting" id="_code-app_css_manifest" data-tralics-id="uid447"
                        data-number="5.14">
                        <div class="heading"><span class="number">Listing 5.14:</span>
                          <span class="description">The manifest file for
                            app-specific CSS. <span class="break"></span> <span
                              class="filepath">app/assets/stylesheets/application.css</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="cm">/*</span>
<span class="cm"> * This is a manifest file that'll be compiled into application.css, which</span>
<span class="cm"> * will include all the files listed below.</span>
<span class="cm"> *</span>
<span class="cm"> * Any CSS and SCSS file within this directory, lib/assets/stylesheets,</span>
<span class="cm"> * vendor/assets/stylesheets, or vendor/assets/stylesheets of plugins, if any,</span>
<span class="cm"> * can be referenced here using a relative path.</span>
<span class="cm"> *</span>
<span class="cm"> * You're free to add application-wide styles to this file and they'll appear</span>
<span class="cm"> * at the bottom of the compiled file so the styles you add here take</span>
<span class="cm"> * precedence over styles defined in any styles defined in the other CSS/SCSS</span>
<span class="cm"> * files in this directory. It is generally better to create a new file per</span>
<span class="cm"> * style scope.</span>
<span class="cm"> *</span>
<span class="hll"><span class="cm"> *= require_tree .</span>
</span><span class="hll"><span class="cm"> *= require_self</span>
</span><span class="cm"> */</span>
</pre></div>
                        </div>
                      </div>
                      <p>The key lines here are actually CSS comments, but they
                        are used by Sprockets to include the proper files:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cm">/*</span>
<span class="cm"> .</span>
<span class="cm"> .</span>
<span class="cm"> .</span>
<span class="cm"> *= require_tree .</span>
<span class="cm"> *= require_self</span>
<span class="cm">*/</span>
</pre></div>
                      </div>
                      <p>Here</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="go">*= require_tree .</span>
</pre></div>
                      </div>
                      <p>ensures that all CSS files in the <code>app/assets/stylesheets</code>
                        directory (including the tree subdirectories) are
                        included into the application CSS. The line</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="go">*= require_self</span>
</pre></div>
                      </div>
                      <p>specifies where in the loading sequence the CSS in <code>application.css</code>
                        itself gets included.</p>
                      <p>Rails comes with sensible default manifest files, and
                        in the <em>Rails Tutorial</em> we won’t need to make
                        any changes, but the <a href="http://guides.rubyonrails.org/asset_pipeline.html"
                          target="_blank">Rails Guides entry on the asset
                          pipeline</a> has more detail if you need it.</p>
                    </div>
                    <div id="_uid448" data-tralics-id="uid448" class="subsubsection"
                      data-number="5.2.1.3">
                      <h4><a href="#uid448" class="heading">Preprocessor engines</a></h4>
                      <p>After you’ve assembled your assets, Rails prepares them
                        for the site template by running them through several
                        preprocessing engines and using the manifest files to
                        combine them for delivery to the browser.<span class="intersentencespace"></span>
                        We tell Rails which processor to use using filename
                        extensions; the three most common cases are <code>.scss</code>
                        for Sass, <code>.coffee</code> for CoffeeScript, and <code>.erb</code>
                        for embedded Ruby (ERb).<span class="intersentencespace"></span>
                        We first covered ERb in <a href="#sec-layouts_and_embedded_ruby"
                          class="hyperref">Section&nbsp;<span class="ref">3.4.3</span></a>,
                        and cover Sass in <a href="#sec-sass" class="hyperref">Section&nbsp;<span
                            class="ref">5.2.2</span></a>.<span class="intersentencespace"></span>
                        We won’t be needing CoffeeScript in this tutorial, but
                        it’s an elegant little language that compiles to
                        JavaScript.<span class="intersentencespace"></span> (The
                        <a href="http://railscasts.com/episodes/267-coffeescript-basics"
                          target="_blank">RailsCast on CoffeeScript basics</a>
                        is a good place to start.)</p>
                      <p>The preprocessor engines can be chained, so that</p>
                      <p><code>foobar.js.coffee</code></p>
                      <p>gets run through the CoffeeScript processor, and</p>
                      <p><code>foobar.js.erb.coffee</code></p>
                      <p>gets run through both CoffeeScript and ERb (with the
                        code running from right to left, i.e., CoffeeScript
                        first).</p>
                    </div>
                    <div id="_uid449" data-tralics-id="uid449" class="subsubsection"
                      data-number="5.2.1.4">
                      <h4><a href="#uid449" class="heading">Efficiency in
                          production</a></h4>
                      <p>One of the best things about the asset pipeline is that
                        it automatically results in assets that are optimized to
                        be efficient in a production application.<span class="intersentencespace"></span>
                        Traditional methods for organizing CSS and JavaScript
                        involve splitting functionality into separate files and
                        using nice formatting (with lots of indentation).<span class="intersentencespace"></span>
                        While convenient for the programmer, this is inefficient
                        in production.<span class="intersentencespace"></span>
                        In particular, including multiple full-sized files can
                        significantly slow page-load times, which is one of the
                        most important factors affecting the quality of the user
                        experience.<span class="intersentencespace"></span> With
                        the asset pipeline, we don’t have to choose between
                        speed and convenience: we can work with multiple nicely
                        formatted files in development, and then use the asset
                        pipeline to make efficient files in production.<span class="intersentencespace"></span>
                        In particular, the asset pipeline combines all the
                        application stylesheets into one CSS file (<code>application.css</code>),
                        combines all the application JavaScript into one
                        JavaScript file (<code>application.js</code>), and then
                        <em>minifies</em> them to remove the unnecessary spacing
                        and indentation that bloats file size.<span class="intersentencespace"></span>
                        The result is the best of both worlds: convenience in
                        development and efficiency in production.</p>
                    </div>
                  </div>
                  <div id="_sec-sass" data-tralics-id="uid450" class="subsection"
                    data-number="5.2.2">
                    <h3><a href="#sec-sass" class="heading hyperref"><span class="number">5.2.2
                          </span>Syntactically awesome stylesheets</a></h3>
                    <p><em>Sass</em> is a language for writing stylesheets that
                      improves on CSS in many ways.<span class="intersentencespace"></span>
                      In this section, we cover two of the most important
                      improvements, <em>nesting</em> and <em>variables</em>.<span
                        class="intersentencespace"></span> (A third technique, <em>mixins</em>,
                      is introduced in <a href="#sec-rails_environments" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.1</span></a>.)</p>
                    <p>As noted briefly in <a href="#sec-custom_css" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.2</span></a>, Sass supports a format
                      called SCSS (indicated with a <code>.scss</code> filename
                      extension), which is a strict superset of CSS itself; that
                      is, SCSS only <em>adds</em> features to CSS, rather than
                      defining an entirely new syntax.<sup id="_cha-5_footnote-ref-13"
                        class="footnote intersentence"><a href="#cha-5_footnote-13">13</a></sup><span
                        class="intersentencespace"></span> This means that every
                      valid CSS file is also a valid SCSS file, which is
                      convenient for projects with existing style rules.<span class="intersentencespace"></span>
                      In our case, we used SCSS from the start in order to take
                      advantage of Bootstrap.<span class="intersentencespace"></span>
                      Since the Rails asset pipeline automatically uses Sass to
                      process files with the <code>.scss</code> extension, the
                      <code>custom.css.scss</code> file will be run through the
                      Sass preprocessor before being packaged up for delivery to
                      the browser.</p>
                    <div id="_uid452" data-tralics-id="uid452" class="subsubsection"
                      data-number="5.2.2.1">
                      <h4><a href="#uid452" class="heading">Nesting</a></h4>
                      <p>A common pattern in stylesheets is having rules that
                        apply to nested elements.<span class="intersentencespace"></span>
                        For example, in <a href="#code-universal_css" class="hyperref">Listing&nbsp;<span
                            class="ref">5.5</span></a> we have rules both for <code>.center</code>
                        and for <code>.center h1</code>:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="nc">.center</span> <span
class="p">{</span>
</span>  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
<span class="p">}</span>

<span class="hll"><span class="nc">.center</span> <span class="nt">h1</span> <span
class="p">{</span>
</span>  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>We can replace this in Sass with</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="nc">.center</span> <span
class="p">{</span>
</span>  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
<span class="hll">  <span class="nt">h1</span> <span class="p">{</span>
</span>    <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>Here the nested <code>h1</code> rule automatically
                        inherits the <code>.center</code> context.</p>
                      <p>There’s a second candidate for nesting that requires a
                        slightly different syntax.<span class="intersentencespace"></span>
                        In <a href="#code-logo_css" class="hyperref">Listing&nbsp;<span
                            class="ref">5.7</span></a>, we have the code</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="nn">#logo</span> <span
class="p">{</span>
</span>  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.7</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#fff</span><span
class="p">;</span>
  <span class="na">text-transform</span><span class="o">:</span> <span class="no">uppercase</span><span
class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">9</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span><span
class="p">;</span>
<span class="p">}</span>

<span class="hll"><span class="nn">#logo</span><span class="nd">:hover</span> <span
class="p">{</span>
</span>  <span class="na">color</span><span class="o">:</span> <span class="mh">#fff</span><span
class="p">;</span>
  <span class="na">text-decoration</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>Here the logo id <code>#logo</code> appears twice,
                        once by itself and once with the <code>hover</code>
                        attribute (which controls its appearance when the mouse
                        pointer hovers over the element in question).<span class="intersentencespace"></span>
                        In order to nest the second rule, we need to reference
                        the parent element <code>#logo</code>; in SCSS, this is
                        accomplished with the ampersand character&nbsp;<code>&amp;</code>
                        as follows:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="nn">#logo</span> <span
class="p">{</span>
</span>  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.7</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#fff</span><span
class="p">;</span>
  <span class="na">text-transform</span><span class="o">:</span> <span class="no">uppercase</span><span
class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">9</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span><span
class="p">;</span>
<span class="hll">  <span class="k">&amp;</span><span class="nd">:hover</span> <span
class="p">{</span>
</span>    <span class="na">color</span><span class="o">:</span> <span class="mh">#fff</span><span
class="p">;</span>
    <span class="na">text-decoration</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>Sass changes <code>&amp;:hover</code> into <code>#logo:hover</code>
                        as part of converting from SCSS to CSS.</p>
                      <p>Both of these nesting techniques apply to the footer
                        CSS in <a href="#code-footer_css" class="hyperref">Listing&nbsp;<span
                            class="ref">5.13</span></a>, which can be
                        transformed into the following:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">footer</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">45</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">border-top</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="mh">#eaeaea</span><span
class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="mh">#777</span><span
class="p">;</span>
  <span class="nt">a</span> <span class="p">{</span>
    <span class="na">color</span><span class="o">:</span> <span class="mh">#555</span><span
class="p">;</span>
    <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
      <span class="na">color</span><span class="o">:</span> <span class="mh">#222</span><span
class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nt">small</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="p">}</span>
  <span class="nt">ul</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">right</span><span
class="p">;</span>
    <span class="na">list-style</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
    <span class="nt">li</span> <span class="p">{</span>
      <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
      <span class="na">margin-left</span><span class="o">:</span> <span class="mi">15</span><span
class="kt">px</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>Converting <a href="#code-footer_css" class="hyperref">Listing&nbsp;<span
                            class="ref">5.13</span></a> by hand is a good
                        exercise, and you should verify that the CSS still works
                        properly after the conversion.</p>
                    </div>
                    <div id="_uid453" data-tralics-id="uid453" class="subsubsection"
                      data-number="5.2.2.2">
                      <h4><a href="#uid453" class="heading">Variables</a></h4>
                      <p>Sass allows us to define <em>variables</em> to
                        eliminate duplication and write more expressive code.<span
                          class="intersentencespace"></span> For example,
                        looking at <a href="#code-typography_css" class="hyperref">Listing&nbsp;<span
                            class="ref">5.6</span></a> and <a href="#code-footer_css"
                          class="hyperref">Listing&nbsp;<span class="ref">5.13</span></a>,
                        we see that there are repeated references to the same
                        color:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">h2</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
<span class="hll">  <span class="na">color</span><span class="o">:</span> <span
class="mh">#777</span><span class="p">;</span>
</span><span class="p">}</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nt">footer</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
<span class="hll">  <span class="na">color</span><span class="o">:</span> <span
class="mh">#777</span><span class="p">;</span>
</span><span class="p">}</span>
</pre></div>
                      </div>
                      <p>In this case, <code>#777</code> is a light gray, and
                        we can give it a name by defining a variable as follows:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nv">$light-gray</span><span class="o">:</span> <span
class="mh">#777</span><span class="p">;</span>
</pre></div>
                      </div>
                      <p>This allows us to rewrite our SCSS like this:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nv">$light-gray</span><span class="o">:</span> <span
class="mh">#777</span><span class="p">;</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nt">h2</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">color</span><span class="o">:</span> <span class="nv">$light-gray</span><span
class="p">;</span>
<span class="p">}</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nt">footer</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">color</span><span class="o">:</span> <span class="nv">$light-gray</span><span
class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>Because variable names such as <code>$light-gray</code>
                        are more descriptive than <code>#777</code>, it’s often
                        useful to define variables even for values that aren’t
                        repeated.<span class="intersentencespace"></span>
                        Indeed, the Bootstrap framework defines a large number
                        of variables for colors, available online on the <a href="http://getbootstrap.com/customize/#less-variables"
                          target="_blank">Bootstrap page of Less variables</a>.<span
                          class="intersentencespace"></span> That page defines
                        variables using Less, not Sass, but the <span class="tt">bootstrap-sass</span>
                        gem provides the Sass equivalents.<span class="intersentencespace"></span>
                        It is not difficult to guess the correspondence; where
                        Less uses an “at” sign&nbsp;<code>@</code>, Sass uses a
                        dollar sign&nbsp;<code>$</code>.<span class="intersentencespace"></span>
                        Looking at the Bootstrap variable page, we see that
                        there is a variable for light gray:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre> <span class="k">@gray-light</span><span class="nd">:</span> <span
class="nn">#777</span><span class="o">;</span>
</pre></div>
                      </div>
                      <p>This means that, via the <span class="tt">bootstrap-sass</span>
                        gem, there should be a corresponding SCSS variable <code>$gray-light</code>.<span
                          class="intersentencespace"></span> We can use this to
                        replace our custom variable, <code>$light-gray</code>,
                        which gives</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">h2</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">color</span><span class="o">:</span> <span class="nv">$gray-light</span><span
class="p">;</span>
<span class="p">}</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nt">footer</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">color</span><span class="o">:</span> <span class="nv">$gray-light</span><span
class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                      <p>Applying the Sass nesting and variable definition
                        features to the full SCSS file gives the file in <a href="#code-refactored_scss"
                          class="hyperref">Listing&nbsp;<span class="ref">5.15</span></a>.<span
                          class="intersentencespace"></span> This uses both Sass
                        variables (as inferred from the Bootstrap Less variable
                        page) and built-in named colors (i.e., <code>white</code>
                        for <code>#fff</code>).<span class="intersentencespace"></span>
                        Note in particular the dramatic improvement in the rules
                        for the <code>footer</code> tag.</p>
                      <div class="codelisting" id="_code-refactored_scss" data-tralics-id="uid454"
                        data-number="5.15">
                        <div class="heading"><span class="number">Listing 5.15:</span>
                          <span class="description">The initial SCSS file
                            converted to use nesting and variables.<span class="intersentencespace"></span>
                            <span class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="k">@import</span> <span class="s2">"bootstrap-sprockets"</span><span
class="p">;</span>
<span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>

<span class="cm">/* mixins, variables, etc. */</span>

<span class="nv">$gray-medium-light</span><span class="o">:</span> <span class="mh">#eaeaea</span><span
class="p">;</span>

<span class="cm">/* universal */</span>

<span class="nt">body</span> <span class="p">{</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">60</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">section</span> <span class="p">{</span>
  <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">textarea</span> <span class="p">{</span>
  <span class="na">resize</span><span class="o">:</span> <span class="n">vertical</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nc">.center</span> <span class="p">{</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
  <span class="nt">h1</span> <span class="p">{</span>
    <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="cm">/* typography */</span>

<span class="nt">h1</span><span class="o">,</span> <span class="nt">h2</span><span
class="o">,</span> <span class="nt">h3</span><span class="o">,</span> <span class="nt">h4</span><span
class="o">,</span> <span class="nt">h5</span><span class="o">,</span> <span class="nt">h6</span> <span
class="p">{</span>
  <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">h1</span> <span class="p">{</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">3</span><span
class="kt">em</span><span class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-2</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">30</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">h2</span> <span class="p">{</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.2</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">30</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">text-align</span><span class="o">:</span> <span class="no">center</span><span
class="p">;</span>
  <span class="na">font-weight</span><span class="o">:</span> <span class="no">normal</span><span
class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="nv">$gray-light</span><span
class="p">;</span>
<span class="p">}</span>

<span class="nt">p</span> <span class="p">{</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.1</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.7</span><span class="kt">em</span><span class="p">;</span>
<span class="p">}</span>


<span class="cm">/* header */</span>

<span class="nn">#logo</span> <span class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.7</span><span class="kt">em</span><span class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="nb">white</span><span
class="p">;</span>
  <span class="na">text-transform</span><span class="o">:</span> <span class="no">uppercase</span><span
class="p">;</span>
  <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">9</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">font-weight</span><span class="o">:</span> <span class="no">bold</span><span
class="p">;</span>
  <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
    <span class="na">color</span><span class="o">:</span> <span class="nb">white</span><span
class="p">;</span>
    <span class="na">text-decoration</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="cm">/* footer */</span>

<span class="nt">footer</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">45</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">padding-top</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">border-top</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="nv">$gray-medium-light</span><span
class="p">;</span>
  <span class="na">color</span><span class="o">:</span> <span class="nv">$gray-light</span><span
class="p">;</span>
  <span class="nt">a</span> <span class="p">{</span>
    <span class="na">color</span><span class="o">:</span> <span class="nv">$gray</span><span
class="p">;</span>
    <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
      <span class="na">color</span><span class="o">:</span> <span class="nv">$gray-darker</span><span
class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nt">small</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="p">}</span>
  <span class="nt">ul</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">right</span><span
class="p">;</span>
    <span class="na">list-style</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
    <span class="nt">li</span> <span class="p">{</span>
      <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
      <span class="na">margin-left</span><span class="o">:</span> <span class="mi">15</span><span
class="kt">px</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                        </div>
                      </div>
                      <p>Sass gives us even more ways to simplify our
                        stylesheets, but the code in <a href="#code-refactored_scss"
                          class="hyperref">Listing&nbsp;<span class="ref">5.15</span></a>
                        uses the most important features and gives us a great
                        start.<span class="intersentencespace"></span> See the <a
                          href="http://sass-lang.com/" target="_blank">Sass
                          website</a> for more details.</p>
                    </div>
                  </div>
                </div>
                <div id="_sec-layout_links" data-tralics-id="cid33" class="section"
                  data-number="5.3">
                  <h2><a href="#sec-layout_links" class="heading hyperref"><span
                        class="number">5.3 </span>Layout links</a></h2>
                  <p>Now that we’ve finished a site layout with decent styling,
                    it’s time to start filling in the links we’ve stubbed out
                    with <code>’#’</code>.<span class="intersentencespace"></span>
                    Of course, we could hard-code links like</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="nt">&lt;a</span> <span class="na">href=</span><span
class="s">"/static_pages/about"</span><span class="nt">&gt;</span>About<span class="nt">&lt;/a&gt;</span>
</pre></div>
                  </div>
                  <p>but that isn’t the Rails Way™.<span class="intersentencespace"></span>
                    For one, it would be nice if the URL for the about page were
                    /about rather than /static_pages/about.<span class="intersentencespace"></span>
                    Moreover, Rails conventionally uses <em>named routes</em>,
                    which involves code like</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"About"</span><span class="p">,</span> <span class="n">about_path</span> <span
class="cp">%&gt;</span>
</pre></div>
                  </div>
                  <p>This way the code has a more transparent meaning, and it’s
                    also more flexible since we can change the definition of <code>about_path</code>
                    and have the URL change everywhere <code>about_path</code>
                    is used.</p>
                  <p>The full list of our planned links appears in <a href="#table-url_mapping"
                      class="hyperref">Table&nbsp;<span class="ref">5.1</span></a>,
                    along with their mapping to URLs and routes.<span class="intersentencespace"></span>
                    We took care of the first route in <a href="#sec-setting_the_root_route"
                      class="hyperref">Section&nbsp;<span class="ref">3.4.4</span></a>,
                    and we’ll have implemented all but the last one by the end
                    of this chapter.<span class="intersentencespace"></span>
                    (We’ll make the last one in <a href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                        class="ref">8</span></a>.)</p>
                  <div class="table" id="_table-url_mapping" data-tralics-id="uid455"
                    data-number="5.1">
                    <table class="tabular">
                      <tbody>
                        <tr class="bottom_border">
                          <td class="align_left"><strong>Page</strong></td>
                          <td class="align_left"><strong>URL</strong></td>
                          <td class="align_right"><strong>Named route</strong></td>
                        </tr>
                        <tr>
                          <td class="align_left">Home</td>
                          <td class="align_left">/</td>
                          <td class="align_right"><code>root_path</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">About</td>
                          <td class="align_left">/about</td>
                          <td class="align_right"><code>about_path</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">Help</td>
                          <td class="align_left">/help</td>
                          <td class="align_right"><code>help_path</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">Contact</td>
                          <td class="align_left">/contact</td>
                          <td class="align_right"><code>contact_path</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">Sign up</td>
                          <td class="align_left">/signup</td>
                          <td class="align_right"><code>signup_path</code></td>
                        </tr>
                        <tr>
                          <td class="align_left">Log in</td>
                          <td class="align_left">/login</td>
                          <td class="align_right"><code>login_path</code></td>
                        </tr>
                      </tbody>
                    </table>
                    <div class="caption"><span class="header">Table 5.1: </span><span
                        class="description">Route and URL mapping for site
                        links. </span></div>
                  </div>
                  <div id="_sec-contact_page" data-tralics-id="uid456" class="subsection"
                    data-number="5.3.1">
                    <h3><a href="#sec-contact_page" class="heading hyperref"><span
                          class="number">5.3.1 </span>Contact page</a></h3>
                    <p>For completeness, we’ll add the Contact page, which was
                      left as an exercise in <a href="#cha-static_pages" class="hyperref">Chapter&nbsp;<span
                          class="ref">3</span></a>.<span class="intersentencespace"></span>
                      The test appears as in <a href="#code-contact_page_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.16</span></a>,
                      which simply follows the model last seen in <a href="#code-title_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">3.22</span></a>.</p>
                    <div class="codelisting" id="_code-contact_page_test" data-tralics-id="uid457"
                      data-number="5.16">
                      <div class="heading"><span class="number">Listing 5.16:</span>
                        <span class="description">A test for the Contact page.<span
                            class="intersentencespace"></span> <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/controllers/static_pages_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">StaticPagesControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"should get home"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:home</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
    <span class="n">assert_select</span> <span class="s2">"title"</span><span class="p">,</span> <span
class="s2">"Ruby on Rails Tutorial Sample App"</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get help"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:help</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
    <span class="n">assert_select</span> <span class="s2">"title"</span><span class="p">,</span> <span
class="s2">"Help | Ruby on Rails Tutorial Sample App"</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get about"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:about</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
    <span class="n">assert_select</span> <span class="s2">"title"</span><span class="p">,</span> <span
class="s2">"About | Ruby on Rails Tutorial Sample App"</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should get contact"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">get</span> <span class="ss">:contact</span>
</span><span class="hll">    <span class="n">assert_response</span> <span class="ss">:success</span>
</span><span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="s2">"Contact | Ruby on Rails Tutorial Sample App"</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests in <a href="#code-contact_page_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.16</span></a>
                      should be <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid458" data-tralics-id="uid458"
                      data-number="5.17">
                      <div class="heading"><span class="number">Listing 5.17:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>The application code parallels the addition of the About
                      page in <a href="#sec-getting_started_with_testing" class="hyperref">Section&nbsp;<span
                          class="ref">3.3</span></a>: first we update the routes
                      (<a href="#code-contact_route" class="hyperref">Listing&nbsp;<span
                          class="ref">5.18</span></a>), then we add a <code>contact</code>
                      action to the Static Pages controller (<a href="#code-contact_action"
                        class="hyperref">Listing&nbsp;<span class="ref">5.19</span></a>),
                      and finally we create a Contact view (<a href="#code-contact_view"
                        class="hyperref">Listing&nbsp;<span class="ref">5.20</span></a>).</p>
                    <div class="codelisting" id="_code-contact_route" data-tralics-id="uid459"
                      data-number="5.18">
                      <div class="heading"><span class="number">Listing 5.18:</span>
                        <span class="description">Adding a route for the Contact
                          page.<span class="intersentencespace"></span> <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span> <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>  <span class="s1">'static_pages/help'</span>
  <span class="n">get</span>  <span class="s1">'static_pages/about'</span>
<span class="hll">  <span class="n">get</span>  <span class="s1">'static_pages/contact'</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-contact_action" data-tralics-id="uid460"
                      data-number="5.19">
                      <div class="heading"><span class="number">Listing 5.19:</span>
                        <span class="description">Adding an action for the
                          Contact page.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/static_pages_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">contact</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-contact_view" data-tralics-id="uid461"
                      data-number="5.20">
                      <div class="heading"><span class="number">Listing 5.20:</span>
                        <span class="description">The view for the Contact page.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/views/static_pages/contact.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Contact'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Contact<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
  Contact the Ruby on Rails Tutorial about the sample app at the
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/#contact"</span><span
class="nt">&gt;</span>contact page<span class="nt">&lt;/a&gt;</span>.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now make sure that the tests are <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid462" data-tralics-id="uid462"
                      data-number="5.21">
                      <div class="heading"><span class="number">Listing 5.21:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-rails_routes" data-tralics-id="uid463" class="subsection"
                    data-number="5.3.2">
                    <h3><a href="#sec-rails_routes" class="heading hyperref"><span
                          class="number">5.3.2 </span>Rails routes</a></h3>
                    <p>To add the named routes for the sample app’s static
                      pages, we’ll edit the routes file, <code>config/routes.rb</code>,
                      that Rails uses to define URL mappings.<span class="intersentencespace"></span>
                      We’ll begin by reviewing the route for the Home page
                      (defined in <a href="#sec-setting_the_root_route" class="hyperref">Section&nbsp;<span
                          class="ref">3.4.4</span></a>), which is a special
                      case, and then define a set of routes for the remaining
                      static pages.</p>
                    <p>So far, we’ve seen three examples of how to define a root
                      route, starting with the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">root</span> <span class="s1">'application#hello'</span>
</pre></div>
                    </div>
                    <p>in the hello app (<a href="#code-hello_root_route" class="hyperref">Listing&nbsp;<span
                          class="ref">1.10</span></a>), the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">root</span> <span class="s1">'users#index'</span>
</pre></div>
                    </div>
                    <p>in the toy app (<a href="#code-rails_routes_root_route" class="hyperref">Listing&nbsp;<span
                          class="ref">2.3</span></a>), and the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">root</span> <span class="s1">'static_pages#home'</span>
</pre></div>
                    </div>
                    <p>in the sample app (<a href="#code-home_root_route" class="hyperref">Listing&nbsp;<span
                          class="ref">3.37</span></a>).<span class="intersentencespace"></span>
                      In each case, the <code>root</code> method arranges for
                      the root path / to be routed to a controller and action of
                      our choice.<span class="intersentencespace"></span>
                      Defining the root route in this way has a second important
                      effect, which is to create named routes that allow us to
                      refer to routes by a name rather than by the raw URL. In
                      this case, these routes are <code>root_path</code> and <code>root_url</code>,
                      with the only difference being that the latter includes
                      the full URL:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">root_path</span> <span class="o">-&gt;</span> <span
class="s1">'/'</span>
<span class="n">root_url</span>  <span class="o">-&gt;</span> <span class="s1">'http://www.example.com/'</span>
</pre></div>
                    </div>
                    <p>In the <em>Rails Tutorial</em>, we’ll follow the common
                      convention of using the <code>_path</code> form except
                      when doing redirects, where we’ll use the <code>_url</code>
                      form.<span class="intersentencespace"></span> (This is
                      because the HTTP standard technically requires a full URL
                      after redirects, though in most browsers it will work
                      either way.)</p>
                    <p>To define the named routes for the Help, About, and
                      Contact pages, we need to make changes to the <code>get</code>
                      rules from <a href="#code-contact_route" class="hyperref">Listing&nbsp;<span
                          class="ref">5.18</span></a>, transforming lines like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">get</span> <span class="s1">'static_pages/help'</span>
</pre></div>
                    </div>
                    <p>to</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">get</span> <span class="s1">'help'</span> <span
class="o">=&gt;</span> <span class="s1">'static_pages#help'</span>
</pre></div>
                    </div>
                    <p>The second of these patterns routes a <span class="tt">GET</span>
                      request for the URL /help to the <code>help</code> action
                      in the Static Pages controller, so that we can use the URL
                      /help in place of the more verbose /static_pages/help.<span
                        class="intersentencespace"></span> As with the rule for
                      the root route, this creates two named routes, <code>help_path</code>
                      and <code>help_url</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">help_path</span> <span class="o">-&gt;</span> <span
class="s1">'/help'</span>
<span class="n">help_url</span>  <span class="o">-&gt;</span> <span class="s1">'http://www.example.com/help'</span>
</pre></div>
                    </div>
                    <p>Applying this rule change to the remaining static page
                      routes from <a href="#code-contact_route" class="hyperref">Listing&nbsp;<span
                          class="ref">5.18</span></a> gives <a href="#code-static_page_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">5.22</span></a>.</p>
                    <div class="codelisting" id="_code-static_page_routes" data-tralics-id="uid464"
                      data-number="5.22">
                      <div class="heading"><span class="number">Listing 5.22:</span>
                        <span class="description">Routes for static pages.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>             <span class="s1">'static_pages#home'</span>
  <span class="n">get</span> <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span> <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span> <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-named_routes" data-tralics-id="uid465" class="subsection"
                    data-number="5.3.3">
                    <h3><a href="#sec-named_routes" class="heading hyperref"><span
                          class="number">5.3.3 </span>Using named routes</a></h3>
                    <p>With the routes defined in <a href="#code-static_page_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">5.22</span></a>,
                      we’re now in a position to use the resulting named routes
                      in the site layout.<span class="intersentencespace"></span>
                      This simply involves filling in the second arguments of
                      the <code>link_to</code> functions with the proper named
                      routes.<span class="intersentencespace"></span> For
                      example, we’ll convert</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"About"</span><span class="p">,</span> <span class="s1">'#'</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>to</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"About"</span><span class="p">,</span> <span class="n">about_path</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>and so on.</p>
                    <p>We’ll start in the header partial, <code>_header.html.erb</code>
                      (<a href="#code-header_partial_links" class="hyperref">Listing&nbsp;<span
                          class="ref">5.23</span></a>), which has links to the
                      Home and Help pages.<span class="intersentencespace"></span>
                      While we’re at it, we’ll follow a common web convention
                      and link the logo to the Home page as well.</p>
                    <div class="codelisting" id="_code-header_partial_links" data-tralics-id="uid466"
                      data-number="5.23">
                      <div class="heading"><span class="number">Listing 5.23:</span>
                        <span class="description">Header partial with links.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/layouts/_header.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"sample app"</span><span class="p">,</span> <span class="n">root_path</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="s2">"logo"</span> <span
class="cp">%&gt;</span>
</span>    <span class="nt">&lt;nav&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
<span class="hll">        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Home"</span><span class="p">,</span>    <span
class="n">root_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span><span class="hll">        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Help"</span><span class="p">,</span>    <span
class="n">help_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span>        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/header&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>We won’t have a named route for the “Log in” link until <a
                        href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                          class="ref">8</span></a>, so we’ve left it as <code>’#’</code>
                      for now.</p>
                    <p>The other place with links is the footer partial, <code>_footer.html.erb</code>,
                      which has links for the About and Contact pages (<a href="#code-footer_partial_links"
                        class="hyperref">Listing&nbsp;<span class="ref">5.24</span></a>).</p>
                    <div class="codelisting" id="_code-footer_partial_links" data-tralics-id="uid467"
                      data-number="5.24">
                      <div class="heading"><span class="number">Listing 5.24:</span>
                        <span class="description">Footer partial with links.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/layouts/_footer.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;footer</span> <span class="na">class=</span><span
class="s">"footer"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;small&gt;</span>
    The <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
    by <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.michaelhartl.com/"</span><span
class="nt">&gt;</span>Michael Hartl<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;/small&gt;</span>
  <span class="nt">&lt;nav&gt;</span>
    <span class="nt">&lt;ul&gt;</span>
<span class="hll">      <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"About"</span><span class="p">,</span>   <span
class="n">about_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span><span class="hll">      <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Contact"</span><span class="p">,</span> <span
class="n">contact_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span>      <span class="nt">&lt;li&gt;&lt;a</span> <span class="na">href=</span><span
class="s">"http://news.railstutorial.org/"</span><span class="nt">&gt;</span>News<span
class="nt">&lt;/a&gt;&lt;/li&gt;</span>
    <span class="nt">&lt;/ul&gt;</span>
  <span class="nt">&lt;/nav&gt;</span>
<span class="nt">&lt;/footer&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>With that, our layout has links to all the static pages
                      created in <a href="#cha-static_pages" class="hyperref">Chapter&nbsp;<span
                          class="ref">3</span></a>, so that, for example, <a href="http://localhost:3000/about"
                        target="_blank">/about</a> goes to the About page (<a href="#fig-about_page"
                        class="hyperref">Figure&nbsp;<span class="ref">5.8</span></a>).</p>
                    <div class="center figure" id="_fig-about_page" data-tralics-id="uid468"
                      data-number="5.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/about_page_styled_3rd_edition.png"
                          alt="images/figures/about_page_styled_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.8: </span><span
                          class="description">The About page at <a href="http://localhost:3000/about"
                            target="_blank">/about</a>. </span></div>
                    </div>
                  </div>
                  <div id="_sec-layout_link_tests" data-tralics-id="uid469" class="subsection"
                    data-number="5.3.4">
                    <h3><a href="#sec-layout_link_tests" class="heading hyperref"><span
                          class="number">5.3.4 </span>Layout link tests</a></h3>
                    <p>Now that we’ve filled in several of the layout links,
                      it’s a good idea to test them to make sure they’re working
                      correctly.<span class="intersentencespace"></span> We
                      could do this by hand with a browser, first visiting the
                      root path and then checking the links by hand, but this
                      quickly becomes cumbersome.<span class="intersentencespace"></span>
                      Instead, we’ll simulate the same series of steps using an
                      <em>integration test</em>, which allows us to write an
                      end-to-end test of our application’s behavior.<span class="intersentencespace"></span>
                      We can get started by generating a template test, which
                      we’ll call <code>site_layout</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test site_layout
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/site_layout_test.rb</span>
</pre></div>
                    </div>
                    <p>Note that the Rails generator automatically appends <code>_test</code>
                      to the name of the test file.</p>
                    <p>Our plan for testing the layout links involves checking
                      the HTML structure of our site:</p>
                    <ol>
                      <li>Get the root path (Home page) </li>
                      <li>Verify that the right page template is rendered </li>
                      <li>Check for the correct links to the Home, Help, About,
                        and Contact pages </li>
                    </ol>
                    <p><a href="#code-layout_links_test" class="hyperref">Listing&nbsp;<span
                          class="ref">5.25</span></a> shows how we can use Rails
                      integration tests to translate these steps into code,
                      beginning with the <code>assert_template</code> method to
                      verify that the Home page is rendered using the correct
                      view.<sup id="_cha-5_footnote-ref-14" class="footnote"><a
                          href="#cha-5_footnote-14">14</a></sup></p>
                    <div class="codelisting" id="_code-layout_links_test" data-tralics-id="uid474"
                      data-number="5.25">
                      <div class="heading"><span class="number">Listing 5.25:</span>
                        <span class="description">A test for the links on the
                          layout.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/site_layout_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">SiteLayoutTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="nb">test</span> <span class="s2">"layout links"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_template</span> <span class="s1">'static_pages/home'</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">root_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">2</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">help_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">about_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">contact_path</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-layout_links_test" class="hyperref">Listing&nbsp;<span
                          class="ref">5.25</span></a> uses some of the more
                      advanced options of the <code>assert_select</code>
                      method, seen before in <a href="#code-title_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">3.22</span></a> and <a href="#code-contact_page_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.16</span></a>.<span
                        class="intersentencespace"></span> In this case, we use
                      a syntax that allows us to test for the presence of a
                      particular link–URL combination by specifying the tag
                      name&nbsp;<code>a</code> and attribute&nbsp;<code>href</code>,
                      as in</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">about_path</span>
</pre></div>
                    </div>
                    <p>Here Rails automatically inserts the value of <code>about_path</code>
                      in place of the question mark (escaping any special
                      characters if necessary), thereby checking for an HTML tag
                      of the form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;a</span> <span class="na">href=</span><span
class="s">"/about"</span><span class="nt">&gt;</span>...<span class="nt">&lt;/a&gt;</span>
</pre></div>
                    </div>
                    <p>Note that the assertion for the root path verifies that
                      there are <em>two</em> such links (one each for the logo
                      and navigation menu element):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">root_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">2</span>
</pre></div>
                    </div>
                    <p>This ensures that both links to the Home page defined in
                      <a href="#code-header_partial_links" class="hyperref">Listing&nbsp;<span
                          class="ref">5.23</span></a> are present.</p>
                    <p>Some more uses of <code>assert_select</code> appear in <a
                        href="#table-assert_select" class="hyperref">Table&nbsp;<span
                          class="ref">5.2</span></a>.<span class="intersentencespace"></span>
                      While <code>assert_select</code> is flexible and powerful
                      (having many more options than the ones shown here),
                      experience shows that it’s wise to take a lightweight
                      approach by testing only HTML elements (such as site
                      layout links) that are unlikely to change much over time.</p>
                    <div class="table" id="_table-assert_select" data-tralics-id="uid475"
                      data-number="5.2">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>Code</strong></td>
                            <td class="align_left"><strong>Matching HTML</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select "div"</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;div&gt;foobar&lt;/div&gt;</span></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select "div",
                                "foobar"</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;div&gt;foobar&lt;/div&gt;</span></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select "div.nav"</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;div
                                class="nav"&gt;foobar&lt;/div&gt;</span></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select
                                "div#profile"</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;div
                                id="profile"&gt;foobar&lt;/div&gt;</span></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select
                                "div[name=yo]"</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;div
                                name="yo"&gt;hey&lt;/div&gt;</span></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select
                                "a[href=?]", ’/’, count: 1</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;a
                                href="/"&gt;foo&lt;/a&gt;</span></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>assert_select
                                "a[href=?]", ’/’, text: "foo"</code></td>
                            <td class="align_left"><span class="inline_verbatim">&lt;a
                                href="/"&gt;foo&lt;/a&gt;</span></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 5.2: </span><span
                          class="description">Some uses of <code>assert_select</code>.
                        </span></div>
                    </div>
                    <p>To check that the new test in <a href="#code-layout_links_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.25</span></a>
                      passes, we can run just the integration tests using the
                      following Rake task:</p>
                    <div class="codelisting" id="_uid476" data-tralics-id="uid476"
                      data-number="5.26">
                      <div class="heading"><span class="number">Listing 5.26:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:integration
</pre></div>
                      </div>
                    </div>
                    <p>If all went well, you should run the full test suite to
                      verify that all the tests are <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid477" data-tralics-id="uid477"
                      data-number="5.27">
                      <div class="heading"><span class="number">Listing 5.27:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>With the added integration test for layout links, we are
                      now in a good position to catch regressions quickly using
                      our test suite.</p>
                  </div>
                </div>
                <div id="_sec-user_signup" data-tralics-id="cid34" class="section"
                  data-number="5.4">
                  <h2><a href="#sec-user_signup" class="heading hyperref"><span
                        class="number">5.4 </span>User signup: A first step</a></h2>
                  <p>As a capstone to our work on the layout and routing, in
                    this section we’ll make a route for the signup page, which
                    will mean creating a second controller along the way.<span class="intersentencespace"></span>
                    This is a first important step toward allowing users to
                    register for our site; we’ll take the next step, modeling
                    users, in <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">6</span></a>, and we’ll finish the job in <a
                      href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>.</p>
                  <div id="_sec-users_controller" data-tralics-id="uid478" class="subsection"
                    data-number="5.4.1">
                    <h3><a href="#sec-users_controller" class="heading hyperref"><span
                          class="number">5.4.1 </span>Users controller</a></h3>
                    <p>We created our first controller, the Static Pages
                      controller, in <a href="#sec-static_pages" class="hyperref">Section&nbsp;<span
                          class="ref">3.2</span></a>.<span class="intersentencespace"></span>
                      It’s time to create a second one, the Users controller.<span
                        class="intersentencespace"></span> As before, we’ll use
                      <code>generate</code> to make the simplest controller that
                      meets our present needs, namely, one with a stub signup
                      page for new users.<span class="intersentencespace"></span>
                      Following the conventional <a href="http://en.wikipedia.org/wiki/Representational_State_Transfer"
                        target="_blank">REST architecture</a> favored by Rails,
                      we’ll call the action for new users <code>new</code>,
                      which we can arrange to create automatically by passing <code>new</code>
                      as an argument to <code>generate</code>.<span class="intersentencespace"></span>
                      The result is shown in <a href="#code-generate_users_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">5.28</span></a>.</p>
                    <div class="codelisting" id="_code-generate_users_controller"
                      data-tralics-id="uid479" data-number="5.28">
                      <div class="heading"><span class="number">Listing 5.28:</span>
                        <span class="description">Generating a Users controller
                          (with a <code>new</code> action).</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="gp">$</span> rails generate controller Users new
</span><span class="go">      create  app/controllers/users_controller.rb</span>
<span class="go">       route  get 'users/new'</span>
<span class="go">      invoke  erb</span>
<span class="go">      create    app/views/users</span>
<span class="go">      create    app/views/users/new.html.erb</span>
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/controllers/users_controller_test.rb</span>
<span class="go">      invoke  helper</span>
<span class="go">      create    app/helpers/users_helper.rb</span>
<span class="go">      invoke    test_unit</span>
<span class="go">      create      test/helpers/users_helper_test.rb</span>
<span class="go">      invoke  assets</span>
<span class="go">      invoke    coffee</span>
<span class="go">      create      app/assets/javascripts/users.js.coffee</span>
<span class="go">      invoke    scss</span>
<span class="go">      create      app/assets/stylesheets/users.css.scss</span>
</pre></div>
                      </div>
                    </div>
                    <p>As required, <a href="#code-generate_users_controller" class="hyperref">Listing&nbsp;<span
                          class="ref">5.28</span></a> creates a Users controller
                      with a <code>new</code> action (<a href="#code-initial_users_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">5.30</span></a>)
                      and a stub user view (<a href="#code-initial_new_action" class="hyperref">Listing&nbsp;<span
                          class="ref">5.31</span></a>).<span class="intersentencespace"></span>
                      It also creates a minimal test for the new user page (<a href="#code-user_new_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.32</span></a>),
                      which should currently pass:</p>
                    <div class="codelisting" id="_uid480" data-tralics-id="uid480"
                      data-number="5.29">
                      <div class="heading"><span class="number">Listing 5.29:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-initial_users_controller"
                      data-tralics-id="uid481" data-number="5.30">
                      <div class="heading"><span class="number">Listing 5.30:</span>
                        <span class="description">The initial Users controller,
                          with a <code>new</code> action.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-initial_new_action" data-tralics-id="uid482"
                      data-number="5.31">
                      <div class="heading"><span class="number">Listing 5.31:</span>
                        <span class="description">The initial <code>new</code>
                          view for Users.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>Users#new<span
class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>Find me in app/views/users/new.html.erb<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-user_new_test" data-tralics-id="uid483"
                      data-number="5.32">
                      <div class="heading"><span class="number">Listing 5.32:</span>
                        <span class="description">A test for the new user page.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"should get new"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:new</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-signup_url" data-tralics-id="uid484" class="subsection"
                    data-number="5.4.2">
                    <h3><a href="#sec-signup_url" class="heading hyperref"><span
                          class="number">5.4.2 </span>Signup URL</a></h3>
                    <p>With the code from <a href="#sec-users_controller" class="hyperref">Section&nbsp;<span
                          class="ref">5.4.1</span></a>, we already have a
                      working page for new users at /users/new, but recall from
                      <a href="#table-url_mapping" class="hyperref">Table&nbsp;<span
                          class="ref">5.1</span></a> that we want the URL to be
                      /signup instead.<span class="intersentencespace"></span>
                      We’ll follow the examples from <a href="#code-static_page_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">5.22</span></a>
                      and add a <code>get ’/signup’</code> rule for the signup
                      URL, as shown in <a href="#code-signup_route" class="hyperref">Listing&nbsp;<span
                          class="ref">5.33</span></a>.</p>
                    <div class="codelisting" id="_code-signup_route" data-tralics-id="uid485"
                      data-number="5.33">
                      <div class="heading"><span class="number">Listing 5.33:</span>
                        <span class="description">A route for the signup page.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>             <span class="s1">'static_pages#home'</span>
  <span class="n">get</span> <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span> <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span> <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
<span class="hll">  <span class="n">get</span> <span class="s1">'signup'</span>  <span
class="o">=&gt;</span> <span class="s1">'users#new'</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Next, we’ll use the newly defined named route to add the
                      proper link to the button on the Home page.<span class="intersentencespace"></span>
                      As with the other routes, <code>get ’signup’</code>
                      automatically gives us the named route <code>signup_path</code>,
                      which we put to use in <a href="#code-home_page_signup_link"
                        class="hyperref">Listing&nbsp;<span class="ref">5.34</span></a>.<span
                        class="intersentencespace"></span> Adding a test for the
                      signup page is left as an exercise (<a href="#sec-layout_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">5.6</span></a>.)</p>
                    <div class="codelisting" id="_code-home_page_signup_link" data-tralics-id="uid486"
                      data-number="5.34">
                      <div class="heading"><span class="number">Listing 5.34:</span>
                        <span class="description">Linking the button to the
                          signup page.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"center jumbotron"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;h1&gt;</span>Welcome to the Sample App<span class="nt">&lt;/h1&gt;</span>

  <span class="nt">&lt;h2&gt;</span>
    This is the home page for the
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
    sample application.
  <span class="nt">&lt;/h2&gt;</span>

<span class="hll">  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Sign up now!"</span><span class="p">,</span> <span class="n">signup_path</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-lg btn-primary"</span> <span
class="cp">%&gt;</span>
</span><span class="nt">&lt;/div&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">image_tag</span><span
class="p">(</span><span class="s2">"rails.png"</span><span class="p">,</span> <span
class="ss">alt</span><span class="p">:</span> <span class="s2">"Rails logo"</span><span
class="p">),</span>
            <span class="s1">'http://rubyonrails.org/'</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Finally, we’ll add a custom stub view for the signup page
                      (<a href="#code-initial_signup_page" class="hyperref">Listing&nbsp;<span
                          class="ref">5.35</span></a>).</p>
                    <div class="codelisting" id="_code-initial_signup_page" data-tralics-id="uid487"
                      data-number="5.35">
                      <div class="heading"><span class="number">Listing 5.35:</span>
                        <span class="description">The initial (stub) signup
                          page.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/users/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Sign up'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sign up<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>This will be a signup page for new users.<span
class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>With that, we’re done with the links and named routes, at
                      least until we add a route for logging in (<a href="#cha-log_in_log_out"
                        class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>).<span
                        class="intersentencespace"></span> The resulting new
                      user page (at the URL /signup) appears in <a href="#fig-new_signup_page"
                        class="hyperref">Figure&nbsp;<span class="ref">5.9</span></a>.</p>
                    <div class="center figure" id="_fig-new_signup_page" data-tralics-id="uid488"
                      data-number="5.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/new_signup_page_3rd_edition.png"
                          alt="images/figures/new_signup_page_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 5.9: </span><span
                          class="description">The new signup page at <a href="http://localhost:3000/signup"
                            target="_blank">/signup</a>. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-layout_conclusion" data-tralics-id="cid35" class="section"
                  data-number="5.5">
                  <h2><a href="#sec-layout_conclusion" class="heading hyperref"><span
                        class="number">5.5 </span>Висновок</a></h2>
                  <p>In this chapter, we’ve hammered our application layout into
                    shape and polished up the routes.<span class="intersentencespace"></span>
                    The rest of the book is dedicated to fleshing out the sample
                    application: first, by adding users who can sign up, log in,
                    and log out; next, by adding user microposts; and, finally,
                    by adding the ability to follow other users.</p>
                  <p>At this point, if you are using Git, you should merge your
                    changes back into the master branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Finish layout and routes"
$ git checkout master
$ git merge filling-in-layout
</pre></div>
                  </div>
                  <p>Then push up to Bitbucket:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git push
</pre></div>
                  </div>
                  <p>Finally, deploy to Heroku:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ git push heroku
</pre></div>
                  </div>
                  <p>The result of the deployment should be a working sample
                    application on the production server (<a href="#fig-layout_production"
                      class="hyperref">Figure&nbsp;<span class="ref">5.10</span></a>).</p>
                  <div class="center figure" id="_fig-layout_production" data-tralics-id="uid489"
                    data-number="5.10">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/layout_production.png"
                        alt="images/figures/layout_production"></div>
                    <div class="caption"><span class="header">Figure 5.10: </span><span
                        class="description">The sample application in
                        production. </span></div>
                  </div>
                  <div id="_sec-filling_in_the_layout_what_we_learned_in_this_chapter"
                    data-tralics-id="uid490" class="subsection" data-number="5.5.1">
                    <h3><a href="#sec-filling_in_the_layout_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">5.5.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Using HTML5, we can define a site layout with logo,
                        header, footer, and main body content. </li>
                      <li>Rails partials are used to place markup in a separate
                        file for convenience. </li>
                      <li>CSS allows us to style the site layout based on CSS
                        classes and ids. </li>
                      <li>The Bootstrap framework makes it easy to make a nicely
                        designed site quickly. </li>
                      <li>Sass and the asset pipeline allow us to eliminate
                        duplication in our CSS while packaging up the results
                        efficiently for production. </li>
                      <li>Rails allows us to define custom routing rules,
                        thereby providing named routes. </li>
                      <li>Integration tests effectively simulate a browser
                        clicking from page to page. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-layout_exercises" data-tralics-id="cid36" class="section"
                  data-number="5.6">
                  <h2><a href="#sec-layout_exercises" class="heading hyperref"><span
                        class="number">5.6 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>As suggested in <a href="#sec-sass" class="hyperref">Section&nbsp;<span
                          class="ref">5.2.2</span></a>, go through the steps to
                      convert the footer CSS from <a href="#code-footer_css" class="hyperref">Listing&nbsp;<span
                          class="ref">5.13</span></a> to <a href="#code-refactored_scss"
                        class="hyperref">Listing&nbsp;<span class="ref">5.15</span></a>
                      to SCSS by hand. </li>
                    <li>In the integration test from <a href="#code-layout_links_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.25</span></a>,
                      add code to visit the signup page using the <code>get</code>
                      method and verify that the resulting page title is
                      correct. </li>
                    <li>It’s convenient to use the <code>full_title</code>
                      helper in the tests by including the Application helper
                      into the test helper, as shown in <a href="#code-test_helper_application_helper"
                        class="hyperref">Listing&nbsp;<span class="ref">5.36</span></a>.<span
                        class="intersentencespace"></span> We can then test for
                      the right title using code like <a href="#code-layout_links_test_signup_full_title_helper"
                        class="hyperref">Listing&nbsp;<span class="ref">5.37</span></a>
                      (which extends the solution from the previous exercise).<span
                        class="intersentencespace"></span> This is brittle,
                      though, because now any typo in the base title (such as
                      “Ruby on Rails Tutoial”) won’t be caught by the test
                      suite.<span class="intersentencespace"></span> Fix this
                      problem by writing a direct test of the <code>full_title</code>
                      helper, which involves creating a file to test the
                      application helper and then filling in the code indicated
                      with <code>FILL_IN</code> in <a href="#code-full_title_helper_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">5.38</span></a>.<span
                        class="intersentencespace"></span> (<a href="#code-full_title_helper_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">5.38</span></a>
                      uses the <code>assert_equal</code> method, which verifies
                      that its two arguments are the same when compared with the
                      <code>==</code> operator.) </li>
                  </ol>
                  <div class="codelisting" id="_code-test_helper_application_helper"
                    data-tralics-id="uid501" data-number="5.36">
                    <div class="heading"><span class="number">Listing 5.36:</span>
                      <span class="description">Including the Application helper
                        in tests.<span class="intersentencespace"></span> <span
                          class="break"></span> <span class="filepath">test/test_helper.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">ENV</span><span class="o">[</span><span
class="s1">'RAILS_ENV'</span><span class="o">]</span> <span class="o">||=</span> <span
class="s1">'test'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="k">class</span> <span class="nc">ActiveSupport</span><span class="o">::</span><span
class="no">TestCase</span>
  <span class="n">fixtures</span> <span class="ss">:all</span>
<span class="hll">  <span class="kp">include</span> <span class="no">ApplicationHelper</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-layout_links_test_signup_full_title_helper"
                    data-tralics-id="uid502" data-number="5.37">
                    <div class="heading"><span class="number">Listing 5.37:</span>
                      <span class="description">Using the <code>full_title</code>
                        helper in a test.<span class="intersentencespace"></span>
                        <span style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">test/integration/site_layout_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">SiteLayoutTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="nb">test</span> <span class="s2">"layout links"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_template</span> <span class="s1">'static_pages/home'</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">root_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">2</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">help_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">about_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">contact_path</span>
<span class="hll">    <span class="n">get</span> <span class="n">signup_path</span>
</span><span class="hll">    <span class="n">assert_select</span> <span class="s2">"title"</span><span
class="p">,</span> <span class="n">full_title</span><span class="p">(</span><span
class="s2">"Sign up"</span><span class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-full_title_helper_tests" data-tralics-id="uid503"
                    data-number="5.38">
                    <div class="heading"><span class="number">Listing 5.38:</span>
                      <span class="description">A direct test the <code>full_title</code>
                        helper.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">test/helpers/application_helper_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">ApplicationHelperTest</span> <span
class="o">&lt;</span> <span class="no">ActionView</span><span class="o">::</span><span
class="no">TestCase</span>
  <span class="nb">test</span> <span class="s2">"full title helper"</span> <span
class="k">do</span>
    <span class="n">assert_equal</span> <span class="n">full_title</span><span class="p">,</span>         <span
class="no">FILL_IN</span>
    <span class="n">assert_equal</span> <span class="n">full_title</span><span class="p">(</span><span
class="s2">"Help"</span><span class="p">),</span> <span class="no">FILL_IN</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-5_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-5_footnote-1">Thanks to reader <a href="https://twitter.com/colmtuite"
                        target="_blank">Colm Tuite</a> for his excellent work in
                      helping to convert the sample application over to the
                      Bootstrap CSS framework.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-1">↑</a></li>
                    <li id="_cha-5_footnote-2">The mockups in the <em>Ruby on
                        Rails Tutorial</em> are made with an excellent online
                      mockup application called <a href="http://gomockingbird.com/"
                        target="_blank">Mockingbird</a>.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-2">↑</a></li>
                    <li id="_cha-5_footnote-3">The words <em>shim</em> and <em>shiv</em>
                      are used interchangably in this context; the former is the
                      proper term, based on the English word whose meaning is “a
                      washer or thin strip of material used to align parts, make
                      them fit, or reduce wear”, while the latter (meaning “a
                      knife or razor used as a weapon”) is apparently a play on
                      the name of the shim’s original author, Sjoerd
                      Visscher.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-3">↑</a></li>
                    <li id="_cha-5_footnote-4">These are completely unrelated to
                      Ruby classes.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-4">↑</a></li>
                    <li id="_cha-5_footnote-5">The spacing might look slightly
                      different, which is fine because (as noted in <a href="#sec-testing_titles"
                        class="hyperref">Section&nbsp;<span class="ref">3.4.1</span></a>)
                      HTML is insensitive to whitespace.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-5">↑</a></li>
                    <li id="_cha-5_footnote-6">If you have <a href="http://brew.sh/"
                        target="_blank">Homebrew</a> on OS&nbsp;X, you can
                      install <code>curl</code> using <code>brew install curl</code>.&nbsp;<a
                        class="arrow" href="#cha-5_footnote-ref-6">↑</a></li>
                    <li id="_cha-5_footnote-7">You might notice that the <code>img</code>
                      tag, rather than looking like <span class="inline_verbatim">&lt;img&gt;...&lt;/img&gt;</span>,
                      instead looks like <span class="inline_verbatim">&lt;img
                        ... /&gt;</span>.<span class="intersentencespace"></span>
                      Tags that follow this form are known as <em>self-closing</em>
                      tags.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-7">↑</a></li>
                    <li id="_cha-5_footnote-8">It is also possible to use Less
                      with the asset pipeline; see the <a href="http://rubygems.org/gems/less-rails-bootstrap"
                        target="_blank"><span class="tt">less-rails-bootstrap</span>
                        gem</a> for details.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-8">↑</a></li>
                    <li id="_cha-5_footnote-9">If these steps seem mysterious,
                      take heart: I’m just following the instructions from the <a
                        href="https://github.com/twbs/bootstrap-sass#bootstrap-for-sass---"
                        target="_blank">bootstrap-sass README file</a>.&nbsp;<a
                        class="arrow" href="#cha-5_footnote-ref-9">↑</a></li>
                    <li id="_cha-5_footnote-10">Many Rails developers use a <code>shared</code>
                      directory for partials shared across different views.<span
                        class="intersentencespace"></span> I prefer to use the <code>shared</code>
                      folder for utility partials that are useful on multiple
                      views, while putting partials that are literally on every
                      page (as part of the site layout) in the <code>layouts</code>
                      directory.<span class="intersentencespace"></span> (We’ll
                      create the <code>shared</code> directory starting in <a
                        href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                          class="ref">7</span></a>.)<span class="intersentencespace"></span>
                      That seems to me a logical division, but putting them all
                      in the <code>shared</code> folder certainly works fine,
                      too.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-10">↑</a></li>
                    <li id="_cha-5_footnote-11">You may wonder why we use both
                      the <code>footer</code> tag and <code>.footer</code>
                      class.<span class="intersentencespace"></span> The answer
                      is that the tag has a clear meaning to human readers, and
                      the class is used by Bootstrap.<span class="intersentencespace"></span>
                      Using a <code>div</code> tag in place of <code>footer</code>
                      would work as well.&nbsp;<a class="arrow" href="#cha-5_footnote-ref-11">↑</a></li>
                    <li id="_cha-5_footnote-12">The structure of this section is
                      based on the excellent blog post “The Rails 3 Asset
                      Pipeline in (about) 5 Minutes” by Michael Erasmus.<span class="intersentencespace"></span>
                      For more details, see the <a href="http://guides.rubyonrails.org/asset_pipeline.html"
                        target="_blank">Rails Guide on the Asset Pipeline</a>.&nbsp;<a
                        class="arrow" href="#cha-5_footnote-ref-12">↑</a></li>
                    <li id="_cha-5_footnote-13">The older <code>.sass</code>
                      format, also supported by Sass, defines a new language
                      which is less verbose (and has fewer curly braces) but is
                      less convenient for existing projects and is harder to
                      learn for those already familiar with CSS.&nbsp;<a class="arrow"
                        href="#cha-5_footnote-ref-13">↑</a></li>
                    <li id="_cha-5_footnote-14">Some developers insist that a
                      single test shouldn’t contain multiple assertions.<span class="intersentencespace"></span>
                      I find this practice to be unnecessarily complicated,
                      while also incurring an extra overhead if there are common
                      setup tasks needed before each test.<span class="intersentencespace"></span>
                      In addition, a well-written test tells a coherent story,
                      and breaking it up into individual pieces disrupts the
                      narrative.<span class="intersentencespace"></span> I thus
                      have a strong preference for including multiple assertions
                      in a test, relying on Ruby (via MiniTest) to tell me the
                      exact lines of any failed assertions.&nbsp;<a class="arrow"
                        href="#cha-5_footnote-ref-14">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-modeling_users" data-tralics-id="cid37" class="chapter"
                  data-number="6">
                  <h1><a name="cha-modeling_users" class="heading hyperref"><span
                        class="number">Chapter 6 </span>Modeling users</a></h1>
                  <p>In <a href="#cha-filling_in_the_layout" class="hyperref">Chapter&nbsp;<span
                        class="ref">5</span></a>, we ended with a stub page for
                    creating new users (<a href="#sec-user_signup" class="hyperref">Section&nbsp;<span
                        class="ref">5.4</span></a>).<span class="intersentencespace"></span>
                    Over the course of the next five chapters, we’ll fulfill the
                    promise implicit in this incipient signup page.<span class="intersentencespace"></span>
                    In this chapter, we’ll take the first critical step by
                    creating a <em>data model</em> for users of our site,
                    together with a way to store that data.<span class="intersentencespace"></span>
                    In <a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                        class="ref">7</span></a>, we’ll give users the ability
                    to sign up for our site and create a user profile page.<span
                      class="intersentencespace"></span> Once users can sign up,
                    we’ll let them log in and log out as well (<a href="#cha-log_in_log_out"
                      class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>),
                    and in <a href="#cha-updating_showing_and_deleting_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">9</span></a> (<a href="#sec-requiring_logged_in_users"
                      class="hyperref">Section&nbsp;<span class="ref">9.2.1</span></a>)
                    we’ll learn how to protect pages from improper access.<span
                      class="intersentencespace"></span> Finally, in <a href="#cha-account_activation_and_password_reset"
                      class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>
                    we’ll add account activation (thereby confirming a valid
                    email address) and password resets.<span class="intersentencespace"></span>
                    Taken together, the material in <a href="#cha-modeling_users"
                      class="hyperref">Chapter&nbsp;<span class="ref">6</span></a>
                    through <a href="#cha-account_activation_and_password_reset"
                      class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>
                    develops a full Rails login and authentication system.<span
                      class="intersentencespace"></span> As you may know, there
                    are various pre-built authentication solutions for Rails; <a
                      href="#aside-roll_your_own" class="hyperref">Box&nbsp;<span
                        class="ref">6.1</span></a> explains why, at least at
                    first, it’s probably a better idea to roll your own.</p>
                  <div class="aside" id="_aside-roll_your_own" data-tralics-id="uid504"
                    data-number="6.1">
                    <div class="heading"><span class="number">Box 6.1.</span> <span
                        class="description">Roll your own authentication system</span></div>
                    <p>Virtually all web applications require a login and
                      authentication system of some sort.<span class="intersentencespace"></span>
                      As a result, most web frameworks have a plethora of
                      options for implementing such systems, and Rails is no
                      exception.<span class="intersentencespace"></span>
                      Examples of authentication and authorization systems
                      include <a href="http://github.com/thoughtbot/clearance"
                        target="_blank">Clearance</a>, <a href="http://github.com/binarylogic/authlogic"
                        target="_blank">Authlogic</a>, <a href="http://github.com/plataformatec/devise"
                        target="_blank">Devise</a>, and <a href="http://railscasts.com/episodes/192-authorization-with-cancan"
                        target="_blank">CanCan</a> (as well as
                      non-Rails-specific solutions built on top of <a href="http://en.wikipedia.org/wiki/OpenID"
                        target="_blank">OpenID</a> or <a href="http://en.wikipedia.org/wiki/Oauth"
                        target="_blank">OAuth</a>).<span class="intersentencespace"></span>
                      It’s reasonable to ask why we should reinvent the wheel.<span
                        class="intersentencespace"></span> Why not just use an
                      off-the-shelf solution instead of rolling our own?</p>
                    <p>For one, practical experience shows that authentication
                      on most sites requires extensive customization, and
                      modifying a third-party product is often more work than
                      writing the system from scratch.<span class="intersentencespace"></span>
                      In addition, off-the-shelf systems can be “black boxes”,
                      with potentially mysterious innards; when you write your
                      own system, you are far more likely to understand it.<span
                        class="intersentencespace"></span> Moreover, recent
                      additions to Rails (<a href="#sec-adding_a_secure_password"
                        class="hyperref">Section&nbsp;<span class="ref">6.3</span></a>)
                      make it easy to write a custom authentication system.<span
                        class="intersentencespace"></span> Finally, if you <em>do</em>
                      end up using a third-party system later on, you’ll be in a
                      much better position to understand and modify it if you’ve
                      first built one yourself.<span class="intersentencespace"></span></p>
                  </div>
                </div>
                <div id="_sec-user_model" data-tralics-id="cid38" class="section"
                  data-number="6.1">
                  <h2><a href="#sec-user_model" class="heading hyperref"><span class="number">6.1
                        </span>User model</a></h2>
                  <p>Although the ultimate goal of the next three chapters is to
                    make a signup page for our site (as mocked up in <a href="#fig-signup_mockup_preview"
                      class="hyperref">Figure&nbsp;<span class="ref">6.1</span></a>),
                    it would do little good now to accept information for new
                    users: we don’t currently have any place to put it.<span class="intersentencespace"></span>
                    Thus, the first step in signing up users is to make a data
                    structure to capture and store their information.</p>
                  <div class="center figure" id="_fig-signup_mockup_preview" data-tralics-id="uid505"
                    data-number="6.1">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_mockup_bootstrap.png"
                        alt="images/figures/signup_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 6.1: </span><span
                        class="description">A mockup of the user signup page. </span></div>
                  </div>
                  <p>In Rails, the default data structure for a data model is
                    called, naturally enough, a&nbsp;<em>model</em> (the M in
                    MVC from <a href="#sec-mvc" class="hyperref">Section&nbsp;<span
                        class="ref">1.3.3</span></a>).<span class="intersentencespace"></span>
                    The default Rails solution to the problem of persistence is
                    to use a <em>database</em> for long-term data storage, and
                    the default library for interacting with the database is
                    called <em>Active Record</em>.<sup id="_cha-6_footnote-ref-1"
                      class="footnote"><a href="#cha-6_footnote-1">1</a></sup><span
                      class="intersentencespace"></span> Active Record comes
                    with a host of methods for creating, saving, and finding
                    data objects, all without having to use the structured query
                    language (SQL)<sup id="_cha-6_footnote-ref-2" class="footnote"><a
                        href="#cha-6_footnote-2">2</a></sup> used by <a href="http://en.wikipedia.org/wiki/Relational_database"
                      target="_blank">relational databases</a>.<span class="intersentencespace"></span>
                    Moreover, Rails has a feature called <em>migrations</em> to
                    allow data definitions to be written in pure Ruby, without
                    having to learn an SQL data definition language (DDL).<span
                      class="intersentencespace"></span> The effect is that
                    Rails insulates you almost entirely from the details of the
                    data store.<span class="intersentencespace"></span> In this
                    book, by using SQLite for development and PostgreSQL (via
                    Heroku) for deployment (<a href="#sec-deploying" class="hyperref">Section&nbsp;<span
                        class="ref">1.5</span></a>), we have developed this
                    theme even further, to the point where we barely ever have
                    to think about how Rails stores data, even for production
                    applications.</p>
                  <p>As usual, if you’re following along using Git for version
                    control, now would be a good time to make a topic branch for
                    modeling users:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b modeling-users
</pre></div>
                  </div>
                  <div id="_sec-database_migrations" data-tralics-id="uid508" class="subsection"
                    data-number="6.1.1">
                    <h3><a href="#sec-database_migrations" class="heading hyperref"><span
                          class="number">6.1.1 </span>Database migrations</a></h3>
                    <p>You may recall from <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a> that we have already
                      encountered, via a custom-built <code>User</code> class,
                      user objects with <code>name</code> and <code>email</code>
                      attributes.<span class="intersentencespace"></span> That
                      class served as a useful example, but it lacked the
                      critical property of <em>persistence</em>: when we
                      created a User object at the Rails console, it disappeared
                      as soon as we exited.<span class="intersentencespace"></span>
                      Our goal in this section is to create a model for users
                      that won’t disappear quite so easily.</p>
                    <p>As with the User class in <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a>, we’ll start by modeling
                      a user with two attributes, a <code>name</code> and an <code>email</code>
                      address, the latter of which we’ll use as a unique
                      username.<sup id="_cha-6_footnote-ref-3" class="footnote"><a
                          href="#cha-6_footnote-3">3</a></sup><span class="intersentencespace"></span>
                      (We’ll add an attribute for passwords in <a href="#sec-adding_a_secure_password"
                        class="hyperref">Section&nbsp;<span class="ref">6.3</span></a>.)<span
                        class="intersentencespace"></span> In <a href="#code-example_user"
                        class="hyperref">Listing&nbsp;<span class="ref">4.13</span></a>,
                      we did this with Ruby’s <code>attr_accessor</code>
                      method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span>
  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">:email</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>In contrast, when using Rails to model users we don’t
                      need to identify the attributes explicitly.<span class="intersentencespace"></span>
                      As noted briefly above, to store data Rails uses a
                      relational database by default, which consists of <em>tables</em>
                      composed of data <em>rows</em>, where each row has <em>columns</em>
                      of data attributes.<span class="intersentencespace"></span>
                      For example, to store users with names and email
                      addresses, we’ll create a <code>users</code> table with <code>name</code>
                      and <code>email</code> columns (with each row
                      corresponding to one user).<span class="intersentencespace"></span>
                      An example of such a table appears in <a href="#fig-users_table"
                        class="hyperref">Figure&nbsp;<span class="ref">6.2</span></a>,
                      corresponding to the data model shown in <a href="#fig-user_model_sketch"
                        class="hyperref">Figure&nbsp;<span class="ref">6.3</span></a>.<span
                        class="intersentencespace"></span> (<a href="#fig-user_model_sketch"
                        class="hyperref">Figure&nbsp;<span class="ref">6.3</span></a>
                      is just a sketch; the full data model appears in <a href="#fig-user_model_initial"
                        class="hyperref">Figure&nbsp;<span class="ref">6.4</span></a>.)<span
                        class="intersentencespace"></span> By naming the columns
                      <code>name</code> and <code>email</code>, we’ll let
                      Active Record figure out the User object attributes for
                      us.</p>
                    <div class="center figure" id="_fig-users_table" data-tralics-id="uid510"
                      data-number="6.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/users_table.png"
                          alt="images/figures/users_table"></div>
                      <div class="caption"><span class="header">Figure 6.2: </span><span
                          class="description">A diagram of sample data in a <code>users</code>
                          table. </span></div>
                    </div>
                    <div class="center figure" id="_fig-user_model_sketch" data-tralics-id="uid511"
                      data-number="6.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_sketch.png"
                          alt="images/figures/user_model_sketch"></div>
                      <div class="caption"><span class="header">Figure 6.3: </span><span
                          class="description">A sketch of the User data model. </span></div>
                    </div>
                    <p>You may recall from <a href="#code-generate_users_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">5.28</span></a>
                      that we created a Users controller (along with a <code>new</code>
                      action) using the command</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller Users new
</pre></div>
                    </div>
                    <p>The analogous command for making a model is <code>generate
                        model</code>, which we can use to generate a User model
                      with <code>name</code> and <code>email</code>
                      attributes, as shown in <a href="#code-generate_user_model"
                        class="hyperref">Listing&nbsp;<span class="ref">6.1</span></a>.</p>
                    <div class="codelisting" id="_code-generate_user_model" data-tralics-id="uid512"
                      data-number="6.1">
                      <div class="heading"><span class="number">Listing 6.1:</span>
                        <span class="description">Generating a User model.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ rails generate model User name:string email:string
      invoke  active_record
      create    db/migrate/20140724010738_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml
</pre></div>
                      </div>
                    </div>
                    <p>(Note that, in contrast to the plural convention for
                      controller names, model names are singular: a <em>Users</em>
                      controller, but a <em>User</em> model.)<span class="intersentencespace"></span>
                      By passing the optional parameters <code>name:string</code>
                      and <code>email:string</code>, we tell Rails about the
                      two attributes we want, along with which types those
                      attributes should be (in this case, <code>string</code>).<span
                        class="intersentencespace"></span> Compare this with
                      including the action names in <a href="#code-generating_pages"
                        class="hyperref">Listing&nbsp;<span class="ref">3.4</span></a>
                      and <a href="#code-generate_users_controller" class="hyperref">Listing&nbsp;<span
                          class="ref">5.28</span></a>.</p>
                    <p>One of the results of the <code>generate</code> command
                      in <a href="#code-generate_user_model" class="hyperref">Listing&nbsp;<span
                          class="ref">6.1</span></a> is a new file called a <em>migration</em>.<span
                        class="intersentencespace"></span> Migrations provide a
                      way to alter the structure of the database incrementally,
                      so that our data model can adapt to changing requirements.<span
                        class="intersentencespace"></span> In the case of the
                      User model, the migration is created automatically by the
                      model generation script; it creates a <code>users</code>
                      table with two columns, <code>name</code> and <code>email</code>,
                      as shown in <a href="#code-users_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">6.2</span></a>.<span class="intersentencespace"></span>
                      (We’ll see starting in <a href="#sec-uniqueness_validation"
                        class="hyperref">Section&nbsp;<span class="ref">6.2.5</span></a>
                      how to make a migration from scratch.)</p>
                    <div class="codelisting" id="_code-users_migration" data-tralics-id="uid513"
                      data-number="6.2">
                      <div class="heading"><span class="number">Listing 6.2:</span>
                        <span class="description">Migration for the User model
                          (to create a <code>users</code> table).<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/migrate/[timestamp]_create_users.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">CreateUsers</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">create_table</span> <span class="ss">:users</span> <span class="k">do</span> <span
class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span
class="ss">:name</span>
      <span class="n">t</span><span class="o">.</span><span class="n">string</span> <span
class="ss">:email</span>

      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span
class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that the name of the migration file is prefixed by a
                      <em>timestamp</em> based on when the migration was
                      generated.<span class="intersentencespace"></span> In the
                      early days of migrations, the filenames were prefixed with
                      incrementing integers, which caused conflicts for
                      collaborating teams if multiple programmers had migrations
                      with the same number.<span class="intersentencespace"></span>
                      Barring the improbable scenario of migrations generated
                      the same second, using timestamps conveniently avoids such
                      collisions.</p>
                    <p>The migration itself consists of a <code>change</code>
                      method that determines the change to be made to the
                      database.<span class="intersentencespace"></span> In the
                      case of <a href="#code-users_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">6.2</span></a>, <code>change</code> uses
                      a Rails method called <code>create_table</code> to create
                      a table in the database for storing users.<span class="intersentencespace"></span>
                      The <code>create_table</code> method accepts a block (<a
                        href="#sec-blocks" class="hyperref">Section&nbsp;<span class="ref">4.3.2</span></a>)
                      with one block variable, in this case called <code>t</code>
                      (for “table”).<span class="intersentencespace"></span>
                      Inside the block, the <code>create_table</code> method
                      uses the <code>t</code>&nbsp;object to create <code>name</code>
                      and <code>email</code> columns in the database, both of
                      type <code>string</code>.<sup id="_cha-6_footnote-ref-4"
                        class="footnote"><a href="#cha-6_footnote-4">4</a></sup><span
                        class="intersentencespace"></span> Here the table name
                      is plural (<code>users</code>) even though the model name
                      is singular (User), which reflects a linguistic convention
                      followed by Rails: a model represents a single user,
                      whereas a database table consists of many users.<span class="intersentencespace"></span>
                      The final line in the block, <code>t.timestamps null:
                        false</code>, is a special command that creates two <em>magic
                        columns</em> called <code>created_at</code> and <code>updated_at</code>,
                      which are timestamps that automatically record when a
                      given user is created and updated.<span class="intersentencespace"></span>
                      (We’ll see concrete examples of the magic columns starting
                      in <a href="#sec-creating_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.3</span></a>.)<span class="intersentencespace"></span>
                      The full data model represented by the migration in <a href="#code-users_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">6.2</span></a>
                      is shown in <a href="#fig-user_model_initial" class="hyperref">Figure&nbsp;<span
                          class="ref">6.4</span></a>.<span class="intersentencespace"></span>
                      (Note the addition of the magic columns, which weren’t
                      present in the sketch shown in <a href="#fig-user_model_sketch"
                        class="hyperref">Figure&nbsp;<span class="ref">6.3</span></a>.)</p>
                    <div class="center figure" id="_fig-user_model_initial" data-tralics-id="uid515"
                      data-number="6.4"><span class="graphics"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_initial_3rd_edition.png"
                          alt="user_model_initial_3rd_edition"></span>
                      <div class="caption"><span class="header">Figure 6.4: </span><span
                          class="description">The User data model produced by <a
                            href="#code-users_migration" class="hyperref">Listing&nbsp;<span
                              class="ref">6.2</span></a>. </span></div>
                    </div>
                    <p>We can run the migration, known as “migrating up”, using
                      the <code>rake</code> command (<a href="#aside-rake" class="hyperref">Box&nbsp;<span
                          class="ref">2.1</span></a>) as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                    <p>(You may recall that we ran this command in a similar
                      context in <a href="#sec-demo_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">2.2</span></a>.)<span class="intersentencespace"></span>
                      The first time <code>db:migrate</code> is run, it creates
                      a file called <code>db/development.sqlite3</code>, which
                      is an <a href="http://sqlite.org/" target="_blank">SQLite</a><sup
                        id="_cha-6_footnote-ref-5" class="footnote"><a href="#cha-6_footnote-5">5</a></sup>
                      database.<span class="intersentencespace"></span> We can
                      see the structure of the database by opening <code>development.sqlite3</code>
                      with <a href="http://sqlitebrowser.org/" target="_blank">DB
                        Browser for SQLite</a>.<span class="intersentencespace"></span>
                      (If you’re using the cloud IDE, you should first download
                      the database file to the local disk, as shown in <a href="#fig-sqlite_download"
                        class="hyperref">Figure&nbsp;<span class="ref">6.5</span></a>.)<span
                        class="intersentencespace"></span> The result appears in
                      <a href="#fig-sqlite_database_browser" class="hyperref">Figure&nbsp;<span
                          class="ref">6.6</span></a>); compare with the diagram
                      in <a href="#fig-user_model_initial" class="hyperref">Figure&nbsp;<span
                          class="ref">6.4</span></a>.<span class="intersentencespace"></span>
                      You might note that there’s one column in <a href="#fig-sqlite_database_browser"
                        class="hyperref">Figure&nbsp;<span class="ref">6.6</span></a>
                      not accounted for in the migration: the <code>id</code>
                      column.<span class="intersentencespace"></span> As noted
                      briefly in <a href="#sec-demo_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">2.2</span></a>, this column is created
                      automatically, and is used by Rails to identify each row
                      uniquely.</p>
                    <div class="center figure" id="_fig-sqlite_download" data-tralics-id="uid517"
                      data-number="6.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sqlite_download.png"
                          alt="images/figures/sqlite_download"></div>
                      <div class="caption"><span class="header">Figure 6.5: </span><span
                          class="description">Downloading a file from the cloud
                          IDE. </span></div>
                    </div>
                    <div class="center figure" id="_fig-sqlite_database_browser"
                      data-tralics-id="uid518" data-number="6.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sqlite_database_browser_3rd_edition.png"
                          alt="images/figures/sqlite_database_browser_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 6.6: </span><span
                          class="description">The <a href="http://sqlitebrowser.org/"
                            target="_blank">DB Browser for SQLite</a> with our
                          new <code>users</code> table. </span></div>
                    </div>
                    <p>Most migrations (including all the ones in this tutorial)
                      are <em>reversible</em>, which means we can “migrate
                      down” and undo them with a single Rake task, called <code>db:rollback</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:rollback
</pre></div>
                    </div>
                    <p>(See <a href="#aside-undoing_things" class="hyperref">Box&nbsp;<span
                          class="ref">3.1</span></a> for another technique
                      useful for reversing migrations.)<span class="intersentencespace"></span>
                      Under the hood, this command executes the <code>drop_table</code>
                      command to remove the users table from the database.<span
                        class="intersentencespace"></span> The reason this works
                      is that the <code>change</code> method knows that <code>drop_table</code>
                      is the inverse of <code>create_table</code>, which means
                      that the rollback migration can be easily inferred.<span class="intersentencespace"></span>
                      In the case of an irreversible migration, such as one to
                      remove a database column, it is necessary to define
                      separate <code>up</code> and <code>down</code> methods
                      in place of the single <code>change</code> method.<span class="intersentencespace"></span>
                      Read about <a href="http://guides.rubyonrails.org/migrations.html"
                        target="_blank">migrations in the Rails Guides</a> for
                      more information.</p>
                    <p>If you rolled back the database, migrate up again before
                      proceeding:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-the_model_file" data-tralics-id="uid519" class="subsection"
                    data-number="6.1.2">
                    <h3><a href="#sec-the_model_file" class="heading hyperref"><span
                          class="number">6.1.2 </span>The model file</a></h3>
                    <p>We’ve seen how the User model generation in <a href="#code-generate_user_model"
                        class="hyperref">Listing&nbsp;<span class="ref">6.1</span></a>
                      generated a migration file (<a href="#code-users_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">6.2</span></a>),
                      and we saw in <a href="#fig-sqlite_database_browser" class="hyperref">Figure&nbsp;<span
                          class="ref">6.6</span></a> the results of running this
                      migration: it updated a file called <code>development.sqlite3</code>
                      by creating a table <code>users</code> with columns <code>id</code>,
                      <code>name</code>, <code>email</code>, <code>created_at</code>,
                      and <code>updated_at</code>.<span class="intersentencespace"></span>
                      <a href="#code-generate_user_model" class="hyperref">Listing&nbsp;<span
                          class="ref">6.1</span></a> also created the model
                      itself.<span class="intersentencespace"></span> The rest
                      of this section is dedicated to understanding it.</p>
                    <p>We begin by looking at the code for the User model, which
                      lives in the file <code>user.rb</code> inside the <code>app/models/</code>
                      directory.<span class="intersentencespace"></span> It is,
                      to put it mildly, very compact (<a href="#code-raw_user_model"
                        class="hyperref">Listing&nbsp;<span class="ref">6.3</span></a>).</p>
                    <div class="codelisting" id="_code-raw_user_model" data-tralics-id="uid520"
                      data-number="6.3">
                      <div class="heading"><span class="number">Listing 6.3:</span>
                        <span class="description">The brand new User model.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Recall from <a href="#sec-a_class_of_our_own" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.2</span></a> that the syntax <code>class
                        User &lt; ActiveRecord::Base</code> means that the <code>User</code>
                      class <em>inherits</em> from <code>ActiveRecord::Base</code>,
                      so that the User model automatically has all the
                      functionality of the <code>ActiveRecord::Base</code>
                      class.<span class="intersentencespace"></span> Of course,
                      this knowledge doesn’t do us any good unless we know what
                      <code>ActiveRecord::Base</code> contains, so let’s get
                      started with some concrete examples.</p>
                  </div>
                  <div id="_sec-creating_user_objects" data-tralics-id="uid521"
                    class="subsection" data-number="6.1.3">
                    <h3><a href="#sec-creating_user_objects" class="heading hyperref"><span
                          class="number">6.1.3 </span>Creating user objects</a></h3>
                    <p>As in <a href="#cha-rails_flavored_ruby" class="hyperref">Chapter&nbsp;<span
                          class="ref">4</span></a>, our tool of choice for
                      exploring data models is the Rails console.<span class="intersentencespace"></span>
                      Since we don’t (yet) want to make any changes to our
                      database, we’ll start the console in a <em>sandbox</em>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails console --sandbox
<span class="go">Loading development environment in sandbox</span>
<span class="go">Any modifications you make will be rolled back on exit</span>
<span class="gp">&gt;</span>&gt;
</pre></div>
                    </div>
                    <p>As indicated by the helpful message “Any modifications
                      you make will be rolled back on exit”, when started in a
                      sandbox the console will “roll back” (i.e., undo) any
                      database changes introduced during the session.</p>
                    <p>In the console session in <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a>, we created a new user
                      object with <code>User.new</code>, which we had access to
                      only after requiring the example user file in <a href="#code-example_user"
                        class="hyperref">Listing&nbsp;<span class="ref">4.13</span></a>.<span
                        class="intersentencespace"></span> With models, the
                      situation is different; as you may recall from <a href="#sec-a_controller_class"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.4</span></a>,
                      the Rails console automatically loads the Rails
                      environment, which includes the models.<span class="intersentencespace"></span>
                      This means that we can make a new user object without any
                      further work:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">new</span>
<span class="go">=&gt; #&lt;User id: nil, name: nil, email: nil, created_at: nil, updated_at: nil&gt;</span>
</pre></div>
                    </div>
                    <p>We see here the default console representation of a user
                      object.</p>
                    <p>When called with no arguments, <code>User.new</code>
                      returns an object with all <code>nil</code> attributes.<span
                        class="intersentencespace"></span> In <a href="#sec-a_user_class"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.5</span></a>,
                      we designed the example User class to take an <em>initialization
                        hash</em> to set the object attributes; that design
                      choice was motivated by Active Record, which allows
                      objects to be initialized in the same way:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">"Michael Hartl"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"mhartl@example.com"</span><span
class="p">)</span>
<span class="go">=&gt; #&lt;User id: nil, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: nil, updated_at: nil&gt;</span>
</pre></div>
                    </div>
                    <p>Here we see that the name and email attributes have been
                      set as expected.</p>
                    <p>The notion of <em>validity</em> is important for
                      understanding Active Record model objects.<span class="intersentencespace"></span>
                      We’ll explore this subject in more depth in <a href="#sec-user_validations"
                        class="hyperref">Section&nbsp;<span class="ref">6.2</span></a>,
                      but for now it’s worth noting that our initial <code>user</code>
                      object is valid, which we can verify by calling the
                      boolean <code>valid?</code> method on it:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">valid?</span>
<span class="go">true</span>
</pre></div>
                    </div>
                    <p>So far, we haven’t touched the database: <code>User.new</code>
                      only creates an object <em>in memory</em>, while <code>user.valid?</code>
                      merely checks to see if the object is valid.<span class="intersentencespace"></span>
                      In order to save the User object to the database, we need
                      to call the <code>save</code> method on the <code>user</code>
                      variable:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">save</span>
<span class="go">   (0.2ms)  begin transaction</span>
<span class="go">  User Exists (0.2ms)  SELECT  1 AS one FROM "users"  WHERE LOWER("users".</span>
<span class="go">  "email") = LOWER('mhartl@example.com') LIMIT 1</span>
<span class="go">  SQL (0.5ms)  INSERT INTO "users" ("created_at", "email", "name", "updated_at)</span>
<span class="go">   VALUES (?, ?, ?, ?)  [["created_at", "2014-09-11 14:32:14.199519"],</span>
<span class="go">   ["email", "mhartl@example.com"], ["name", "Michael Hartl"], ["updated_at",</span>
<span class="go">  "2014-09-11 14:32:14.199519"]]</span>
<span class="go">   (0.9ms)  commit transaction</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>The <code>save</code> method returns <code>true</code>
                      if it succeeds and <code>false</code> otherwise.<span class="intersentencespace"></span>
                      (Currently, all saves should succeed because there are as
                      yet no validations; we’ll see cases in <a href="#sec-user_validations"
                        class="hyperref">Section&nbsp;<span class="ref">6.2</span></a>
                      when some will fail.)<span class="intersentencespace"></span>
                      For reference, the Rails console also shows the SQL
                      command corresponding to <code>user.save</code> (namely,
                      <code>INSERT INTO "users"</code>…).<span class="intersentencespace"></span>
                      We’ll hardly ever need raw SQL in this book,<sup id="_cha-6_footnote-ref-6"
                        class="footnote"><a href="#cha-6_footnote-6">6</a></sup>
                      and I’ll omit discussion of the SQL commands from now on,
                      but you can learn a lot by reading the SQL corresponding
                      to Active Record commands.</p>
                    <p>You may have noticed that the new user object had <code>nil</code>
                      values for the <code>id</code> and the magic columns <code>created_at</code>
                      and <code>updated_at</code> attributes.<span class="intersentencespace"></span>
                      Let’s see if our <code>save</code> changed anything:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-07-24 00:57:46", updated_at: "2014-07-24 00:57:46"&gt;</span>
</pre></div>
                    </div>
                    <p>We see that the <code>id</code> has been assigned a
                      value of&nbsp;<code>1</code>, while the magic columns have
                      been assigned the current time and date.<sup id="_cha-6_footnote-ref-7"
                        class="footnote"><a href="#cha-6_footnote-7">7</a></sup><span
                        class="intersentencespace"></span> Currently, the
                      created and updated timestamps are identical; we’ll see
                      them differ in <a href="#sec-updating_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.5</span></a>.</p>
                    <p>As with the User class in <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a>, instances of the User
                      model allow access to their attributes using a dot
                      notation:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">name</span>
<span class="go">=&gt; "Michael Hartl"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">email</span>
<span class="go">=&gt; "mhartl@example.com"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">updated_at</span>
<span class="go">=&gt; Thu, 24 Jul 2014 00:57:46 UTC +00:00</span>
</pre></div>
                    </div>
                    <p>As we’ll see in <a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                          class="ref">7</span></a>, it’s often convenient to
                      make and save a model in two steps as we have above, but
                      Active Record also lets you combine them into one step
                      with <code>User.create</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"A Nother"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"another@example.org"</span><span
class="p">)</span>
<span class="go">#&lt;User id: 2, name: "A Nother", email: "another@example.org", created_at:</span>
<span class="go">"2014-07-24 01:05:24", updated_at: "2014-07-24 01:05:24"&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">foo</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">create</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">"Foo"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"foo@bar.com"</span><span
class="p">)</span>
<span class="go">#&lt;User id: 3, name: "Foo", email: "foo@bar.com", created_at: "2014-07-24</span>
<span class="go">01:05:42", updated_at: "2014-07-24 01:05:42"&gt;</span>
</pre></div>
                    </div>
                    <p>Note that <code>User.create</code>, rather than
                      returning <code>true</code> or <code>false</code>,
                      returns the User object itself, which we can optionally
                      assign to a variable (such as <code>foo</code> in the
                      second command above).</p>
                    <p>The inverse of <code>create</code> is <code>destroy</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">foo</span><span
class="o">.</span><span class="n">destroy</span>
<span class="go">=&gt; #&lt;User id: 3, name: "Foo", email: "foo@bar.com", created_at: "2014-07-24</span>
<span class="go">01:05:42", updated_at: "2014-07-24 01:05:42"&gt;</span>
</pre></div>
                    </div>
                    <p>Like <code>create</code>, <code>destroy</code> returns
                      the object in question, though I can’t recall ever having
                      used the return value of <code>destroy</code>.<span class="intersentencespace"></span>
                      In addition, the destroyed object still exists in memory:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">foo</span>
<span class="go">=&gt; #&lt;User id: 3, name: "Foo", email: "foo@bar.com", created_at: "2014-07-24</span>
<span class="go">01:05:42", updated_at: "2014-07-24 01:05:42"&gt;</span>
</pre></div>
                    </div>
                    <p>So how do we know if we really destroyed an object?<span
                        class="intersentencespace"></span> And for saved and
                      non-destroyed objects, how can we retrieve users from the
                      database?<span class="intersentencespace"></span> To
                      answer these questions, we need to learn how to use Active
                      Record to find user objects.</p>
                  </div>
                  <div id="_sec-finding_user_objects" data-tralics-id="uid524" class="subsection"
                    data-number="6.1.4">
                    <h3><a href="#sec-finding_user_objects" class="heading hyperref"><span
                          class="number">6.1.4 </span>Finding user objects</a></h3>
                    <p>Active Record provides several options for finding
                      objects.<span class="intersentencespace"></span> Let’s use
                      them to find the first user we created while verifying
                      that the third user (<code>foo</code>) has been destroyed.<span
                        class="intersentencespace"></span> We’ll start with the
                      existing user:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">1</span><span
class="p">)</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-07-24 00:57:46", updated_at: "2014-07-24 00:57:46"&gt;</span>
</pre></div>
                    </div>
                    <p>Here we’ve passed the id of the user to <code>User.find</code>;
                      Active Record returns the user with that&nbsp;id.</p>
                    <p>Let’s see if the user with an <code>id</code> of&nbsp;<code>3</code>
                      still exists in the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="mi">3</span><span
class="p">)</span>
<span class="go">ActiveRecord::RecordNotFound: Couldn't find User with ID=3</span>
</pre></div>
                    </div>
                    <p>Since we destroyed our third user in <a href="#sec-creating_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.3</span></a>,
                      Active Record can’t find it in the database.<span class="intersentencespace"></span>
                      Instead, <code>find</code> raises an <em>exception</em>,
                      which is a way of indicating an exceptional event in the
                      execution of a program—in this case, a nonexistent Active
                      Record id, which causes <code>find</code> to raise an <code>ActiveRecord::RecordNotFound</code>
                      exception.<sup id="_cha-6_footnote-ref-8" class="footnote"><a
                          href="#cha-6_footnote-8">8</a></sup></p>
                    <p>In addition to the generic <code>find</code>, Active
                      Record also allows us to find users by specific
                      attributes:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="s2">"mhartl@example.com"</span><span class="p">)</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-07-24 00:57:46", updated_at: "2014-07-24 00:57:46"&gt;</span>
</pre></div>
                    </div>
                    <p>Since we will be using email addresses as usernames, this
                      sort of <code>find</code> will be useful when we learn
                      how to let users log in to our site (<a href="#cha-sign_up"
                        class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>).<span
                        class="intersentencespace"></span> If you’re worried
                      that <code>find_by</code> will be inefficient if there
                      are a large number of users, you’re ahead of the game;
                      we’ll cover this issue, and its solution via database
                      indices, in <a href="#sec-uniqueness_validation" class="hyperref">Section&nbsp;<span
                          class="ref">6.2.5</span></a>.</p>
                    <p>We’ll end with a couple of more general ways of finding
                      users.<span class="intersentencespace"></span> First,
                      there’s <code>first</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">first</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-07-24 00:57:46", updated_at: "2014-07-24 00:57:46"&gt;</span>
</pre></div>
                    </div>
                    <p>Naturally, <code>first</code> just returns the first
                      user in the database.<span class="intersentencespace"></span>
                      There’s also <code>all</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">all</span>
<span class="go">=&gt; #&lt;ActiveRecord::Relation [#&lt;User id: 1, name: "Michael Hartl",</span>
<span class="go">email: "mhartl@example.com", created_at: "2014-07-24 00:57:46",</span>
<span class="go">updated_at: "2014-07-24 00:57:46"&gt;, #&lt;User id: 2, name: "A Nother",</span>
<span class="go">email: "another@example.org", created_at: "2014-07-24 01:05:24",</span>
<span class="go">updated_at: "2014-07-24 01:05:24"&gt;]&gt;</span>
</pre></div>
                    </div>
                    <p>As you can see from the console output, <code>User.all</code>
                      returns all the users in the database as an object of
                      class <code>ActiveRecord::Relation</code>, which is
                      effectively an array (<a href="#sec-arrays_and_ranges" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.1</span></a>).</p>
                  </div>
                  <div id="_sec-updating_user_objects" data-tralics-id="uid526"
                    class="subsection" data-number="6.1.5">
                    <h3><a href="#sec-updating_user_objects" class="heading hyperref"><span
                          class="number">6.1.5 </span>Updating user objects</a></h3>
                    <p>Once we’ve created objects, we often want to update them.<span
                        class="intersentencespace"></span> There are two basic
                      ways to do this.<span class="intersentencespace"></span>
                      First, we can assign attributes individually, as we did in
                      <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span>           <span
class="c1"># Just a reminder about our user's attributes</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-07-24 00:57:46", updated_at: "2014-07-24 00:57:46"&gt;</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="s2">"mhartl@example.net"</span>
<span class="go">=&gt; "mhartl@example.net"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">save</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>Note that the final step is necessary to write the
                      changes to the database.<span class="intersentencespace"></span>
                      We can see what happens without a save by using <code>reload</code>,
                      which reloads the object based on the database
                      information:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">email</span>
<span class="go">=&gt; "mhartl@example.net"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="s2">"foo@bar.com"</span>
<span class="go">=&gt; "foo@bar.com"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">reload</span><span class="o">.</span><span class="n">email</span>
<span class="go">=&gt; "mhartl@example.net"</span>
</pre></div>
                    </div>
                    <p>Now that we’ve updated the user by running <code>user.save</code>,
                      the magic columns differ, as promised in <a href="#sec-creating_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.3</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">created_at</span>
<span class="go">=&gt; "2014-07-24 00:57:46"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">updated_at</span>
<span class="go">=&gt; "2014-07-24 01:37:32"</span>
</pre></div>
                    </div>
                    <p>The second main way to update multiple attributes is to
                      use <code>update_attributes</code>:<sup id="_cha-6_footnote-ref-9"
                        class="footnote"><a href="#cha-6_footnote-9">9</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span
class="nb">name</span><span class="p">:</span> <span class="s2">"The Dude"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"dude@abides.org"</span><span
class="p">)</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">name</span>
<span class="go">=&gt; "The Dude"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">email</span>
<span class="go">=&gt; "dude@abides.org"</span>
</pre></div>
                    </div>
                    <p>The <code>update_attributes</code> method accepts a hash
                      of attributes, and on success performs both the update and
                      the save in one step (returning <code>true</code> to
                      indicate that the save went through).<span class="intersentencespace"></span>
                      Note that if any of the validations fail, such as when a
                      password is required to save a record (as implemented in <a
                        href="#sec-adding_a_secure_password" class="hyperref">Section&nbsp;<span
                          class="ref">6.3</span></a>), the call to <code>update_attributes</code>
                      will fail.<span class="intersentencespace"></span> If we
                      need to update only a single attribute, using the singular
                      <code>update_attribute</code> bypasses this restriction:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:name</span><span class="p">,</span> <span class="s2">"The Dude"</span><span
class="p">)</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">name</span>
<span class="go">=&gt; "The Dude"</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-user_validations" data-tralics-id="cid39" class="section"
                  data-number="6.2">
                  <h2><a href="#sec-user_validations" class="heading hyperref"><span
                        class="number">6.2 </span>User validations</a></h2>
                  <p>The User model we created in <a href="#sec-user_model" class="hyperref">Section&nbsp;<span
                        class="ref">6.1</span></a> now has working <code>name</code>
                    and <code>email</code> attributes, but they are completely
                    generic: any string (including an empty one) is currently
                    valid in either case.<span class="intersentencespace"></span>
                    And yet, names and email addresses are more specific than
                    this.<span class="intersentencespace"></span> For example, <code>name</code>
                    should be non-blank, and <code>email</code> should match
                    the specific format characteristic of email addresses.<span
                      class="intersentencespace"></span> Moreover, since we’ll
                    be using email addresses as unique usernames when users log
                    in, we shouldn’t allow email duplicates in the database.</p>
                  <p>In short, we shouldn’t allow <code>name</code> and <code>email</code>
                    to be just any strings; we should enforce certain
                    constraints on their values.<span class="intersentencespace"></span>
                    Active Record allows us to impose such constraints using <em>validations</em>
                    (seen briefly before in <a href="#sec-putting_the_micro_in_microposts"
                      class="hyperref">Section&nbsp;<span class="ref">2.3.2</span></a>).<span
                      class="intersentencespace"></span> In this section, we’ll
                    cover several of the most common cases, validating <em>presence</em>,
                    <em>length</em>, <em>format</em> and <em>uniqueness</em>.<span
                      class="intersentencespace"></span> In <a href="#sec-has_secure_password"
                      class="hyperref">Section&nbsp;<span class="ref">6.3.2</span></a>
                    we’ll add a final common validation, <em>confirmation</em>.<span
                      class="intersentencespace"></span> And we’ll see in <a href="#sec-unsuccessful_signups"
                      class="hyperref">Section&nbsp;<span class="ref">7.3</span></a>
                    how validations give us convenient error messages when users
                    make submissions that violate them.</p>
                  <div id="_sec-a_validity_test" data-tralics-id="uid528" class="subsection"
                    data-number="6.2.1">
                    <h3><a href="#sec-a_validity_test" class="heading hyperref"><span
                          class="number">6.2.1 </span>A validity test</a></h3>
                    <p>As noted in <a href="#aside-when_to_test" class="hyperref">Box&nbsp;<span
                          class="ref">3.3</span></a>, test-driven development
                      isn’t always the right tool for the job, but model
                      validations are exactly the kind of features for which TDD
                      is a perfect fit.<span class="intersentencespace"></span>
                      It’s difficult to be confident that a given validation is
                      doing exactly what we expect it to without writing a
                      failing test and then getting it to pass.</p>
                    <p>Our method will be to start with a <em>valid</em> model
                      object, set one of its attributes to something we want to
                      be invalid, and then test that it in fact is invalid.<span
                        class="intersentencespace"></span> As a safety net,
                      we’ll first write a test to make sure the initial model
                      object is valid.<span class="intersentencespace"></span>
                      This way, when the validation tests fail we’ll know it’s
                      for the right reason (and not because the initial object
                      was invalid in the first place).</p>
                    <p>To get us started, the command in <a href="#code-generate_user_model"
                        class="hyperref">Listing&nbsp;<span class="ref">6.1</span></a>
                      produced an initial test for testing users, though in this
                      case it’s practically blank (<a href="#code-default_user_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.4</span></a>).</p>
                    <div class="codelisting" id="_code-default_user_test" data-tralics-id="uid529"
                      data-number="6.4">
                      <div class="heading"><span class="number">Listing 6.4:</span>
                        <span class="description">The practically blank default
                          User test.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="c1"># test "the truth" do</span>
  <span class="c1">#   assert true</span>
  <span class="c1"># end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To write a test for a valid object, we’ll create an
                      initially valid User model object <code>@user</code>
                      using the special <code>setup</code> method (discussed
                      briefly in the <a href="#cha-static_pages" class="hyperref">Chapter&nbsp;<span
                          class="ref">3</span></a> Вправи), which automatically
                      gets run before each test.<span class="intersentencespace"></span>
                      Because <code>@user</code> is an instance variable, it’s
                      automatically available in all the tests, and we can test
                      its validity using the <code>valid?</code> method (<a href="#sec-creating_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.3</span></a>).<span
                        class="intersentencespace"></span> The result appears in
                      <a href="#code-valid_user_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.5</span></a>.</p>
                    <div class="codelisting" id="_code-valid_user_test" data-tralics-id="uid530"
                      data-number="6.5">
                      <div class="heading"><span class="number">Listing 6.5:</span>
                        <span class="description">A test for an initially valid
                          user.<span class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-valid_user_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.5</span></a> uses the plain <code>assert</code>
                      method, which in this case succeeds if <code>@user.valid?</code><span
                        class="intersentencespace"></span> returns <code>true</code>
                      and fails if it returns <code>false</code>.</p>
                    <p>Because our User model doesn’t currently have any
                      validations, the initial test should pass:</p>
                    <div class="codelisting" id="_uid531" data-tralics-id="uid531"
                      data-number="6.6">
                      <div class="heading"><span class="number">Listing 6.6:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                    <p>Here we’ve used <code>rake test:models</code> to run
                      just the model tests (compare to <code>rake
                        test:integration</code> from <a href="#sec-layout_link_tests"
                        class="hyperref">Section&nbsp;<span class="ref">5.3.4</span></a>).</p>
                  </div>
                  <div id="_sec-presence_validation" data-tralics-id="uid532" class="subsection"
                    data-number="6.2.2">
                    <h3><a href="#sec-presence_validation" class="heading hyperref"><span
                          class="number">6.2.2 </span>Validating presence</a></h3>
                    <p>Perhaps the most elementary validation is <em>presence</em>,
                      which simply verifies that a given attribute is present.<span
                        class="intersentencespace"></span> For example, in this
                      section we’ll ensure that both the name and email fields
                      are present before a user gets saved to the database.<span
                        class="intersentencespace"></span> In <a href="#sec-signup_error_messages"
                        class="hyperref">Section&nbsp;<span class="ref">7.3.3</span></a>,
                      we’ll see how to propagate this requirement up to the
                      signup form for creating new users.</p>
                    <p>We’ll start with a test for the presence of a <code>name</code>
                      attribute by building on the test in <a href="#code-valid_user_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.5</span></a>.<span
                        class="intersentencespace"></span> As seen in <a href="#code-name_presence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.7</span></a>,
                      all we need to do is set the <code>@user</code>
                      variable’s <code>name</code> attribute to a blank string
                      (in this case, a string of spaces) and then check (using
                      the <code>assert_not</code> method) that the resulting
                      User object is not valid.</p>
                    <div class="codelisting" id="_code-name_presence_test" data-tralics-id="uid533"
                      data-number="6.7">
                      <div class="heading"><span class="number">Listing 6.7:</span>
                        <span class="description">A test for validation of the <code>name</code>
                          attribute.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"name should be present"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span> <span class="o">=</span> <span class="s2">"     "</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">valid?</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the model tests should be <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid534" data-tralics-id="uid534"
                      data-number="6.8">
                      <div class="heading"><span class="number">Listing 6.8:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                    <p>As we saw briefly before in the <a href="#cha-a_toy_app"
                        class="hyperref">Chapter&nbsp;<span class="ref">2</span></a>
                      Вправи, the way to validate the presence of the name
                      attribute is to use the <code>validates</code> method
                      with argument <code>presence: true</code>, as shown in <a
                        href="#code-validates_presence_of_name" class="hyperref">Listing&nbsp;<span
                          class="ref">6.9</span></a>.<span class="intersentencespace"></span>
                      The <code>presence: true</code> argument is a one-element
                      <em>options hash</em>; recall from <a href="#sec-css_revisited"
                        class="hyperref">Section&nbsp;<span class="ref">4.3.4</span></a>
                      that curly braces are optional when passing hashes as the
                      final argument in a method.<span class="intersentencespace"></span>
                      (As noted in <a href="#sec-adding_to_the_layout" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.1</span></a>, the use of options
                      hashes is a recurring theme in Rails.)</p>
                    <div class="codelisting" id="_code-validates_presence_of_name"
                      data-tralics-id="uid535" data-number="6.9">
                      <div class="heading"><span class="number">Listing 6.9:</span>
                        <span class="description">Validating the presence of a <code>name</code>
                          attribute.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:name</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-validates_presence_of_name" class="hyperref">Listing&nbsp;<span
                          class="ref">6.9</span></a> may look like magic, but <code>validates</code>
                      is just a method.<span class="intersentencespace"></span>
                      An equivalent formulation of <a href="#code-validates_presence_of_name"
                        class="hyperref">Listing&nbsp;<span class="ref">6.9</span></a>
                      using parentheses is as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">validates</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Let’s drop into the console to see the effects of adding
                      a validation to our User model:<sup id="_cha-6_footnote-ref-10"
                        class="footnote"><a href="#cha-6_footnote-10">10</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console --sandbox</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="nb">name</span><span class="p">:</span> <span class="s2">""</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"mhartl@example.com"</span><span
class="p">)</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">valid?</span>
<span class="go">=&gt; false</span>
</pre></div>
                    </div>
                    <p>Here we check the validity of the <code>user</code>
                      variable using the <code>valid?</code> method, which
                      returns <code>false</code> when the object fails one or
                      more validations, and <code>true</code> when all
                      validations pass.<span class="intersentencespace"></span>
                      In this case, we only have one validation, so we know
                      which one failed, but it can still be helpful to check
                      using the <code>errors</code> object generated on
                      failure:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">full_messages</span>
<span class="go">=&gt; ["Name can't be blank"]</span>
</pre></div>
                    </div>
                    <p>(The error message is a hint that Rails validates the
                      presence of an attribute using the <code>blank?</code>
                      method, which we saw at the end of <a href="#sec-modifying_built_in_classes"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.3</span></a>.)</p>
                    <p>Because the user isn’t valid, an attempt to save the user
                      to the database automatically fails:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">save</span>
<span class="go">=&gt; false</span>
</pre></div>
                    </div>
                    <p>As a result, the test in <a href="#code-name_presence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.7</span></a>
                      should now be <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid537" data-tralics-id="uid537"
                      data-number="6.10">
                      <div class="heading"><span class="number">Listing 6.10:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                    <p>Following the model in <a href="#code-name_presence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.7</span></a>,
                      writing a test for <code>email</code> attribute presence
                      is easy (<a href="#code-email_presence_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.11</span></a>), as is the application
                      code to get it to pass (<a href="#code-validates_presence_of_email"
                        class="hyperref">Listing&nbsp;<span class="ref">6.12</span></a>).</p>
                    <div class="codelisting" id="_code-email_presence_test" data-tralics-id="uid538"
                      data-number="6.11">
                      <div class="heading"><span class="number">Listing 6.11:</span>
                        <span class="description">A test for validation of the <code>email</code>
                          attribute.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"name should be present"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">name</span> <span
class="o">=</span> <span class="s2">""</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"email should be present"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="vi">@user</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="s2">"     "</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">valid?</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-validates_presence_of_email"
                      data-tralics-id="uid539" data-number="6.12">
                      <div class="heading"><span class="number">Listing 6.12:</span>
                        <span class="description">Validating the presence of an
                          <code>email</code> attribute.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:email</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the presence validations are complete, and
                      the test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid540" data-tralics-id="uid540"
                      data-number="6.13">
                      <div class="heading"><span class="number">Listing 6.13:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-length_validation" data-tralics-id="uid541" class="subsection"
                    data-number="6.2.3">
                    <h3><a href="#sec-length_validation" class="heading hyperref"><span
                          class="number">6.2.3 </span>Length validation</a></h3>
                    <p>We’ve constrained our User model to require a name for
                      each user, but we should go further: the user’s names will
                      be displayed on the sample site, so we should enforce some
                      limit on their length.<span class="intersentencespace"></span>
                      With all the work we did in <a href="#sec-presence_validation"
                        class="hyperref">Section&nbsp;<span class="ref">6.2.2</span></a>,
                      this step is easy.</p>
                    <p>There’s no science to picking a maximum length; we’ll
                      just pull&nbsp;<code>50</code> out of thin air as a
                      reasonable upper bound, which means verifying that names
                      of&nbsp;<code>51</code> characters are too long.<span class="intersentencespace"></span>
                      In addition, although it’s unlikely ever to be a problem,
                      there’s a chance that a user’s email address could overrun
                      the maximum length of strings, which for many databases is
                      255.<span class="intersentencespace"></span> Because the
                      format validation in <a href="#sec-format_validation" class="hyperref">Section&nbsp;<span
                          class="ref">6.2.4</span></a> won’t enforce such a
                      constraint, we’ll add one in this section for
                      completeness.<span class="intersentencespace"></span> <a
                        href="#code-length_validation_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.14</span></a> shows the resulting tests.</p>
                    <div class="codelisting" id="_code-length_validation_test" data-tralics-id="uid542"
                      data-number="6.14">
                      <div class="heading"><span class="number">Listing 6.14:</span>
                        <span class="description">A test for <code>name</code>
                          length validation.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"name should not be too long"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">name</span> <span
class="o">=</span> <span class="s2">"a"</span> <span class="o">*</span> <span class="mi">51</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"email should not be too long"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="s2">"a"</span> <span class="o">*</span> <span class="mi">244</span> <span
class="o">+</span> <span class="s2">"@example.com"</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>For convenience, we’ve used “string multiplication” in <a
                        href="#code-length_validation_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.14</span></a> to make a string 51
                      characters long.<span class="intersentencespace"></span>
                      We can see how this works using the console:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"a"</span> <span
class="o">*</span> <span class="mi">51</span>
<span class="go">=&gt; "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="s2">"a"</span> <span
class="o">*</span> <span class="mi">51</span><span class="p">)</span><span class="o">.</span><span
class="n">length</span>
<span class="go">=&gt; 51</span>
</pre></div>
                    </div>
                    <p>The email length validation arranges to make a valid
                      email address that’s one character too long:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="s2">"a"</span> <span
class="o">*</span> <span class="mi">244</span> <span class="o">+</span> <span class="s2">"@example.com"</span>
<span class="go">=&gt; "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span>
<span class="go">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span>
<span class="go">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span>
<span class="go">aaaaaaaaaaa@example.com"</span>
<span class="gp">&gt;&gt; </span><span class="p">(</span><span class="s2">"a"</span> <span
class="o">*</span> <span class="mi">244</span> <span class="o">+</span> <span class="s2">"@example.com"</span><span
class="p">)</span><span class="o">.</span><span class="n">length</span>
<span class="go">=&gt; 256</span>
</pre></div>
                    </div>
                    <p>At this point, the tests in <a href="#code-length_validation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.14</span></a>
                      should be <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid543" data-tralics-id="uid543"
                      data-number="6.15">
                      <div class="heading"><span class="number">Listing 6.15:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>To get them to pass, we need to use the validation
                      argument to constrain length, which is just <code>length</code>,
                      along with the <code>maximum</code> parameter to enforce
                      the upper bound (<a href="#code-length_validation" class="hyperref">Listing&nbsp;<span
                          class="ref">6.16</span></a>).</p>
                    <div class="codelisting" id="_code-length_validation" data-tralics-id="uid544"
                      data-number="6.16">
                      <div class="heading"><span class="number">Listing 6.16:</span>
                        <span class="description">Adding a length validation for
                          the <code>name</code> attribute.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:name</span><span
class="p">,</span>  <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span><span class="p">,</span> <span class="ss">length</span><span
class="p">:</span> <span class="p">{</span> <span class="ss">maximum</span><span
class="p">:</span> <span class="mi">50</span> <span class="p">}</span>
</span>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid545" data-tralics-id="uid545"
                      data-number="6.17">
                      <div class="heading"><span class="number">Listing 6.17:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>With our test suite passing again, we can move on to a
                      more challenging validation: email format.</p>
                  </div>
                  <div id="_sec-format_validation" data-tralics-id="uid546" class="subsection"
                    data-number="6.2.4">
                    <h3><a href="#sec-format_validation" class="heading hyperref"><span
                          class="number">6.2.4 </span>Format validation</a></h3>
                    <p>Our validations for the <code>name</code> attribute
                      enforce only minimal constraints—any non-blank name under
                      51 characters will do—but of course the <code>email</code>
                      attribute must satisfy the more stringent requirement of
                      being a valid email address.<span class="intersentencespace"></span>
                      So far we’ve only rejected blank email addresses; in this
                      section, we’ll require email addresses to conform to the
                      familiar pattern <code>user@example.com</code>.</p>
                    <p>Neither the tests nor the validation will be exhaustive,
                      just good enough to accept most valid email addresses and
                      reject most invalid ones.<span class="intersentencespace"></span>
                      We’ll start with a couple of tests involving collections
                      of valid and invalid addresses.<span class="intersentencespace"></span>
                      To make these collections, it’s worth knowing about the
                      useful <code>%w[]</code> technique for making arrays of
                      strings, as seen in this console session:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="sx">%w[foo bar baz]</span>
<span class="go">=&gt; ["foo", "bar", "baz"]</span>
<span class="gp">&gt;&gt; </span><span class="n">addresses</span> <span class="o">=</span> <span
class="sx">%w[USER@foo.COM THE_US-ER@foo.bar.org first.last@foo.jp]</span>
<span class="go">=&gt; ["USER@foo.COM", "THE_US-ER@foo.bar.org", "first.last@foo.jp"]</span>
<span class="gp">&gt;&gt; </span><span class="n">addresses</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">address</span><span
class="o">|</span>
<span class="gp">?&gt; </span>  <span class="nb">puts</span> <span class="n">address</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">USER@foo.COM</span>
<span class="go">THE_US-ER@foo.bar.org</span>
<span class="go">first.last@foo.jp</span>
</pre></div>
                    </div>
                    <p>Here we’ve iterated over the elements of the <code>addresses</code>
                      array using the <code>each</code> method (<a href="#sec-blocks"
                        class="hyperref">Section&nbsp;<span class="ref">4.3.2</span></a>).<span
                        class="intersentencespace"></span> With this technique
                      in hand, we’re ready to write some basic email format
                      validation tests.</p>
                    <p>Because email format validation is tricky and
                      error-prone, we’ll start with some passing tests for <em>valid</em>
                      email addresses to catch any errors in the validation.<span
                        class="intersentencespace"></span> In other words, we
                      want to make sure not just that invalid email addresses
                      like <em>user@example,com</em> are rejected, but also
                      that valid addresses like <em>user@example.com</em> are
                      accepted, even after we impose the validation constraint.<span
                        class="intersentencespace"></span> (Right now, of
                      course, they’ll be accepted because all non-blank email
                      addresses are currently valid.)<span class="intersentencespace"></span>
                      The result for a representative sample of valid email
                      addresses appears in <a href="#code-email_format_valid_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">6.18</span></a>.</p>
                    <div class="codelisting" id="_code-email_format_valid_tests"
                      data-tralics-id="uid547" data-number="6.18">
                      <div class="heading"><span class="number">Listing 6.18:</span>
                        <span class="description">Tests for valid email formats.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"email validation should accept valid addresses"</span> <span
class="k">do</span>
    <span class="n">valid_addresses</span> <span class="o">=</span> <span class="sx">%w[user@example.com USER@foo.COM A_US-ER@foo.bar.org</span>
<span class="sx">                         first.last@foo.jp alice+bob@baz.cn]</span>
    <span class="n">valid_addresses</span><span class="o">.</span><span class="n">each</span> <span
class="k">do</span> <span class="o">|</span><span class="n">valid_address</span><span
class="o">|</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="n">valid_address</span>
      <span class="n">assert</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span><span class="p">,</span> <span class="s2">"</span><span class="si">#{</span><span
class="n">valid_address</span><span class="o">.</span><span class="n">inspect</span><span
class="si">}</span><span class="s2"> should be valid"</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that we’ve included an optional second argument to
                      the assertion with a custom error message, which in this
                      case identifies the address causing the test to fail:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">valid?</span><span class="p">,</span> <span class="s2">"</span><span
class="si">#{</span><span class="n">valid_address</span><span class="o">.</span><span
class="n">inspect</span><span class="si">}</span><span class="s2"> should be valid"</span>
</pre></div>
                    </div>
                    <p>(This uses the interpolated <code>inspect</code> method
                      mentioned in <a href="#sec-hashes_and_symbols" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.3</span></a>.)<span class="intersentencespace"></span>
                      Including the specific address that causes any failure is
                      especially useful in a test with an <code>each</code>
                      loop like <a href="#code-email_format_valid_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">6.18</span></a>; otherwise, any failure
                      would merely identify the line number, which is the same
                      for all the email addresses, and which wouldn’t be
                      sufficient to identify the source of the problem.</p>
                    <p>Next we’ll add tests for the <em>invalidity</em> of a
                      variety of invalid email addresses, such as <em>user@example,com</em>
                      (comma in place of dot) and <em>user_at_foo.org</em>
                      (missing the ‘@’ sign).<span class="intersentencespace"></span>
                      As in <a href="#code-email_format_valid_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">6.18</span></a>, <a href="#code-email_format_validation_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">6.19</span></a>
                      includes a custom error message to identify the exact
                      address causing any failure.</p>
                    <div class="codelisting" id="_code-email_format_validation_tests"
                      data-tralics-id="uid548" data-number="6.19">
                      <div class="heading"><span class="number">Listing 6.19:</span>
                        <span class="description">Tests for email format
                          validation.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"email validation should reject invalid addresses"</span> <span
class="k">do</span>
    <span class="n">invalid_addresses</span> <span class="o">=</span> <span class="sx">%w[user@example,com user_at_foo.org user.name@example.</span>
<span class="sx">                           foo@bar_baz.com foo@bar+baz.com]</span>
    <span class="n">invalid_addresses</span><span class="o">.</span><span class="n">each</span> <span
class="k">do</span> <span class="o">|</span><span class="n">invalid_address</span><span
class="o">|</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="n">invalid_address</span>
      <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span><span class="p">,</span> <span class="s2">"</span><span class="si">#{</span><span
class="n">invalid_address</span><span class="o">.</span><span class="n">inspect</span><span
class="si">}</span><span class="s2"> should be invalid"</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests should be <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid549" data-tralics-id="uid549"
                      data-number="6.20">
                      <div class="heading"><span class="number">Listing 6.20:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>The application code for email format validation uses the
                      <code>format</code> validation, which works like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">validates</span> <span class="ss">:email</span><span
class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="sr">/&lt;regular expression&gt;/</span> <span
class="p">}</span>
</pre></div>
                    </div>
                    <p>This validates the attribute with the given <em>regular
                        expression</em> (or <em>regex</em>), which is a
                      powerful (and often cryptic) language for matching
                      patterns in strings.<span class="intersentencespace"></span>
                      This means we need to construct a regular expression to
                      match valid email addresses while <em>not</em> matching
                      invalid ones.</p>
                    <p>There actually exists a full regex for matching email
                      addresses according to the official email standard, but
                      it’s enormous, obscure, and quite possibly
                      counter-productive.<sup id="_cha-6_footnote-ref-11" class="footnote"><a
                          href="#cha-6_footnote-11">11</a></sup><span class="intersentencespace"></span>
                      In this tutorial, we’ll adopt a more pragmatic regex that
                      has proven to be robust in practice.<span class="intersentencespace"></span>
                      Here’s what it looks like:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span
class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</pre></div>
                    </div>
                    <p>To help understand where this comes from, <a href="#table-valid_email_regex"
                        class="hyperref">Table&nbsp;<span class="ref">6.1</span></a>
                      breaks it into bite-sized pieces.<sup id="_cha-6_footnote-ref-12"
                        class="footnote"><a href="#cha-6_footnote-12">12</a></sup></p>
                    <div class="table" id="_table-valid_email_regex" data-tralics-id="uid552"
                      data-number="6.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>Expression</strong></td>
                            <td class="align_left"><strong>Meaning</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span></td>
                            <td class="align_left">full regex</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">/</span></td>
                            <td class="align_left">start of regex</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">\A</span></td>
                            <td class="align_left">match start of a string</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">[\w+\-.]+</span></td>
                            <td class="align_left">at least one word character,
                              plus, hyphen, or dot</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">@</span></td>
                            <td class="align_left">literal “at sign”</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">[a-z\d\-.]+</span></td>
                            <td class="align_left">at least one letter, digit,
                              hyphen, or dot</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">\.</span></td>
                            <td class="align_left">literal dot</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">[a-z]+</span></td>
                            <td class="align_left">at least one letter</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">\z</span></td>
                            <td class="align_left">match end of a string</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">/</span></td>
                            <td class="align_left">end of regex</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="inline_verbatim">i</span></td>
                            <td class="align_left">case-insensitive</td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 6.1: </span><span
                          class="description">Breaking down the valid email
                          regex. </span></div>
                    </div>
                    <p>Although you can learn a lot by studying <a href="#table-valid_email_regex"
                        class="hyperref">Table&nbsp;<span class="ref">6.1</span></a>,
                      to really understand regular expressions I consider using
                      an interactive regular expression matcher like <a href="http://www.rubular.com/"
                        target="_blank">Rubular</a> to be essential (<a href="#fig-rubular"
                        class="hyperref">Figure&nbsp;<span class="ref">6.7</span></a>).<sup
                        id="_cha-6_footnote-ref-13" class="footnote"><a href="#cha-6_footnote-13">13</a></sup><span
                        class="intersentencespace"></span> The Rubular website
                      has a beautiful interactive interface for making regular
                      expressions, along with a handy regex quick reference.<span
                        class="intersentencespace"></span> I encourage you to
                      study <a href="#table-valid_email_regex" class="hyperref">Table&nbsp;<span
                          class="ref">6.1</span></a> with a browser window open
                      to Rubular—no amount of reading about regular expressions
                      can replace playing with them interactively.<span class="intersentencespace"></span>
                      (<em>Note</em>: If you use the regex from <a href="#table-valid_email_regex"
                        class="hyperref">Table&nbsp;<span class="ref">6.1</span></a>
                      in Rubular, I recommend leaving off the <span class="inline_verbatim">\A</span>
                      and <span class="inline_verbatim">\z</span> characters so
                      that you can match more than one email address at a time
                      in the given test string.)</p>
                    <div class="center figure" id="_fig-rubular" data-tralics-id="uid554"
                      data-number="6.7">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/rubular.png"
                          alt="images/figures/rubular"></div>
                      <div class="caption"><span class="header">Figure 6.7: </span><span
                          class="description">The awesome <a href="http://www.rubular.com/"
                            target="_blank">Rubular</a> regular expression
                          editor. </span></div>
                    </div>
                    <p>Applying the regular expression from <a href="#table-valid_email_regex"
                        class="hyperref">Table&nbsp;<span class="ref">6.1</span></a>
                      to the <code>email</code> format validation yields the
                      code in <a href="#code-validates_format_of_email" class="hyperref">Listing&nbsp;<span
                          class="ref">6.21</span></a>.</p>
                    <div class="codelisting" id="_code-validates_format_of_email"
                      data-tralics-id="uid555" data-number="6.21">
                      <div class="heading"><span class="number">Listing 6.21:</span>
                        <span class="description">Validating the email format
                          with a regular expression.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
<span class="hll">  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span
class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
</span>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
<span class="hll">                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">}</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here the regex <code>VALID_EMAIL_REGEX</code> is a <em>constant</em>,
                      indicated in Ruby by a name starting with a capital
                      letter.<span class="intersentencespace"></span> The code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span
class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">}</span>
</pre></div>
                    </div>
                    <p>ensures that only email addresses that match the pattern
                      will be considered valid.<span class="intersentencespace"></span>
                      (The expression above has one notable weakness: it allows
                      invalid addresses that contain consecutive dots, such as <code>foo@bar..com</code>.<span
                        class="intersentencespace"></span> Fixing this blemish
                      requires a significantly more complicated regular
                      expression and is left as an exercise (<a href="#sec-modeling_users_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">6.5</span></a>).)</p>
                    <p>At this point, the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid556" data-tralics-id="uid556"
                      data-number="6.22">
                      <div class="heading"><span class="number">Listing 6.22:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                    <p>This means that there’s only one constraint left:
                      enforcing email uniqueness.</p>
                  </div>
                  <div id="_sec-uniqueness_validation" data-tralics-id="uid557"
                    class="subsection" data-number="6.2.5">
                    <h3><a href="#sec-uniqueness_validation" class="heading hyperref"><span
                          class="number">6.2.5 </span>Uniqueness validation</a></h3>
                    <p>To enforce uniqueness of email addresses (so that we can
                      use them as usernames), we’ll be using the <code>:unique</code>
                      option to the <code>validates</code> method.<span class="intersentencespace"></span>
                      But be warned: there’s a <em>major</em> caveat, so don’t
                      just skim this section—read it carefully.</p>
                    <p>We’ll start with some short tests.<span class="intersentencespace"></span>
                      In our previous model tests, we’ve mainly used <code>User.new</code>,
                      which just creates a Ruby object in memory, but for
                      uniqueness tests we actually need to put a record into the
                      database.<sup id="_cha-6_footnote-ref-14" class="footnote"><a
                          href="#cha-6_footnote-14">14</a></sup><span class="intersentencespace"></span>
                      The initial duplicate email test appears in <a href="#code-validates_uniqueness_of_email_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.23</span></a>.</p>
                    <div class="codelisting" id="_code-validates_uniqueness_of_email_test"
                      data-tralics-id="uid559" data-number="6.23">
                      <div class="heading"><span class="number">Listing 6.23:</span>
                        <span class="description">A test for the rejection of
                          duplicate email addresses.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"email addresses should be unique"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">duplicate_user</span> <span class="o">=</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">dup</span>
</span><span class="hll">    <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="n">duplicate_user</span><span
class="o">.</span><span class="n">valid?</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The method here is to make a user with the same email
                      address as <code>@user</code> using <code>@user.dup</code>,
                      which creates a duplicate user with the same attributes.<span
                        class="intersentencespace"></span> Since we then save <code>@user</code>,
                      the duplicate user has an email address that already
                      exists in the database, and hence should not be valid.</p>
                    <p>We can get the new test in <a href="#code-validates_uniqueness_of_email_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.23</span></a>
                      to pass by adding <code>uniqueness: true</code> to the <code>email</code>
                      validation, as shown in <a href="#code-validates_uniqueness_of_email"
                        class="hyperref">Listing&nbsp;<span class="ref">6.24</span></a>.</p>
                    <div class="codelisting" id="_code-validates_uniqueness_of_email"
                      data-tralics-id="uid560" data-number="6.24">
                      <div class="heading"><span class="number">Listing 6.24:</span>
                        <span class="description">Validating the uniqueness of
                          email addresses.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
<span class="hll">                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We’re not quite done, though.<span class="intersentencespace"></span>
                      Email addresses are typically processed as if they were
                      case-insensitive—i.e., <code>foo@bar.com</code> is
                      treated the same as <code>FOO@BAR.COM</code> or <code>FoO@BAr.coM</code>—so
                      our validation should incorporate this as well.<sup id="_cha-6_footnote-ref-15"
                        class="footnote"><a href="#cha-6_footnote-15">15</a></sup><span
                        class="intersentencespace"></span> It’s thus important
                      to test for case-insensitivity, which we do with the code
                      in <a href="#code-validates_uniqueness_of_email_case_insensitive_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.25</span></a>.</p>
                    <div class="codelisting" id="_code-validates_uniqueness_of_email_case_insensitive_test"
                      data-tralics-id="uid562" data-number="6.25">
                      <div class="heading"><span class="number">Listing 6.25:</span>
                        <span class="description">Testing case-insensitive email
                          uniqueness.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"email addresses should be unique"</span> <span
class="k">do</span>
    <span class="n">duplicate_user</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">dup</span>
<span class="hll">    <span class="n">duplicate_user</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="o">.</span><span class="n">upcase</span>
</span>    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
    <span class="n">assert_not</span> <span class="n">duplicate_user</span><span
class="o">.</span><span class="n">valid?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here we are using the <code>upcase</code> method on
                      strings (seen briefly in <a href="#sec-blocks" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.2</span></a>).<span class="intersentencespace"></span>
                      This test does the same thing as the initial duplicate
                      email test, but with an upper-case email address instead.<span
                        class="intersentencespace"></span> If this test feels a
                      little abstract, go ahead and fire up the console:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console --sandbox</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">create</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="s2">"Example User"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">email</span><span class="o">.</span><span class="n">upcase</span>
<span class="go">=&gt; "USER@EXAMPLE.COM"</span>
<span class="gp">&gt;&gt; </span><span class="n">duplicate_user</span> <span class="o">=</span> <span
class="n">user</span><span class="o">.</span><span class="n">dup</span>
<span class="gp">&gt;&gt; </span><span class="n">duplicate_user</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="o">.</span><span class="n">upcase</span>
<span class="gp">&gt;&gt; </span><span class="n">duplicate_user</span><span class="o">.</span><span
class="n">valid?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>Of course, <code>duplicate_user.valid?</code> is
                      currently <code>true</code> because the uniqueness
                      validation is case-sensitive, but we want it to be <code>false</code>.<span
                        class="intersentencespace"></span> Fortunately, <code>:uniqueness</code>
                      accepts an option, <code>:case_sensitive</code>, for just
                      this purpose (<a href="#code-validates_uniqueness_of_email_case_insensitive"
                        class="hyperref">Listing&nbsp;<span class="ref">6.26</span></a>).</p>
                    <div class="codelisting" id="_code-validates_uniqueness_of_email_case_insensitive"
                      data-tralics-id="uid563" data-number="6.26">
                      <div class="heading"><span class="number">Listing 6.26:</span>
                        <span class="description">Validating the uniqueness of
                          email addresses, ignoring case.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
<span class="hll">                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that we have simply replaced <code>true</code> in <a
                        href="#code-validates_uniqueness_of_email" class="hyperref">Listing&nbsp;<span
                          class="ref">6.24</span></a> with <code>case_sensitive:
                        false</code> in <a href="#code-validates_uniqueness_of_email_case_insensitive"
                        class="hyperref">Listing&nbsp;<span class="ref">6.26</span></a>.<span
                        class="intersentencespace"></span> (Rails infers that <code>uniqueness</code>
                      should be <code>true</code> as well.)</p>
                    <p>At this point, our application—with an important
                      caveat—enforces email uniqueness, and our test suite
                      should pass:</p>
                    <div class="codelisting" id="_uid564" data-tralics-id="uid564"
                      data-number="6.27">
                      <div class="heading"><span class="number">Listing 6.27:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>There’s just one small problem, which is that <em>the
                        Active Record uniqueness validation does not guarantee
                        uniqueness at the database level</em>.<span class="intersentencespace"></span>
                      Here’s a scenario that explains why:</p>
                    <ol>
                      <li>Alice signs up for the sample app, with address
                        alice@wonderland.com.<span class="intersentencespace"></span>
                      </li>
                      <li>Alice accidentally clicks on “Submit” <em>twice</em>,
                        sending two requests in quick succession.<span class="intersentencespace"></span>
                      </li>
                      <li>The following sequence occurs: request 1 creates a
                        user in memory that passes validation, request 2 does
                        the same, request&nbsp;1’s user gets saved,
                        request&nbsp;2’s user gets saved.<span class="intersentencespace"></span>
                      </li>
                      <li>Result: two user records with the exact same email
                        address, despite the uniqueness validation </li>
                    </ol>
                    <p>If the above sequence seems implausible, believe me, it
                      isn’t: it can happen on any Rails website with significant
                      traffic (which I once learned the hard way).<span class="intersentencespace"></span>
                      Luckily, the solution is straightforward to implement: we
                      just need to enforce uniqueness at the database level as
                      well as at the model level.<span class="intersentencespace"></span>
                      Our method is to create a database <em>index</em> on the
                      email column (<a href="#aside-database_indices" class="hyperref">Box&nbsp;<span
                          class="ref">6.2</span></a>), and then require that the
                      index be unique.</p>
                    <div class="aside" id="_aside-database_indices" data-tralics-id="uid569"
                      data-number="6.2">
                      <div class="heading"><span class="number">Box 6.2.</span>
                        <span class="description">Database indices</span></div>
                      <p>When creating a column in a database, it is important
                        to consider whether we will need to <em>find</em>
                        records by that column.<span class="intersentencespace"></span>
                        Consider, for example, the <span class="tt">email</span>
                        attribute created by the migration in <a href="#code-users_migration"
                          class="hyperref">Listing&nbsp;<span class="ref">6.2</span></a>.<span
                          class="intersentencespace"></span> When we allow users
                        to log in to the sample app starting in <a href="#cha-sign_up"
                          class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>,
                        we will need to find the user record corresponding to
                        the submitted email address.<span class="intersentencespace"></span>
                        Unfortunately, based on the naïve data model, the only
                        way to find a user by email address is to look through <em>each</em>
                        user row in the database and compare its email attribute
                        to the given email—which means we might have to examine
                        <em>every</em> row (since the user could be the last one
                        in the database).<span class="intersentencespace"></span>
                        This is known in the database business as a <em>full-table
                          scan</em>, and for a real site with thousands of users
                        it is a <a href="http://catb.org/jargon/html/B/Bad-Thing.html"
                          target="_blank">Bad Thing</a>.</p>
                      <p>Putting an index on the email column fixes the problem.<span
                          class="intersentencespace"></span> To understand a
                        database index, it’s helpful to consider the analogy of
                        a book index.<span class="intersentencespace"></span> In
                        a book, to find all the occurrences of a given string,
                        say “foobar”, you would have to scan each page for
                        “foobar”—the paper version of a full-table scan.<span class="intersentencespace"></span>
                        With a book index, on the other hand, you can just look
                        up “foobar” in the index to see all the pages containing
                        “foobar”.<span class="intersentencespace"></span> A
                        database index works essentially the same way.</p>
                    </div>
                    <p>The email index represents an update to our data modeling
                      requirements, which (as discussed in <a href="#sec-database_migrations"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.1</span></a>)
                      is handled in Rails using migrations.<span class="intersentencespace"></span>
                      We saw in <a href="#sec-database_migrations" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.1</span></a> that generating the User
                      model automatically created a new migration (<a href="#code-users_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">6.2</span></a>);
                      in the present case, we are adding structure to an
                      existing model, so we need to create a migration directly
                      using the <code>migration</code> generator:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_index_to_users_email
</pre></div>
                    </div>
                    <p>Unlike the migration for users, the email uniqueness
                      migration is not pre-defined, so we need to fill in its
                      contents with <a href="#code-email_uniqueness_index" class="hyperref">Listing&nbsp;<span
                          class="ref">6.28</span></a>.<sup id="_cha-6_footnote-ref-16"
                        class="footnote"><a href="#cha-6_footnote-16">16</a></sup></p>
                    <div class="codelisting" id="_code-email_uniqueness_index" data-tralics-id="uid571"
                      data-number="6.28">
                      <div class="heading"><span class="number">Listing 6.28:</span>
                        <span class="description">The migration for enforcing
                          email uniqueness.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/migrate/[timestamp]_add_index_to_users_email.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AddIndexToUsersEmail</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
<span class="hll">    <span class="n">add_index</span> <span class="ss">:users</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">unique</span><span class="p">:</span> <span class="kp">true</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>This uses a Rails method called <code>add_index</code>
                      to add an index on the <code>email</code> column of the <code>users</code>
                      table.<span class="intersentencespace"></span> The index
                      by itself doesn’t enforce uniqueness, but the option <code>unique:
                        true</code> does.</p>
                    <p>The final step is to migrate the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                    <p>(If this fails, try exiting any running sandbox console
                      sessions, which can lock the database and prevent
                      migrations.)</p>
                    <p>At this point, the test suite should be <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span> due to a violation of the
                      uniqueness constraint in the <em>fixtures</em>, which
                      contain sample data for the test database.<span class="intersentencespace"></span>
                      User fixtures were generated automatically in <a href="#code-generate_user_model"
                        class="hyperref">Listing&nbsp;<span class="ref">6.1</span></a>,
                      and as shown in <a href="#code-default_fixtures" class="hyperref">Listing&nbsp;<span
                          class="ref">6.29</span></a> the email addresses are
                      not unique.<span class="intersentencespace"></span>
                      (They’re not <em>valid</em> either, but fixture data
                      doesn’t get run through the validations.)</p>
                    <div class="codelisting" id="_code-default_fixtures" data-tralics-id="uid572"
                      data-number="6.29">
                      <div class="heading"><span class="number">Listing 6.29:</span>
                        <span class="description">The default user fixtures.<span
                            class="intersentencespace"></span> <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/</span>
<span class="c1"># FixtureSet.html</span>

<span class="l-Scalar-Plain">one</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">MyString</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">MyString</span>

<span class="l-Scalar-Plain">two</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">MyString</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">MyString</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because we won’t need fixtures until <a href="#cha-log_in_log_out"
                        class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>,
                      for now we’ll just remove them, leaving an empty fixtures
                      file (<a href="#code-empty_fixtures" class="hyperref">Listing&nbsp;<span
                          class="ref">6.30</span></a>).</p>
                    <div class="codelisting" id="_code-empty_fixtures" data-tralics-id="uid573"
                      data-number="6.30">
                      <div class="heading"><span class="number">Listing 6.30:</span>
                        <span class="description">An empty fixtures file.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># empty</span>
</pre></div>
                      </div>
                    </div>
                    <p>Having addressed the uniqueness caveat, there’s one more
                      change we need to make to be assured of email uniqueness.<span
                        class="intersentencespace"></span> Some database
                      adapters use case-sensitive indices, considering the
                      strings “Foo@ExAMPle.CoM” and “foo@example.com” to be
                      distinct, but our application treats those addresses as
                      the same.<span class="intersentencespace"></span> To avoid
                      this incompatibility, we’ll standardize on all lower-case
                      addresses, converting “Foo@ExAMPle.CoM” to
                      “foo@example.com” before saving it to the database.<span class="intersentencespace"></span>
                      The way to do this is with a <a href="http://en.wikipedia.org/wiki/Callback_%28computer_science%29"
                        target="_blank"><em>callback</em></a>, which is a method
                      that gets invoked at a particular point in the lifecycle
                      of an Active Record object.<span class="intersentencespace"></span>
                      In the present case, that point is before the object is
                      saved, so we’ll use a <code>before_save</code> callback
                      to downcase the email attribute before saving the user.<sup
                        id="_cha-6_footnote-ref-17" class="footnote"><a href="#cha-6_footnote-17">17</a></sup><span
                        class="intersentencespace"></span> The result appears in
                      <a href="#code-email_downcase" class="hyperref">Listing&nbsp;<span
                          class="ref">6.31</span></a>.<span class="intersentencespace"></span>
                      (This is just a first implementation; we’ll discuss this
                      subject again in <a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                          class="ref">8.4</span></a>, where we’ll use the
                      preferred <em>method reference</em> convention for
                      defining callbacks.)</p>
                    <div class="codelisting" id="_code-email_downcase" data-tralics-id="uid575"
                      data-number="6.31">
                      <div class="heading"><span class="number">Listing 6.31:</span>
                        <span class="description">Ensuring email uniqueness by
                          downcasing the email attribute.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">before_save</span> <span class="p">{</span> <span
class="nb">self</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="n">email</span><span class="o">.</span><span class="n">downcase</span> <span
class="p">}</span>
</span>  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The code in <a href="#code-email_downcase" class="hyperref">Listing&nbsp;<span
                          class="ref">6.31</span></a> passes a block to the <code>before_save</code>
                      callback and sets the user’s email address to a lower-case
                      version of its current value using the <code>downcase</code>
                      string method.<span class="intersentencespace"></span>
                      (Writing a test for email downcasing is left as an
                      exercise (<a href="#sec-modeling_users_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">6.5</span></a>).)</p>
                    <p>In <a href="#code-email_downcase" class="hyperref">Listing&nbsp;<span
                          class="ref">6.31</span></a>, we could have written the
                      assignment as</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span><span class="o">.</span><span class="n">downcase</span>
</pre></div>
                    </div>
                    <p>(where <code>self</code> refers to the current user),
                      but inside the User model the <code>self</code> keyword
                      is optional on the right-hand side:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span>
</pre></div>
                    </div>
                    <p>We encountered this idea briefly in the context of <code>reverse</code>
                      in the <code>palindrome</code> method (<a href="#sec-a_class_of_our_own"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.2</span></a>),
                      which also noted that <code>self</code> is <em>not</em>
                      optional in an assignment, so</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">email</span> <span class="o">=</span> <span
class="n">email</span><span class="o">.</span><span class="n">downcase</span>
</pre></div>
                    </div>
                    <p>wouldn’t work.<span class="intersentencespace"></span>
                      (We’ll discuss this subject in more depth in <a href="#sec-remember_me"
                        class="hyperref">Section&nbsp;<span class="ref">8.4</span></a>.)</p>
                    <p>At this point, the Alice scenario above will work fine:
                      the database will save a user record based on the first
                      request, and it will reject the second save for violating
                      the uniqueness constraint.<span class="intersentencespace"></span>
                      (An error will appear in the Rails log, but that doesn’t
                      do any harm.)<span class="intersentencespace"></span>
                      Moreover, adding this index on the email attribute
                      accomplishes a second goal, alluded to briefly in <a href="#sec-finding_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.4</span></a>:
                      as noted in <a href="#aside-database_indices" class="hyperref">Box&nbsp;<span
                          class="ref">6.2</span></a>, the index on the <code>email</code>
                      attribute fixes a potential efficiency problem by
                      preventing a full-table scan when finding users by email
                      address.</p>
                  </div>
                </div>
                <div id="_sec-adding_a_secure_password" data-tralics-id="cid40"
                  class="section" data-number="6.3">
                  <h2><a href="#sec-adding_a_secure_password" class="heading hyperref"><span
                        class="number">6.3 </span>Adding a secure password</a></h2>
                  <p>Now that we’ve defined validations for the name and email
                    fields, we’re ready to add the last of the basic User
                    attributes: a secure password.<span class="intersentencespace"></span>
                    The method is to require each user to have a password (with
                    a password confirmation), and then store a <em>hashed</em>
                    version of the password in the database.<span class="intersentencespace"></span>
                    (There is some potential for confusion here.<span class="intersentencespace"></span>
                    In the present context, a <em>hash</em> refers not to the
                    Ruby data structure from <a href="#sec-hashes_and_symbols"
                      class="hyperref">Section&nbsp;<span class="ref">4.3.3</span></a>
                    but rather to the result of applying an irreversible <a href="http://en.wikipedia.org/wiki/Hash_function"
                      target="_blank">hash function</a> to input data.)<span class="intersentencespace"></span>
                    We’ll also add a way to <em>authenticate</em> a user based
                    on a given password, a method we’ll use in <a href="#cha-log_in_log_out"
                      class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>
                    to allow users to log in to the site.</p>
                  <p>The method for authenticating users will be to take a
                    submitted password, hash it, and compare the result to the
                    hashed value stored in the database.<span class="intersentencespace"></span>
                    If the two match, then the submitted password is correct and
                    the user is authenticated.<span class="intersentencespace"></span>
                    By comparing hashed values instead of raw passwords, we will
                    be able to authenticate users without storing the passwords
                    themselves.<span class="intersentencespace"></span> This
                    means that, even if our database is compromised, our users’
                    passwords will still be secure.</p>
                  <div id="_sec-a_hashed_password" data-tralics-id="uid576" class="subsection"
                    data-number="6.3.1">
                    <h3><a href="#sec-a_hashed_password" class="heading hyperref"><span
                          class="number">6.3.1 </span>A hashed password</a></h3>
                    <p>Most of the secure password machinery will be implemented
                      using a single Rails method called <code>has_secure_password</code>,
                      which we’ll include in the User model as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">has_secure_password</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>When included in a model as above, this one method adds
                      the following functionality:</p>
                    <ul>
                      <li>The ability to save a securely hashed <code>password_digest</code>
                        attribute to the database </li>
                      <li>A pair of virtual attributes<sup id="_cha-6_footnote-ref-18"
                          class="footnote"><a href="#cha-6_footnote-18">18</a></sup>
                        (<code>password</code> and <code>password_confirmation</code>),
                        including presence validations upon object creation and
                        a validation requiring that they match </li>
                      <li>An <code>authenticate</code> method that returns the
                        user when the password is correct (and <code>false</code>
                        otherwise) </li>
                    </ul>
                    <p>The only requirement for <code>has_secure_password</code>
                      to work its magic is for the corresponding model to have
                      an attribute called <code>password_digest</code>.<span class="intersentencespace"></span>
                      (The name <em>digest</em> comes from the terminology of <a
                        href="http://en.wikipedia.org/wiki/Cryptographic_hash_function"
                        target="_blank">cryptographic hash functions</a>.<span class="intersentencespace"></span>
                      In this context, <em>hashed password</em> and <em>password
                        digest</em> are synonyms.)<sup id="_cha-6_footnote-ref-19"
                        class="footnote"><a href="#cha-6_footnote-19">19</a></sup>
                      In the case of the User model, this leads to the data
                      model shown in <a href="#fig-user_model_password_digest"
                        class="hyperref">Figure&nbsp;<span class="ref">6.8</span></a>.</p>
                    <div class="center figure" id="_fig-user_model_password_digest"
                      data-tralics-id="uid582" data-number="6.8"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_password_digest_3rd_edition.png"
                          alt="user_model_password_digest_3rd_edition"></span>
                      <div class="caption"><span class="header">Figure 6.8: </span><span
                          class="description">The User data model with an added
                          <code>password_digest</code> attribute. </span></div>
                    </div>
                    <p>To implement the data model in <a href="#fig-user_model_password_digest"
                        class="hyperref">Figure&nbsp;<span class="ref">6.8</span></a>
                      , we first generate an appropriate migration for the <code>password_digest</code>
                      column.<span class="intersentencespace"></span> We can
                      choose any migration name we want, but it’s convenient to
                      end the name with <code>to_users</code>, since in this
                      case Rails automatically constructs a migration to add
                      columns to the <code>users</code> table.<span class="intersentencespace"></span>
                      The result, with migration name <code>add_password_digest_to_users</code>,
                      appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_password_digest_to_users password_digest:string
</pre></div>
                    </div>
                    <p>Here we’ve also supplied the argument <code>password_digest:string</code>
                      with the name and type of attribute we want to create.<span
                        class="intersentencespace"></span> (Compare this to the
                      original generation of the <code>users</code> table in <a
                        href="#code-generate_user_model" class="hyperref">Listing&nbsp;<span
                          class="ref">6.1</span></a>, which included the
                      arguments <code>name:string</code> and <code>email:string</code>.)<span
                        class="intersentencespace"></span> By including <code>password_digest:string</code>,
                      we’ve given Rails enough information to construct the
                      entire migration for us, as seen in <a href="#code-password_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">6.32</span></a>.</p>
                    <div class="codelisting" id="_code-password_migration" data-tralics-id="uid583"
                      data-number="6.32">
                      <div class="heading"><span class="number">Listing 6.32:</span>
                        <span class="description">The migration to add a <code>password_digest</code>
                          column to the <code>users</code> table.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/migrate/[timestamp]_add_password_digest_to_users.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AddPasswordDigestToUsers</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">add_column</span> <span class="ss">:users</span><span class="p">,</span> <span
class="ss">:password_digest</span><span class="p">,</span> <span class="ss">:string</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-password_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">6.32</span></a> uses the <code>add_column</code>
                      method to add a <code>password_digest</code> column to
                      the <code>users</code> table.<span class="intersentencespace"></span>
                      To apply it, we just migrate the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                    <p>To make the password digest, <code>has_secure_password</code>
                      uses a state-of-the-art hash function called <a href="http://en.wikipedia.org/wiki/Bcrypt"
                        target="_blank">bcrypt</a>.<span class="intersentencespace"></span>
                      By hashing the password with bcrypt, we ensure that an
                      attacker won’t be able to log in to the site even if they
                      manage to obtain a copy of the database.<span class="intersentencespace"></span>
                      To use bcrypt in the sample application, we need to add
                      the <code>bcrypt</code> gem to our <code>Gemfile</code>
                      (<a href="#code-bcrypt_ruby" class="hyperref">Listing&nbsp;<span
                          class="ref">6.33</span></a>).</p>
                    <div class="codelisting" id="_code-bcrypt_ruby" data-tralics-id="uid584"
                      data-number="6.33">
                      <div class="heading"><span class="number">Listing 6.33:</span>
                        <span class="description">Adding <code>bcrypt</code> to
                          the <code>Gemfile</code>.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'bcrypt'</span><span class="p">,</span>               <span
class="s1">'3.1.7'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</pre></div>
                      </div>
                    </div>
                    <p>Then run <code>bundle install</code> as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-has_secure_password" data-tralics-id="uid585" class="subsection"
                    data-number="6.3.2">
                    <h3><a href="#sec-has_secure_password" class="heading hyperref"><span
                          class="number">6.3.2 </span>User has secure password</a></h3>
                    <p>Now that we’ve supplied the User model with the required
                      <code>password_digest</code> attribute and installed
                      bcrypt, we’re ready to add <code>has_secure_password</code>
                      to the User model, as shown in <a href="#code-has_secure_password"
                        class="hyperref">Listing&nbsp;<span class="ref">6.34</span></a>.</p>
                    <div class="codelisting" id="_code-has_secure_password" data-tralics-id="uid586"
                      data-number="6.34">
                      <div class="heading"><span class="number">Listing 6.34:</span>
                        <span class="description">Adding <code>has_secure_password</code>
                          to the User model.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
<span class="hll">  <span class="n">has_secure_password</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As indicated by the <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>
                      indicator in <a href="#code-has_secure_password" class="hyperref">Listing&nbsp;<span
                          class="ref">6.34</span></a>, the tests are now
                      failing, as you can confirm at the command line:</p>
                    <div class="codelisting" id="_uid587" data-tralics-id="uid587"
                      data-number="6.35">
                      <div class="heading"><span class="number">Listing 6.35:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>The reason is that, as noted in <a href="#sec-a_hashed_password"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.1</span></a>,
                      <code>has_secure_password</code> enforces validations on
                      the virtual <code>password</code> and <code>password_confirmation</code>
                      attributes, but the tests in <a href="#code-validates_uniqueness_of_email_case_insensitive_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.25</span></a>
                      create an <code>@user</code> variable without these
                      attributes:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">setup</span>
  <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>So, to get the test suite passing again, we just need to
                      add a password and its confirmation, as shown in <a href="#code-test_with_password_confirmation"
                        class="hyperref">Listing&nbsp;<span class="ref">6.36</span></a>.</p>
                    <div class="codelisting" id="_code-test_with_password_confirmation"
                      data-tralics-id="uid588" data-number="6.36">
                      <div class="heading"><span class="number">Listing 6.36:</span>
                        <span class="description">Adding a password and its
                          confirmation.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">,</span>
<span class="hll">                     <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid589" data-tralics-id="uid589"
                      data-number="6.37">
                      <div class="heading"><span class="number">Listing 6.37:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>We’ll see in just a moment the benefits of adding <code>has_secure_password</code>
                      to the User model (<a href="#sec-creating_and_authenticating_a_user"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.4</span></a>),
                      but first we’ll add a minimal requirement on password
                      security.</p>
                  </div>
                  <div id="_sec-minimum_password_length" data-tralics-id="uid590"
                    class="subsection" data-number="6.3.3">
                    <h3><a href="#sec-minimum_password_length" class="heading hyperref"><span
                          class="number">6.3.3 </span>Minimum password length</a></h3>
                    <p>It’s good practice in general to enforce some minimum
                      standards on passwords to make them harder to guess.<span
                        class="intersentencespace"></span> There are many
                      options for <a href="http://lmgtfy.com/?q=rails+enforce+password+strength"
                        target="_blank">enforcing password strength in Rails</a>,
                      but for simplicity we’ll just enforce a minimum length.<span
                        class="intersentencespace"></span> Picking a length of 6
                      as a reasonable minimum leads to the validation test shown
                      in <a href="#code-minimum_password_length_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.38</span></a>.</p>
                    <div class="codelisting" id="_code-minimum_password_length_test"
                      data-tralics-id="uid591" data-number="6.38">
                      <div class="heading"><span class="number">Listing 6.38:</span>
                        <span class="description">Testing for a minimum password
                          length.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">,</span>
                     <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"password should have a minimum length"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="vi">@user</span><span class="o">.</span><span
class="n">password</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">password_confirmation</span> <span class="o">=</span> <span
class="s2">"a"</span> <span class="o">*</span> <span class="mi">5</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">valid?</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the use of the compact multiple assignment</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span><span class="o">.</span><span
class="n">password</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">password_confirmation</span> <span class="o">=</span> <span
class="s2">"a"</span> <span class="o">*</span> <span class="mi">5</span>
</pre></div>
                    </div>
                    <p>in <a href="#code-minimum_password_length_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.38</span></a>.<span class="intersentencespace"></span>
                      This arranges to assign a particular value to the password
                      and its confirmation at the same time (in this case, a
                      string of length&nbsp;5, constructed using string
                      multiplication as in <a href="#code-length_validation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">6.14</span></a>).</p>
                    <p>You may be able to guess the code for enforcing a <code>minimum</code>
                      length constraint by referring to the corresponding <code>maximum</code>
                      validation for the user’s name (<a href="#code-length_validation"
                        class="hyperref">Listing&nbsp;<span class="ref">6.16</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">validates</span> <span class="ss">:password</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span
class="mi">6</span> <span class="p">}</span>
</pre></div>
                    </div>
                    <p>This leads to the User model shown in <a href="#code-password_implementation"
                        class="hyperref">Listing&nbsp;<span class="ref">6.39</span></a>.</p>
                    <div class="codelisting" id="_code-password_implementation"
                      data-tralics-id="uid592" data-number="6.39">
                      <div class="heading"><span class="number">Listing 6.39:</span>
                        <span class="description">The complete implementation
                          for secure passwords.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:password</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span
class="mi">6</span> <span class="p">}</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid593" data-tralics-id="uid593"
                      data-number="6.40">
                      <div class="heading"><span class="number">Listing 6.40:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-creating_and_authenticating_a_user" data-tralics-id="uid594"
                    class="subsection" data-number="6.3.4">
                    <h3><a href="#sec-creating_and_authenticating_a_user" class="heading hyperref"><span
                          class="number">6.3.4 </span>Creating and
                        authenticating a user</a></h3>
                    <p>Now that the basic User model is complete, we’ll create a
                      user in the database as preparation for making a page to
                      show the user’s information in <a href="#sec-showing_users"
                        class="hyperref">Section&nbsp;<span class="ref">7.1</span></a>.<span
                        class="intersentencespace"></span> We’ll also take a
                      more concrete look at the effects of adding <code>has_secure_password</code>
                      to the User model, including an examination of the
                      important <code>authenticate</code> method.</p>
                    <p>Since users can’t yet sign up for the sample application
                      through the web—that’s the goal of <a href="#cha-sign_up"
                        class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>—we’ll
                      use the Rails console to create a new user by hand.<span class="intersentencespace"></span>
                      For convenience, we’ll use the <code>create</code> method
                      discussed in <a href="#sec-creating_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.3</span></a>, but in the present case
                      we’ll take care <em>not</em> to start in a sandbox so
                      that the resulting user will be saved to the database.<span
                        class="intersentencespace"></span> This means starting
                      an ordinary <code>rails console</code> session and then
                      creating a user with a valid name and email address
                      together with a valid password and matching confirmation:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">create</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Michael Hartl"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"mhartl@example.com"</span><span
class="p">,</span>
<span class="gp">?&gt; </span>            <span class="ss">password</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">,</span> <span
class="ss">password_confirmation</span><span class="p">:</span> <span class="s2">"foobar"</span><span
class="p">)</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-09-11 14:26:42", updated_at: "2014-09-11 14:26:42",</span>
<span class="go">password_digest: "$2a$10$sLcMI2f8VglgirzjSJOln.Fv9NdLMbqmR4rdTWIXY1G..."&gt;</span>
</pre></div>
                    </div>
                    <p>To check that this worked, let’s look at the resulting <code>users</code>
                      table in the development database using DB Browser for
                      SQLite, as shown in <a href="#fig-sqlite_user_row" class="hyperref">Figure&nbsp;<span
                          class="ref">6.9</span></a>.<sup id="_cha-6_footnote-ref-20"
                        class="footnote intersentence"><a href="#cha-6_footnote-20">20</a></sup><span
                        class="intersentencespace"></span> (If you’re using the
                      cloud IDE, you should download the database file as in <a
                        href="#fig-sqlite_download" class="hyperref">Figure&nbsp;<span
                          class="ref">6.5</span></a>.)<span class="intersentencespace"></span>
                      Note that the columns correspond to the attributes of the
                      data model defined in <a href="#fig-user_model_password_digest"
                        class="hyperref">Figure&nbsp;<span class="ref">6.8</span></a>.</p>
                    <div class="center figure" id="_fig-sqlite_user_row" data-tralics-id="uid600"
                      data-number="6.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/sqlite_user_row_with_password_3rd_edition.png"
                          alt="images/figures/sqlite_user_row_with_password_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 6.9: </span><span
                          class="description">A user row in the SQLite database
                          <code>db/development.sqlite3</code>. </span></div>
                    </div>
                    <p>Returning to the console, we can see the effect of <code>has_secure_password</code>
                      from <a href="#code-password_implementation" class="hyperref">Listing&nbsp;<span
                          class="ref">6.39</span></a> by looking at the <code>password_digest</code>
                      attribute:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="s2">"mhartl@example.com"</span><span
class="p">)</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">password_digest</span>
<span class="go">=&gt; "$2a$10$YmQTuuDNOszvu5yi7auOC.F4G//FGhyQSWCpghqRWQWITUYlG3XVy"</span>
</pre></div>
                    </div>
                    <p>This is the hashed version of the password (<code>"foobar"</code>)
                      used to initialize the user object.<span class="intersentencespace"></span>
                      Because it’s constructed using bcrypt, it is
                      computationally impractical to use the digest to discover
                      the original password.<sup id="_cha-6_footnote-ref-21" class="footnote"><a
                          href="#cha-6_footnote-21">21</a></sup></p>
                    <p>As noted in <a href="#sec-a_hashed_password" class="hyperref">Section&nbsp;<span
                          class="ref">6.3.1</span></a>, <code>has_secure_password</code>
                      automatically adds an <code>authenticate</code> method to
                      the corresponding model objects.<span class="intersentencespace"></span>
                      This method determines if a given password is valid for a
                      particular user by computing its digest and comparing the
                      result to <code>password_digest</code> in the database.<span
                        class="intersentencespace"></span> In the case of the
                      user we just created, we can try a couple of invalid
                      passwords as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span
class="s2">"not_the_right_password"</span><span class="p">)</span>
<span class="go">false</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">authenticate</span><span class="p">(</span><span class="s2">"foobaz"</span><span
class="p">)</span>
<span class="go">false</span>
</pre></div>
                    </div>
                    <p>Here <code>user.authenticate</code> returns <code>false</code>
                      for invalid password.<span class="intersentencespace"></span>
                      If we instead authenticate with the correct password, <code>authenticate</code>
                      returns the user itself:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">authenticate</span><span class="p">(</span><span
class="s2">"foobar"</span><span class="p">)</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-07-25 02:58:28", updated_at: "2014-07-25 02:58:28",</span>
<span class="go">password_digest: "$2a$10$YmQTuuDNOszvu5yi7auOC.F4G//FGhyQSWCpghqRWQW..."&gt;</span>
</pre></div>
                    </div>
                    <p>In <a href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                          class="ref">8</span></a>, we’ll use the <code>authenticate</code>
                      method to sign registered users into our site.<span class="intersentencespace"></span>
                      In fact, it will turn out not to be important that <code>authenticate</code>
                      returns the user itself; all that will matter is that it
                      returns a value that is <code>true</code> in a boolean
                      context.<span class="intersentencespace"></span> Since a
                      user object is neither <code>nil</code> nor <code>false</code>,
                      it does the job nicely:<sup id="_cha-6_footnote-ref-22" class="footnote"><a
                          href="#cha-6_footnote-22">22</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="o">!!</span><span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="s2">"foobar"</span><span class="p">)</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-modeling_users_conclusion" data-tralics-id="cid41"
                  class="section" data-number="6.4">
                  <h2><a href="#sec-modeling_users_conclusion" class="heading hyperref"><span
                        class="number">6.4 </span>Висновок</a></h2>
                  <p>Starting from scratch, in this chapter we created a working
                    User model with name, email, and password attributes,
                    together with validations enforcing several important
                    constraints on their values.<span class="intersentencespace"></span>
                    In addition, we have the ability to securely authenticate
                    users using a given password.<span class="intersentencespace"></span>
                    This is a remarkable amount of functionality for only twelve
                    lines of code.</p>
                  <p>In the next chapter, <a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                        class="ref">7</span></a>, we’ll make a working signup
                    form to create new users, together with a page to display
                    each user’s information.<span class="intersentencespace"></span>
                    In <a href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                        class="ref">8</span></a>, we’ll then use the
                    authentication machinery from <a href="#sec-adding_a_secure_password"
                      class="hyperref">Section&nbsp;<span class="ref">6.3</span></a>
                    to let users log into the site.</p>
                  <p>If you’re using Git, now would be a good time to commit if
                    you haven’t done so in a while:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Make a basic User model (including secure passwords)"
</pre></div>
                  </div>
                  <p>Then merge back into the master branch and push to the
                    remote repository:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git merge modeling-users
<span class="gp">$</span> git push
</pre></div>
                  </div>
                  <p>To get the User model working in production, we need to run
                    the migrations at Heroku, which we can do with <code>heroku
                      run</code>:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git push heroku
$ heroku run rake db:migrate
</pre></div>
                  </div>
                  <p>We can verify that this worked by running a console in
                    production:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="go">$ heroku run console --sandbox</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">create</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Michael Hartl"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"michael@example.com"</span><span
class="p">,</span>
<span class="gp">?&gt; </span>            <span class="ss">password</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">,</span> <span
class="ss">password_confirmation</span><span class="p">:</span> <span class="s2">"foobar"</span><span
class="p">)</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "michael@example.com",</span>
<span class="go">created_at: "2014-08-29 03:27:50", updated_at: "2014-08-29 03:27:50",</span>
<span class="go">password_digest: "$2a$10$IViF0Q5j3hsEVgHgrrKH3uDou86Ka2lEPz8zkwQopwj..."&gt;</span>
</pre></div>
                  </div>
                  <div id="_sec-modeling_users_what_we_learned_in_this_chapter"
                    data-tralics-id="uid603" class="subsection" data-number="6.4.1">
                    <h3><a href="#sec-modeling_users_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">6.4.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Migrations allow us to modify our application’s data
                        model.<span class="intersentencespace"></span> </li>
                      <li>Active Record comes with a large number of methods for
                        creating and manipulating data models.<span class="intersentencespace"></span>
                      </li>
                      <li>Active Record validations allow us to place
                        constraints on the data in our models.<span class="intersentencespace"></span>
                      </li>
                      <li>Common validations include presence, length, and
                        format.<span class="intersentencespace"></span> </li>
                      <li>Regular expressions are cryptic but powerful.<span class="intersentencespace"></span>
                      </li>
                      <li>Defining a database index improves lookup efficiency
                        while allowing enforcement of uniqueness at the database
                        level.<span class="intersentencespace"></span> </li>
                      <li>We can add a secure password to a model using the
                        built-in <code>has_secure_password</code> method.<span
                          class="intersentencespace"></span> </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-modeling_users_exercises" data-tralics-id="cid42"
                  class="section" data-number="6.5">
                  <h2><a href="#sec-modeling_users_exercises" class="heading hyperref"><span
                        class="number">6.5 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>Add a test for the email downcasing from <a href="#code-email_downcase"
                        class="hyperref">Listing&nbsp;<span class="ref">6.31</span></a>,
                      as shown in <a href="#code-email_downcase_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.41</span></a>.<span class="intersentencespace"></span>
                      This test uses the <code>reload</code> method for
                      reloading a value from the database and the <code>assert_equal</code>
                      method for testing equality.<span class="intersentencespace"></span>
                      To verify that <a href="#code-email_downcase_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.41</span></a> tests the right thing,
                      comment out the <code>before_save</code> line to get to <span
                        style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>, then uncomment it to get to
                      <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>.
                    </li>
                    <li>By running the test suite, verify that the <code>before_save</code>
                      callback can be written using the “bang” method <code>email.downcase!</code>
                      to modify the <code>email</code> attribute directly, as
                      shown in <a href="#code-downcase_bang" class="hyperref">Listing&nbsp;<span
                          class="ref">6.42</span></a>. </li>
                    <li>As noted in <a href="#sec-format_validation" class="hyperref">Section&nbsp;<span
                          class="ref">6.2.4</span></a>, the email regex in <a href="#code-validates_format_of_email"
                        class="hyperref">Listing&nbsp;<span class="ref">6.21</span></a>
                      allows invalid email addresses with consecutive dots in
                      the domain name, i.e., addresses of the form <em>foo@bar..com</em>.<span
                        class="intersentencespace"></span> Add this address to
                      the list of invalid addresses in <a href="#code-email_format_validation_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">6.19</span></a>
                      to get a failing test, and then use the more complicated
                      regex shown in <a href="#code-better_email_regex" class="hyperref">Listing&nbsp;<span
                          class="ref">6.43</span></a> to get the test to pass. </li>
                  </ol>
                  <div class="codelisting" id="_code-email_downcase_test" data-tralics-id="uid614"
                    data-number="6.41">
                    <div class="heading"><span class="number">Listing 6.41:</span>
                      <span class="description">A test for the email downcasing
                        from <a href="#code-email_downcase" class="hyperref">Listing&nbsp;<span
                            class="ref">6.31</span></a>.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">,</span>
                     <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"email addresses should be unique"</span> <span
class="k">do</span>
    <span class="n">duplicate_user</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">dup</span>
    <span class="n">duplicate_user</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span
class="o">.</span><span class="n">upcase</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
    <span class="n">assert_not</span> <span class="n">duplicate_user</span><span
class="o">.</span><span class="n">valid?</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"email addresses should be saved as lower-case"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">mixed_case_email</span> <span class="o">=</span> <span
class="s2">"Foo@ExAMPle.CoM"</span>
</span><span class="hll">    <span class="vi">@user</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="n">mixed_case_email</span>
</span><span class="hll">    <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
</span><span class="hll">    <span class="n">assert_equal</span> <span class="n">mixed_case_email</span><span
class="o">.</span><span class="n">downcase</span><span class="p">,</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">reload</span><span
class="o">.</span><span class="n">email</span>
</span><span class="hll">  <span class="k">end</span>
</span>
  <span class="nb">test</span> <span class="s2">"password should have a minimum length"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">password</span> <span
class="o">=</span> <span class="vi">@user</span><span class="o">.</span><span class="n">password_confirmation</span> <span
class="o">=</span> <span class="s2">"a"</span> <span class="o">*</span> <span class="mi">5</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-downcase_bang" data-tralics-id="uid615"
                    data-number="6.42">
                    <div class="heading"><span class="number">Listing 6.42:</span>
                      <span class="description">An alternate implementation of
                        the <code>before_save</code> callback.<span class="intersentencespace"></span>
                        <span style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">before_save</span> <span class="p">{</span> <span
class="n">email</span><span class="o">.</span><span class="n">downcase!</span> <span
class="p">}</span>
</span>  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-better_email_regex" data-tralics-id="uid616"
                    data-number="6.43">
                    <div class="heading"><span class="number">Listing 6.43:</span>
                      <span class="description">Disallowing double dots in email
                        domain names.<span class="intersentencespace"></span> <span
                          style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase!</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
<span class="hll">  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span
class="sr">/\A[\w+\-.]+@[a-z\d\-]+(\.[a-z\d\-]+)*\.[a-z]+\z/i</span>
</span>  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span>   <span class="kp">true</span><span
class="p">,</span>
                    <span class="nb">format</span><span class="p">:</span>     <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-6_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-6_footnote-1">The name comes from the “<a href="http://en.wikipedia.org/wiki/Active_record_pattern"
                        target="_blank">active record pattern</a>”, identified
                      and named in <em>Patterns of Enterprise Application
                        Architecture</em> by Martin Fowler.&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-1">↑</a></li>
                    <li id="_cha-6_footnote-2">Pronounced “ess-cue-ell”, though
                      the alternate pronunciation “sequel” is also common.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-2">↑</a></li>
                    <li id="_cha-6_footnote-3">By using an email address as the
                      username, we open the possibility of communicating with
                      our users at a future date (<a href="#cha-account_activation_and_password_reset"
                        class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>).&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-3">↑</a></li>
                    <li id="_cha-6_footnote-4">Don’t worry about exactly how the
                      <code>t</code>&nbsp;object manages to do this; the beauty
                      of <em>abstraction layers</em> is that we don’t have to
                      know.<span class="intersentencespace"></span> We can just
                      trust the <code>t</code>&nbsp;object to do its job.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-4">↑</a></li>
                    <li id="_cha-6_footnote-5">Officially pronounced
                      “ess-cue-ell-ite”, although the (mis)pronunciation
                      “sequel-ite” is also common.&nbsp;<a class="arrow" href="#cha-6_footnote-ref-5">↑</a></li>
                    <li id="_cha-6_footnote-6">The only exception is in <a href="#sec-scopes_subselects_and_a_lambda"
                        class="hyperref">Section&nbsp;<span class="ref">12.3.3</span></a>.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-6">↑</a></li>
                    <li id="_cha-6_footnote-7">In case you’re curious about <code>"2014-07-24
                        00:57:46"</code>, I’m not writing this after midnight;
                      the timestamps are recorded in <a href="http://en.wikipedia.org/wiki/Coordinated_Universal_Time"
                        target="_blank">Coordinated Universal Time</a> (UTC),
                      which for most practical purposes is the same as <a href="http://en.wikipedia.org/wiki/Greenwich_Mean_Time"
                        target="_blank">Greenwich Mean Time</a>.<span class="intersentencespace"></span>
                      From the <a href="http://tf.nist.gov/general/misc.htm" target="_blank">NIST
                        Time and Frequency FAQ</a>: <strong>Q:</strong> Why is
                      UTC used as the acronym for Coordinated Universal Time
                      instead of CUT? <strong>A:</strong> In 1970 the
                      Coordinated Universal Time system was devised by an
                      international advisory group of technical experts within
                      the International Telecommunication Union (ITU).<span class="intersentencespace"></span>
                      The ITU felt it was best to designate a single
                      abbreviation for use in all languages in order to minimize
                      confusion.<span class="intersentencespace"></span> Since
                      unanimous agreement could not be achieved on using either
                      the English word order, CUT, or the French word order,
                      TUC, the acronym UTC was chosen as a compromise.&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-7">↑</a></li>
                    <li id="_cha-6_footnote-8">Exceptions and exception handling
                      are somewhat advanced Ruby subjects, and we won’t need
                      them much in this book.<span class="intersentencespace"></span>
                      They are important, though, and I suggest learning about
                      them using one of the Ruby books recommended in <a href="#sec-guide_to_further_resources"
                        class="hyperref">Section&nbsp;<span class="ref">12.4.1</span></a>.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-8">↑</a></li>
                    <li id="_cha-6_footnote-9">The <code>update_attributes</code>
                      method is an alias for the shorter <code>update</code>
                      method, but I prefer the longer version because of its
                      similarity to the singular version of the method, <code>update_attribute</code>.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-9">↑</a></li>
                    <li id="_cha-6_footnote-10">I’ll omit the output of console
                      commands when they are not particularly instructive—for
                      example, the results of <code>User.new</code>.&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-10">↑</a></li>
                    <li id="_cha-6_footnote-11">For example, did you know that <code>"Michael
                        Hartl"@example.com</code>, with quotation marks and a
                      space in the middle, is a valid email address according to
                      the standard?<span class="intersentencespace"></span>
                      Incredibly, it is—but it’s absurd.&nbsp;<a class="arrow" href="#cha-6_footnote-ref-11">↑</a></li>
                    <li id="_cha-6_footnote-12">Note that, in <a href="#table-valid_email_regex"
                        class="hyperref">Table&nbsp;<span class="ref">6.1</span></a>,
                      “letter” really means “lower-case letter”, but the <code>i</code>
                      at the end of the regex enforces case-insensitive
                      matching.&nbsp;<a class="arrow" href="#cha-6_footnote-ref-12">↑</a></li>
                    <li id="_cha-6_footnote-13">If you find it as useful as I
                      do, I encourage you to <a href="http://bit.ly/donate-to-rubular"
                        target="_blank">donate to Rubular</a> to reward
                      developer <a href="http://lovitt.net/" target="_blank">Michael
                        Lovitt</a> for his wonderful work.&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-13">↑</a></li>
                    <li id="_cha-6_footnote-14">As noted briefly in the
                      introduction to this section, there is a dedicated test
                      database, <code>db/test.sqlite3</code>, for this
                      purpose.&nbsp;<a class="arrow" href="#cha-6_footnote-ref-14">↑</a></li>
                    <li id="_cha-6_footnote-15">Technically, only the domain
                      part of the email address is case-insensitive: <em>foo@bar.com</em>
                      is actually different from <em>Foo@bar.com</em>.<span class="intersentencespace"></span>
                      In practice, though, it is a bad idea to rely on this
                      fact; as noted at <a href="http://email.about.com/od/emailbehindthescenes/f/email_case_sens.htm"
                        target="_blank">about.com</a>, “Since the case
                      sensitivity of email addresses can create a lot of
                      confusion, interoperability problems and widespread
                      headaches, it would be foolish to require email addresses
                      to be typed with the correct case.<span class="intersentencespace"></span>
                      Hardly any email service or ISP does enforce case
                      sensitive email addresses, returning messages whose
                      recipient’s email address was not typed correctly (in all
                      upper case, for example).”<span class="intersentencespace"></span>
                      Thanks to reader Riley Moses for pointing this out.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-15">↑</a></li>
                    <li id="_cha-6_footnote-16">Of course, we could just edit
                      the migration file for the <code>users</code> table in <a
                        href="#code-users_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">6.2</span></a>, but that would require
                      rolling back and then migrating back up.<span class="intersentencespace"></span>
                      The Rails Way™ is to use migrations every time we discover
                      that our data model needs to change.&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-16">↑</a></li>
                    <li id="_cha-6_footnote-17">See the <a href="http://api.rubyonrails.org/v4.2.0/classes/ActiveRecord/Callbacks.html"
                        target="_blank">Rails API entry on callbacks</a> for
                      more information on which callbacks Rails supports.&nbsp;<a
                        class="arrow" href="#cha-6_footnote-ref-17">↑</a></li>
                    <li id="_cha-6_footnote-18">In this context, <em>virtual</em>
                      means that the attributes exist on the model object but do
                      not correspond to columns in the database.&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-18">↑</a></li>
                    <li id="_cha-6_footnote-19">Hashed password digests are
                      often erroneously referred to as <em>encrypted passwords</em>.<span
                        class="intersentencespace"></span> For example, the <a
                        href="https://github.com/rails/rails/blob/master/activemodel/lib/active_model/secure_password.rb"
                        target="_blank">source code</a> of <code>has_secure_password</code>
                      makes this mistake, as did the first two editions of this
                      tutorial.<span class="intersentencespace"></span> This
                      terminology is wrong because by design encryption is <em>reversible</em>—the
                      ability to encrypt implies the ability to <em>decrypt</em>
                      as well.<span class="intersentencespace"></span> In
                      contrast, the whole point of calculating a password’s hash
                      digest is to be <em>irreversible</em>, so that it is
                      computationally intractable to infer the original password
                      from the digest.<span class="intersentencespace"></span>
                      (Thanks to reader Andy Philips for pointing out this issue
                      and for encouraging me to fix the broken
                      terminology.)&nbsp;<a class="arrow" href="#cha-6_footnote-ref-19">↑</a></li>
                    <li id="_cha-6_footnote-20">
                      <p>If for any reason something went wrong, you can always
                        reset the database as follows:</p>
                      <ol>
                        <li>Quit the console.<span class="intersentencespace"></span>
                        </li>
                        <li>Run <code>$ rm -f development.sqlite3</code> at the
                          command line to remove the database.<span class="intersentencespace"></span>
                          (We’ll learn a more elegant method for doing this in <a
                            href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                              class="ref">7</span></a>.)<span class="intersentencespace"></span>
                        </li>
                        <li>Re-run the migrations using <code>$ bundle exec
                            rake db:migrate</code>.<span class="intersentencespace"></span>
                        </li>
                        <li>Restart the console.<span class="intersentencespace"></span>
                        </li>
                      </ol>
                      &nbsp;<a class="arrow" href="#cha-6_footnote-ref-20">↑</a></li>
                    <li id="_cha-6_footnote-21">By design, the bcrypt algorithm
                      produces a <a href="https://en.wikipedia.org/wiki/Salt_%28cryptography%29"
                        target="_blank">salted hash</a>, which protects against
                      two important classes of attacks (<a href="https://en.wikipedia.org/wiki/Dictionary_attack"
                        target="_blank">dictionary attacks</a> and <a href="https://en.wikipedia.org/wiki/Rainbow_table"
                        target="_blank">rainbow table attacks</a>).&nbsp;<a class="arrow"
                        href="#cha-6_footnote-ref-21">↑</a></li>
                    <li id="_cha-6_footnote-22">Recall from <a href="#sec-objects_and_message_passing"
                        class="hyperref">Section&nbsp;<span class="ref">4.2.3</span></a>
                      that <code>!!</code> converts an object to its
                      corresponding boolean value.&nbsp;<a class="arrow" href="#cha-6_footnote-ref-22">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-sign_up" data-tralics-id="cid43" class="chapter" data-number="7">
                  <h1><a name="cha-sign_up" class="heading hyperref"><span class="number">Chapter
                        7 </span>Sign up</a></h1>
                  <p>Now that we have a working User model, it’s time to add an
                    ability few websites can live without: letting users sign
                    up.<span class="intersentencespace"></span> We’ll use an
                    HTML <em>form</em> to submit user signup information to our
                    application (<a href="#sec-signup_form" class="hyperref">Section&nbsp;<span
                        class="ref">7.2</span></a>), which will then be used to
                    create a new user and save its attributes to the database (<a
                      href="#sec-successful_signups" class="hyperref">Section&nbsp;<span
                        class="ref">7.4</span></a>).<span class="intersentencespace"></span>
                    At the end of the signup process, it’s important to render a
                    profile page with the newly created user’s information, so
                    we’ll begin by making a page for <em>showing</em> users,
                    which will serve as the first step toward implementing the
                    REST architecture for users (<a href="#sec-mvc_in_action" class="hyperref">Section&nbsp;<span
                        class="ref">2.2.2</span></a>).<span class="intersentencespace"></span>
                    Along the way, we’ll build on our work in <a href="#sec-layout_link_tests"
                      class="hyperref">Section&nbsp;<span class="ref">5.3.4</span></a>
                    to write succinct and expressive integration tests.</p>
                  <p>In this chapter, we’ll rely on the User model validations
                    from <a href="#cha-modeling_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">6</span></a> to increase the odds of new
                    users having valid email addresses.<span class="intersentencespace"></span>
                    In <a href="#cha-account_activation_and_password_reset" class="hyperref">Chapter&nbsp;<span
                        class="ref">10</span></a>, we’ll make <em>sure</em> of
                    email validity by adding a separate <em>account activation</em>
                    step to user signup.</p>
                </div>
                <div id="_sec-showing_users" data-tralics-id="cid44" class="section"
                  data-number="7.1">
                  <h2><a href="#sec-showing_users" class="heading hyperref"><span
                        class="number">7.1 </span>Showing users</a></h2>
                  <p>In this section, we’ll take the first steps toward the
                    final profile by making a page to display a user’s name and
                    profile photo, as indicated by the mockup in <a href="#fig-profile_mockup_profile_name"
                      class="hyperref">Figure&nbsp;<span class="ref">7.1</span></a>.<sup
                      id="_cha-7_footnote-ref-1" class="footnote"><a href="#cha-7_footnote-1">1</a></sup><span
                      class="intersentencespace"></span> Our eventual goal for
                    the user profile pages is to show the user’s profile image,
                    basic user data, and a list of microposts, as mocked up in <a
                      href="#fig-profile_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">7.2</span></a>.<sup id="_cha-7_footnote-ref-2"
                      class="footnote"><a href="#cha-7_footnote-2">2</a></sup><span
                      class="intersentencespace"></span> (<a href="#fig-profile_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">7.2</span></a>
                    has our first example of <em>lorem ipsum</em> text, which
                    has a <a href="http://www.straightdope.com/columns/read/2290/what-does-the-filler-text-lorem-ipsum-mean"
                      target="_blank">fascinating story</a> that you should
                    definitely read about some time.)<span class="intersentencespace"></span>
                    We’ll complete this task, and with it the sample
                    application, in <a href="#cha-following_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">12</span></a>.</p>
                  <p>If you’re following along with version control, make a
                    topic branch as usual:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b sign-up
</pre></div>
                  </div>
                  <div class="center figure" id="_fig-profile_mockup_profile_name"
                    data-tralics-id="uid619" data-number="7.1">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_mockup_profile_name_bootstrap.png"
                        alt="images/figures/profile_mockup_profile_name_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 7.1: </span><span
                        class="description">A mockup of the user profile made in
                        this section. </span></div>
                  </div>
                  <div class="center figure" id="_fig-profile_mockup" data-tralics-id="uid620"
                    data-number="7.2">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_mockup_bootstrap.png"
                        alt="images/figures/profile_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 7.2: </span><span
                        class="description">A mockup of our best guess at the
                        final profile page. </span></div>
                  </div>
                  <div id="_sec-rails_environments" data-tralics-id="uid621" class="subsection"
                    data-number="7.1.1">
                    <h3><a href="#sec-rails_environments" class="heading hyperref"><span
                          class="number">7.1.1 </span>Debug and Rails
                        environments</a></h3>
                    <p>The profiles in this section will be the first truly
                      dynamic pages in our application.<span class="intersentencespace"></span>
                      Although the view will exist as a single page of code,
                      each profile will be customized using information
                      retrieved from the application’s database.<span class="intersentencespace"></span>
                      As preparation for adding dynamic pages to our sample
                      application, now is a good time to add some debug
                      information to our site layout (<a href="#code-rails_debug"
                        class="hyperref">Listing&nbsp;<span class="ref">7.1</span></a>).<span
                        class="intersentencespace"></span> This displays some
                      useful information about each page using the built-in <code>debug</code>
                      method and <code>params</code> variable (which we’ll
                      learn more about in <a href="#sec-a_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.2</span></a>).</p>
                    <div class="codelisting" id="_code-rails_debug" data-tralics-id="uid622"
                      data-number="7.1">
                      <div class="heading"><span class="number">Listing 7.1:</span>
                        <span class="description">Adding some debug information
                          to the site layout.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  .
  .
  .
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'layouts/header'</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'layouts/footer'</span> <span
class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">debug</span><span
class="p">(</span><span class="n">params</span><span class="p">)</span> <span class="k">if</span> <span
class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span
class="n">development?</span> <span class="cp">%&gt;</span>
</span>    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Since we don’t want to display debug information to users
                      of a deployed application, <a href="#code-rails_debug" class="hyperref">Listing&nbsp;<span
                          class="ref">7.1</span></a> uses</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="no">Rails</span><span
class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">development?</span>
</pre></div>
                    </div>
                    <p>to restrict the debug information to the <em>development
                        environment</em>, which is one of three environments
                      defined by default in Rails (<a href="#aside-rails_environments"
                        class="hyperref">Box&nbsp;<span class="ref">7.1</span></a>).<sup
                        id="_cha-7_footnote-ref-3" class="footnote"><a href="#cha-7_footnote-3">3</a></sup><span
                        class="intersentencespace"></span> In particular, <code>Rails.env.development?</code>
                      is <code>true</code> only in a development environment,
                      so the embedded Ruby</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">debug</span><span
class="p">(</span><span class="n">params</span><span class="p">)</span> <span class="k">if</span> <span
class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span
class="n">development?</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>won’t be inserted into production applications or tests.<span
                        class="intersentencespace"></span> (Inserting the debug
                      information into tests probably wouldn’t do any harm, but
                      it probably wouldn’t do any good, either, so it’s best to
                      restrict the debug display to development only.)</p>
                    <div class="aside" id="_aside-rails_environments" data-tralics-id="uid624"
                      data-number="7.1">
                      <div class="heading"><span class="number">Box 7.1.</span>
                        <span class="description">Rails environments</span></div>
                      <p>Rails comes equipped with three environments: <span class="tt">test</span>,
                        <span class="tt">development</span>, and <span class="tt">production</span>.<span
                          class="intersentencespace"></span> The default
                        environment for the Rails console is <span class="tt">development</span>:</p>
                      <pre>  $ rails console
  Loading development environment
  &gt;&gt; Rails.env
  =&gt; "development"
  &gt;&gt; Rails.env.development?
  =&gt; true
  &gt;&gt; Rails.env.test?
  =&gt; false</pre>
                      <p>As you can see, Rails provides a <span class="tt">Rails</span>
                        object with an <span class="tt">env</span> attribute
                        and associated environment boolean methods, so that, for
                        example, <span class="tt">Rails.env.test?</span><span class="intersentencespace"></span>
                        returns <span class="tt">true</span> in a test
                        environment and <span class="tt">false</span>
                        otherwise.</p>
                      <p>If you ever need to run a console in a different
                        environment (to debug a test, for example), you can pass
                        the environment as a parameter to the <span class="tt">console</span>
                        script:</p>
                      <pre>  $ rails console test
  Loading test environment
  &gt;&gt; Rails.env
  =&gt; "test"
  &gt;&gt; Rails.env.test?
  =&gt; true</pre>
                      <p>As with the console, <span class="tt">development</span>
                        is the default environment for the Rails server, but you
                        can also run it in a different environment:</p>
                      <pre>  $ rails server --environment production</pre>
                      <p>If you view your app running in production, it won’t
                        work without a production database, which we can create
                        by running <span class="tt">rake db:migrate</span> in
                        production:</p>
                      <pre>  $ bundle exec rake db:migrate RAILS_ENV=production</pre>
                      <p>(I find it confusing that the console, server, and
                        migrate commands specify non-default environments in
                        three mutually incompatible ways, which is why I
                        bothered showing all three.)</p>
                      <p>By the way, if you have deployed your sample app to
                        Heroku, you can see its environment using <span class="tt">heroku
                          run console</span>:</p>
                      <pre>  $ heroku run console
  &gt;&gt; Rails.env
  =&gt; "production"
  &gt;&gt; Rails.env.production?
  =&gt; true</pre>
                      <p>Naturally, since Heroku is a platform for production
                        sites, it runs each application in a production
                        environment.<span class="intersentencespace"></span></p>
                    </div>
                    <p>To make the debug output look nice, we’ll add some rules
                      to the custom stylesheet created in <a href="#cha-filling_in_the_layout"
                        class="hyperref">Chapter&nbsp;<span class="ref">5</span></a>,
                      as shown in <a href="#code-mixin_and_debug" class="hyperref">Listing&nbsp;<span
                          class="ref">7.2</span></a>.</p>
                    <div class="codelisting" id="_code-mixin_and_debug" data-tralics-id="uid625"
                      data-number="7.2">
                      <div class="heading"><span class="number">Listing 7.2:</span>
                        <span class="description">Adding code for a pretty debug
                          box, including a Sass mixin.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">@import</span> <span class="s2">"bootstrap-sprockets"</span><span
class="p">;</span>
<span class="k">@import</span> <span class="s2">"bootstrap"</span><span class="p">;</span>

<span class="cm">/* mixins, variables, etc. */</span>

<span class="nv">$gray-medium-light</span><span class="o">:</span> <span class="mh">#eaeaea</span><span
class="p">;</span>

<span class="hll"><span class="k">@mixin</span><span class="nf"> box_sizing</span> <span
class="p">{</span>
</span><span class="hll">  <span class="na">-moz-box-sizing</span><span class="o">:</span>    <span
class="no">border</span><span class="o">-</span><span class="n">box</span><span
class="p">;</span>
</span><span class="hll">  <span class="na">-webkit-box-sizing</span><span class="o">:</span> <span
class="no">border</span><span class="o">-</span><span class="n">box</span><span
class="p">;</span>
</span><span class="hll">  <span class="na">box-sizing</span><span class="o">:</span>         <span
class="no">border</span><span class="o">-</span><span class="n">box</span><span
class="p">;</span>
</span><span class="hll"><span class="p">}</span>
</span><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="hll"><span class="o">/*</span> <span class="nt">miscellaneous</span> <span
class="o">*/</span>
</span>
<span class="hll"><span class="nc">.debug_dump</span> <span class="p">{</span>
</span><span class="hll">  <span class="na">clear</span><span class="o">:</span> <span
class="no">both</span><span class="p">;</span>
</span><span class="hll">  <span class="na">float</span><span class="o">:</span> <span
class="no">left</span><span class="p">;</span>
</span><span class="hll">  <span class="na">width</span><span class="o">:</span> <span
class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class="hll">  <span class="na">margin-top</span><span class="o">:</span> <span
class="mi">45</span><span class="kt">px</span><span class="p">;</span>
</span><span class="hll">  <span class="k">@include</span><span class="nd"> box_sizing</span><span
class="p">;</span>
</span><span class="hll"><span class="p">}</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>This introduces the Sass <em>mixin</em> facility, in
                      this case called <code>box_sizing</code>.<span class="intersentencespace"></span>
                      A mixin allows a group of CSS rules to be packaged up and
                      used for multiple elements, converting</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nc">.debug_dump</span> <span class="p">{</span>
  <span class="nc">.</span>
  <span class="nc">.</span>
  <span class="nc">.</span>
  <span class="o">@</span><span class="nt">include</span> <span class="nt">box_sizing</span><span
class="o">;</span>
<span class="p">}</span>
</pre></div>
                    </div>
                    <p>to</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nc">.debug_dump</span> <span class="p">{</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">.</span>
  <span class="na">-moz-box-sizing</span><span class="o">:</span>    <span class="no">border</span><span
class="o">-</span><span class="n">box</span><span class="p">;</span>
  <span class="na">-webkit-box-sizing</span><span class="o">:</span> <span class="no">border</span><span
class="o">-</span><span class="n">box</span><span class="p">;</span>
  <span class="na">box-sizing</span><span class="o">:</span>         <span class="no">border</span><span
class="o">-</span><span class="n">box</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                    </div>
                    <p>We’ll put this mixin to use again in <a href="#sec-using_form_for"
                        class="hyperref">Section&nbsp;<span class="ref">7.2.1</span></a>.<span
                        class="intersentencespace"></span> The result in the
                      case of the debug box is shown in <a href="#fig-home_page_with_debug"
                        class="hyperref">Figure&nbsp;<span class="ref">7.3</span></a>.</p>
                    <div class="center figure" id="_fig-home_page_with_debug" data-tralics-id="uid626"
                      data-number="7.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_page_with_debug_3rd_edition.png"
                          alt="images/figures/home_page_with_debug_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.3: </span><span
                          class="description">The sample application Home page
                          with debug information. </span></div>
                    </div>
                    <p>The debug output in <a href="#fig-home_page_with_debug"
                        class="hyperref">Figure&nbsp;<span class="ref">7.3</span></a>
                      gives potentially useful information about the page being
                      rendered:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nn">---</span>
<span class="l-Scalar-Plain">controller</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">static_pages</span>
<span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">home</span>
</pre></div>
                    </div>
                    <p>This is a YAML<sup id="_cha-7_footnote-ref-4" class="footnote"><a
                          href="#cha-7_footnote-4">4</a></sup> representation of
                      <code>params</code>, which is basically a hash, and in
                      this case identifies the controller and action for the
                      page.<span class="intersentencespace"></span> We’ll see
                      another example in <a href="#sec-a_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.2</span></a>.</p>
                  </div>
                  <div id="_sec-a_users_resource" data-tralics-id="uid628" class="subsection"
                    data-number="7.1.2">
                    <h3><a href="#sec-a_users_resource" class="heading hyperref"><span
                          class="number">7.1.2 </span>A Users resource</a></h3>
                    <p>In order to make a user profile page, we need to have a
                      user in the database, which introduces a chicken-and-egg
                      problem: how can the site have a user before there is a
                      working signup page?<span class="intersentencespace"></span>
                      Happily, this problem has already been solved: in <a href="#sec-creating_and_authenticating_a_user"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.4</span></a>,
                      we created a User record by hand using the Rails console,
                      so there should be one user in the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">count</span>
<span class="go">=&gt; 1</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">first</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Michael Hartl", email: "mhartl@example.com",</span>
<span class="go">created_at: "2014-08-29 02:58:28", updated_at: "2014-08-29 02:58:28",</span>
<span class="go">password_digest: "$2a$10$YmQTuuDNOszvu5yi7auOC.F4G//FGhyQSWCpghqRWQW..."&gt;</span>
</pre></div>
                    </div>
                    <p>(If you don’t currently have a user in your database, you
                      should visit <a href="#sec-creating_and_authenticating_a_user"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.4</span></a>
                      now and complete it before proceeding.)<span class="intersentencespace"></span>
                      We see from the console output above that the user has
                      id&nbsp;<code>1</code>, and our goal now is to make a page
                      to display this user’s information.<span class="intersentencespace"></span>
                      We’ll follow the conventions of the REST architecture
                      favored in Rails applications (<a href="#aside-REST" class="hyperref">Box&nbsp;<span
                          class="ref">2.2</span></a>), which means representing
                      data as <em>resources</em> that can be created, shown,
                      updated, or destroyed—four actions corresponding to the
                      four fundamental operations <span class="tt">POST</span>,
                      <span class="tt">GET</span>, <span class="tt">PATCH</span>,
                      and <span class="tt">DELETE</span> defined by the <a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
                        target="_blank">HTTP standard</a> (<a href="#aside-get_etc"
                        class="hyperref">Box&nbsp;<span class="ref">3.2</span></a>).</p>
                    <p>When following REST principles, resources are typically
                      referenced using the resource name and a unique
                      identifier.<span class="intersentencespace"></span> What
                      this means in the context of users—which we’re now
                      thinking of as a Users <em>resource</em>—is that we
                      should view the user with id&nbsp;<code>1</code> by
                      issuing a <span class="tt">GET</span> request to the URL
                      /users/1.<span class="intersentencespace"></span> Here the
                      <code>show</code> action is <em>implicit</em> in the type
                      of request—when Rails’ REST features are activated, <span
                        class="tt">GET</span> requests are automatically handled
                      by the <code>show</code> action.</p>
                    <p>We saw in <a href="#sec-a_user_tour" class="hyperref">Section&nbsp;<span
                          class="ref">2.2.1</span></a> that the page for a user
                      with id&nbsp;<code>1</code> has URL /users/1.<span class="intersentencespace"></span>
                      Unfortunately, visiting that URL right now just gives an
                      error, as seen in the server log (<a href="#fig-profile_routing_error"
                        class="hyperref">Figure&nbsp;<span class="ref">7.4</span></a>).</p>
                    <div class="center figure" id="_fig-profile_routing_error" data-tralics-id="uid629"
                      data-number="7.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_routing_error_3rd_edition.png"
                          alt="images/figures/profile_routing_error_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.4: </span><span
                          class="description">The server log error for /users/1.
                        </span></div>
                    </div>
                    <p>We can get the routing for /users/1 to work by adding a
                      single line to our routes file (<code>config/routes.rb</code>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">resources</span> <span class="ss">:users</span>
</pre></div>
                    </div>
                    <p>The result appears in <a href="#code-users_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">7.3</span></a>.</p>
                    <div class="codelisting" id="_code-users_resource" data-tralics-id="uid630"
                      data-number="7.3">
                      <div class="heading"><span class="number">Listing 7.3:</span>
                        <span class="description">Adding a Users resource to the
                          routes file.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>             <span class="s1">'static_pages#home'</span>
  <span class="n">get</span> <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span> <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span> <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span> <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:users</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Although our immediate motivation is making a page to
                      show users, the single line <code>resources :users</code>
                      doesn’t just add a working /users/1 URL; it endows our
                      sample application with <em>all</em> the actions needed
                      for a RESTful Users resource,<sup id="_cha-7_footnote-ref-5"
                        class="footnote"><a href="#cha-7_footnote-5">5</a></sup>
                      along with a large number of named routes (<a href="#sec-named_routes"
                        class="hyperref">Section&nbsp;<span class="ref">5.3.3</span></a>)
                      for generating user URLs.<span class="intersentencespace"></span>
                      The resulting correspondence of URLs, actions, and named
                      routes is shown in <a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>.<span class="intersentencespace"></span>
                      (Compare to <a href="#table-demo_RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">2.2</span></a>.)<span class="intersentencespace"></span>
                      Over the course of the next three chapters, we’ll cover
                      all of the other entries in <a href="#table-RESTful_users"
                        class="hyperref">Table&nbsp;<span class="ref">7.1</span></a>
                      as we fill in all the actions necessary to make Users a
                      fully RESTful resource.</p>
                    <div class="table" id="_table-RESTful_users" data-tralics-id="uid632"
                      data-number="7.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>HTTP request</strong></td>
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Action</strong></td>
                            <td class="align_left"><strong>Named route</strong></td>
                            <td class="align_left"><strong>Purpose</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users</td>
                            <td class="align_left"><code>index</code></td>
                            <td class="align_left"><code>users_path</code></td>
                            <td class="align_left">page to list all users</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/1</td>
                            <td class="align_left"><code>show</code></td>
                            <td class="align_left"><code>user_path(user)</code></td>
                            <td class="align_left">page to show user</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/new</td>
                            <td class="align_left"><code>new</code></td>
                            <td class="align_left"><code>new_user_path</code></td>
                            <td class="align_left">page to make a new user
                              (signup)</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">POST</span></td>
                            <td class="align_left">/users</td>
                            <td class="align_left"><code>create</code></td>
                            <td class="align_left"><code>users_path</code></td>
                            <td class="align_left">create a new user</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/1/edit</td>
                            <td class="align_left"><code>edit</code></td>
                            <td class="align_left"><code>edit_user_path(user)</code></td>
                            <td class="align_left">page to edit user with id <code>1</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">PATCH</span></td>
                            <td class="align_left">/users/1</td>
                            <td class="align_left"><code>update</code></td>
                            <td class="align_left"><code>user_path(user)</code></td>
                            <td class="align_left">update user</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">DELETE</span></td>
                            <td class="align_left">/users/1</td>
                            <td class="align_left"><code>destroy</code></td>
                            <td class="align_left"><code>user_path(user)</code></td>
                            <td class="align_left">delete user</td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 7.1: </span><span
                          class="description">RESTful routes provided by the
                          Users resource in <a href="#code-users_resource" class="hyperref">Listing&nbsp;<span
                              class="ref">7.3</span></a>. </span></div>
                    </div>
                    <p>With the code in <a href="#code-users_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">7.3</span></a>, the routing works, but
                      there’s still no page there (<a href="#fig-user_show_unknown_action"
                        class="hyperref">Figure&nbsp;<span class="ref">7.5</span></a>).<span
                        class="intersentencespace"></span> To fix this, we’ll
                      begin with a minimalist version of the profile page, which
                      we’ll flesh out in <a href="#sec-a_gravatar_image" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.4</span></a>.</p>
                    <div class="center figure" id="_fig-user_show_unknown_action"
                      data-tralics-id="uid633" data-number="7.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_show_unknown_action_3rd_edition.png"
                          alt="images/figures/user_show_unknown_action_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.5: </span><span
                          class="description">The URL /users/1 with routing but
                          no page. </span></div>
                    </div>
                    <p>We’ll use the standard Rails location for showing a user,
                      which is <code>app/views/users/show.html.erb</code>.<span
                        class="intersentencespace"></span> Unlike the <code>new.html.erb</code>
                      view, which we created with the generator in <a href="#code-generate_users_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">5.28</span></a>,
                      the <code>show.html.erb</code> file doesn’t currently
                      exist, so you’ll have to create it by hand, and then fill
                      it with the content shown in <a href="#code-stub_user_view"
                        class="hyperref">Listing&nbsp;<span class="ref">7.4</span></a>.</p>
                    <div class="codelisting" id="_code-stub_user_view" data-tralics-id="uid634"
                      data-number="7.4">
                      <div class="heading"><span class="number">Listing 7.4:</span>
                        <span class="description">A stub view for showing user
                          information.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/users/show.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span>, <span
class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">email</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>This view uses embedded Ruby to display the user’s name
                      and email address, assuming the existence of an instance
                      variable called <code>@user</code>.<span class="intersentencespace"></span>
                      Of course, eventually the real user show page will look
                      very different (and won’t display the email address
                      publicly).</p>
                    <p>In order to get the user show view to work, we need to
                      define an <code>@user</code> variable in the
                      corresponding <code>show</code> action in the Users
                      controller.<span class="intersentencespace"></span> As you
                      might expect, we use the <code>find</code> method on the
                      User model (<a href="#sec-finding_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.4</span></a>) to retrieve the user
                      from the database, as shown in <a href="#code-user_show_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.5</span></a>.</p>
                    <div class="codelisting" id="_code-user_show_action" data-tralics-id="uid635"
                      data-number="7.5">
                      <div class="heading"><span class="number">Listing 7.5:</span>
                        <span class="description">The Users controller with a <code>show</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here we’ve used <code>params</code> to retrieve the
                      user&nbsp;id.<span class="intersentencespace"></span> When
                      we make the appropriate request to the Users controller, <code>params[:id]</code>
                      will be the user id&nbsp;<span class="tt">1</span>, so the
                      effect is the same as the <code>find</code> method <code>User.find(1)</code>
                      we saw in <a href="#sec-finding_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.4</span></a>.<span class="intersentencespace"></span>
                      (Technically, <code>params[:id]</code> is the
                      string&nbsp;<code>"1"</code>, but <code>find</code> is
                      smart enough to convert this to an integer.)</p>
                    <p>With the user view and action defined, the URL <a href="http://localhost:3000/users/1"
                        target="_blank">/users/1</a> works perfectly, as seen in
                      <a href="#fig-user_show_rails" class="hyperref">Figure&nbsp;<span
                          class="ref">7.6</span></a>.<span class="intersentencespace"></span>
                      (If you haven’t restarted the Rails server since adding
                      bcrypt, you may have to do so at this time.)<span class="intersentencespace"></span>
                      Note that the debug information in <a href="#fig-user_show_rails"
                        class="hyperref">Figure&nbsp;<span class="ref">7.6</span></a>
                      confirms the value of <code>params[:id]</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nn">---</span>
<span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">show</span>
<span class="l-Scalar-Plain">controller</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">users</span>
<span class="l-Scalar-Plain">id</span><span class="p-Indicator">:</span> <span class="s">'1'</span>
</pre></div>
                    </div>
                    <p>This is why the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">User</span><span class="o">.</span><span
class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>in <a href="#code-user_show_action" class="hyperref">Listing&nbsp;<span
                          class="ref">7.5</span></a> finds the user with
                      id&nbsp;<span class="tt">1</span>.</p>
                    <div class="center figure" id="_fig-user_show_rails" data-tralics-id="uid636"
                      data-number="7.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_show_3rd_edition.png"
                          alt="images/figures/user_show_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.6: </span><span
                          class="description">The user show page after adding a
                          Users resource. </span></div>
                    </div>
                  </div>
                  <div id="_sec-debugger" data-tralics-id="uid637" class="subsection"
                    data-number="7.1.3">
                    <h3><a href="#sec-debugger" class="heading hyperref"><span class="number">7.1.3
                          </span>Debugger</a></h3>
                    <p>We saw in <a href="#sec-a_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.2</span></a> how the information in
                      the <code>debug</code> could help us understand what’s
                      going on in our application.<span class="intersentencespace"></span>
                      As of Rails 4.2, there’s an even more direct way to get
                      debugging information using the <span class="tt">byebug</span>
                      gem (<a href="#code-gemfile_sample_app" class="hyperref">Listing&nbsp;<span
                          class="ref">3.2</span></a>).<span class="intersentencespace"></span>
                      To see how it works, we just need to add a line consisting
                      of <code>debugger</code> to our application, as shown in
                      <a href="#code-debugger" class="hyperref">Listing&nbsp;<span
                          class="ref">7.6</span></a>.</p>
                    <div class="codelisting" id="_code-debugger" data-tralics-id="uid638"
                      data-number="7.6">
                      <div class="heading"><span class="number">Listing 7.6:</span>
                        <span class="description">The Users controller with a
                          debugger.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="hll">    <span class="n">debugger</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now, when we visit /users/1, the Rails server shows a <code>byebug</code>
                      prompt:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">(byebug)</span>
</pre></div>
                    </div>
                    <p>We can treat this like a Rails console, issuing commands
                      to figure out the state of the application:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">(byebug) @user.name</span>
<span class="go">"Example User"</span>
<span class="go">(byebug) @user.email</span>
<span class="go">"example@railstutorial.org"</span>
<span class="go">(byebug) params[:id]</span>
<span class="go">"1"</span>
</pre></div>
                    </div>
                    <p>To release the prompt and continue execution of the
                      application, press Ctrl-D, then remove the <code>debugger</code>
                      line from the <code>show</code> action (<a href="#code-debugger_removed"
                        class="hyperref">Listing&nbsp;<span class="ref">7.7</span></a>).</p>
                    <div class="codelisting" id="_code-debugger_removed" data-tralics-id="uid639"
                      data-number="7.7">
                      <div class="heading"><span class="number">Listing 7.7:</span>
                        <span class="description">The Users controller with the
                          debugger line removed.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Whenever you’re confused about something in a Rails
                      application, it’s a good practice to put <code>debugger</code>
                      close to the code you think might be causing the trouble.<span
                        class="intersentencespace"></span> Inspecting the state
                      of the system using <span class="tt">byebug</span> is a
                      powerful method for tracking down application errors and
                      interactively debugging your application.</p>
                  </div>
                  <div id="_sec-a_gravatar_image" data-tralics-id="uid640" class="subsection"
                    data-number="7.1.4">
                    <h3><a href="#sec-a_gravatar_image" class="heading hyperref"><span
                          class="number">7.1.4 </span>A Gravatar image and a
                        sidebar</a></h3>
                    <p>Having defined a basic user page in the previous section,
                      we’ll now flesh it out a little with a profile image for
                      each user and the first cut of the user sidebar.<span class="intersentencespace"></span>
                      We’ll start by adding a “globally recognized avatar”, or <a
                        href="http://gravatar.com/" target="_blank">Gravatar</a>,
                      to the user profile.<sup id="_cha-7_footnote-ref-6" class="footnote"><a
                          href="#cha-7_footnote-6">6</a></sup><span class="intersentencespace"></span>
                      Gravatar is a free service that allows users to upload
                      images and associate them with email addresses they
                      control.<span class="intersentencespace"></span> As a
                      result, Gravatars are a convenient way to include user
                      profile images without going through the trouble of
                      managing image upload, cropping, and storage; all we need
                      to do is construct the proper Gravatar image URL using the
                      user’s email address and the corresponding Gravatar image
                      will automatically appear.<span class="intersentencespace"></span>
                      (We’ll learn how to handle custom image upload in <a href="#sec-micropost_images"
                        class="hyperref">Section&nbsp;<span class="ref">11.4</span></a>.)</p>
                    <p>Our plan is to define a <code>gravatar_for</code> helper
                      function to return a Gravatar image for a given user, as
                      shown in <a href="#code-user_show_view_with_gravatar" class="hyperref">Listing&nbsp;<span
                          class="ref">7.8</span></a>.</p>
                    <div class="codelisting" id="_code-user_show_view_with_gravatar"
                      data-tralics-id="uid642" data-number="7.8">
                      <div class="heading"><span class="number">Listing 7.8:</span>
                        <span class="description">The user show view with name
                          and Gravatar.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/show.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="vi">@user</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/h1&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>By default, methods defined in any helper file are
                      automatically available in any view, but for convenience
                      we’ll put the <code>gravatar_for</code> method in the
                      file for helpers associated with the Users controller.<span
                        class="intersentencespace"></span> As noted in the <a href="http://en.gravatar.com/site/implement/hash/"
                        target="_blank">Gravatar documentation</a>, Gravatar
                      URLs are based on an <a href="http://en.wikipedia.org/wiki/MD5"
                        target="_blank">MD5 hash</a> of the user’s email
                      address.<span class="intersentencespace"></span> In Ruby,
                      the MD5 hashing algorithm is implemented using the <code>hexdigest</code>
                      method, which is part of the <code>Digest</code> library:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">email</span> <span
class="o">=</span> <span class="s2">"MHARTL@example.COM"</span><span class="o">.</span>
<span class="hll"><span class="gp">&gt;&gt; </span><span class="no">Digest</span><span
class="o">::</span><span class="no">MD5</span><span class="o">::</span><span class="n">hexdigest</span><span
class="p">(</span><span class="n">email</span><span class="o">.</span><span class="n">downcase</span><span
class="p">)</span>
</span><span class="go">=&gt; "1fda4469bcbec3badf5418269ffc5968"</span>
</pre></div>
                    </div>
                    <p>Since email addresses are case-insensitive (<a href="#sec-format_validation"
                        class="hyperref">Section&nbsp;<span class="ref">6.2.4</span></a>)
                      but MD5 hashes are not, we’ve used the <code>downcase</code>
                      method to ensure that the argument to <code>hexdigest</code>
                      is all lower-case.<span class="intersentencespace"></span>
                      (Because of the email downcasing callback in <a href="#code-email_downcase"
                        class="hyperref">Listing&nbsp;<span class="ref">6.31</span></a>,
                      this will never make a difference in this tutorial, but
                      it’s a good practice in case the <code>gravatar_for</code>
                      ever gets used on email addresses from other sources.)<span
                        class="intersentencespace"></span> The resulting <code>gravatar_for</code>
                      helper appears in <a href="#code-gravatar_for_helper" class="hyperref">Listing&nbsp;<span
                          class="ref">7.9</span></a>.</p>
                    <div class="codelisting" id="_code-gravatar_for_helper" data-tralics-id="uid643"
                      data-number="7.9">
                      <div class="heading"><span class="number">Listing 7.9:</span>
                        <span class="description">Defining a <code>gravatar_for</code>
                          helper method.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/helpers/users_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">UsersHelper</span>

  <span class="c1"># Returns the Gravatar for the given user.</span>
  <span class="k">def</span> <span class="nf">gravatar_for</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">gravatar_id</span> <span class="o">=</span> <span class="no">Digest</span><span
class="o">::</span><span class="no">MD5</span><span class="o">::</span><span class="n">hexdigest</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">email</span><span
class="o">.</span><span class="n">downcase</span><span class="p">)</span>
    <span class="n">gravatar_url</span> <span class="o">=</span> <span class="s2">"https://secure.gravatar.com/avatar/</span><span
class="si">#{</span><span class="n">gravatar_id</span><span class="si">}</span><span
class="s2">"</span>
    <span class="n">image_tag</span><span class="p">(</span><span class="n">gravatar_url</span><span
class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">class</span><span
class="p">:</span> <span class="s2">"gravatar"</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The code in <a href="#code-gravatar_for_helper" class="hyperref">Listing&nbsp;<span
                          class="ref">7.9</span></a> returns an image tag for
                      the Gravatar with a <code>gravatar</code> CSS class and
                      alt text equal to the user’s name (which is especially
                      convenient for sight-impaired users using a screen
                      reader).</p>
                    <p>The profile page appears as in <a href="#fig-profile_with_gravatar"
                        class="hyperref">Figure&nbsp;<span class="ref">7.7</span></a>,
                      which shows the default Gravatar image, which appears
                      because <code>user@example.com</code> isn’t a real email
                      address.<span class="intersentencespace"></span> (In fact,
                      as you can see by visiting it, the <a href="http://www.example.com/"
                        target="_blank">example.com</a> domain is reserved for
                      examples like this one.)</p>
                    <div class="center figure" id="_fig-profile_with_gravatar" data-tralics-id="uid644"
                      data-number="7.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_with_gravatar_3rd_edition.png"
                          alt="images/figures/profile_with_gravatar_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.7: </span><span
                          class="description">The user profile page with the
                          default Gravatar. </span></div>
                    </div>
                    <p>To get our application to display a custom Gravatar,
                      we’ll use <code>update_attributes</code> (<a href="#sec-updating_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.5</span></a>)
                      to change the user’s email to something I control:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">first</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">update_attributes</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span>
<span class="gp">?&gt; </span>                       <span class="ss">email</span><span
class="p">:</span> <span class="s2">"example@railstutorial.org"</span><span class="p">,</span>
<span class="gp">?&gt; </span>                       <span class="ss">password</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">,</span>
<span class="gp">?&gt; </span>                       <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>Here we’ve assigned the user the email address <code>example@railstutorial.org</code>,
                      which I’ve associated with the Rails Tutorial logo, as
                      seen in <a href="#fig-profile_custom_gravatar" class="hyperref">Figure&nbsp;<span
                          class="ref">7.8</span></a>.</p>
                    <div class="center figure" id="_fig-profile_custom_gravatar"
                      data-tralics-id="uid645" data-number="7.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_custom_gravatar_3rd_edition.png"
                          alt="images/figures/profile_custom_gravatar_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.8: </span><span
                          class="description">The user show page with a custom
                          Gravatar. </span></div>
                    </div>
                    <p>The last element needed to complete the mockup from <a href="#fig-profile_mockup_profile_name"
                        class="hyperref">Figure&nbsp;<span class="ref">7.1</span></a>
                      is the initial version of the user sidebar.<span class="intersentencespace"></span>
                      We’ll implement it using the <code>aside</code> tag,
                      which is used for content (such as sidebars) that
                      complements the rest of the page but can also stand alone.<span
                        class="intersentencespace"></span> We include <code>row</code>
                      and <code>col-md-4</code> classes, which are both part of
                      Bootstrap.<span class="intersentencespace"></span> The
                      code for the modified user show page appears in <a href="#code-user_show_with_sidebar"
                        class="hyperref">Listing&nbsp;<span class="ref">7.10</span></a>.</p>
                    <div class="codelisting" id="_code-user_show_with_sidebar" data-tralics-id="uid646"
                      data-number="7.10">
                      <div class="heading"><span class="number">Listing 7.10:</span>
                        <span class="description">Adding a sidebar to the user <code>show</code>
                          view.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/users/show.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"col-md-4"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"user_info"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;h1&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span
class="vi">@user</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
  <span class="nt">&lt;/aside&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the HTML elements and CSS classes in place, we can
                      style the profile page (including the sidebar and the
                      Gravatar) with the SCSS shown in <a href="#code-sidebar_css"
                        class="hyperref">Listing&nbsp;<span class="ref">7.11</span></a>.<sup
                        id="_cha-7_footnote-ref-7" class="footnote"><a href="#cha-7_footnote-7">7</a></sup><span
                        class="intersentencespace"></span> (Note the nesting of
                      the table CSS rules, which works only because of the Sass
                      engine used by the asset pipeline.)<span class="intersentencespace"></span>
                      The resulting page is shown in <a href="#fig-user_show_sidebar_css"
                        class="hyperref">Figure&nbsp;<span class="ref">7.9</span></a>.</p>
                    <div class="codelisting" id="_code-sidebar_css" data-tralics-id="uid648"
                      data-number="7.11">
                      <div class="heading"><span class="number">Listing 7.11:</span>
                        <span class="description">SCSS for styling the user show
                          page, including the sidebar.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">sidebar</span> <span class="o">*/</span>

<span class="nt">aside</span> <span class="p">{</span>
  <span class="nt">section</span><span class="nc">.user_info</span> <span class="p">{</span>
    <span class="na">margin-top</span><span class="o">:</span> <span class="mi">20</span><span
class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nt">section</span> <span class="p">{</span>
    <span class="na">padding</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span> <span class="mi">0</span><span class="p">;</span>
    <span class="na">margin-top</span><span class="o">:</span> <span class="mi">20</span><span
class="kt">px</span><span class="p">;</span>
    <span class="k">&amp;</span><span class="nd">:first-child</span> <span class="p">{</span>
      <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
      <span class="na">padding-top</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
    <span class="p">}</span>
    <span class="nt">span</span> <span class="p">{</span>
      <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span
class="p">;</span>
      <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">3</span><span
class="kt">px</span><span class="p">;</span>
      <span class="na">line-height</span><span class="o">:</span> <span class="mi">1</span><span
class="p">;</span>
    <span class="p">}</span>
    <span class="nt">h1</span> <span class="p">{</span>
      <span class="na">font-size</span><span class="o">:</span> <span class="mi">1</span><span
class="mf">.4</span><span class="kt">em</span><span class="p">;</span>
      <span class="na">text-align</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
      <span class="na">letter-spacing</span><span class="o">:</span> <span class="mi">-1</span><span
class="kt">px</span><span class="p">;</span>
      <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">3</span><span
class="kt">px</span><span class="p">;</span>
      <span class="na">margin-top</span><span class="o">:</span> <span class="mi">0</span><span
class="kt">px</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nc">.gravatar</span> <span class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.gravatar_edit</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">15</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-user_show_sidebar_css" data-tralics-id="uid649"
                      data-number="7.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_show_sidebar_css_3rd_edition.png"
                          alt="images/figures/user_show_sidebar_css_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.9: </span><span
                          class="description">The user show page with a sidebar
                          and CSS. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-signup_form" data-tralics-id="cid45" class="section"
                  data-number="7.2">
                  <h2><a href="#sec-signup_form" class="heading hyperref"><span
                        class="number">7.2 </span>Signup form</a></h2>
                  <p>Now that we have a working (though not yet complete) user
                    profile page, we’re ready to make a signup form for our
                    site.<span class="intersentencespace"></span> We saw in <a
                      href="#fig-new_signup_page" class="hyperref">Figure&nbsp;<span
                        class="ref">5.9</span></a> (shown again in <a href="#fig-blank_signup_page_recap"
                      class="hyperref">Figure&nbsp;<span class="ref">7.10</span></a>)
                    that the signup page is currently blank: useless for signing
                    up new users.<span class="intersentencespace"></span> The
                    goal of this section is to start changing this sad state of
                    affairs by producing the signup form mocked up in <a href="#fig-signup_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">7.11</span></a>.</p>
                  <div class="center figure" id="_fig-blank_signup_page_recap" data-tralics-id="uid650"
                    data-number="7.10">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/new_signup_page_3rd_edition.png"
                        alt="images/figures/new_signup_page_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 7.10: </span><span
                        class="description">The current state of the signup page
                        <a href="http://localhost:3000/signup" target="_blank">/signup</a>.
                      </span></div>
                  </div>
                  <div class="center figure" id="_fig-signup_mockup" data-tralics-id="uid651"
                    data-number="7.11">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_mockup_bootstrap.png"
                        alt="images/figures/signup_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 7.11: </span><span
                        class="description">A mockup of the user signup page. </span></div>
                  </div>
                  <p>Since we’re about to add the ability to create new users
                    through the web, let’s remove the user created at the
                    console in <a href="#sec-creating_and_authenticating_a_user"
                      class="hyperref">Section&nbsp;<span class="ref">6.3.4</span></a>.<span
                      class="intersentencespace"></span> The cleanest way to do
                    this is to reset the database with the <code>db:migrate:reset</code>
                    Rake task:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake db:migrate:reset
</pre></div>
                  </div>
                  <p>On some systems you might have to restart the web server
                    (using Ctrl-C) for the changes to take effect.</p>
                  <div id="_sec-using_form_for" data-tralics-id="uid652" class="subsection"
                    data-number="7.2.1">
                    <h3><a href="#sec-using_form_for" class="heading hyperref"><span
                          class="number">7.2.1 </span>Using <span class="tt">form_for</span></a></h3>
                    <p>The heart of the signup page is a <em>form</em> for
                      submitting the relevant signup information (name, email,
                      password, confirmation).<span class="intersentencespace"></span>
                      We can accomplish this in Rails with the <code>form_for</code>
                      helper method, which takes in an Active Record object and
                      constructs a form using the object’s attributes.</p>
                    <p>Recalling that the signup page /signup is routed to the <code>new</code>
                      action in the Users controller (<a href="#code-signup_route"
                        class="hyperref">Listing&nbsp;<span class="ref">5.33</span></a>),
                      our first step is to create the User object required as an
                      argument to <code>form_for</code>.<span class="intersentencespace"></span>
                      The resulting <code>@user</code> variable definition
                      appears in <a href="#code-new_action_with_user" class="hyperref">Listing&nbsp;<span
                          class="ref">7.12</span></a>.</p>
                    <div class="codelisting" id="_code-new_action_with_user" data-tralics-id="uid653"
                      data-number="7.12">
                      <div class="heading"><span class="number">Listing 7.12:</span>
                        <span class="description">Adding an <code>@user</code>
                          variable to the <code>new</code> action.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The form itself appears as in <a href="#code-signup_form"
                        class="hyperref">Listing&nbsp;<span class="ref">7.13</span></a>.<span
                        class="intersentencespace"></span> We’ll discuss it in
                      detail in <a href="#sec-the_form_html" class="hyperref">Section&nbsp;<span
                          class="ref">7.2.2</span></a>, but first let’s style it
                      a little with the SCSS in <a href="#code-form_css" class="hyperref">Listing&nbsp;<span
                          class="ref">7.14</span></a>.<span class="intersentencespace"></span>
                      (Note the reuse of the <code>box_sizing</code> mixin from
                      <a href="#code-mixin_and_debug" class="hyperref">Listing&nbsp;<span
                          class="ref">7.2</span></a>.)<span class="intersentencespace"></span>
                      Once these CSS rules have been applied, the signup page
                      appears as in <a href="#fig-signup_form" class="hyperref">Figure&nbsp;<span
                          class="ref">7.12</span></a>.</p>
                    <div class="codelisting" id="_code-signup_form" data-tralics-id="uid654"
                      data-number="7.13">
                      <div class="heading"><span class="number">Listing 7.13:</span>
                        <span class="description">A form to sign up new users.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/users/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Sign up'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sign up<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Create my account"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-form_css" data-tralics-id="uid655"
                      data-number="7.14">
                      <div class="heading"><span class="number">Listing 7.14:</span>
                        <span class="description">CSS for the signup form.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">forms</span> <span class="o">*/</span>

<span class="nt">input</span><span class="o">,</span> <span class="nt">textarea</span><span
class="o">,</span> <span class="nt">select</span><span class="o">,</span> <span
class="nc">.uneditable-input</span> <span class="p">{</span>
  <span class="na">border</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="mh">#bbb</span><span
class="p">;</span>
  <span class="na">width</span><span class="o">:</span> <span class="mi">100</span><span
class="kt">%</span><span class="p">;</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">15</span><span
class="kt">px</span><span class="p">;</span>
  <span class="k">@include</span><span class="nd"> box_sizing</span><span class="p">;</span>
<span class="p">}</span>

<span class="nt">input</span> <span class="p">{</span>
  <span class="na">height</span><span class="o">:</span> <span class="no">auto</span> <span
class="nv">!important</span><span class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-signup_form" data-tralics-id="uid656"
                      data-number="7.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_form_3rd_edition.png"
                          alt="images/figures/signup_form_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.12: </span><span
                          class="description">The user signup form. </span></div>
                    </div>
                  </div>
                  <div id="_sec-the_form_html" data-tralics-id="uid657" class="subsection"
                    data-number="7.2.2">
                    <h3><a href="#sec-the_form_html" class="heading hyperref"><span
                          class="number">7.2.2 </span>Signup form HTML</a></h3>
                    <p>To understand the form defined in <a href="#code-signup_form"
                        class="hyperref">Listing&nbsp;<span class="ref">7.13</span></a>,
                      it’s helpful to break it into smaller pieces.<span class="intersentencespace"></span>
                      We’ll first look at the outer structure, which consists of
                      embedded Ruby opening with a call to <code>form_for</code>
                      and closing with <code>end</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  .
  .
  .
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>The presence of the <code>do</code> keyword indicates
                      that <code>form_for</code> takes a block with one
                      variable, which we’ve called <code>f</code> (for “form”).</p>
                    <p>As is usually the case with Rails helpers, we don’t need
                      to know any details about the implementation, but what we
                      <em>do</em> need to know is what the <code>f</code>
                      object does: when called with a method corresponding to an
                      <a href="http://www.w3schools.com/html/html_forms.asp" target="_blank">HTML
                        form element</a>—such as a text field, radio button, or
                      password field—<code>f</code> returns code for that
                      element specifically designed to set an attribute of the <code>@user</code>
                      object.<span class="intersentencespace"></span> In other
                      words,</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">label</span> <span class="ss">:name</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>creates the HTML needed to make a labeled text field
                      element appropriate for setting the <code>name</code>
                      attribute of a User model.</p>
                    <p>If you look at the HTML for the generated form by
                      Ctrl-clicking and using the “inspect element” function of
                      your browser, the page’s source should look something like
                      <a href="#code-signup_form_html" class="hyperref">Listing&nbsp;<span
                          class="ref">7.15</span></a>.<span class="intersentencespace"></span>
                      Let’s take a moment to discuss its structure.</p>
                    <div class="codelisting" id="_code-signup_form_html" data-tralics-id="uid658"
                      data-number="7.15">
                      <div class="heading"><span class="number">Listing 7.15:</span>
                        <span class="description">The HTML for the form in <a href="#fig-signup_form"
                            class="hyperref">Figure&nbsp;<span class="ref">7.12</span></a>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;form</span> <span class="na">accept-charset=</span><span
class="s">"UTF-8"</span> <span class="na">action=</span><span class="s">"/users"</span> <span
class="na">class=</span><span class="s">"new_user"</span>
      <span class="na">id=</span><span class="s">"new_user"</span> <span class="na">method=</span><span
class="s">"post"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"utf8"</span> <span
class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span
class="s">"&amp;#x2713;"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"authenticity_token"</span> <span
class="na">type=</span><span class="s">"hidden"</span>
         <span class="na">value=</span><span class="s">"NNb6+J/j46LcrgYUC60wQ2titMuJQ5lLqyAbnbAUkdo="</span> <span
class="nt">/&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"user_name"</span><span
class="nt">&gt;</span>Name<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_name"</span> <span
class="na">name=</span><span class="s">"user[name]"</span> <span class="na">type=</span><span
class="s">"text"</span> <span class="nt">/&gt;</span>

  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"user_email"</span><span
class="nt">&gt;</span>Email<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_email"</span> <span
class="na">name=</span><span class="s">"user[email]"</span> <span class="na">type=</span><span
class="s">"email"</span> <span class="nt">/&gt;</span>

  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"user_password"</span><span
class="nt">&gt;</span>Password<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_password"</span> <span
class="na">name=</span><span class="s">"user[password]"</span>
         <span class="na">type=</span><span class="s">"password"</span> <span class="nt">/&gt;</span>

  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"user_password_confirmation"</span><span
class="nt">&gt;</span>Confirmation<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_password_confirmation"</span>
         <span class="na">name=</span><span class="s">"user[password_confirmation]"</span> <span
class="na">type=</span><span class="s">"password"</span> <span class="nt">/&gt;</span>

  <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">"btn btn-primary"</span> <span
class="na">name=</span><span class="s">"commit"</span> <span class="na">type=</span><span
class="s">"submit"</span>
         <span class="na">value=</span><span class="s">"Create my account"</span> <span
class="nt">/&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>We’ll start with the internal structure of the document.<span
                        class="intersentencespace"></span> Comparing <a href="#code-signup_form"
                        class="hyperref">Listing&nbsp;<span class="ref">7.13</span></a>
                      with <a href="#code-signup_form_html" class="hyperref">Listing&nbsp;<span
                          class="ref">7.15</span></a>, we see that the embedded
                      Ruby</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">label</span> <span class="ss">:name</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>produces the HTML</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;label</span> <span class="na">for=</span><span
class="s">"user_name"</span><span class="nt">&gt;</span>Name<span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_name"</span> <span
class="na">name=</span><span class="s">"user[name]"</span> <span class="na">type=</span><span
class="s">"text"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>while</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">label</span> <span class="ss">:email</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>produces the HTML</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;label</span> <span class="na">for=</span><span
class="s">"user_email"</span><span class="nt">&gt;</span>Email<span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_email"</span> <span
class="na">name=</span><span class="s">"user[email]"</span> <span class="na">type=</span><span
class="s">"email"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">label</span> <span class="ss">:password</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>produces the HTML</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;label</span> <span class="na">for=</span><span
class="s">"user_password"</span><span class="nt">&gt;</span>Password<span class="nt">&lt;/label&gt;</span>
<span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_password"</span> <span
class="na">name=</span><span class="s">"user[password]"</span> <span class="na">type=</span><span
class="s">"password"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>As seen in <a href="#fig-filled_in_form" class="hyperref">Figure&nbsp;<span
                          class="ref">7.13</span></a>, text and email fields (<code>type="text"</code>
                      and <code>type="email"</code>) simply display their
                      contents, whereas password fields (<code>type="password"</code>)
                      obscure the input for security purposes, as seen in <a href="#fig-filled_in_form"
                        class="hyperref">Figure&nbsp;<span class="ref">7.13</span></a>.<span
                        class="intersentencespace"></span> (The benefit of using
                      an email field is that some systems treat it differently
                      from a text field; for example, the code <code>type="email"</code>
                      will cause some mobile devices to display a special
                      keyboard optimized for entering email addresses.)</p>
                    <div class="center figure" id="_fig-filled_in_form" data-tralics-id="uid659"
                      data-number="7.13">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/filled_in_form_bootstrap_3rd_edition.png"
                          alt="images/figures/filled_in_form_bootstrap_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.13: </span><span
                          class="description">A filled-in form with <code>text</code>
                          and <code>password</code> fields. </span></div>
                    </div>
                    <p>As we’ll see in <a href="#sec-successful_signups" class="hyperref">Section&nbsp;<span
                          class="ref">7.4</span></a>, the key to creating a user
                      is the special <code>name</code> attribute in each <code>input</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;input</span> <span class="na">id=</span><span
class="s">"user_name"</span> <span class="na">name=</span><span class="s">"user[name]"</span> <span
class="na">-</span> <span class="na">-</span> <span class="na">-</span> <span class="nt">/&gt;</span>
.
.
.
<span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"user_password"</span> <span
class="na">name=</span><span class="s">"user[password]"</span> <span class="na">-</span> <span
class="na">-</span> <span class="na">-</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>These <code>name</code> values allow Rails to construct
                      an initialization hash (via the <code>params</code>
                      variable) for creating users using the values entered by
                      the user, as we’ll see in <a href="#sec-unsuccessful_signups"
                        class="hyperref">Section&nbsp;<span class="ref">7.3</span></a>.</p>
                    <p>The second important element is the <code>form</code>
                      tag itself.<span class="intersentencespace"></span> Rails
                      creates the <code>form</code> tag using the <code>@user</code>
                      object: because every Ruby object knows its own class (<a
                        href="#sec-constructors" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.1</span></a>), Rails figures out that
                      <code>@user</code> is of class <code>User</code>;
                      moreover, since <code>@user</code> is a <em>new</em>
                      user, Rails knows to construct a form with the <code>post</code>
                      method, which is the proper verb for creating a new object
                      (<a href="#aside-get_etc" class="hyperref">Box&nbsp;<span
                          class="ref">3.2</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;form</span> <span class="na">action=</span><span
class="s">"/users"</span> <span class="na">class=</span><span class="s">"new_user"</span> <span
class="na">id=</span><span class="s">"new_user"</span> <span class="na">method=</span><span
class="s">"post"</span><span class="nt">&gt;</span>
</pre></div>
                    </div>
                    <p>Here the <code>class</code> and <code>id</code>
                      attributes are largely irrelevant; what’s important is <code>action="/users"</code>
                      and <code>method="post"</code>.<span class="intersentencespace"></span>
                      Together, these constitute instructions to issue an HTTP <span
                        class="tt">POST</span> request to the /users URL. We’ll
                      see in the next two sections what effects this has.</p>
                    <p>(You may also have noticed the code that appears just
                      inside the <code>form</code> tag:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>  <span class="nt">&lt;div</span> <span class="na">style=</span><span
class="s">"display:none"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"utf8"</span> <span
class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span
class="s">"&amp;#x2713;"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"authenticity_token"</span> <span
class="na">type=</span><span class="s">"hidden"</span>
           <span class="na">value=</span><span class="s">"NNb6+J/j46LcrgYUC60wQ2titMuJQ5lLqyAbnbAUkdo="</span> <span
class="nt">/&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
</pre></div>
                    </div>
                    <p>This code, which isn’t displayed in the browser, is used
                      internally by Rails, so it’s not important for us to
                      understand what it does.<span class="intersentencespace"></span>
                      Briefly, it uses the Unicode character <code>&amp;#x2713;</code>
                      (a checkmark&nbsp;✓) to force browsers to submit data
                      using the right character encoding, and then it includes
                      an <em>authenticity token</em>, which Rails uses to
                      thwart an attack called a <em>cross-site request forgery</em>
                      (CSRF).)<sup id="_cha-7_footnote-ref-8" class="footnote"><a
                          href="#cha-7_footnote-8">8</a></sup></p>
                  </div>
                </div>
                <div id="_sec-unsuccessful_signups" data-tralics-id="cid46" class="section"
                  data-number="7.3">
                  <h2><a href="#sec-unsuccessful_signups" class="heading hyperref"><span
                        class="number">7.3 </span>Unsuccessful signups</a></h2>
                  <p>Although we’ve briefly examined the HTML for the form in <a
                      href="#fig-signup_form" class="hyperref">Figure&nbsp;<span
                        class="ref">7.12</span></a> (shown in <a href="#code-signup_form_html"
                      class="hyperref">Listing&nbsp;<span class="ref">7.15</span></a>),
                    we haven’t yet covered any details, and the form is best
                    understood in the context of <em>signup failure</em>.<span
                      class="intersentencespace"></span> In this section, we’ll
                    create a signup form that accepts an invalid submission and
                    re-renders the signup page with a list of errors, as mocked
                    up in <a href="#fig-signup_failure_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">7.14</span></a>.</p>
                  <div class="center figure" id="_fig-signup_failure_mockup" data-tralics-id="uid661"
                    data-number="7.14">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_failure_mockup_bootstrap.png"
                        alt="images/figures/signup_failure_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 7.14: </span><span
                        class="description">A mockup of the signup failure page.
                      </span></div>
                  </div>
                  <div id="_sec-a_working_form" data-tralics-id="uid662" class="subsection"
                    data-number="7.3.1">
                    <h3><a href="#sec-a_working_form" class="heading hyperref"><span
                          class="number">7.3.1 </span>A working form</a></h3>
                    <p>Recall from <a href="#sec-a_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.2</span></a> that adding <code>resources
                        :users</code> to the <code>routes.rb</code> file (<a href="#code-users_resource"
                        class="hyperref">Listing&nbsp;<span class="ref">7.3</span></a>)
                      automatically ensures that our Rails application responds
                      to the RESTful URLs from <a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>.<span class="intersentencespace"></span>
                      In particular, it ensures that a <span class="tt">POST</span>
                      request to /users is handled by the <code>create</code>
                      action.<span class="intersentencespace"></span> Our
                      strategy for the <code>create</code> action is to use the
                      form submission to make a new user object using <code>User.new</code>,
                      try (and fail) to save that user, and then render the
                      signup page for possible resubmission.<span class="intersentencespace"></span>
                      Let’s get started by reviewing the code for the signup
                      form:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;form</span> <span class="na">action=</span><span
class="s">"/users"</span> <span class="na">class=</span><span class="s">"new_user"</span> <span
class="na">id=</span><span class="s">"new_user"</span> <span class="na">method=</span><span
class="s">"post"</span><span class="nt">&gt;</span>
</pre></div>
                    </div>
                    <p>As noted in <a href="#sec-the_form_html" class="hyperref">Section&nbsp;<span
                          class="ref">7.2.2</span></a>, this HTML issues a <span
                        class="tt">POST</span> request to the /users URL.</p>
                    <p>Our first step toward a working signup form is adding the
                      code in <a href="#code-first_create_action" class="hyperref">Listing&nbsp;<span
                          class="ref">7.16</span></a>.<span class="intersentencespace"></span>
                      This listing includes a second use of the <code>render</code>
                      method, which we first saw in the context of partials (<a
                        href="#sec-partials" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.3</span></a>); as you can see, <code>render</code>
                      works in controller actions as well.<span class="intersentencespace"></span>
                      Note that we’ve taken this opportunity to introduce an <code>if</code>-<code>else</code>
                      branching structure, which allows us to handle the cases
                      of failure and success separately based on the value of <code>@user.save</code>,
                      which (as we saw in <a href="#sec-creating_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.3</span></a>)
                      is either <code>true</code> or <code>false</code>
                      depending on whether or not the save succeeds.</p>
                    <div class="codelisting" id="_code-first_create_action" data-tralics-id="uid663"
                      data-number="7.16">
                      <div class="heading"><span class="number">Listing 7.16:</span>
                        <span class="description">A <code>create</code> action
                          that can handle signup failure.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:user</span><span
class="o">]</span><span class="p">)</span>    <span class="c1"># Not the final implementation!</span>
</span>    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
      <span class="c1"># Handle a successful save.</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the comment: this is not the final implementation.<span
                        class="intersentencespace"></span> But it’s enough to
                      get us started, and we’ll finish the implementation in <a
                        href="#sec-strong_parameters" class="hyperref">Section&nbsp;<span
                          class="ref">7.3.2</span></a>.</p>
                    <p>The best way to understand how the code in <a href="#code-first_create_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.16</span></a>
                      works is to <em>submit</em> the form with some invalid
                      signup data.<span class="intersentencespace"></span> The
                      result appears in <a href="#fig-signup_failure" class="hyperref">Figure&nbsp;<span
                          class="ref">7.15</span></a>, and the full debug
                      information (with an increased font size) appears in <a href="#fig-signup_failure_rails_debug"
                        class="hyperref">Figure&nbsp;<span class="ref">7.16</span></a>.<span
                        class="intersentencespace"></span> (<a href="#fig-signup_failure"
                        class="hyperref">Figure&nbsp;<span class="ref">7.15</span></a>
                      also shows the <em>web console</em>, which opens a Rails
                      console in the browser to assist in debugging.<span class="intersentencespace"></span>
                      It’s useful for examining, e.g., the User model, but in
                      this case we need to inspect <code>params</code>, which
                      is not available in the web console as far as I can tell.)</p>
                    <div class="center figure" id="_fig-signup_failure" data-tralics-id="uid664"
                      data-number="7.15">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_failure_3rd_edition.png"
                          alt="images/figures/signup_failure_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.15: </span><span
                          class="description">Signup failure. </span></div>
                    </div>
                    <div class="center figure" id="_fig-signup_failure_rails_debug"
                      data-tralics-id="uid665" data-number="7.16">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_failure_debug_3rd_edition.png"
                          alt="images/figures/signup_failure_debug_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.16: </span><span
                          class="description">Signup failure debug information.
                        </span></div>
                    </div>
                    <p>To get a better picture of how Rails handles the
                      submission, let’s take a closer look at the <code>user</code>
                      part of the parameters hash from the debug information (<a
                        href="#fig-signup_failure_rails_debug" class="hyperref">Figure&nbsp;<span
                          class="ref">7.16</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="s2">"user"</span> <span class="o">=&gt;</span> <span
class="p">{</span> <span class="s2">"name"</span> <span class="o">=&gt;</span> <span
class="s2">"Foo Bar"</span><span class="p">,</span>
            <span class="s2">"email"</span> <span class="o">=&gt;</span> <span class="s2">"foo@invalid"</span><span
class="p">,</span>
            <span class="s2">"password"</span> <span class="o">=&gt;</span> <span
class="s2">"[FILTERED]"</span><span class="p">,</span>
            <span class="s2">"password_confirmation"</span> <span class="o">=&gt;</span> <span
class="s2">"[FILTERED]"</span>
          <span class="p">}</span>
</pre></div>
                    </div>
                    <p>This hash gets passed to the Users controller as part of
                      <code>params</code>, and we saw starting in <a href="#sec-a_users_resource"
                        class="hyperref">Section&nbsp;<span class="ref">7.1.2</span></a>
                      that the <code>params</code> hash contains information
                      about each request.<span class="intersentencespace"></span>
                      In the case of a URL like /users/1, the value of <code>params[:id]</code>
                      is the <code>id</code> of the corresponding user (<code>1</code>&nbsp;in
                      this example).<span class="intersentencespace"></span> In
                      the case of posting to the signup form, <code>params</code>
                      instead contains a hash of hashes, a construction we first
                      saw in <a href="#sec-hashes_and_symbols" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.3</span></a>, which introduced the
                      strategically named <code>params</code> variable in a
                      console session.<span class="intersentencespace"></span>
                      The debug information above shows that submitting the form
                      results in a <code>user</code> hash with attributes
                      corresponding to the submitted values, where the keys come
                      from the <code>name</code> attributes of the <code>input</code>
                      tags seen in <a href="#code-signup_form" class="hyperref">Listing&nbsp;<span
                          class="ref">7.13</span></a>; for example, the value of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;input</span> <span class="na">id=</span><span
class="s">"user_email"</span> <span class="na">name=</span><span class="s">"user[email]"</span> <span
class="na">type=</span><span class="s">"email"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>with name <code>"user[email]"</code> is precisely the <code>email</code>
                      attribute of the <code>user</code> hash.</p>
                    <p>Although the hash keys appear as strings in the debug
                      output, we can access them in the Users controller as
                      symbols, so that <code>params[:user]</code> is the hash
                      of user attributes—in fact, exactly the attributes needed
                      as an argument to <code>User.new</code>, as first seen in
                      <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a> and appearing in <a href="#code-first_create_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.16</span></a>.<span
                        class="intersentencespace"></span> This means that the
                      line</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:user</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>is mostly equivalent to</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="nb">name</span><span class="p">:</span> <span class="s2">"Foo Bar"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"foo@invalid"</span><span
class="p">,</span>
                 <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foo"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"bar"</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>In previous versions of Rails, using</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:user</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>actually worked, but it was insecure by default and
                      required a careful and error-prone procedure to prevent
                      malicious users from potentially modifying the application
                      database.<span class="intersentencespace"></span> In Rails
                      version later than 4.0, this code raises an error (as seen
                      in <a href="#fig-signup_failure" class="hyperref">Figure&nbsp;<span
                          class="ref">7.15</span></a> and <a href="#fig-signup_failure_rails_debug"
                        class="hyperref">Figure&nbsp;<span class="ref">7.16</span></a>
                      above), which means it is secure by default.</p>
                  </div>
                  <div id="_sec-strong_parameters" data-tralics-id="uid666" class="subsection"
                    data-number="7.3.2">
                    <h3><a href="#sec-strong_parameters" class="heading hyperref"><span
                          class="number">7.3.2 </span>Strong parameters</a></h3>
                    <p>We mentioned briefly in <a href="#sec-a_user_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.5</span></a> the idea of <em>mass
                        assignment</em>, which involves initializing a Ruby
                      variable using a hash of values, as in</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:user</span><span
class="o">]</span><span class="p">)</span>    <span class="c1"># Not the final implementation!</span>
</pre></div>
                    </div>
                    <p>The comment included in <a href="#code-first_create_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.16</span></a>
                      and reproduced above indicates that this is not the final
                      implementation.<span class="intersentencespace"></span>
                      The reason is that initializing the entire <code>params</code>
                      hash is <em>extremely</em> dangerous—it arranges to pass
                      to <code>User.new</code> <em>all</em> data submitted by
                      a user.<span class="intersentencespace"></span> In
                      particular, suppose that, in addition to the current
                      attributes, the User model included an <code>admin</code>
                      attribute used to identify administrative users of the
                      site.<span class="intersentencespace"></span> (We will
                      implement just such an attribute in <a href="#sec-administrative_users"
                        class="hyperref">Section&nbsp;<span class="ref">9.4.1</span></a>.)<span
                        class="intersentencespace"></span> The way to set such
                      an attribute to <code>true</code> is to pass the value <code>admin=’1’</code>
                      as part of <code>params[:user]</code>, a task that is
                      easy to accomplish using a command-line HTTP client such
                      as <span class="tt">curl</span>.<span class="intersentencespace"></span>
                      The result would be that, by passing in the entire <code>params</code>
                      hash to <code>User.new</code>, we would allow any user of
                      the site to gain administrative access by including <code>admin=’1’</code>
                      in the web request.</p>
                    <p>Previous versions of Rails used a method called <code>attr_accessible</code>
                      in the <em>model</em> layer to solve this problem, and
                      you may still see that method in legacy Rails
                      applications, but as of Rails&nbsp;4.0 the preferred
                      technique is to use so-called <em>strong parameters</em>
                      in the controller layer.<span class="intersentencespace"></span>
                      This allows us to specify which parameters are <em>required</em>
                      and which ones are <em>permitted</em>.<span class="intersentencespace"></span>
                      In addition, passing in a raw <code>params</code> hash as
                      above will cause an error to be raised, so that Rails
                      applications are now immune to mass assignment
                      vulnerabilities by default.</p>
                    <p>In the present instance, we want to require the <code>params</code>
                      hash to have a <code>:user</code> attribute, and we want
                      to permit the name, email, password, and password
                      confirmation attributes (but no others).<span class="intersentencespace"></span>
                      We can accomplish this as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">params</span><span class="o">.</span><span
class="n">require</span><span class="p">(</span><span class="ss">:user</span><span
class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span
class="ss">:name</span><span class="p">,</span> <span class="ss">:email</span><span
class="p">,</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">:password_confirmation</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>This code returns a version of the <code>params</code>
                      hash with only the permitted attributes (while raising an
                      error if the <code>:user</code> attribute is missing).</p>
                    <p>To facilitate the use of these parameters, it’s
                      conventional to introduce an auxiliary method called <code>user_params</code>
                      (which returns an appropriate initialization hash) and use
                      it in place of <code>params[:user]</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="n">user_params</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Since <code>user_params</code> will only be used
                      internally by the Users controller and need not be exposed
                      to external users via the web, we’ll make it <em>private</em>
                      using Ruby’s <code>private</code> keyword, as shown in <a
                        href="#code-create_action_strong_parameters" class="hyperref">Listing&nbsp;<span
                          class="ref">7.17</span></a>.<span class="intersentencespace"></span>
                      (We’ll discuss <code>private</code> in more detail in <a
                        href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                          class="ref">8.4</span></a>.)</p>
                    <div class="codelisting" id="_code-create_action_strong_parameters"
                      data-tralics-id="uid667" data-number="7.17">
                      <div class="heading"><span class="number">Listing 7.17:</span>
                        <span class="description">Using strong parameters in the
                          <code>create</code> action.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">create</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="n">user_params</span><span class="p">)</span>
</span>    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
      <span class="c1"># Handle a successful save.</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
<span class="hll">      <span class="n">params</span><span class="o">.</span><span
class="n">require</span><span class="p">(</span><span class="ss">:user</span><span
class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span
class="ss">:name</span><span class="p">,</span> <span class="ss">:email</span><span
class="p">,</span> <span class="ss">:password</span><span class="p">,</span>
</span><span class="hll">                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>By the way, the extra level of indentation on the <code>user_params</code>
                      method is designed to make it visually apparent which
                      methods are defined after <code>private</code>.<span class="intersentencespace"></span>
                      (Experience shows that this is a wise practice; in classes
                      with a large number of methods, it is easy to define a
                      private method accidentally, which leads to considerable
                      confusion when it isn’t available to call on the
                      corresponding object.)</p>
                    <p>At this point, the signup form is working, at least in
                      the sense that it no longer produces an error upon
                      submission.<span class="intersentencespace"></span> On the
                      other hand, as seen in <a href="#fig-invalid_submission_no_feedback"
                        class="hyperref">Figure&nbsp;<span class="ref">7.17</span></a>,
                      it doesn’t display any feedback on invalid submissions
                      (apart from the development-only debug area), which is
                      potentially confusing.<span class="intersentencespace"></span>
                      It also doesn’t actually create a new user.<span class="intersentencespace"></span>
                      We’ll fix the first issue in <a href="#sec-signup_error_messages"
                        class="hyperref">Section&nbsp;<span class="ref">7.3.3</span></a>
                      and the second in <a href="#sec-successful_signups" class="hyperref">Section&nbsp;<span
                          class="ref">7.4</span></a>.</p>
                    <div class="center figure" id="_fig-invalid_submission_no_feedback"
                      data-tralics-id="uid668" data-number="7.17">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/invalid_submission_no_feedback.png"
                          alt="images/figures/invalid_submission_no_feedback"></div>
                      <div class="caption"><span class="header">Figure 7.17: </span><span
                          class="description">The signup form submitted with
                          invalid information. </span></div>
                    </div>
                  </div>
                  <div id="_sec-signup_error_messages" data-tralics-id="uid669"
                    class="subsection" data-number="7.3.3">
                    <h3><a href="#sec-signup_error_messages" class="heading hyperref"><span
                          class="number">7.3.3 </span>Signup error messages</a></h3>
                    <p>As a final step in handling failed user creation, we’ll
                      add helpful error messages to indicate the problems that
                      prevented successful signup.<span class="intersentencespace"></span>
                      Conveniently, Rails automatically provides such messages
                      based on the User model validations.<span class="intersentencespace"></span>
                      For example, consider trying to save a user with an
                      invalid email address and with a password that’s too
                      short:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span
class="nb">name</span><span class="p">:</span> <span class="s2">"Foo Bar"</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">"foo@invalid"</span><span
class="p">,</span>
<span class="gp">?&gt; </span>                <span class="ss">password</span><span
class="p">:</span> <span class="s2">"dude"</span><span class="p">,</span> <span
class="ss">password_confirmation</span><span class="p">:</span> <span class="s2">"dude"</span><span
class="p">)</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">save</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">errors</span><span class="o">.</span><span class="n">full_messages</span>
<span class="go">=&gt; ["Email is invalid", "Password is too short (minimum is 6 characters)"]</span>
</pre></div>
                    </div>
                    <p>Here the <code>errors.full_messages</code> object (which
                      we saw briefly before in <a href="#sec-presence_validation"
                        class="hyperref">Section&nbsp;<span class="ref">6.2.2</span></a>)
                      contains an array of error messages.</p>
                    <p>As in the console session above, the failed save in <a href="#code-first_create_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.16</span></a>
                      generates a list of error messages associated with the <code>@user</code>
                      object.<span class="intersentencespace"></span> To display
                      the messages in the browser, we’ll render an
                      error-messages partial on the user <code>new</code> page
                      while adding the CSS class <code>form-control</code>
                      (which has special meaning to Bootstrap) to each entry
                      field, as shown in <a href="#code-f_error_messages" class="hyperref">Listing&nbsp;<span
                          class="ref">7.18</span></a>.<span class="intersentencespace"></span>
                      It’s worth noting that this error-messages partial is only
                      a first attempt; the final version appears in <a href="#sec-creating_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">11.3.2</span></a>.</p>
                    <div class="codelisting" id="_code-f_error_messages" data-tralics-id="uid670"
                      data-number="7.18">
                      <div class="heading"><span class="number">Listing 7.18:</span>
                        <span class="description">Code to display error messages
                          on the signup form.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Sign up'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sign up<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/error_messages'</span> <span class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">text_field</span> <span class="ss">:name</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">email_field</span> <span class="ss">:email</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">password_field</span> <span class="ss">:password</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Create my account"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Notice here that we <code>render</code> a partial called
                      <code>’shared/error_messages’</code>; this reflects the
                      common Rails convention of using a dedicated <code>shared/</code>
                      directory for partials expected to be used in views across
                      multiple controllers.<span class="intersentencespace"></span>
                      (We’ll see this expectation fulfilled in <a href="#sec-edit_form"
                        class="hyperref">Section&nbsp;<span class="ref">9.1.1</span></a>.)<span
                        class="intersentencespace"></span> This means that we
                      have to create a new <code>app/views/shared</code>
                      directory using <code>mkdir</code> (<a href="#table-unix_commands"
                        class="hyperref">Table&nbsp;<span class="ref">1.1</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> mkdir app/views/shared
</pre></div>
                    </div>
                    <p>We then need to create the <code>_error_messages.html.erb</code>
                      partial file using our text editor as usual.<span class="intersentencespace"></span>
                      The contents of the partial appear in <a href="#code-errors_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">7.19</span></a>.</p>
                    <div class="codelisting" id="_code-errors_partial" data-tralics-id="uid671"
                      data-number="7.19">
                      <div class="heading"><span class="number">Listing 7.19:</span>
                        <span class="description">A partial for displaying form
                          submission error messages.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/shared/_error_messages.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="k">if</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">errors</span><span
class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"error_explanation"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"alert alert-danger"</span><span
class="nt">&gt;</span>
      The form contains <span class="cp">&lt;%=</span> <span class="n">pluralize</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">errors</span><span
class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="s2">"error"</span><span
class="p">)</span> <span class="cp">%&gt;</span>.
    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;ul&gt;</span>
    <span class="cp">&lt;%</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">errors</span><span class="o">.</span><span class="n">full_messages</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">msg</span><span class="o">|</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">msg</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/ul&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>This partial introduces several new Rails and Ruby
                      constructs, including two methods for Rails error objects.<span
                        class="intersentencespace"></span> The first method is <code>count</code>,
                      which simply returns the number of errors:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">count</span>
<span class="go">=&gt; 2</span>
</pre></div>
                    </div>
                    <p>The other new method is <code>any?</code>, which
                      (together with <code>empty?</code>) is one of a pair of
                      complementary methods:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">empty?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">errors</span><span class="o">.</span><span class="n">any?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>We see here that the <code>empty?</code> method, which
                      we first saw in <a href="#sec-objects_and_message_passing"
                        class="hyperref">Section&nbsp;<span class="ref">4.2.3</span></a>
                      in the context of strings, also works on Rails error
                      objects, returning <code>true</code> for an empty object
                      and <code>false</code> otherwise.<span class="intersentencespace"></span>
                      The <code>any?</code> method is just the opposite of <code>empty?</code>,
                      returning <code>true</code> if there are any elements
                      present and <code>false</code> otherwise.<span class="intersentencespace"></span>
                      (By the way, all of these methods—<code>count</code>, <code>empty?</code>,
                      and <code>any?</code>—work on Ruby arrays as well.<span class="intersentencespace"></span>
                      We’ll put this fact to good use starting in <a href="#sec-showing_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">11.2</span></a>.)</p>
                    <p>The other new idea is the <code>pluralize</code> text
                      helper.<span class="intersentencespace"></span> It isn’t
                      available in the console by default, but we can include it
                      explicitly through the <code>ActionView::Helpers::TextHelper</code>
                      module:<sup id="_cha-7_footnote-ref-9" class="footnote"><a
                          href="#cha-7_footnote-9">9</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="kp">include</span> <span
class="no">ActionView</span><span class="o">::</span><span class="no">Helpers</span><span
class="o">::</span><span class="no">TextHelper</span>
<span class="gp">&gt;&gt; </span><span class="n">pluralize</span><span class="p">(</span><span
class="mi">1</span><span class="p">,</span> <span class="s2">"error"</span><span
class="p">)</span>
<span class="go">=&gt; "1 error"</span>
<span class="gp">&gt;&gt; </span><span class="n">pluralize</span><span class="p">(</span><span
class="mi">5</span><span class="p">,</span> <span class="s2">"error"</span><span
class="p">)</span>
<span class="go">=&gt; "5 errors"</span>
</pre></div>
                    </div>
                    <p>We see here that <code>pluralize</code> takes an integer
                      argument and then returns the number with a properly
                      pluralized version of its second argument.<span class="intersentencespace"></span>
                      Underlying this method is a powerful <em>inflector</em>
                      that knows how to pluralize a large number of words,
                      including many with irregular plurals:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">pluralize</span><span
class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="s2">"woman"</span><span
class="p">)</span>
<span class="go">=&gt; "2 women"</span>
<span class="gp">&gt;&gt; </span><span class="n">pluralize</span><span class="p">(</span><span
class="mi">3</span><span class="p">,</span> <span class="s2">"erratum"</span><span
class="p">)</span>
<span class="go">=&gt; "3 errata"</span>
</pre></div>
                    </div>
                    <p>As a result of its use of <code>pluralize</code>, the
                      code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">pluralize</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">errors</span><span
class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="s2">"error"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>returns <code>"0 errors"</code>, <code>"1 error"</code>,
                      <code>"2 errors"</code>, and so on, depending on how many
                      errors there are, thereby avoiding ungrammatical phrases
                      such as <code>"1 errors"</code> (a distressingly common
                      mistake in apps and on the Web).</p>
                    <p>Note that <a href="#code-errors_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">7.19</span></a> includes the CSS&nbsp;id <code>error_explanation</code>
                      for use in styling the error messages.<span class="intersentencespace"></span>
                      (Recall from <a href="#sec-custom_css" class="hyperref">Section&nbsp;<span
                          class="ref">5.1.2</span></a> that CSS uses the pound
                      sign <code>#</code> to style ids.)<span class="intersentencespace"></span>
                      In addition, after an invalid submission Rails
                      automatically wraps the fields with errors in <code>div</code>s
                      with the CSS class <code>field_with_errors</code>.<span class="intersentencespace"></span>
                      These labels then allow us to style the error messages
                      with the SCSS shown in <a href="#code-error_messages_css"
                        class="hyperref">Listing&nbsp;<span class="ref">7.20</span></a>,
                      which makes use of Sass’s <code>@extend</code> function
                      to include the functionality of the Bootstrap class <code>has-error</code>.</p>
                    <div class="codelisting" id="_code-error_messages_css" data-tralics-id="uid673"
                      data-number="7.20">
                      <div class="heading"><span class="number">Listing 7.20:</span>
                        <span class="description">CSS for styling error
                          messages.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">forms</span> <span class="o">*/</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nn">#error_explanation</span> <span class="p">{</span>
  <span class="na">color</span><span class="o">:</span> <span class="nb">red</span><span
class="p">;</span>
  <span class="nt">ul</span> <span class="p">{</span>
    <span class="na">color</span><span class="o">:</span> <span class="nb">red</span><span
class="p">;</span>
    <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span> <span
class="mi">0</span> <span class="mi">30</span><span class="kt">px</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nc">.field_with_errors</span> <span class="p">{</span>
  <span class="k">@extend</span> <span class="nc">.has-error</span><span class="o">;</span>
  <span class="nc">.form-control</span> <span class="p">{</span>
    <span class="na">color</span><span class="o">:</span> <span class="nv">$state-danger-text</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-f_error_messages" class="hyperref">Listing&nbsp;<span
                          class="ref">7.18</span></a> and <a href="#code-errors_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">7.19</span></a>
                      and the SCSS from <a href="#code-error_messages_css" class="hyperref">Listing&nbsp;<span
                          class="ref">7.20</span></a>, helpful error messages
                      now appear when submitting invalid signup information, as
                      seen in <a href="#fig-signup_error_messages" class="hyperref">Figure&nbsp;<span
                          class="ref">7.18</span></a>.<span class="intersentencespace"></span>
                      Because the messages are generated by the model
                      validations, they will automatically change if you ever
                      change your mind about, say, the format of email
                      addresses, or the minimum length of passwords.</p>
                    <div class="center figure" id="_fig-signup_error_messages" data-tralics-id="uid674"
                      data-number="7.18">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_error_messages_3rd_edition.png"
                          alt="images/figures/signup_error_messages_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.18: </span><span
                          class="description">Failed signup with error messages.
                        </span></div>
                    </div>
                  </div>
                  <div id="_sec-a_test_for_invalid_submission" data-tralics-id="uid675"
                    class="subsection" data-number="7.3.4">
                    <h3><a href="#sec-a_test_for_invalid_submission" class="heading hyperref"><span
                          class="number">7.3.4 </span>A test for invalid
                        submission</a></h3>
                    <p>In the days before powerful web frameworks with full
                      testing capabilities, developers had to test forms by
                      hand.<span class="intersentencespace"></span> For example,
                      to test a signup page manually, we would have to visit the
                      page in a browser and then submit alternately invalid and
                      valid data, verifying in each case that the application’s
                      behavior was correct.<span class="intersentencespace"></span>
                      Moreover, we would have to remember to repeat the process
                      any time the application changed.<span class="intersentencespace"></span>
                      This process was painful and error-prone.</p>
                    <p>Happily, with Rails we can write tests to automate the
                      testing of forms.<span class="intersentencespace"></span>
                      In this section, we’ll write one such test to verify the
                      correct behavior upon invalid form submission; in <a href="#sec-a_test_for_valid_submission"
                        class="hyperref">Section&nbsp;<span class="ref">7.4.4</span></a>,
                      we’ll write a corresponding test for valid submission.</p>
                    <p>To get started, we first generate an integration test
                      file for signing up users, which we’ll call <code>users_signup</code>
                      (adopting the controller convention of a plural resource
                      name):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test users_signup
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/users_signup_test.rb</span>
</pre></div>
                    </div>
                    <p>(We’ll use this same file in <a href="#sec-a_test_for_valid_submission"
                        class="hyperref">Section&nbsp;<span class="ref">7.4.4</span></a>
                      to test a valid signup.)</p>
                    <p>The main purpose of our test is to verify that clicking
                      the signup button results in <em>not</em> creating a new
                      user when the submitted information is invalid.<span class="intersentencespace"></span>
                      (Writing a test for the error messages is left as an
                      exercise (<a href="#sec-signup_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">7.7</span></a>).)<span class="intersentencespace"></span>
                      The way to do this is to check the <em>count</em> of
                      users, and under the hood our tests will use the <code>count</code>
                      method available on every Active Record class, including <code>User</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">count</span>
<span class="go">=&gt; 0</span>
</pre></div>
                    </div>
                    <p>Here <code>User.count</code> is <code>0</code> because
                      we reset the database at the beginning of <a href="#sec-signup_form"
                        class="hyperref">Section&nbsp;<span class="ref">7.2</span></a>.<span
                        class="intersentencespace"></span> As in <a href="#sec-layout_link_tests"
                        class="hyperref">Section&nbsp;<span class="ref">5.3.4</span></a>,
                      we’ll use <code>assert_select</code> to test HTML
                      elements of the relevant pages, taking care to check only
                      elements unlikely to change in the future.</p>
                    <p>We’ll start by visiting the signup path using <code>get</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">get</span> <span class="n">signup_path</span>
</pre></div>
                    </div>
                    <p>In order to test the form submission, we need to issue a
                      <span class="tt">POST</span> request to the <code>users_path</code>
                      (<a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>), which we can do with the
                      <code>post</code> function:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
  <span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span
class="p">:</span>  <span class="s2">""</span><span class="p">,</span>
                           <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@invalid"</span><span class="p">,</span>
                           <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foo"</span><span class="p">,</span>
                           <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"bar"</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Here we’ve included the <code>params[:user]</code> hash
                      expected by <code>User.new</code> in the <code>create</code>
                      action (<a href="#code-signup_flash" class="hyperref">Listing&nbsp;<span
                          class="ref">7.24</span></a>).<span class="intersentencespace"></span>
                      By wrapping the <code>post</code> in the <code>assert_no_difference</code>
                      method with the string argument <code>’User.count’</code>,
                      we arrange for a comparison between <code>User.count</code>
                      before and after the contents of the <code>assert_no_difference</code>
                      block.<span class="intersentencespace"></span> This is
                      equivalent to recording the user count, posting the data,
                      and verifying that the count is the same:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">before_count</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">count</span>
<span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="n">after_count</span>  <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">count</span>
<span class="n">assert_equal</span> <span class="n">before_count</span><span class="p">,</span> <span
class="n">after_count</span>
</pre></div>
                    </div>
                    <p>Although the two are equivalent, using <code>assert_no_difference</code>
                      is cleaner and is more idiomatically correct Ruby.</p>
                    <p>It’s worth noting that the <code>get</code> and <code>post</code>
                      steps above are technically unrelated, and it’s actually
                      not necessary to get the signup path before posting to the
                      users path.<span class="intersentencespace"></span> I
                      prefer to include both steps, though, both for conceptual
                      clarity and to double-check that the signup form renders
                      without error.</p>
                    <p>Putting the above ideas together leads to the test in <a
                        href="#code-a_test_for_invalid_submission" class="hyperref">Listing&nbsp;<span
                          class="ref">7.21</span></a>.<span class="intersentencespace"></span>
                      We’ve also included a call to <code>assert_template</code>
                      to check that a failed submission re-renders the <code>new</code>
                      action.<span class="intersentencespace"></span> Adding
                      lines to check for the appearance of error messages is
                      left as an exercise (<a href="#sec-signup_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">7.7</span></a>).</p>
                    <div class="codelisting" id="_code-a_test_for_invalid_submission"
                      data-tralics-id="uid676" data-number="7.21">
                      <div class="heading"><span class="number">Listing 7.21:</span>
                        <span class="description">A test for an invalid signup.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_signup_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersSignupTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="nb">test</span> <span class="s2">"invalid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span
class="p">:</span>  <span class="s2">""</span><span class="p">,</span>
                               <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@invalid"</span><span class="p">,</span>
                               <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foo"</span><span class="p">,</span>
                               <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"bar"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/new'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because we wrote the application code before the
                      integration test, the test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid677" data-tralics-id="uid677"
                      data-number="7.22">
                      <div class="heading"><span class="number">Listing 7.22:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-successful_signups" data-tralics-id="cid47" class="section"
                  data-number="7.4">
                  <h2><a href="#sec-successful_signups" class="heading hyperref"><span
                        class="number">7.4 </span>Successful signups</a></h2>
                  <p>Having handled invalid form submissions, now it’s time to
                    complete the signup form by actually saving a new user (if
                    valid) to the database.<span class="intersentencespace"></span>
                    First, we try to save the user; if the save succeeds, the
                    user’s information gets written to the database
                    automatically, and we then <em>redirect</em> the browser to
                    show the user’s profile (together with a friendly greeting),
                    as mocked up in <a href="#fig-signup_success_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">7.19</span></a>.<span class="intersentencespace"></span>
                    If it fails, we simply fall back on the behavior developed
                    in <a href="#sec-unsuccessful_signups" class="hyperref">Section&nbsp;<span
                        class="ref">7.3</span></a>.</p>
                  <div class="center figure" id="_fig-signup_success_mockup" data-tralics-id="uid678"
                    data-number="7.19">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_success_mockup_bootstrap.png"
                        alt="images/figures/signup_success_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 7.19: </span><span
                        class="description">A mockup of successful signup. </span></div>
                  </div>
                  <div id="_sec-the_finished_signup_form" data-tralics-id="uid679"
                    class="subsection" data-number="7.4.1">
                    <h3><a href="#sec-the_finished_signup_form" class="heading hyperref"><span
                          class="number">7.4.1 </span>The finished signup form</a></h3>
                    <p>To complete a working signup form, we need to fill in the
                      commented-out section in <a href="#code-create_action_strong_parameters"
                        class="hyperref">Listing&nbsp;<span class="ref">7.17</span></a>
                      with the appropriate behavior.<span class="intersentencespace"></span>
                      Currently, the form fails on valid submission.<span class="intersentencespace"></span>
                      As indicated in <a href="#fig-valid_submission_error" class="hyperref">Figure&nbsp;<span
                          class="ref">7.20</span></a>, this is because the
                      default behavior for a Rails action is to render the
                      corresponding view, and there isn’t a view template
                      corresponding to the <code>create</code> action.</p>
                    <div class="center figure" id="_fig-valid_submission_error"
                      data-tralics-id="uid680" data-number="7.20">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/valid_submission_error.png"
                          alt="images/figures/valid_submission_error"></div>
                      <div class="caption"><span class="header">Figure 7.20: </span><span
                          class="description">The error page for a valid signup
                          submission. </span></div>
                    </div>
                    <p>Rather than render a page on successful user creation,
                      we’ll instead <em>redirect</em> to a different page.<span
                        class="intersentencespace"></span> We’ll follow the
                      common convention of redirecting to the newly created
                      user’s profile, although the root path would also work.<span
                        class="intersentencespace"></span> The application code,
                      which introduces the <code>redirect_to</code> method,
                      appears in <a href="#code-user_create_action" class="hyperref">Listing&nbsp;<span
                          class="ref">7.23</span></a>.</p>
                    <div class="codelisting" id="_code-user_create_action" data-tralics-id="uid681"
                      data-number="7.23">
                      <div class="heading"><span class="number">Listing 7.23:</span>
                        <span class="description">The user <code>create</code>
                          action with a save and a redirect.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
<span class="hll">      <span class="n">redirect_to</span> <span class="vi">@user</span>
</span>    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that we’ve written</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">redirect_to</span> <span class="vi">@user</span>
</pre></div>
                    </div>
                    <p>where we could have used the equivalent</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">redirect_to</span> <span class="n">user_url</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>This is because Rails automatically infers from <code>redirect_to
                        @user</code> that we want to redirect to <code>user_url(@user)</code>.</p>
                  </div>
                  <div id="_sec-the_flash" data-tralics-id="uid682" class="subsection"
                    data-number="7.4.2">
                    <h3><a href="#sec-the_flash" class="heading hyperref"><span
                          class="number">7.4.2 </span>The flash</a></h3>
                    <p>With the code in <a href="#code-user_create_action" class="hyperref">Listing&nbsp;<span
                          class="ref">7.23</span></a>, our signup form is
                      actually working, but before submitting a valid
                      registration in a browser we’re going to add a bit of
                      polish common in web applications: a message that appears
                      on the subsequent page (in this case, welcoming our new
                      user to the application) and then disappears upon visiting
                      a second page or on page reload.</p>
                    <p>The Rails way to display a temporary message is to use a
                      special method called the <em>flash</em>, which we can
                      treat like a hash.<span class="intersentencespace"></span>
                      Rails adopts the convention of a <code>:success</code>
                      key for a message indicating a successful result (<a href="#code-signup_flash"
                        class="hyperref">Listing&nbsp;<span class="ref">7.24</span></a>).</p>
                    <div class="codelisting" id="_code-signup_flash" data-tralics-id="uid683"
                      data-number="7.24">
                      <div class="heading"><span class="number">Listing 7.24:</span>
                        <span class="description">Adding a flash message to user
                          signup.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
<span class="hll">      <span class="n">flash</span><span class="o">[</span><span
class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Welcome to the Sample App!"</span>
</span>      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>By assigning a message to the <code>flash</code>, we are
                      now in a position to display the message on the first page
                      after the redirect.<span class="intersentencespace"></span>
                      Our method is to iterate through the <code>flash</code>
                      and insert all relevant messages into the site layout.<span
                        class="intersentencespace"></span> You may recall the
                      console example in <a href="#sec-hashes_and_symbols" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.3</span></a>, where we saw how to
                      iterate through a hash using the strategically named <code>flash</code>
                      variable:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="n">flash</span> <span class="o">=</span> <span
class="p">{</span> <span class="ss">success</span><span class="p">:</span> <span
class="s2">"It worked!"</span><span class="p">,</span> <span class="ss">danger</span><span
class="p">:</span> <span class="s2">"It failed."</span> <span class="p">}</span>
<span class="go">=&gt; {:success=&gt;"It worked!", danger: "It failed."}</span>
<span class="gp">&gt;&gt; </span><span class="n">flash</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">key</span><span
class="p">,</span> <span class="n">value</span><span class="o">|</span>
<span class="gp">?&gt; </span>  <span class="nb">puts</span> <span class="s2">"</span><span
class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2">"</span>
<span class="gp">?&gt; </span>  <span class="nb">puts</span> <span class="s2">"</span><span
class="si">#{</span><span class="n">value</span><span class="si">}</span><span class="s2">"</span>
<span class="gp">&gt;&gt; </span><span class="k">end</span>
<span class="go">success</span>
<span class="go">It worked!</span>
<span class="go">danger</span>
<span class="go">It failed.</span>
</pre></div>
                    </div>
                    <p>By following this pattern, we can arrange to display the
                      contents of the flash site-wide using code like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="n">flash</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">message_type</span><span class="p">,</span> <span class="n">message</span><span
class="o">|</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"alert alert-</span><span
class="cp">&lt;%=</span> <span class="n">message_type</span> <span class="cp">%&gt;</span><span
class="s">"</span><span class="nt">&gt;</span><span class="cp">&lt;%=</span> <span
class="n">message</span> <span class="cp">%&gt;</span><span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>(This code is a particularly ugly combination of HTML and
                      ERb; making it prettier is left as an exercise (<a href="#sec-signup_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">7.7</span></a>).)<span
                        class="intersentencespace"></span> Here the embedded
                      Ruby</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>alert-<span class="cp">&lt;%=</span> <span class="n">message_type</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>makes a CSS class corresponding to the type of message,
                      so that for a <code>:success</code> message the class is</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>alert-success
</pre></div>
                    </div>
                    <p>(The key <code>:success</code> is a symbol, but embedded
                      Ruby automatically converts it to the string <code>"success"</code>
                      before inserting it into the template.)<span class="intersentencespace"></span>
                      Using a different class for each key allows us to apply
                      different styles to different kinds of messages.<span class="intersentencespace"></span>
                      For example, in <a href="#sec-rendering_with_a_flash_message"
                        class="hyperref">Section&nbsp;<span class="ref">8.1.4</span></a>
                      we’ll use <code>flash[:danger]</code> to indicate a
                      failed login attempt.<sup id="_cha-7_footnote-ref-10" class="footnote"><a
                          href="#cha-7_footnote-10">10</a></sup><span class="intersentencespace"></span>
                      (In fact, we’ve already used <code>alert-danger</code>
                      once, to style the error message div in <a href="#code-errors_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">7.19</span></a>.)<span
                        class="intersentencespace"></span> Bootstrap CSS
                      supports styling for four such flash classes (<code>success</code>,
                      <code>info</code>, <code>warning</code>, and <code>danger</code>),
                      and we’ll find occasion to use all of them in the course
                      of developing the sample application.</p>
                    <p>Because the message is also inserted into the template,
                      the full HTML result for</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">flash</span><span class="o">[</span><span
class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Welcome to the Sample App!"</span>
</pre></div>
                    </div>
                    <p>appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"alert alert-success"</span><span class="nt">&gt;</span>Welcome to the Sample App!<span
class="nt">&lt;/div&gt;</span>
</pre></div>
                    </div>
                    <p>Putting the embedded Ruby discussed above into the site
                      layout leads to the code in <a href="#code-layout_flash"
                        class="hyperref">Listing&nbsp;<span class="ref">7.25</span></a>.</p>
                    <div class="codelisting" id="_code-layout_flash" data-tralics-id="uid685"
                      data-number="7.25">
                      <div class="heading"><span class="number">Listing 7.25:</span>
                        <span class="description">Adding the contents of the <code>flash</code>
                          variable to the site layout.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  .
  .
  .
  <span class="nt">&lt;body&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'layouts/header'</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
<span class="hll">      <span class="cp">&lt;%</span> <span class="n">flash</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">message_type</span><span class="p">,</span> <span class="n">message</span><span
class="o">|</span> <span class="cp">%&gt;</span>
</span><span class="hll">        <span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"alert alert-</span><span class="cp">&lt;%=</span> <span class="n">message_type</span> <span
class="cp">%&gt;</span><span class="s">"</span><span class="nt">&gt;</span><span
class="cp">&lt;%=</span> <span class="n">message</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/div&gt;</span>
</span><span class="hll">      <span class="cp">&lt;%</span> <span class="k">end</span> <span
class="cp">%&gt;</span>
</span>      <span class="cp">&lt;%=</span> <span class="k">yield</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'layouts/footer'</span> <span
class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">debug</span><span class="p">(</span><span
class="n">params</span><span class="p">)</span> <span class="k">if</span> <span
class="no">Rails</span><span class="o">.</span><span class="n">env</span><span class="o">.</span><span
class="n">development?</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
    .
    .
    .
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-the_first_signup" data-tralics-id="uid686" class="subsection"
                    data-number="7.4.3">
                    <h3><a href="#sec-the_first_signup" class="heading hyperref"><span
                          class="number">7.4.3 </span>The first signup</a></h3>
                    <p>We can see the result of all this work by signing up our
                      first user under the name “Rails Tutorial” and email
                      address “example@railstutorial.org” (<a href="#fig-first_signup"
                        class="hyperref">Figure&nbsp;<span class="ref">7.21</span></a>).<span
                        class="intersentencespace"></span> The resulting page (<a
                        href="#fig-signup_flash" class="hyperref">Figure&nbsp;<span
                          class="ref">7.22</span></a>) shows a friendly message
                      upon successful signup, including nice green styling for
                      the <code>success</code> class, which comes included with
                      the Bootstrap CSS framework from <a href="#sec-custom_css"
                        class="hyperref">Section&nbsp;<span class="ref">5.1.2</span></a>.<span
                        class="intersentencespace"></span> (If instead you get
                      an error message indicating that the email address has
                      already been taken, be sure to run the <code>db:migrate:reset</code>
                      Rake task as indicated in <a href="#sec-signup_form" class="hyperref">Section&nbsp;<span
                          class="ref">7.2</span></a> and restart the development
                      webserver.)<span class="intersentencespace"></span> Then,
                      upon reloading the user show page, the flash message
                      disappears as promised (<a href="#fig-signup_flash_reloaded"
                        class="hyperref">Figure&nbsp;<span class="ref">7.23</span></a>).</p>
                    <div class="center figure" id="_fig-first_signup" data-tralics-id="uid687"
                      data-number="7.21">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/first_signup.png"
                          alt="images/figures/first_signup"></div>
                      <div class="caption"><span class="header">Figure 7.21: </span><span
                          class="description">Filling in the information for the
                          first signup. </span></div>
                    </div>
                    <div class="center figure" id="_fig-signup_flash" data-tralics-id="uid688"
                      data-number="7.22">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_flash_3rd_edition.png"
                          alt="images/figures/signup_flash_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.22: </span><span
                          class="description">The results of a successful user
                          signup, with flash message. </span></div>
                    </div>
                    <div class="center figure" id="_fig-signup_flash_reloaded" data-tralics-id="uid689"
                      data-number="7.23">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_flash_reloaded_3rd_edition.png"
                          alt="images/figures/signup_flash_reloaded_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.23: </span><span
                          class="description">The flash-less profile page after
                          a browser reload. </span></div>
                    </div>
                    <p>We can now check our database just to double-check that
                      the new user was actually created:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="s2">"example@railstutorial.org"</span><span class="p">)</span>
<span class="go">=&gt; #&lt;User id: 1, name: "Rails Tutorial", email: "example@railstutorial.org",</span>
<span class="go">created_at: "2014-08-29 19:53:17", updated_at: "2014-08-29 19:53:17",</span>
<span class="go">password_digest: "$2a$10$zthScEx9x6EkuLa4NolGye6O0Zgrkp1B6LQ12pTHlNB..."&gt;</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-a_test_for_valid_submission" data-tralics-id="uid690"
                    class="subsection" data-number="7.4.4">
                    <h3><a href="#sec-a_test_for_valid_submission" class="heading hyperref"><span
                          class="number">7.4.4 </span>A test for valid
                        submission</a></h3>
                    <p>Before moving on, we’ll write a test for valid submission
                      to verify our application’s behavior and catch
                      regressions.<span class="intersentencespace"></span> As
                      with the test for invalid submission in <a href="#sec-a_test_for_invalid_submission"
                        class="hyperref">Section&nbsp;<span class="ref">7.3.4</span></a>,
                      our main purpose is to verify the contents of the
                      database.<span class="intersentencespace"></span> In this
                      case, we want to submit valid information and then confirm
                      that a user <em>was</em> created.<span class="intersentencespace"></span>
                      In analogy with <a href="#code-a_test_for_invalid_submission"
                        class="hyperref">Listing&nbsp;<span class="ref">7.21</span></a>,
                      which used</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
  <span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>here we’ll use the corresponding <code>assert_difference</code>
                      method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
  <span class="n">post_via_redirect</span> <span class="n">users_path</span><span
class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>As with <code>assert_no_difference</code>, the first
                      argument is the string <code>’User.count’</code>, which
                      arranges for a comparison between <code>User.count</code>
                      before and after the contents of the <code>assert_difference</code>
                      block.<span class="intersentencespace"></span> The second
                      (optional) argument specifies the size of the difference
                      (in this case, 1).</p>
                    <p>Incorporating <code>assert_difference</code> into the
                      file from <a href="#code-a_test_for_invalid_submission" class="hyperref">Listing&nbsp;<span
                          class="ref">7.21</span></a> yields the test shown in <a
                        href="#code-a_test_for_valid_submission" class="hyperref">Listing&nbsp;<span
                          class="ref">7.26</span></a>.<span class="intersentencespace"></span>
                      Note that we’ve used the <code>post_via_redirect</code>
                      variant to post to the users path.<span class="intersentencespace"></span>
                      This simply arranges to follow the redirect after
                      submission, resulting in a rendering of the <code>’users/show’</code>
                      template.<span class="intersentencespace"></span> (It’s
                      probably a good idea to write a test for the flash as
                      well, which is left as an exercise (<a href="#sec-signup_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">7.7</span></a>).)</p>
                    <div class="codelisting" id="_code-a_test_for_valid_submission"
                      data-tralics-id="uid691" data-number="7.26">
                      <div class="heading"><span class="number">Listing 7.26:</span>
                        <span class="description">A test for a valid signup.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_signup_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersSignupTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"valid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">post_via_redirect</span> <span class="n">users_path</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span>  <span class="s2">"Example User"</span><span
class="p">,</span>
                                            <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@example.com"</span><span class="p">,</span>
                                            <span class="ss">password</span><span
class="p">:</span>              <span class="s2">"password"</span><span class="p">,</span>
                                            <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"password"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that <a href="#code-a_test_for_valid_submission" class="hyperref">Listing&nbsp;<span
                          class="ref">7.26</span></a> also verifies that the
                      user show template renders following successful signup.<span
                        class="intersentencespace"></span> For this test to
                      work, it’s necessary for the Users routes (<a href="#code-users_resource"
                        class="hyperref">Listing&nbsp;<span class="ref">7.3</span></a>),
                      the Users <code>show</code> action (<a href="#code-user_show_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.5</span></a>),
                      and the <code>show.html.erb</code> view (<a href="#code-user_show_view_with_gravatar"
                        class="hyperref">Listing&nbsp;<span class="ref">7.8</span></a>)
                      to work correctly.<span class="intersentencespace"></span>
                      As a result, the one line</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_template</span> <span class="s1">'users/show'</span>
</pre></div>
                    </div>
                    <p>is a sensitive test for almost everything related to a
                      user’s profile page.<span class="intersentencespace"></span>
                      This sort of end-to-end coverage of important application
                      features illustrates one reason why integration tests are
                      so useful.</p>
                  </div>
                </div>
                <div id="_sec-professional_grade_deployment" data-tralics-id="cid48"
                  class="section" data-number="7.5">
                  <h2><a href="#sec-professional_grade_deployment" class="heading hyperref"><span
                        class="number">7.5 </span>Professional-grade deployment</a></h2>
                  <p>Now that we have a working signup page, it’s time to deploy
                    our application and get it working in production.<span class="intersentencespace"></span>
                    Although we started deploying our application in <a href="#cha-static_pages"
                      class="hyperref">Chapter&nbsp;<span class="ref">3</span></a>,
                    this is the first time it will actually <em>do</em>
                    something, so we’ll take this opportunity to make the
                    deployment professional-grade.<span class="intersentencespace"></span>
                    In particular, we’ll add an important feature to the
                    production application to make signup secure, and we’ll
                    replace the default web server with one suitable for
                    real-world use.</p>
                  <p>As preparation for the deployment, you should merge your
                    changes into the <code>master</code> branch at this point:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Finish user signup"</span>
<span class="gp">$</span> git checkout master
<span class="gp">$</span> git merge sign-up
</pre></div>
                  </div>
                  <div id="_sec-ssl_in_production" data-tralics-id="uid692" class="subsection"
                    data-number="7.5.1">
                    <h3><a href="#sec-ssl_in_production" class="heading hyperref"><span
                          class="number">7.5.1 </span>SSL in production</a></h3>
                    <p>When submitting the signup form developed in this
                      chapter, the name, email address, and password get sent
                      over the network, and hence are vulnerable to intercept.<span
                        class="intersentencespace"></span> This is a potentially
                      serious security flaw in our application, and the way to
                      fix it is to use <a href="http://en.wikipedia.org/wiki/Transport_Layer_Security"
                        target="_blank">Secure Sockets Layer (SSL)</a><sup id="_cha-7_footnote-ref-11"
                        class="footnote"><a href="#cha-7_footnote-11">11</a></sup>
                      to encrypt all relevant information before it leaves the
                      local browser.<span class="intersentencespace"></span>
                      Although we could use SSL on just the signup page, it’s
                      actually easier to implement it site-wide, which has the
                      additional benefits of securing user login (<a href="#cha-log_in_log_out"
                        class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>)
                      and making our application immune to a critical <em>session
                        hijacking</em> vulnerability discussed in <a href="#sec-remember_me"
                        class="hyperref">Section&nbsp;<span class="ref">8.4</span></a>.</p>
                    <p>Enabling SSL is as easy as uncommenting a single line in
                      <code>production.rb</code>, the configuration file for
                      production applications.<span class="intersentencespace"></span>
                      As shown in <a href="#code-ssl_in_production" class="hyperref">Listing&nbsp;<span
                          class="ref">7.27</span></a>, all we need to do is set
                      the <code>config</code> variable to force the use of SSL
                      in production.</p>
                    <div class="codelisting" id="_code-ssl_in_production" data-tralics-id="uid694"
                      data-number="7.27">
                      <div class="heading"><span class="number">Listing 7.27:</span>
                        <span class="description">Configuring the application to
                          use SSL in production.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/environments/production.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">configure</span> <span
class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Force all access to the app over SSL, use Strict-Transport-Security,</span>
  <span class="c1"># and use secure cookies.</span>
<span class="hll">  <span class="n">config</span><span class="o">.</span><span class="n">force_ssl</span> <span
class="o">=</span> <span class="kp">true</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this stage, we need to set up SSL on the remote
                      server.<span class="intersentencespace"></span> Setting up
                      a production site to use SSL involves purchasing and
                      configuring an <em>SSL certificate</em> for your domain.<span
                        class="intersentencespace"></span> That’s a lot of work,
                      though, and luckily we won’t need it here: for an
                      application running on a Heroku domain (such as the sample
                      application), we can piggyback on Heroku’s SSL
                      certificate.<span class="intersentencespace"></span> As a
                      result, when we deploy the application in <a href="#sec-production_webserver"
                        class="hyperref">Section&nbsp;<span class="ref">7.5.2</span></a>,
                      SSL will automatically be enabled.<span class="intersentencespace"></span>
                      (If you want to run SSL on a custom domain, such as <code>www.example.com</code>,
                      refer to <a href="http://devcenter.heroku.com/articles/ssl"
                        target="_blank">Heroku’s page on SSL</a>.)</p>
                  </div>
                  <div id="_sec-production_webserver" data-tralics-id="uid695" class="subsection"
                    data-number="7.5.2">
                    <h3><a href="#sec-production_webserver" class="heading hyperref"><span
                          class="number">7.5.2 </span>Production webserver</a></h3>
                    <p>Having added SSL, we now need to configure our
                      application to use a webserver suitable for production
                      applications.<span class="intersentencespace"></span> By
                      default, Heroku uses a pure-Ruby webserver called WEBrick,
                      which is easy to set up and run but isn’t good at handling
                      significant traffic.<span class="intersentencespace"></span>
                      As a result, WEBrick <a href="https://devcenter.heroku.com/articles/ruby-default-web-server"
                        target="_blank">isn’t suitable for production use</a>,
                      so we’ll <a href="https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server"
                        target="_blank">replace WEBrick with Puma</a>, an HTTP
                      server that is capable of handling a large number of
                      incoming requests.</p>
                    <p>To add the new webserver, we simply follow the <a href="https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server"
                        target="_blank">Heroku Puma documentation</a>.<span class="intersentencespace"></span>
                      The first step is to include the <span class="tt">puma</span>
                      gem in our <code>Gemfile</code>, as shown in <a href="#code-puma_gemfile"
                        class="hyperref">Listing&nbsp;<span class="ref">7.28</span></a>.<span
                        class="intersentencespace"></span> Because we don’t need
                      the Puma gem locally, <a href="#code-puma_gemfile" class="hyperref">Listing&nbsp;<span
                          class="ref">7.28</span></a> puts it in the <code>:production</code>
                      group.</p>
                    <div class="codelisting" id="_code-puma_gemfile" data-tralics-id="uid696"
                      data-number="7.28">
                      <div class="heading"><span class="number">Listing 7.28:</span>
                        <span class="description">Adding Puma to the <code>Gemfile</code>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'pg'</span><span class="p">,</span>             <span
class="s1">'0.17.1'</span>
  <span class="n">gem</span> <span class="s1">'rails_12factor'</span><span class="p">,</span> <span
class="s1">'0.0.2'</span>
<span class="hll">  <span class="n">gem</span> <span class="s1">'puma'</span><span
class="p">,</span>           <span class="s1">'2.11.1'</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because we configured Bundler not to install production
                      gems (<a href="#sec-sample_app_setup" class="hyperref">Section&nbsp;<span
                          class="ref">3.1</span></a>), <a href="#code-puma_gemfile"
                        class="hyperref">Listing&nbsp;<span class="ref">7.28</span></a>
                      won’t add any gems to the development environment, but we
                      still need to run Bundler to update <code>Gemfile.lock</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install
</pre></div>
                    </div>
                    <p>The next step is to create a file called <code>config/puma.rb</code>
                      and fill it with the contents of <a href="#code-production_webserver_config"
                        class="hyperref">Listing&nbsp;<span class="ref">7.29</span></a>.<span
                        class="intersentencespace"></span> The code in <a href="#code-production_webserver_config"
                        class="hyperref">Listing&nbsp;<span class="ref">7.29</span></a>
                      comes straight from the <a href="https://devcenter.heroku.com/articles/deploying-rails-applications-with-the-puma-web-server"
                        target="_blank">Heroku documentation</a>,<sup id="_cha-7_footnote-ref-12"
                        class="footnote"><a href="#cha-7_footnote-12">12</a></sup>
                      and there is no need to understand it.</p>
                    <div class="codelisting" id="_code-production_webserver_config"
                      data-tralics-id="uid698" data-number="7.29">
                      <div class="heading"><span class="number">Listing 7.29:</span>
                        <span class="description">The configuration file for the
                          production webserver.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/puma.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">workers</span> <span class="nb">Integer</span><span
class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s1">'WEB_CONCURRENCY'</span><span
class="o">]</span> <span class="o">||</span> <span class="mi">2</span><span class="p">)</span>
<span class="n">threads_count</span> <span class="o">=</span> <span class="nb">Integer</span><span
class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s1">'MAX_THREADS'</span><span
class="o">]</span> <span class="o">||</span> <span class="mi">5</span><span class="p">)</span>
<span class="n">threads</span> <span class="n">threads_count</span><span class="p">,</span> <span
class="n">threads_count</span>

<span class="n">preload_app!</span>

<span class="n">rackup</span>      <span class="no">DefaultRackup</span>
<span class="n">port</span>        <span class="no">ENV</span><span class="o">[</span><span
class="s1">'PORT'</span><span class="o">]</span>     <span class="o">||</span> <span
class="mi">3000</span>
<span class="n">environment</span> <span class="no">ENV</span><span class="o">[</span><span
class="s1">'RACK_ENV'</span><span class="o">]</span> <span class="o">||</span> <span
class="s1">'development'</span>

<span class="n">on_worker_boot</span> <span class="k">do</span>
  <span class="c1"># Worker specific setup for Rails 4.1+</span>
  <span class="c1"># See: https://devcenter.heroku.com/articles/</span>
  <span class="c1"># deploying-rails-applications-with-the-puma-web-server#on-worker-boot</span>
  <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span
class="o">.</span><span class="n">establish_connection</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Finally, we need to make a so-called <code>Procfile</code>
                      to tell Heroku to run a Puma process in production, as
                      shown in <a href="#code-procfile" class="hyperref">Listing&nbsp;<span
                          class="ref">7.30</span></a>.<span class="intersentencespace"></span>
                      The <code>Procfile</code> should be created in your
                      application’s root directory (i.e., in the same location
                      as the <code>Gemfile</code>).</p>
                    <div class="codelisting" id="_code-procfile" data-tralics-id="uid699"
                      data-number="7.30">
                      <div class="heading"><span class="number">Listing 7.30:</span>
                        <span class="description">Defining a <code>Procfile</code>
                          for Puma.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">./Procfile</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>web: bundle <span class="nb">exec </span>puma -C config/puma.rb
</pre></div>
                      </div>
                    </div>
                    <p>With the production webserver configuration completed,
                      we’re ready to commit and deploy:<sup id="_cha-7_footnote-ref-13"
                        class="footnote"><a href="#cha-7_footnote-13">13</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Use SSL and the Puma webserver in production"
$ git push
$ git push heroku
$ heroku run rake db:migrate
</pre></div>
                    </div>
                    <p>The signup form is now live, and the result of a
                      successful signup is shown in <a href="#fig-signup_in_production"
                        class="hyperref">Figure&nbsp;<span class="ref">7.24</span></a>.<span
                        class="intersentencespace"></span> Note the presence of
                      <span class="tt">https://</span> and a lock icon in the
                      address bar of <a href="#fig-signup_in_production" class="hyperref">Figure&nbsp;<span
                          class="ref">7.24</span></a>, which indicate that SSL
                      is working.</p>
                    <div class="center figure" id="_fig-signup_in_production" data-tralics-id="uid701"
                      data-number="7.24">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/signup_in_production_3rd_edition.png"
                          alt="images/figures/signup_in_production_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 7.24: </span><span
                          class="description">Signing up on the live Web. </span></div>
                    </div>
                  </div>
                  <div id="_sec-ruby_version_number" data-tralics-id="uid702" class="subsection"
                    data-number="7.5.3">
                    <h3><a href="#sec-ruby_version_number" class="heading hyperref"><span
                          class="number">7.5.3 </span>Ruby version number</a></h3>
                    <p>When deploying to Heroku, you may get a warning message
                      like this one:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>###### WARNING:
       You have not declared a Ruby version in your Gemfile.
       To set your Ruby version add this line to your Gemfile:
       ruby '2.1.5'
</pre></div>
                    </div>
                    <p>Experience shows that, at the level of this tutorial, the
                      costs associated with including such an explicit Ruby
                      version number outweigh the (negligible) benefits, so you
                      should ignore this warning for now.<span class="intersentencespace"></span>
                      The main issue is that keeping your sample app and system
                      in sync with the latest Ruby version can be a huge
                      inconvenience,<sup id="_cha-7_footnote-ref-14" class="footnote"><a
                          href="#cha-7_footnote-14">14</a></sup> and yet it
                      almost never makes a difference which exact Ruby version
                      number you use.<span class="intersentencespace"></span>
                      Nevertheless, you should bear in mind that, should you
                      ever end up running a mission-critical app on Heroku,
                      specifying an exact Ruby version in the <code>Gemfile</code>
                      is recommended to ensure maximum compatibility between
                      development and production environments.</p>
                  </div>
                </div>
                <div id="_cid49" data-tralics-id="cid49" class="section" data-number="7.6">
                  <h2><a href="#cid49" class="heading hyperref"><span class="number">7.6
                        </span>Висновок</a></h2>
                  <p>Being able to sign up users is a major milestone for our
                    application.<span class="intersentencespace"></span>
                    Although the sample app has yet to accomplish anything
                    useful, we have laid an essential foundation for all future
                    development.<span class="intersentencespace"></span> In <a
                      href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                        class="ref">8</span></a>, we will complete our
                    authentication machinery by allowing users to log in and out
                    of the application.<span class="intersentencespace"></span>
                    In <a href="#cha-updating_showing_and_deleting_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">9</span></a>, we will allow all users to
                    update their account information, and we will allow site
                    administrators to delete users, thereby completing the full
                    suite of Users resource REST actions from <a href="#table-RESTful_users"
                      class="hyperref">Table&nbsp;<span class="ref">7.1</span></a>.</p>
                  <div id="_sec-sign_up_what_we_learned_in_this_chapter" data-tralics-id="uid704"
                    class="subsection" data-number="7.6.1">
                    <h3><a href="#sec-sign_up_what_we_learned_in_this_chapter" class="heading hyperref"><span
                          class="number">7.6.1 </span>Що ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Rails displays useful debug information via the <code>debug</code>
                        method. </li>
                      <li>Sass mixins allow a group of CSS rules to be bundled
                        and reused in multiple places. </li>
                      <li>Rails comes with three standard environments: <code>development</code>,
                        <code>test</code>, and <code>production</code>. </li>
                      <li>We can interact with users as a <em>resource</em>
                        through a standard set of REST URLs. </li>
                      <li>Gravatars provide a convenient way of displaying
                        images to represent users. </li>
                      <li>The <code>form_for</code> helper is used to make
                        forms for interacting with Active Record objects. </li>
                      <li>Signup failure renders the new user page and displays
                        error messages automatically determined by Active
                        Record. </li>
                      <li>Rails provides the <code>flash</code> as a standard
                        way to display temporary messages. </li>
                      <li>Signup success creates a user in the database and
                        redirects to the user show page, and displays a welcome
                        message. </li>
                      <li>We can use integration tests to verify form submission
                        behavior and catch regressions. </li>
                      <li>We can configure our production application to use SSL
                        for secure communications and Puma for high performance.
                      </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-signup_exercises" data-tralics-id="cid50" class="section"
                  data-number="7.7">
                  <h2><a href="#sec-signup_exercises" class="heading hyperref"><span
                        class="number">7.7 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>Verify that the code in <a href="#code-gravatar_option"
                        class="hyperref">Listing&nbsp;<span class="ref">7.31</span></a>
                      allows the <code>gravatar_for</code> helper defined in <a
                        href="#sec-a_gravatar_image" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.4</span></a> to take an optional <code>size</code>
                      parameter, allowing code like <code>gravatar_for user,
                        size: 50</code> in the view.<span class="intersentencespace"></span>
                      (We’ll put this improved helper to use in <a href="#sec-users_index"
                        class="hyperref">Section&nbsp;<span class="ref">9.3.1</span></a>.)
                      </li>
                    <li>Write a test for the error messages implemented in <a href="#code-f_error_messages"
                        class="hyperref">Listing&nbsp;<span class="ref">7.18</span></a>.<span
                        class="intersentencespace"></span> How detailed you want
                      to make your tests is up to you; a suggested template
                      appears in <a href="#code-error_messages_test" class="hyperref">Listing&nbsp;<span
                          class="ref">7.32</span></a>. </li>
                    <li>Write a test for the flash implemented in <a href="#sec-the_flash"
                        class="hyperref">Section&nbsp;<span class="ref">7.4.2</span></a>.<span
                        class="intersentencespace"></span> How detailed you want
                      to make your tests is up to you; a suggested
                      ultra-minimalist template appears in <a href="#code-flash_test"
                        class="hyperref">Listing&nbsp;<span class="ref">7.33</span></a>,
                      which you should complete by replacing <code>FILL_IN</code>
                      with the appropriate code.<span class="intersentencespace"></span>
                      (Even testing for the right key, much less the text, is
                      likely to be brittle, so I prefer only to test that the
                      flash isn’t <code>nil</code>.) </li>
                    <li>As noted in <a href="#sec-the_flash" class="hyperref">Section&nbsp;<span
                          class="ref">7.4.2</span></a>, the flash HTML in <a href="#code-layout_flash"
                        class="hyperref">Listing&nbsp;<span class="ref">7.25</span></a>
                      is ugly.<span class="intersentencespace"></span> Verify by
                      running the test suite that the cleaner code in <a href="#code-layout_flash_content_tag"
                        class="hyperref">Listing&nbsp;<span class="ref">7.34</span></a>,
                      which uses the Rails <code>content_tag</code> helper,
                      also works. </li>
                  </ol>
                  <div class="codelisting" id="_code-gravatar_option" data-tralics-id="uid720"
                    data-number="7.31">
                    <div class="heading"><span class="number">Listing 7.31:</span>
                      <span class="description">Adding an options hash in the <code>gravatar_for</code>
                        helper.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/helpers/users_helper.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">module</span> <span class="nn">UsersHelper</span>

  <span class="c1"># Returns the Gravatar for the given user.</span>
<span class="hll">  <span class="k">def</span> <span class="nf">gravatar_for</span><span
class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">options</span> <span
class="o">=</span> <span class="p">{</span> <span class="ss">size</span><span class="p">:</span> <span
class="mi">80</span> <span class="p">})</span>
</span>    <span class="n">gravatar_id</span> <span class="o">=</span> <span class="no">Digest</span><span
class="o">::</span><span class="no">MD5</span><span class="o">::</span><span class="n">hexdigest</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">email</span><span
class="o">.</span><span class="n">downcase</span><span class="p">)</span>
<span class="hll">    <span class="n">size</span> <span class="o">=</span> <span
class="n">options</span><span class="o">[</span><span class="ss">:size</span><span
class="o">]</span>
</span><span class="hll">    <span class="n">gravatar_url</span> <span class="o">=</span> <span
class="s2">"https://secure.gravatar.com/avatar/</span><span class="si">#{</span><span
class="n">gravatar_id</span><span class="si">}</span><span class="s2">?s=</span><span
class="si">#{</span><span class="n">size</span><span class="si">}</span><span class="s2">"</span>
</span>    <span class="n">image_tag</span><span class="p">(</span><span class="n">gravatar_url</span><span
class="p">,</span> <span class="ss">alt</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">class</span><span
class="p">:</span> <span class="s2">"gravatar"</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-error_messages_test" data-tralics-id="uid721"
                    data-number="7.32">
                    <div class="heading"><span class="number">Listing 7.32:</span>
                      <span class="description">A template for tests of the
                        error messages.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">test/integration/users_signup_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersSignupTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="nb">test</span> <span class="s2">"invalid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span
class="p">:</span>  <span class="s2">""</span><span class="p">,</span>
                               <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@invalid"</span><span class="p">,</span>
                               <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foo"</span><span class="p">,</span>
                               <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"bar"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/new'</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s1">'div#&lt;CSS id for error explanation&gt;'</span>
</span><span class="hll">    <span class="n">assert_select</span> <span class="s1">'div.&lt;CSS class for field with error&gt;'</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-flash_test" data-tralics-id="uid722"
                    data-number="7.33">
                    <div class="heading"><span class="number">Listing 7.33:</span>
                      <span class="description">A template for a test of the
                        flash.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">test/integration/users_signup_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"valid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">post_via_redirect</span> <span class="n">users_path</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span>  <span class="s2">"Example User"</span><span
class="p">,</span>
                                            <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@example.com"</span><span class="p">,</span>
                                            <span class="ss">password</span><span
class="p">:</span>              <span class="s2">"password"</span><span class="p">,</span>
                                            <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"password"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
<span class="hll">    <span class="n">assert_not</span> <span class="n">flash</span><span
class="o">.</span><span class="n">FILL_IN</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-layout_flash_content_tag" data-tralics-id="uid723"
                    data-number="7.34">
                    <div class="heading"><span class="number">Listing 7.34:</span>
                      <span class="description">The <code>flash</code> ERb in
                        the site layout using <code>content_tag</code>.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">app/views/layouts/application.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
      .
      .
      .
      <span class="cp">&lt;%</span> <span class="n">flash</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">message_type</span><span
class="p">,</span> <span class="n">message</span><span class="o">|</span> <span
class="cp">%&gt;</span>
<span class="hll">        <span class="cp">&lt;%=</span> <span class="n">content_tag</span><span
class="p">(</span><span class="ss">:div</span><span class="p">,</span> <span class="n">message</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"alert alert-</span><span
class="si">#{</span><span class="n">message_type</span><span class="si">}</span><span
class="s2">"</span><span class="p">)</span> <span class="cp">%&gt;</span>
</span>      <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
      .
      .
      .
<span class="nt">&lt;/html&gt;</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-7_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-7_footnote-1"><a href="http://gomockingbird.com/"
                        target="_blank">Mockingbird</a> doesn’t support custom
                      images like the profile photo in <a href="#fig-profile_mockup_profile_name"
                        class="hyperref">Figure&nbsp;<span class="ref">7.1</span></a>;
                      I put that in by hand using <a href="http://www.gimp.org/"
                        target="_blank">GIMP</a>.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-1">↑</a></li>
                    <li id="_cha-7_footnote-2">The hippopotamus here is from <a
                        href="http://www.flickr.com/photos/43803060@N00/24308857/"
                        target="_blank">http://www.flickr.com/photos/43803060@N00/24308857/</a>.&nbsp;<a
                        class="arrow" href="#cha-7_footnote-ref-2">↑</a></li>
                    <li id="_cha-7_footnote-3">You can define your own custom
                      environments as well; see the <a href="http://railscasts.com/episodes/72-adding-an-environment"
                        target="_blank">RailsCast on adding an environment</a>
                      for details.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-3">↑</a></li>
                    <li id="_cha-7_footnote-4">The Rails <code>debug</code>
                      information is shown as <a href="http://www.yaml.org/" target="_blank">YAML</a>
                      (a <a href="http://catb.org/jargon/html/R/recursive-acronym.html"
                        target="_blank">recursive acronym</a> standing for “YAML
                      Ain’t Markup Language”), which is a friendly data format
                      designed to be both machine- <em>and</em>
                      human-readable.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-4">↑</a></li>
                    <li id="_cha-7_footnote-5">This means that the <em>routing</em>
                      works, but the corresponding pages don’t necessarily work
                      at this point.<span class="intersentencespace"></span> For
                      example, /users/1/edit gets routed properly to the <code>edit</code>
                      action of the Users controller, but since the <code>edit</code>
                      action doesn’t exist yet actually hitting that URL will
                      return an error.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-5">↑</a></li>
                    <li id="_cha-7_footnote-6">In Hinduism, an avatar is the
                      manifestation of a deity in human or animal form.<span class="intersentencespace"></span>
                      By extension, the term <em>avatar</em> is commonly used
                      to mean some kind of personal representation, especially
                      in a virtual environment.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-6">↑</a></li>
                    <li id="_cha-7_footnote-7"><a href="#code-sidebar_css" class="hyperref">Listing&nbsp;<span
                          class="ref">7.11</span></a> includes the <code>.gravatar_edit</code>
                      class, which we’ll put to work in <a href="#cha-updating_showing_and_deleting_users"
                        class="hyperref">Chapter&nbsp;<span class="ref">9</span></a>.&nbsp;<a
                        class="arrow" href="#cha-7_footnote-ref-7">↑</a></li>
                    <li id="_cha-7_footnote-8">See <a href="http://stackoverflow.com/questions/941594/understand-rails-authenticity-token"
                        target="_blank">the Stack Overflow entry on the Rails
                        authenticity token</a> if you’re interested in the
                      details of how this works.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-8">↑</a></li>
                    <li id="_cha-7_footnote-9">I figured this out by looking up
                      <code>pluralize</code> in the <a href="http://api.rubyonrails.org/v4.2.0/classes/ActionView/Helpers/TextHelper.html#method-i-pluralize"
                        target="_blank">Rails API</a>.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-9">↑</a></li>
                    <li id="_cha-7_footnote-10">Actually, we’ll use the closely
                      related <code>flash.now</code>, but we’ll defer that
                      subtlety until we need it.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-10">↑</a></li>
                    <li id="_cha-7_footnote-11">Technically, SSL is now TLS, for
                      Transport Layer Security, but everyone I know still says
                      “SSL”.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-11">↑</a></li>
                    <li id="_cha-7_footnote-12"><a href="#code-production_webserver_config"
                        class="hyperref">Listing&nbsp;<span class="ref">7.29</span></a>
                      changes the formatting slightly so that the code fits in
                      the standard 80 columns.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-12">↑</a></li>
                    <li id="_cha-7_footnote-13">We haven’t changed the data
                      model in this chapter, so running the migration at Heroku
                      shouldn’t be necessary, but only if you followed the steps
                      in <a href="#sec-modeling_users_conclusion" class="hyperref">Section&nbsp;<span
                          class="ref">6.4</span></a>.<span class="intersentencespace"></span>
                      Because several readers reported having trouble, I’ve
                      added <code>heroku run rake db:migrate</code> as a final
                      step just to be safe.&nbsp;<a class="arrow" href="#cha-7_footnote-ref-13">↑</a></li>
                    <li id="_cha-7_footnote-14">For example, after spending
                      several hours unsuccessfully trying to install Ruby 2.1.4
                      on my local machine, I discovered that Ruby 2.1.5 had been
                      released the day before.<span class="intersentencespace"></span>
                      Attempts to install 2.1.5 also failed.&nbsp;<a class="arrow"
                        href="#cha-7_footnote-ref-14">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-log_in_log_out" data-tralics-id="cid51" class="chapter"
                  data-number="8">
                  <h1><a name="cha-log_in_log_out" class="heading hyperref"><span
                        class="number">Chapter 8 </span>Log in, log out</a></h1>
                  <p>Now that new users can sign up for our site (<a href="#cha-sign_up"
                      class="hyperref">Chapter&nbsp;<span class="ref">7</span></a>),
                    it’s time to give them the ability to log in and log out.<span
                      class="intersentencespace"></span> We’ll be implementing
                    all three of the most common models for login/logout
                    behavior on the web: “forgetting” users on browser close (<a
                      href="#sec-sessions_and_failed_login" class="hyperref">Section&nbsp;<span
                        class="ref">8.1</span></a> and <a href="#sec-logging_in"
                      class="hyperref">Section&nbsp;<span class="ref">8.2</span></a>),
                    <em>automatically</em> remembering users (<a href="#sec-remember_me"
                      class="hyperref">Section&nbsp;<span class="ref">8.4</span></a>),
                    and <em>optionally</em> remembering users based on the
                    value of a “remember me” checkbox (<a href="#sec-remember_me_checkbox"
                      class="hyperref">Section&nbsp;<span class="ref">8.4.5</span></a>).<sup
                      id="_cha-8_footnote-ref-1" class="footnote"><a href="#cha-8_footnote-1">1</a></sup></p>
                  <p>The authentication system we develop in this chapter will
                    allow us to customize the site and implement an
                    authorization model based on login status and identity of
                    the current user.<span class="intersentencespace"></span>
                    For example, in this chapter we’ll update the site header
                    with login/logout links and a profile link.<span class="intersentencespace"></span>
                    In <a href="#cha-updating_showing_and_deleting_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">9</span></a>, we’ll impose a security model
                    in which only logged-in users can visit the user index page,
                    only the correct user can access the page for editing their
                    information, and only administrative users can delete other
                    users from the database.<span class="intersentencespace"></span>
                    Finally, in <a href="#cha-user_microposts" class="hyperref">Chapter&nbsp;<span
                        class="ref">11</span></a>, we’ll use the identity of a
                    logged-in user to create microposts associated with that
                    user, and in <a href="#cha-following_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">12</span></a> we’ll allow the current user
                    to follow other users of the application (thereby receiving
                    a feed of their microposts).</p>
                </div>
                <div id="_sec-sessions_and_failed_login" data-tralics-id="cid52"
                  class="section" data-number="8.1">
                  <h2><a href="#sec-sessions_and_failed_login" class="heading hyperref"><span
                        class="number">8.1 </span>Sessions</a></h2>
                  <p><a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol"
                      target="_blank">HTTP</a> is a <a href="https://en.wikipedia.org/wiki/Stateless_protocol"
                      target="_blank"><em>stateless protocol</em></a>, treating
                    each request as an independent transaction that is unable to
                    use information from any previous requests.<span class="intersentencespace"></span>
                    This means there is no way <a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#HTTP_session_state"
                      target="_blank">within the hypertext transfer protocol</a>
                    to remember a user’s identity from page to page; instead,
                    web applications requiring user login must use a <a href="http://en.wikipedia.org/wiki/Session_%28computer_science%29"
                      target="_blank"><em>session</em></a>, which is a
                    semi-permanent connection between two computers (such as a
                    client computer running a web browser and a server running
                    Rails).</p>
                  <p>The most common techniques for implementing sessions in
                    Rails involve using <a href="http://en.wikipedia.org/wiki/HTTP_cookie"
                      target="_blank"><em>cookies</em></a>, which are small
                    pieces of text placed on the user’s browser.<span class="intersentencespace"></span>
                    Because cookies persist from one page to the next, they can
                    store information (such as a user id) that can be used by
                    the application to retrieve the logged-in user from the
                    database.<span class="intersentencespace"></span> In this
                    section and <a href="#sec-logging_in" class="hyperref">Section&nbsp;<span
                        class="ref">8.2</span></a>, we’ll use the Rails method
                    called <code>session</code> to make temporary sessions that
                    expire automatically on browser close,<sup id="_cha-8_footnote-ref-2"
                      class="footnote"><a href="#cha-8_footnote-2">2</a></sup>
                    and then in <a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                        class="ref">8.4</span></a> we’ll add longer-lived
                    sessions using another Rails method called <code>cookies</code>.</p>
                  <p>It’s convenient to model sessions as a RESTful resource:
                    visiting the login page will render a form for <em>new</em>
                    sessions, logging in will <em>create</em> a session, and
                    logging out will <em>destroy</em> it.<span class="intersentencespace"></span>
                    Unlike the Users resource, which uses a database back-end
                    (via the User model) to persist data, the Sessions resource
                    will use cookies, and much of the work involved in login
                    comes from building this cookie-based authentication
                    machinery.<span class="intersentencespace"></span> In this
                    section and the next, we’ll prepare for this work by
                    constructing a Sessions controller, a login form, and the
                    relevant controller actions.<span class="intersentencespace"></span>
                    We’ll then complete user login in <a href="#sec-logging_in"
                      class="hyperref">Section&nbsp;<span class="ref">8.2</span></a>
                    by adding the necessary session-manipulation code.</p>
                  <p>As in previous chapters, we’ll do our work on a topic
                    branch and merge in the changes at the end:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b log-in-log-out
</pre></div>
                  </div>
                  <div id="_sec-sessions_controller" data-tralics-id="uid726" class="subsection"
                    data-number="8.1.1">
                    <h3><a href="#sec-sessions_controller" class="heading hyperref"><span
                          class="number">8.1.1 </span>Sessions controller</a></h3>
                    <p>The elements of logging in and out correspond to
                      particular REST actions of the Sessions controller: the
                      login form is handled by the <code>new</code> action
                      (covered in this section), actually logging in is handled
                      by sending a <span class="tt">POST</span> request to the
                      <code>create</code> action (<a href="#sec-logging_in" class="hyperref">Section&nbsp;<span
                          class="ref">8.2</span></a>), and logging out is
                      handled by sending a <span class="tt">DELETE</span>
                      request to the <code>destroy</code> action (<a href="#sec-logging_out"
                        class="hyperref">Section&nbsp;<span class="ref">8.3</span></a>).<span
                        class="intersentencespace"></span> (Recall the
                      association of HTTP verbs with REST actions from <a href="#table-RESTful_users"
                        class="hyperref">Table&nbsp;<span class="ref">7.1</span></a>.)</p>
                    <p>To get started, we’ll generate a Sessions controller with
                      a <code>new</code> action:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller Sessions new
</pre></div>
                    </div>
                    <p>(Including <code>new</code> actually generates <em>views</em>
                      as well, which is why we don’t include actions like <code>create</code>
                      and <code>delete</code> that don’t correspond to views.)<span
                        class="intersentencespace"></span> Following the model
                      from <a href="#sec-signup_form" class="hyperref">Section&nbsp;<span
                          class="ref">7.2</span></a> for the signup page, our
                      plan is to create a login form for creating new sessions,
                      as mocked up in <a href="#fig-login_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">8.1</span></a>.</p>
                    <div class="center figure" id="_fig-login_mockup" data-tralics-id="uid727"
                      data-number="8.1">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_mockup.png"
                          alt="images/figures/login_mockup"></div>
                      <div class="caption"><span class="header">Figure 8.1: </span><span
                          class="description">A mockup of the login form. </span></div>
                    </div>
                    <p>Unlike the Users resource, which used the special <code>resources</code>
                      method to obtain a full suite of RESTful routes
                      automatically (<a href="#code-users_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">7.3</span></a>), the Sessions resource
                      will use only named routes, handling <span class="tt">GET</span>
                      and <span class="tt">POST</span> requests with the <code>login</code>
                      route and <span class="tt">DELETE</span> request with the
                      <code>logout</code> route.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-sessions_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">8.1</span></a> (which also deletes the
                      unneeded routes generated by <code>rails generate
                        controller</code>).</p>
                    <div class="codelisting" id="_code-sessions_resource" data-tralics-id="uid728"
                      data-number="8.1">
                      <div class="heading"><span class="number">Listing 8.1:</span>
                        <span class="description">Adding a resource to get the
                          standard RESTful actions for sessions.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>                <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>    <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span>    <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span>    <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span>    <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
<span class="hll">  <span class="n">get</span>    <span class="s1">'login'</span>   <span
class="o">=&gt;</span> <span class="s1">'sessions#new'</span>
</span><span class="hll">  <span class="n">post</span>   <span class="s1">'login'</span>   <span
class="o">=&gt;</span> <span class="s1">'sessions#create'</span>
</span><span class="hll">  <span class="n">delete</span> <span class="s1">'logout'</span>  <span
class="o">=&gt;</span> <span class="s1">'sessions#destroy'</span>
</span>  <span class="n">resources</span> <span class="ss">:users</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The routes defined in <a href="#code-sessions_resource"
                        class="hyperref">Listing&nbsp;<span class="ref">8.1</span></a>
                      correspond to URLs and actions similar to those for users
                      (<a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>), as shown in <a href="#table-RESTful_sessions"
                        class="hyperref">Table&nbsp;<span class="ref">8.1</span></a>.</p>
                    <div class="table" id="_table-RESTful_sessions" data-tralics-id="uid729"
                      data-number="8.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>HTTP request</strong></td>
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Named route</strong></td>
                            <td class="align_left"><strong>Action</strong></td>
                            <td class="align_left"><strong>Purpose</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/login</td>
                            <td class="align_left"><code>login_path</code></td>
                            <td class="align_left"><code>new</code></td>
                            <td class="align_left">page for a new session
                              (login)</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">POST</span></td>
                            <td class="align_left">/login</td>
                            <td class="align_left"><code>login_path</code></td>
                            <td class="align_left"><code>create</code></td>
                            <td class="align_left">create a new session (login)</td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">DELETE</span></td>
                            <td class="align_left">/logout</td>
                            <td class="align_left"><code>logout_path</code></td>
                            <td class="align_left"><code>destroy</code></td>
                            <td class="align_left">delete a session (log out)</td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 8.1: </span><span
                          class="description">Routes provided by the sessions
                          rules in <a href="#code-sessions_resource" class="hyperref">Listing&nbsp;<span
                              class="ref">8.1</span></a>. </span></div>
                    </div>
                    <p>Since we’ve now added several custom named routes, it’s
                      useful to look at the complete list of the routes for our
                      application, which we can generate using <code>rake
                        routes</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake routes
 Prefix Verb   URI Pattern               Controller#Action
     root GET    /                         static_pages#home
     help GET    /help(.:format)           static_pages#help
    about GET    /about(.:format)          static_pages#about
  contact GET    /contact(.:format)        static_pages#contact
   signup GET    /signup(.:format)         users#new
    login GET    /login(.:format)          sessions#new
          POST   /login(.:format)          sessions#create
   logout DELETE /logout(.:format)         sessions#destroy
    users GET    /users(.:format)          users#index
          POST   /users(.:format)          users#create
 new_user GET    /users/new(.:format)      users#new
edit_user GET    /users/:id/edit(.:format) users#edit
     user GET    /users/:id(.:format)      users#show
          PATCH  /users/:id(.:format)      users#update
          PUT    /users/:id(.:format)      users#update
          DELETE /users/:id(.:format)      users#destroy
</pre></div>
                    </div>
                    <p>It’s not necessary to understand the results in detail,
                      but viewing the routes in this manner gives us a
                      high-level overview of the actions supported by our
                      application.</p>
                  </div>
                  <div id="_sec-login_form" data-tralics-id="uid730" class="subsection"
                    data-number="8.1.2">
                    <h3><a href="#sec-login_form" class="heading hyperref"><span
                          class="number">8.1.2 </span>Login form</a></h3>
                    <p>Having defined the relevant controller and route, now
                      we’ll fill in the view for new sessions, i.e., the login
                      form.<span class="intersentencespace"></span> Comparing <a
                        href="#fig-login_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">8.1</span></a> with <a href="#fig-signup_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">7.11</span></a>,
                      we see that the login form is similar in appearance to the
                      signup form, except with two fields (email and password)
                      in place of four.</p>
                    <p>As seen in <a href="#fig-login_failure_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">8.2</span></a>, when the login information
                      is invalid we want to re-render the login page and display
                      an error message.<span class="intersentencespace"></span>
                      In <a href="#sec-signup_error_messages" class="hyperref">Section&nbsp;<span
                          class="ref">7.3.3</span></a>, we used an
                      error-messages partial to display error messages, but we
                      saw in that section that those messages are provided
                      automatically by Active Record.<span class="intersentencespace"></span>
                      This won’t work for session creation errors because the
                      session isn’t an Active Record object, so we’ll render the
                      error as a flash message instead.</p>
                    <div class="center figure" id="_fig-login_failure_mockup" data-tralics-id="uid731"
                      data-number="8.2">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_failure_mockup.png"
                          alt="images/figures/login_failure_mockup"></div>
                      <div class="caption"><span class="header">Figure 8.2: </span><span
                          class="description">A mockup of login failure. </span></div>
                    </div>
                    <p>Recall from <a href="#code-signup_form" class="hyperref">Listing&nbsp;<span
                          class="ref">7.13</span></a> that the signup form uses
                      the <code>form_for</code> helper, taking as an argument
                      the user instance variable <code>@user</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
  .
  .
  .
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>The main difference between the session form and the
                      signup form is that we have no Session model, and hence no
                      analogue for the <code>@user</code> variable.<span class="intersentencespace"></span>
                      This means that, in constructing the new session form, we
                      have to give <code>form_for</code> slightly more
                      information; in particular, whereas</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>allows Rails to infer that the <code>action</code> of
                      the form should be to <span class="tt">POST</span> to the
                      URL /users, in the case of sessions we need to indicate
                      the <em>name</em> of the resource and the corresponding
                      URL:<sup id="_cha-8_footnote-ref-3" class="footnote"><a href="#cha-8_footnote-3">3</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">form_for</span><span class="p">(</span><span
class="ss">:session</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">login_path</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>With the proper <code>form_for</code> in hand, it’s easy
                      to make a login form to match the mockup in <a href="#fig-login_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">8.1</span></a>
                      using the signup form (<a href="#code-signup_form" class="hyperref">Listing&nbsp;<span
                          class="ref">7.13</span></a>) as a model, as shown in <a
                        href="#code-login_form" class="hyperref">Listing&nbsp;<span
                          class="ref">8.2</span></a>.</p>
                    <div class="codelisting" id="_code-login_form" data-tralics-id="uid733"
                      data-number="8.2">
                      <div class="heading"><span class="number">Listing 8.2:</span>
                        <span class="description">Code for the login form.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/sessions/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Log in"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Log in<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="ss">:session</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">login_path</span><span class="p">)</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

    <span class="nt">&lt;p&gt;</span>New user? <span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Sign up now!"</span><span class="p">,</span> <span
class="n">signup_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that we’ve added a link to the signup page for
                      convenience.<span class="intersentencespace"></span> With
                      the code in <a href="#code-login_form" class="hyperref">Listing&nbsp;<span
                          class="ref">8.2</span></a>, the login form appears as
                      in <a href="#fig-login_form" class="hyperref">Figure&nbsp;<span
                          class="ref">8.3</span></a>.<span class="intersentencespace"></span>
                      (Because the “Log in” navigation link hasn’t yet been
                      filled in, you’ll have to type the /login URL directly
                      into your address bar.<span class="intersentencespace"></span>
                      We’ll fix this blemish in <a href="#sec-changing_the_layout_links"
                        class="hyperref">Section&nbsp;<span class="ref">8.2.3</span></a>.)</p>
                    <div class="center figure" id="_fig-login_form" data-tralics-id="uid734"
                      data-number="8.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_form.png"
                          alt="images/figures/login_form"></div>
                      <div class="caption"><span class="header">Figure 8.3: </span><span
                          class="description">The login form. </span></div>
                    </div>
                    <p>The generated form HTML appears in <a href="#code-login_form_html"
                        class="hyperref">Listing&nbsp;<span class="ref">8.3</span></a>.</p>
                    <div class="codelisting" id="_code-login_form_html" data-tralics-id="uid735"
                      data-number="8.3">
                      <div class="heading"><span class="number">Listing 8.3:</span>
                        <span class="description">HTML for the login form
                          produced by <a href="#code-login_form" class="hyperref">Listing&nbsp;<span
                              class="ref">8.2</span></a>.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;form</span> <span class="na">accept-charset=</span><span
class="s">"UTF-8"</span> <span class="na">action=</span><span class="s">"/login"</span> <span
class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"utf8"</span> <span
class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span
class="s">"&amp;#x2713;"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"authenticity_token"</span> <span
class="na">type=</span><span class="s">"hidden"</span>
         <span class="na">value=</span><span class="s">"NNb6+J/j46LcrgYUC60wQ2titMuJQ5lLqyAbnbAUkdo="</span> <span
class="nt">/&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"session_email"</span><span
class="nt">&gt;</span>Email<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">"form-control"</span> <span
class="na">id=</span><span class="s">"session_email"</span>
         <span class="na">name=</span><span class="s">"session[email]"</span> <span
class="na">type=</span><span class="s">"text"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;label</span> <span class="na">for=</span><span class="s">"session_password"</span><span
class="nt">&gt;</span>Password<span class="nt">&lt;/label&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">id=</span><span class="s">"session_password"</span> <span
class="na">name=</span><span class="s">"session[password]"</span>
         <span class="na">type=</span><span class="s">"password"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">"btn btn-primary"</span> <span
class="na">name=</span><span class="s">"commit"</span> <span class="na">type=</span><span
class="s">"submit"</span>
       <span class="na">value=</span><span class="s">"Log in"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/form&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Comparing <a href="#code-login_form_html" class="hyperref">Listing&nbsp;<span
                          class="ref">8.3</span></a> with <a href="#code-signup_form_html"
                        class="hyperref">Listing&nbsp;<span class="ref">7.15</span></a>,
                      you might be able to guess that submitting this form will
                      result in a <code>params</code> hash where <code>params[:session][:email]</code>
                      and <code>params[:session][:password]</code> correspond
                      to the email and password fields.</p>
                  </div>
                  <div id="_sec-finding_and_authenticating_a_user" data-tralics-id="uid736"
                    class="subsection" data-number="8.1.3">
                    <h3><a href="#sec-finding_and_authenticating_a_user" class="heading hyperref"><span
                          class="number">8.1.3 </span>Finding and
                        authenticating a user</a></h3>
                    <p>As in the case of creating users (signup), the first step
                      in creating sessions (login) is to handle <em>invalid</em>
                      input.<span class="intersentencespace"></span> We’ll start
                      by reviewing what happens when a form gets submitted, and
                      then arrange for helpful error messages to appear in the
                      case of login failure (as mocked up in <a href="#fig-login_failure_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">8.2</span></a>.)<span
                        class="intersentencespace"></span> Then we’ll lay the
                      foundation for successful login (<a href="#sec-logging_in"
                        class="hyperref">Section&nbsp;<span class="ref">8.2</span></a>)
                      by evaluating each login submission based on the validity
                      of its email/password combination.</p>
                    <p>Let’s start by defining a minimalist <code>create</code>
                      action for the Sessions controller, along with empty <code>new</code>
                      and <code>destroy</code> actions (<a href="#code-initial_create_session"
                        class="hyperref">Listing&nbsp;<span class="ref">8.4</span></a>).<span
                        class="intersentencespace"></span> The <code>create</code>
                      action in <a href="#code-initial_create_session" class="hyperref">Listing&nbsp;<span
                          class="ref">8.4</span></a> does nothing but render the
                      <code>new</code> view, but it’s enough to get us started.<span
                        class="intersentencespace"></span> Submitting the <a href="http://localhost:3000/sessions/new"
                        target="_blank">/sessions/new</a> form then yields the
                      result shown in <a href="#fig-initial_failed_login_rails_3"
                        class="hyperref">Figure&nbsp;<span class="ref">8.4</span></a>.</p>
                    <div class="codelisting" id="_code-initial_create_session" data-tralics-id="uid737"
                      data-number="8.4">
                      <div class="heading"><span class="number">Listing 8.4:</span>
                        <span class="description">A preliminary version of the
                          Sessions <code>create</code> action.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
<span class="hll">    <span class="n">render</span> <span class="s1">'new'</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-initial_failed_login_rails_3"
                      data-tralics-id="uid738" data-number="8.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/initial_failed_login_3rd_edition.png"
                          alt="images/figures/initial_failed_login_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 8.4: </span><span
                          class="description">The initial failed login, with <code>create</code>
                          as in <a href="#code-initial_create_session" class="hyperref">Listing&nbsp;<span
                              class="ref">8.4</span></a>. </span></div>
                    </div>
                    <p>Carefully inspecting the debug information in <a href="#fig-initial_failed_login_rails_3"
                        class="hyperref">Figure&nbsp;<span class="ref">8.4</span></a>
                      shows that, as hinted at the end of <a href="#sec-login_form"
                        class="hyperref">Section&nbsp;<span class="ref">8.1.2</span></a>,
                      the submission results in a <code>params</code> hash
                      containing the email and password under the key <code>session</code>,
                      which (omitting some irrelevant details used internally by
                      Rails) appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nn">---</span>
<span class="l-Scalar-Plain">session</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="s">'user@example.com'</span>
  <span class="l-Scalar-Plain">password</span><span class="p-Indicator">:</span> <span
class="s">'foobar'</span>
<span class="l-Scalar-Plain">commit</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Log in</span>
<span class="l-Scalar-Plain">action</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">create</span>
<span class="l-Scalar-Plain">controller</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">sessions</span>
</pre></div>
                    </div>
                    <p>As with the case of user signup (<a href="#fig-signup_failure"
                        class="hyperref">Figure&nbsp;<span class="ref">7.15</span></a>),
                      these parameters form a <em>nested</em> hash like the one
                      we saw in <a href="#code-nested_hashes" class="hyperref">Listing&nbsp;<span
                          class="ref">4.10</span></a>.<span class="intersentencespace"></span>
                      In particular, <code>params</code> contains a nested hash
                      of the form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">{</span> <span class="ss">session</span><span
class="p">:</span> <span class="p">{</span> <span class="ss">password</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span> <span
class="p">}</span> <span class="p">}</span>
</pre></div>
                    </div>
                    <p>This means that</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">]</span>
</pre></div>
                    </div>
                    <p>is itself a hash:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="p">{</span> <span class="ss">password</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span> <span
class="p">}</span>
</pre></div>
                    </div>
                    <p>As a result,</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:email</span><span
class="o">]</span>
</pre></div>
                    </div>
                    <p>is the submitted email address and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:password</span><span
class="o">]</span>
</pre></div>
                    </div>
                    <p>is the submitted password.</p>
                    <p>In other words, inside the <code>create</code> action
                      the <code>params</code> hash has all the information
                      needed to authenticate users by email and password.<span class="intersentencespace"></span>
                      Not coincidentally, we already have exactly the methods we
                      need: the <code>User.find_by</code> method provided by
                      Active Record (<a href="#sec-finding_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.4</span></a>) and the <code>authenticate</code>
                      method provided by <code>has_secure_password</code> (<a href="#sec-creating_and_authenticating_a_user"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.4</span></a>).<span
                        class="intersentencespace"></span> Recalling that <code>authenticate</code>
                      returns <code>false</code> for an invalid authentication
                      (<a href="#sec-creating_and_authenticating_a_user" class="hyperref">Section&nbsp;<span
                          class="ref">6.3.4</span></a>), our strategy for user
                      login can be summarized as shown in <a href="#code-find_authenticate_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.5</span></a>.</p>
                    <div class="codelisting" id="_code-find_authenticate_user" data-tralics-id="uid739"
                      data-number="8.5">
                      <div class="heading"><span class="number">Listing 8.5:</span>
                        <span class="description">Finding and authenticating a
                          user.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
<span class="hll">    <span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:session</span><span class="o">][</span><span
class="ss">:email</span><span class="o">].</span><span class="n">downcase</span><span
class="p">)</span>
</span><span class="hll">    <span class="k">if</span> <span class="n">user</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticate</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:session</span><span class="o">][</span><span
class="ss">:password</span><span class="o">]</span><span class="p">)</span>
</span>      <span class="c1"># Log the user in and redirect to the user's show page.</span>
    <span class="k">else</span>
      <span class="c1"># Create an error message.</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The first highlighted line in <a href="#code-find_authenticate_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.5</span></a>
                      pulls the user out of the database using the submitted
                      email address.<span class="intersentencespace"></span>
                      (Recall from <a href="#sec-uniqueness_validation" class="hyperref">Section&nbsp;<span
                          class="ref">6.2.5</span></a> that email addresses are
                      saved as all lower-case, so here we use the <code>downcase</code>
                      method to ensure a match when the submitted address is
                      valid.)<span class="intersentencespace"></span> The next
                      line can be a bit confusing but is fairly common in
                      idiomatic Rails programming:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>This uses <code>&amp;&amp;</code> (logical <em>and</em>)
                      to determine if the resulting user is valid.<span class="intersentencespace"></span>
                      Taking into account that any object other than <code>nil</code>
                      and <code>false</code> itself is <code>true</code> in a
                      boolean context (<a href="#sec-objects_and_message_passing"
                        class="hyperref">Section&nbsp;<span class="ref">4.2.3</span></a>),
                      the possibilities appear as in <a href="#table-user_and_and"
                        class="hyperref">Table&nbsp;<span class="ref">8.2</span></a>.<span
                        class="intersentencespace"></span> We see from <a href="#table-user_and_and"
                        class="hyperref">Table&nbsp;<span class="ref">8.2</span></a>
                      that the <code>if</code> statement is <code>true</code>
                      only if a user with the given email both exists in the
                      database and has the given password, exactly as required.</p>
                    <div class="table" id="_table-user_and_and" data-tralics-id="uid740"
                      data-number="8.2">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>User</strong></td>
                            <td class="align_left"><strong>Password</strong></td>
                            <td class="align_left"><strong>a &amp;&amp; b</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left">nonexistent</td>
                            <td class="align_left"><em>anything</em></td>
                            <td class="align_left"><code>(nil &amp;&amp;
                                [anything]) == false</code></td>
                          </tr>
                          <tr>
                            <td class="align_left">valid user</td>
                            <td class="align_left">wrong password</td>
                            <td class="align_left"><code>(true &amp;&amp; false)
                                == false</code></td>
                          </tr>
                          <tr>
                            <td class="align_left">valid user</td>
                            <td class="align_left">right password</td>
                            <td class="align_left"><code>(true &amp;&amp; true)
                                == true</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 8.2: </span><span
                          class="description">Possible results of <code>user
                            &amp;&amp; user.authenticate(…)</code>. </span></div>
                    </div>
                  </div>
                  <div id="_sec-rendering_with_a_flash_message" data-tralics-id="uid741"
                    class="subsection" data-number="8.1.4">
                    <h3><a href="#sec-rendering_with_a_flash_message" class="heading hyperref"><span
                          class="number">8.1.4 </span>Rendering with a flash
                        message</a></h3>
                    <p>Recall from <a href="#sec-signup_error_messages" class="hyperref">Section&nbsp;<span
                          class="ref">7.3.3</span></a> that we displayed signup
                      errors using the User model error messages.<span class="intersentencespace"></span>
                      These errors are associated with a particular Active
                      Record object, but this strategy won’t work here because
                      the session isn’t an Active Record model.<span class="intersentencespace"></span>
                      Instead, we’ll put a message in the flash to be displayed
                      upon failed login.<span class="intersentencespace"></span>
                      A first, slightly incorrect, attempt appears in <a href="#code-failed_login_attempt"
                        class="hyperref">Listing&nbsp;<span class="ref">8.6</span></a>.</p>
                    <div class="codelisting" id="_code-failed_login_attempt" data-tralics-id="uid742"
                      data-number="8.6">
                      <div class="heading"><span class="number">Listing 8.6:</span>
                        <span class="description">An (unsuccessful) attempt at
                          handling failed login.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
      <span class="c1"># Log the user in and redirect to the user's show page.</span>
    <span class="k">else</span>
<span class="hll">      <span class="n">flash</span><span class="o">[</span><span
class="ss">:danger</span><span class="o">]</span> <span class="o">=</span> <span
class="s1">'Invalid email/password combination'</span> <span class="c1"># Not quite right!</span>
</span>      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because of the flash message display in the site layout (<a
                        href="#code-layout_flash" class="hyperref">Listing&nbsp;<span
                          class="ref">7.25</span></a>), the <code>flash[:danger]</code>
                      message automatically gets displayed; because of the
                      Bootstrap CSS, it automatically gets nice styling (<a href="#fig-failed_login_flash"
                        class="hyperref">Figure&nbsp;<span class="ref">8.5</span></a>).</p>
                    <div class="center figure" id="_fig-failed_login_flash" data-tralics-id="uid743"
                      data-number="8.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/failed_login_flash_3rd_edition.png"
                          alt="images/figures/failed_login_flash_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 8.5: </span><span
                          class="description">The flash message for a failed
                          login. </span></div>
                    </div>
                    <p>Unfortunately, as noted in the text and in the comment in
                      <a href="#code-failed_login_attempt" class="hyperref">Listing&nbsp;<span
                          class="ref">8.6</span></a>, this code isn’t quite
                      right.<span class="intersentencespace"></span> The page
                      looks fine, though, so what’s the problem?<span class="intersentencespace"></span>
                      The issue is that the contents of the flash persist for
                      one <em>request</em>, but—unlike a redirect, which we
                      used in <a href="#code-signup_flash" class="hyperref">Listing&nbsp;<span
                          class="ref">7.24</span></a>—re-rendering a template
                      with <code>render</code> doesn’t count as a request.<span
                        class="intersentencespace"></span> The result is that
                      the flash message persists one request longer than we
                      want.<span class="intersentencespace"></span> For example,
                      if we submit invalid login information and then click on
                      the Home page, the flash gets displayed a second time (<a
                        href="#fig-flash_persistence" class="hyperref">Figure&nbsp;<span
                          class="ref">8.6</span></a>).<span class="intersentencespace"></span>
                      Fixing this blemish is the task of <a href="#sec-a_flash_test"
                        class="hyperref">Section&nbsp;<span class="ref">8.1.5</span></a>.</p>
                    <div class="center figure" id="_fig-flash_persistence" data-tralics-id="uid744"
                      data-number="8.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/flash_persistence_3rd_edition.png"
                          alt="images/figures/flash_persistence_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 8.6: </span><span
                          class="description">An example of flash persistence. </span></div>
                    </div>
                  </div>
                  <div id="_sec-a_flash_test" data-tralics-id="uid745" class="subsection"
                    data-number="8.1.5">
                    <h3><a href="#sec-a_flash_test" class="heading hyperref"><span
                          class="number">8.1.5 </span>A flash test</a></h3>
                    <p>The incorrect flash behavior is a minor bug in our
                      application.<span class="intersentencespace"></span>
                      According to the testing guidelines from <a href="#aside-when_to_test"
                        class="hyperref">Box&nbsp;<span class="ref">3.3</span></a>,
                      this is exactly the sort of situation where we should
                      write a test to catch the error so that it doesn’t recur.<span
                        class="intersentencespace"></span> We’ll thus write a
                      short integration test for the login form submission
                      before proceeding.<span class="intersentencespace"></span>
                      In addition to documenting the bug and preventing a
                      regression, this will also give us a good foundation for
                      further integration tests of login and logout.</p>
                    <p>We start by generating an integration test for our
                      application’s login behavior:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="gp">$</span> rails generate integration_test users_login
</span><span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/users_login_test.rb</span>
</pre></div>
                    </div>
                    <p>Next, we need a test to capture the sequence shown in <a
                        href="#fig-failed_login_flash" class="hyperref">Figure&nbsp;<span
                          class="ref">8.5</span></a> and <a href="#fig-flash_persistence"
                        class="hyperref">Figure&nbsp;<span class="ref">8.6</span></a>.<span
                        class="intersentencespace"></span> The basic steps
                      appear as follows:</p>
                    <ol>
                      <li>Visit the login path.<span class="intersentencespace"></span>
                      </li>
                      <li>Verify that the new sessions form renders properly.<span
                          class="intersentencespace"></span> </li>
                      <li>Post to the sessions path with an invalid <code>params</code>
                        hash.<span class="intersentencespace"></span> </li>
                      <li>Verify that the new sessions form gets re-rendered and
                        that a flash message appears.<span class="intersentencespace"></span>
                      </li>
                      <li>Visit another page (such as the Home page).<span class="intersentencespace"></span>
                      </li>
                      <li>Verify that the flash message <em>doesn’t</em> appear
                        on the new page.<span class="intersentencespace"></span>
                      </li>
                    </ol>
                    <p>A test implementing the above steps appears in <a href="#code-flash_persistence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.7</span></a>.</p>
                    <div class="codelisting" id="_code-flash_persistence_test" data-tralics-id="uid752"
                      data-number="8.7">
                      <div class="heading"><span class="number">Listing 8.7:</span>
                        <span class="description">A test to catch unwanted flash
                          persistence.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_login_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersLoginTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="nb">test</span> <span class="s2">"login with invalid information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">login_path</span>
    <span class="n">assert_template</span> <span class="s1">'sessions/new'</span>
    <span class="n">post</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">session</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">""</span><span
class="p">,</span> <span class="ss">password</span><span class="p">:</span> <span
class="s2">""</span> <span class="p">}</span>
    <span class="n">assert_template</span> <span class="s1">'sessions/new'</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>After adding the test in <a href="#code-flash_persistence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.7</span></a>,
                      the login test should be <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid753" data-tralics-id="uid753"
                      data-number="8.8">
                      <div class="heading"><span class="number">Listing 8.8:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test TEST=test/integration/users_login_test.rb
</pre></div>
                      </div>
                    </div>
                    <p>This shows how to run one (and only one) test file using
                      the argument <code>TEST</code> and the full path to the
                      file.</p>
                    <p>The way to get the failing test in <a href="#code-flash_persistence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.7</span></a>
                      to pass is to replace <code>flash</code> with the special
                      variant <code>flash.now</code>, which is specifically
                      designed for displaying flash messages on rendered pages.<span
                        class="intersentencespace"></span> Unlike the contents
                      of <code>flash</code>, the contents of <code>flash.now</code>
                      disappear as soon as there is an additional request, which
                      is exactly the behavior we’ve tested in <a href="#code-flash_persistence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.7</span></a>.<span
                        class="intersentencespace"></span> With this
                      substitution, the corrected application code appears as in
                      <a href="#code-correct_login_failure" class="hyperref">Listing&nbsp;<span
                          class="ref">8.9</span></a>.</p>
                    <div class="codelisting" id="_code-correct_login_failure" data-tralics-id="uid754"
                      data-number="8.9">
                      <div class="heading"><span class="number">Listing 8.9:</span>
                        <span class="description">Correct code for failed login.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
      <span class="c1"># Log the user in and redirect to the user's show page.</span>
    <span class="k">else</span>
<span class="hll">      <span class="n">flash</span><span class="o">.</span><span
class="n">now</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
</span>      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We can then verify that both the login integration test
                      and the full test suite are <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid755" data-tralics-id="uid755"
                      data-number="8.10">
                      <div class="heading"><span class="number">Listing 8.10:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test TEST=test/integration/users_login_test.rb
$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-logging_in" data-tralics-id="cid53" class="section"
                  data-number="8.2">
                  <h2><a href="#sec-logging_in" class="heading hyperref"><span class="number">8.2
                        </span>Logging in</a></h2>
                  <p>Now that our login form can handle invalid submissions, the
                    next step is to handle valid submissions correctly by
                    actually logging a user in.<span class="intersentencespace"></span>
                    In this section, we’ll log the user in with a temporary
                    session cookie that expires automatically upon browser
                    close.<span class="intersentencespace"></span> In <a href="#sec-remember_me"
                      class="hyperref">Section&nbsp;<span class="ref">8.4</span></a>,
                    we’ll add sessions that persist even after closing the
                    browser.</p>
                  <p>Implementing sessions will involve defining a large number
                    of related functions for use across multiple controllers and
                    views.<span class="intersentencespace"></span> You may
                    recall from <a href="#sec-back_to_the_title_helper" class="hyperref">Section&nbsp;<span
                        class="ref">4.2.5</span></a> that Ruby provides a <em>module</em>
                    facility for packaging such functions in one place.<span class="intersentencespace"></span>
                    Conveniently, a Sessions helper module was generated
                    automatically when generating the Sessions controller (<a href="#sec-sessions_controller"
                      class="hyperref">Section&nbsp;<span class="ref">8.1.1</span></a>).<span
                      class="intersentencespace"></span> Moreover, such helpers
                    are automatically included in Rails views; by including the
                    module into the base class of all controllers (the
                    Application controller), we arrange to make them available
                    in our controllers as well (<a href="#code-sessions_helper_include"
                      class="hyperref">Listing&nbsp;<span class="ref">8.11</span></a>).</p>
                  <div class="codelisting" id="_code-sessions_helper_include" data-tralics-id="uid756"
                    data-number="8.11">
                    <div class="heading"><span class="number">Listing 8.11:</span>
                      <span class="description">Including the Sessions helper
                        module into the Application controller.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">app/controllers/application_controller.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">ApplicationController</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span
class="p">:</span> <span class="ss">:exception</span>
<span class="hll">  <span class="kp">include</span> <span class="no">SessionsHelper</span>
</span><span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>With this configuration complete, we’re now ready to write
                    the code to log users in.</p>
                  <div id="_sec-a_working_log_in_method" data-tralics-id="uid757"
                    class="subsection" data-number="8.2.1">
                    <h3><a href="#sec-a_working_log_in_method" class="heading hyperref"><span
                          class="number">8.2.1 </span>The <span class="tt">log_in</span>
                        method</a></h3>
                    <p>Logging a user in is simple with the help of the <code>session</code>
                      method defined by Rails.<span class="intersentencespace"></span>
                      (This method is separate and distinct from the Sessions
                      controller generated in <a href="#sec-sessions_controller"
                        class="hyperref">Section&nbsp;<span class="ref">8.1.1</span></a>.)<span
                        class="intersentencespace"></span> We can treat <code>session</code>
                      as if it were a hash, and assign to it as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">session</span><span class="o">[</span><span
class="ss">:user_id</span><span class="o">]</span> <span class="o">=</span> <span
class="n">user</span><span class="o">.</span><span class="n">id</span>
</pre></div>
                    </div>
                    <p>This places a temporary cookie on the user’s browser
                      containing an encrypted version of the user’s id, which
                      allows us to retrieve the id on subsequent pages using <code>session[:user_id]</code>.<span
                        class="intersentencespace"></span> In contrast to the
                      persistent cookie created by the <code>cookies</code>
                      method (<a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                          class="ref">8.4</span></a>), the temporary cookie
                      created by the <code>session</code> method expires
                      immediately when the browser is closed.</p>
                    <p>Because we’ll want to use the same login technique in a
                      couple of different places, we’ll define a method called <code>log_in</code>
                      in the Sessions helper, as shown in <a href="#code-log_in_function"
                        class="hyperref">Listing&nbsp;<span class="ref">8.12</span></a>.</p>
                    <div class="codelisting" id="_code-log_in_function" data-tralics-id="uid758"
                      data-number="8.12">
                      <div class="heading"><span class="number">Listing 8.12:</span>
                        <span class="description">The <code>log_in</code>
                          function.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
<span class="hll">    <span class="n">session</span><span class="o">[</span><span
class="ss">:user_id</span><span class="o">]</span> <span class="o">=</span> <span
class="n">user</span><span class="o">.</span><span class="n">id</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because temporary cookies created using the <code>session</code>
                      method are automatically encrypted, the code in <a href="#code-log_in_function"
                        class="hyperref">Listing&nbsp;<span class="ref">8.12</span></a>
                      is secure, and there is no way for an attacker to use the
                      session information to log in as the user.<span class="intersentencespace"></span>
                      This applies only to temporary sessions initiated with the
                      <code>session</code> method, though, and is <em>not</em>
                      the case for persistent sessions created using the <code>cookies</code>
                      method.<span class="intersentencespace"></span> Permanent
                      cookies are vulnerable to a <em>session hijacking</em>
                      attack, so in <a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                          class="ref">8.4</span></a> we’ll have to be much more
                      careful about the information we place on the user’s
                      browser.</p>
                    <p>With the <code>log_in</code> method defined in <a href="#code-log_in_function"
                        class="hyperref">Listing&nbsp;<span class="ref">8.12</span></a>,
                      we’re now ready to complete the session <code>create</code>
                      action by logging the user in and redirecting to the
                      user’s profile page.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-log_in_success" class="hyperref">Listing&nbsp;<span
                          class="ref">8.13</span></a>.<sup id="_cha-8_footnote-ref-4"
                        class="footnote"><a href="#cha-8_footnote-4">4</a></sup></p>
                    <div class="codelisting" id="_code-log_in_success" data-tralics-id="uid760"
                      data-number="8.13">
                      <div class="heading"><span class="number">Listing 8.13:</span>
                        <span class="description">Logging in a user.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
<span class="hll">      <span class="n">log_in</span> <span class="n">user</span>
</span><span class="hll">      <span class="n">redirect_to</span> <span class="n">user</span>
</span>    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the compact redirect</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">redirect_to</span> <span class="n">user</span>
</pre></div>
                    </div>
                    <p>which we saw before in <a href="#sec-the_finished_signup_form"
                        class="hyperref">Section&nbsp;<span class="ref">7.4.1</span></a>.<span
                        class="intersentencespace"></span> Rails automatically
                      converts this to the route for the user’s profile page:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user_url</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>With the <code>create</code> action defined in <a href="#code-log_in_success"
                        class="hyperref">Listing&nbsp;<span class="ref">8.13</span></a>,
                      the login form defined in <a href="#code-login_form" class="hyperref">Listing&nbsp;<span
                          class="ref">8.2</span></a> should now be working.<span
                        class="intersentencespace"></span> It doesn’t have any
                      effects on the application display, though, so short of
                      inspecting the browser session directly there’s no way to
                      tell that you’re logged in.<span class="intersentencespace"></span>
                      As a first step toward enabling more visible changes, in <a
                        href="#sec-current_user" class="hyperref">Section&nbsp;<span
                          class="ref">8.2.2</span></a> we’ll retrieve the
                      current user from the database using the id in the
                      session.<span class="intersentencespace"></span> In <a href="#sec-changing_the_layout_links"
                        class="hyperref">Section&nbsp;<span class="ref">8.2.3</span></a>,
                      we’ll change the links on the application layout,
                      including a URL to the current user’s profile.</p>
                  </div>
                  <div id="_sec-current_user" data-tralics-id="uid761" class="subsection"
                    data-number="8.2.2">
                    <h3><a href="#sec-current_user" class="heading hyperref"><span
                          class="number">8.2.2 </span>Current user</a></h3>
                    <p>Having placed the user’s id securely in the temporary
                      session, we are now in a position to retrieve it on
                      subsequent pages, which we’ll do by defining a <code>current_user</code>
                      method to find the user in the database corresponding to
                      the session id.<span class="intersentencespace"></span>
                      The purpose of <code>current_user</code> is to allow
                      constructions such as</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">redirect_to</span> <span class="n">current_user</span>
</pre></div>
                    </div>
                    <p>To find the current user, one possibility is to use the <code>find</code>
                      method, as on the user profile page (<a href="#code-user_show_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.5</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">User</span><span class="o">.</span><span
class="n">find</span><span class="p">(</span><span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>But recall from <a href="#sec-finding_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.4</span></a> that <code>find</code>
                      raises an exception if the user id doesn’t exist.<span class="intersentencespace"></span>
                      This behavior is appropriate on the user profile page
                      because it will only happen if the id is invalid, but in
                      the present case <code>session[:user_id]</code> will
                      often be <code>nil</code> (i.e., for non-logged-in
                      users).<span class="intersentencespace"></span> To handle
                      this possibility, we’ll use the same <code>find_by</code>
                      method used to find by email address in the <code>create</code>
                      method, with <code>id</code> in place of <code>email</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">User</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Rather than raising an exception, this method returns <code>nil</code>
                      (indicating no such user) if the id is invalid.</p>
                    <p>We could now define the <code>current_user</code> method
                      as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">current_user</span>
  <span class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>This would work fine, but it would hit the database
                      multiple times if, e.g., <code>current_user</code>
                      appeared multiple times on a page.<span class="intersentencespace"></span>
                      Instead, we’ll follow a common Ruby convention by storing
                      the result of <code>User.find_by</code> in an instance
                      variable, which hits the database the first time but
                      returns the instance variable immediately on subsequent
                      invocations:<sup id="_cha-8_footnote-ref-5" class="footnote"><a
                          href="#cha-8_footnote-5">5</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="vi">@current_user</span><span
class="o">.</span><span class="n">nil?</span>
  <span class="vi">@current_user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
<span class="k">else</span>
  <span class="vi">@current_user</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Recalling the <em>or</em>&nbsp;operator <span class="tt">||</span>
                      seen in <a href="#sec-objects_and_message_passing" class="hyperref">Section&nbsp;<span
                          class="ref">4.2.3</span></a>, we can rewrite this as
                      follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@current_user</span> <span class="o">=</span> <span
class="vi">@current_user</span> <span class="o">||</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Because a User object is true in a boolean context, the
                      call to <code>find_by</code> only gets executed if <code>@current_user</code>
                      hasn’t yet been assigned.</p>
                    <p>Although the preceding code would work, it’s not
                      idiomatically correct Ruby; instead, the proper way to
                      write the assignment to <code>@current_user</code> is
                      like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@current_user</span> <span class="o">||=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>This uses the potentially confusing but frequently used <code>||=</code>
                      (“or equals”) operator (<a href="#aside-or_equals" class="hyperref">Box&nbsp;<span
                          class="ref">8.1</span></a>).</p>
                    <div class="aside" id="_aside-or_equals" data-tralics-id="uid763"
                      data-number="8.1">
                      <div class="heading"><span class="number">Box 8.1.</span>
                        <span class="description">What the *$@!<span class="intersentencespace"></span>
                          is <span class="tt">||=</span> ?<span class="intersentencespace"></span>
                        </span></div>
                      <p>The <span class="tt">||=</span> (“or equals”)
                        assignment operator is a common Ruby idiom and is thus
                        important for aspiring Rails developers to recognize.<span
                          class="intersentencespace"></span> Although at first
                        it may seem mysterious, <em>or equals</em> is easy to
                        understand by analogy.</p>
                      <p>We start by noting the common pattern of incrementing a
                        variable:</p>
                      <pre>  x = x + 1</pre>
                      <p>Many languages provide a syntactic shortcut for this
                        operation; in Ruby (and in C, C++, Perl, Python, Java,
                        etc.), it can also appear as follows:</p>
                      <pre>  x += 1</pre>
                      <p>Analogous constructs exist for other operators as well:</p>
                      <pre>  $ rails console
  &gt;&gt; x = 1
  =&gt; 1
  &gt;&gt; x += 1
  =&gt; 2
  &gt;&gt; x *= 3
  =&gt; 6
  &gt;&gt; x -= 8
  =&gt; -2
  &gt;&gt; x /= 2
  =&gt; -1</pre>
                      <p>In each case, the pattern is that <span class="tt">x =
                          x O y</span> and <span class="tt">x O= y</span> are
                        equivalent for any operator <span class="tt">O</span>.</p>
                      <p>Another common Ruby pattern is assigning to a variable
                        if it’s <span class="tt">nil</span> but otherwise
                        leaving it alone.<span class="intersentencespace"></span>
                        Recalling the <em>or</em>&nbsp;operator <span class="tt">||</span>
                        seen in <a href="#sec-objects_and_message_passing" class="hyperref">Section&nbsp;<span
                            class="ref">4.2.3</span></a>, we can write this as
                        follows:</p>
                      <pre>  &gt;&gt; @foo
  =&gt; nil
  &gt;&gt; @foo = @foo || "bar"
  =&gt; "bar"
  &gt;&gt; @foo = @foo || "baz"
  =&gt; "bar"</pre>
                      <p>Since <span class="tt">nil</span> is false in a
                        boolean context, the first assignment to <span class="tt">@foo</span>
                        is <span class="tt">nil || "bar"</span>, which
                        evaluates to <span class="tt">"bar"</span>.<span class="intersentencespace"></span>
                        Similarly, the second assignment is <span class="tt">@foo
                          || "baz"</span>, i.e., <span class="tt">"bar" ||
                          "baz"</span>, which also evaluates to <span class="tt">"bar"</span>.<span
                          class="intersentencespace"></span> This is because
                        anything other than <span class="tt">nil</span> or <span
                          class="tt">false</span> is <span class="tt">true</span>
                        in a boolean context, and the series of <span class="tt">||</span>
                        expressions terminates after the first true expression
                        is evaluated.<span class="intersentencespace"></span>
                        (This practice of evaluating <span class="tt">||</span>
                        expressions from left to right and stopping on the first
                        true value is known as <em>short-circuit evaluation</em>.<span
                          class="intersentencespace"></span> The same principle
                        applies to <span class="tt">&amp;&amp;</span>
                        statements, except in this case evaluation stops on the
                        first <em>false</em> value.)</p>
                      <p>Comparing the console sessions for the various
                        operators, we see that <span class="tt">@foo = @foo ||
                          "bar"</span> follows the <span class="tt">x = x O y</span>
                        pattern with <span class="tt">||</span> in the place of
                        <span class="tt">O</span>:</p>
                      <pre>  x    =   x   +   1      -&gt;     x     +=   1
  x    =   x   *   3      -&gt;     x     *=   3
  x    =   x   -   8      -&gt;     x     -=   8
  x    =   x   /   2      -&gt;     x     /=   2
  @foo = @foo || "bar"    -&gt;     @foo ||= "bar"</pre>
                      <p>Thus we see that <span class="inline_verbatim">@foo =
                          @foo || "bar"</span> and <span class="inline_verbatim">@foo
                          ||= "bar"</span> are equivalent.<span class="intersentencespace"></span>
                        In the context of the current user, this suggests the
                        following construction:</p>
                      <pre>@current_user ||= User.find_by(id: session[:user_id])</pre>
                      <p>Voilà&nbsp;!</p>
                    </div>
                    <p>Applying the results of the above discussion yields the
                      succinct <code>current_user</code> method shown in <a href="#code-current_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.14</span></a>.</p>
                    <div class="codelisting" id="_code-current_user" data-tralics-id="uid764"
                      data-number="8.14">
                      <div class="heading"><span class="number">Listing 8.14:</span>
                        <span class="description">Finding the current user in
                          the session.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>

  <span class="c1"># Returns the current logged-in user (if any).</span>
  <span class="k">def</span> <span class="nf">current_user</span>
<span class="hll">    <span class="vi">@current_user</span> <span class="o">||=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the working <code>current_user</code> method in <a
                        href="#code-current_user" class="hyperref">Listing&nbsp;<span
                          class="ref">8.14</span></a>, we’re now in a position
                      to make changes to our application based on user login
                      status.</p>
                  </div>
                  <div id="_sec-changing_the_layout_links" data-tralics-id="uid765"
                    class="subsection" data-number="8.2.3">
                    <h3><a href="#sec-changing_the_layout_links" class="heading hyperref"><span
                          class="number">8.2.3 </span>Changing the layout links</a></h3>
                    <p>The first practical application of logging in involves
                      changing the layout links based on login status.<span class="intersentencespace"></span>
                      In particular, as seen in the <a href="#fig-login_success_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">8.7</span></a>
                      mockup,<sup id="_cha-8_footnote-ref-6" class="footnote"><a
                          href="#cha-8_footnote-6">6</a></sup> we’ll add links
                      for logging out, for user settings, for listing all users,
                      and for the current user’s profile page.<span class="intersentencespace"></span>
                      Note in <a href="#fig-login_success_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">8.7</span></a> that the logout and profile
                      links appear in a dropdown “Account” menu; we’ll see in <a
                        href="#code-layout_login_logout_links" class="hyperref">Listing&nbsp;<span
                          class="ref">8.16</span></a> how to make such a menu
                      with Bootstrap.</p>
                    <div class="center figure" id="_fig-login_success_mockup" data-tralics-id="uid767"
                      data-number="8.7">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_success_mockup.png"
                          alt="images/figures/login_success_mockup"></div>
                      <div class="caption"><span class="header">Figure 8.7: </span><span
                          class="description">A mockup of the user profile after
                          a successful login. </span></div>
                    </div>
                    <p>At this point, in real life I would consider writing an
                      integration test to capture the behavior described above.<span
                        class="intersentencespace"></span> As noted in <a href="#aside-when_to_test"
                        class="hyperref">Box&nbsp;<span class="ref">3.3</span></a>,
                      as you become more familiar with the testing tools in
                      Rails you may find yourself more inclined to write tests
                      first.<span class="intersentencespace"></span> In this
                      case, though, such a test involves several new ideas, so
                      for now it’s best deferred to its own section (<a href="#sec-testing_layout_changes"
                        class="hyperref">Section&nbsp;<span class="ref">8.2.4</span></a>).</p>
                    <p>The way to change the links in the site layout involves
                      using an if-else statement inside embedded Ruby to show
                      one set of links if the user is logged in and another set
                      of links otherwise:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="k">if</span> <span
class="n">logged_in?</span> <span class="cp">%&gt;</span>
  # Links for logged-in users
<span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
  # Links for non-logged-in-users
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>This kind of code requires the existence of a <code>logged_in?</code>
                      boolean method, which we’ll now define.</p>
                    <p>A user is logged in if there is a current user in the
                      session, i.e., if <code>current_user</code> is not <code>nil</code>.<span
                        class="intersentencespace"></span> Checking for this
                      requires the use of the “not” operator (<a href="#sec-objects_and_message_passing"
                        class="hyperref">Section&nbsp;<span class="ref">4.2.3</span></a>),
                      written using an exclamation point&nbsp;<code>!</code><span
                        class="intersentencespace"></span> and usually read as
                      “bang”.<span class="intersentencespace"></span> The
                      resulting <code>logged_in?</code> method appears in <a href="#code-logged_in_p"
                        class="hyperref">Listing&nbsp;<span class="ref">8.15</span></a>.</p>
                    <div class="codelisting" id="_code-logged_in_p" data-tralics-id="uid768"
                      data-number="8.15">
                      <div class="heading"><span class="number">Listing 8.15:</span>
                        <span class="description">The <code>logged_in?</code>
                          helper method.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>

  <span class="c1"># Returns the current logged-in user (if any).</span>
  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns true if the user is logged in, false otherwise.</span>
  <span class="k">def</span> <span class="nf">logged_in?</span>
<span class="hll">    <span class="o">!</span><span class="n">current_user</span><span
class="o">.</span><span class="n">nil?</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With addition in <a href="#code-logged_in_p" class="hyperref">Listing&nbsp;<span
                          class="ref">8.15</span></a>, we’re now ready to change
                      the layout links if a user is logged in.<span class="intersentencespace"></span>
                      There are four new links, two of which are stubbed out (to
                      be completed in <a href="#cha-updating_showing_and_deleting_users"
                        class="hyperref">Chapter&nbsp;<span class="ref">9</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Users"</span><span class="p">,</span>    <span class="s1">'#'</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"Settings"</span><span
class="p">,</span> <span class="s1">'#'</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>The logout link, meanwhile, uses the logout path defined
                      in <a href="#code-sessions_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">8.1</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log out"</span><span class="p">,</span> <span class="n">logout_path</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="ss">:delete</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>Notice that the logout link passes a hash argument
                      indicating that it should submit with an HTTP <span class="tt">DELETE</span>
                      request.<sup id="_cha-8_footnote-ref-7" class="footnote"><a
                          href="#cha-8_footnote-7">7</a></sup><span class="intersentencespace"></span>
                      We’ll also add a profile link as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Profile"</span><span class="p">,</span> <span class="n">current_user</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>Here we could write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Profile"</span><span class="p">,</span> <span class="n">user_path</span><span
class="p">(</span><span class="n">current_user</span><span class="p">)</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>but as usual Rails allows us to link directly to the user
                      by automatically converting <code>current_user</code>
                      into <code>user_path(current_user)</code> in this
                      context.<span class="intersentencespace"></span> Finally,
                      when users <em>aren’t</em> logged in, we’ll use the login
                      path defined in <a href="#code-sessions_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">8.1</span></a> to make a link to the login
                      form:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log in"</span><span class="p">,</span> <span class="n">login_path</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>Putting everything together gives the updated header
                      partial shown in <a href="#code-layout_login_logout_links"
                        class="hyperref">Listing&nbsp;<span class="ref">8.16</span></a>.</p>
                    <div class="codelisting" id="_code-layout_login_logout_links"
                      data-tralics-id="uid770" data-number="8.16">
                      <div class="heading"><span class="number">Listing 8.16:</span>
                        <span class="description">Changing the layout links for
                          logged-in users.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/layouts/_header.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"sample app"</span><span
class="p">,</span> <span class="n">root_path</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="s2">"logo"</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;nav&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span> <span class="n">root_path</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span> <span class="n">help_path</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
<span class="hll">        <span class="cp">&lt;%</span> <span class="k">if</span> <span
class="n">logged_in?</span> <span class="cp">%&gt;</span>
</span><span class="hll">          <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Users"</span><span class="p">,</span> <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span>          <span class="nt">&lt;li</span> <span class="na">class=</span><span
class="s">"dropdown"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span
class="na">class=</span><span class="s">"dropdown-toggle"</span> <span class="na">data-toggle=</span><span
class="s">"dropdown"</span><span class="nt">&gt;</span>
              Account <span class="nt">&lt;b</span> <span class="na">class=</span><span
class="s">"caret"</span><span class="nt">&gt;&lt;/b&gt;</span>
            <span class="nt">&lt;/a&gt;</span>
            <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"dropdown-menu"</span><span
class="nt">&gt;</span>
<span class="hll">              <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Profile"</span><span class="p">,</span> <span
class="n">current_user</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span><span class="hll">              <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Settings"</span><span class="p">,</span> <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span>              <span class="nt">&lt;li</span> <span class="na">class=</span><span
class="s">"divider"</span><span class="nt">&gt;&lt;/li&gt;</span>
              <span class="nt">&lt;li&gt;</span>
<span class="hll">                <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log out"</span><span class="p">,</span> <span class="n">logout_path</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="s2">"delete"</span> <span class="cp">%&gt;</span>
</span>              <span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;/ul&gt;</span>
          <span class="nt">&lt;/li&gt;</span>
<span class="hll">        <span class="cp">&lt;%</span> <span class="k">else</span> <span
class="cp">%&gt;</span>
</span><span class="hll">          <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="n">login_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span><span class="hll">        <span class="cp">&lt;%</span> <span class="k">end</span> <span
class="cp">%&gt;</span>
</span>      <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/header&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>As part of including the new links into the layout, <a href="#code-layout_login_logout_links"
                        class="hyperref">Listing&nbsp;<span class="ref">8.16</span></a>
                      takes advantage of Bootstrap’s ability to make dropdown
                      menus.<sup id="_cha-8_footnote-ref-8" class="footnote"><a
                          href="#cha-8_footnote-8">8</a></sup><span class="intersentencespace"></span>
                      Note in particular the inclusion of the special Bootstrap
                      CSS classes such as <code>dropdown</code>, <code>dropdown-menu</code>,
                      etc.<span class="intersentencespace"></span> To activate
                      the dropdown menu, we need to include Bootstrap’s custom
                      JavaScript library in the Rails asset pipeline’s <code>application.js</code>
                      file, as shown in <a href="#code-bootstrap_js" class="hyperref">Listing&nbsp;<span
                          class="ref">8.17</span></a>.</p>
                    <div class="codelisting" id="_code-bootstrap_js" data-tralics-id="uid772"
                      data-number="8.17">
                      <div class="heading"><span class="number">Listing 8.17:</span>
                        <span class="description">Adding the Bootstrap
                          JavaScript library to <code>application.js</code>.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/assets/javascripts/application.js</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1">//= require jquery</span>
<span class="c1">//= require jquery_ujs</span>
<span class="hll"><span class="c1">//= require bootstrap</span>
</span><span class="c1">//= require turbolinks</span>
<span class="c1">//= require_tree .</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, you should visit the login path and log in
                      as a valid user, which effectively tests the code in the
                      previous three sections.<sup id="_cha-8_footnote-ref-9" class="footnote intersentence"><a
                          href="#cha-8_footnote-9">9</a></sup><span class="intersentencespace"></span>
                      With the code in <a href="#code-layout_login_logout_links"
                        class="hyperref">Listing&nbsp;<span class="ref">8.16</span></a>
                      and <a href="#code-bootstrap_js" class="hyperref">Listing&nbsp;<span
                          class="ref">8.17</span></a>, you should see the
                      dropdown menu and links for logged-in users, as shown in <a
                        href="#fig-profile_with_logout_link" class="hyperref">Figure&nbsp;<span
                          class="ref">8.8</span></a>.<span class="intersentencespace"></span>
                      If you quit your browser completely, you should also be
                      able to verify that the application forgets your login
                      status, requiring you to log in again to see the changes
                      described above.</p>
                    <div class="center figure" id="_fig-profile_with_logout_link"
                      data-tralics-id="uid774" data-number="8.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_with_logout_link_3rd_edition.png"
                          alt="images/figures/profile_with_logout_link_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 8.8: </span><span
                          class="description">A logged-in user with new links
                          and a dropdown menu. </span></div>
                    </div>
                  </div>
                  <div id="_sec-testing_layout_changes" data-tralics-id="uid775"
                    class="subsection" data-number="8.2.4">
                    <h3><a href="#sec-testing_layout_changes" class="heading hyperref"><span
                          class="number">8.2.4 </span>Testing layout changes</a></h3>
                    <p>Having verified by hand that the application is behaving
                      properly upon successful login, before moving on we’ll
                      write an integration test to capture that behavior and
                      catch regressions.<span class="intersentencespace"></span>
                      We’ll build on the test from <a href="#code-flash_persistence_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.7</span></a>
                      and write a series of steps to verify the following
                      sequence of actions:</p>
                    <ol>
                      <li>Visit the login path.<span class="intersentencespace"></span>
                      </li>
                      <li>Post valid information to the sessions path.<span class="intersentencespace"></span>
                      </li>
                      <li>Verify that the login link disappears.<span class="intersentencespace"></span>
                      </li>
                      <li>Verify that a logout link appears </li>
                      <li>Verify that a profile link appears.<span class="intersentencespace"></span>
                      </li>
                    </ol>
                    <p>In order to see these changes, our test needs to log in
                      as a previously registered user, which means that such a
                      user must already exist in the database.<span class="intersentencespace"></span>
                      The default Rails way to do this is to use <em>fixtures</em>,
                      which are a way of organizing data to be loaded into the
                      test database.<span class="intersentencespace"></span> We
                      discovered in <a href="#sec-uniqueness_validation" class="hyperref">Section&nbsp;<span
                          class="ref">6.2.5</span></a> that we needed to delete
                      the default fixtures so that our email uniqueness tests
                      would pass (<a href="#code-empty_fixtures" class="hyperref">Listing&nbsp;<span
                          class="ref">6.30</span></a>).<span class="intersentencespace"></span>
                      Now we’re ready to start filling in that empty file with
                      custom fixtures of our own.</p>
                    <p>In the present case, we need only one user, whose
                      information should consist of a valid name and email
                      address.<span class="intersentencespace"></span> Because
                      we’ll need to log the user in, we also have to include a
                      valid password to compare with the password submitted to
                      the Sessions controller’s <code>create</code> action.<span
                        class="intersentencespace"></span> Referring to the data
                      model in <a href="#fig-user_model_password_digest" class="hyperref">Figure&nbsp;<span
                          class="ref">6.8</span></a>, we see that this means
                      creating a <code>password_digest</code> attribute for the
                      user fixture, which we’ll accomplish by defining a <code>digest</code>
                      method of our own.</p>
                    <p>As discussed in <a href="#sec-a_hashed_password" class="hyperref">Section&nbsp;<span
                          class="ref">6.3.1</span></a>, the password digest is
                      created using bcrypt (via <code>has_secure_password</code>),
                      so we’ll need to create the fixture password using the
                      same method.<span class="intersentencespace"></span> By
                      inspecting the <a href="https://github.com/rails/rails/blob/master/activemodel/lib/active_model/secure_password.rb"
                        target="_blank">secure password source code</a>, we find
                      that this method is</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">create</span><span
class="p">(</span><span class="n">string</span><span class="p">,</span> <span class="ss">cost</span><span
class="p">:</span> <span class="n">cost</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>where <code>string</code> is the string to be hashed and
                      <code>cost</code> is the <em>cost parameter</em> that
                      determines the computational cost to calculate the hash.<span
                        class="intersentencespace"></span> Using a high cost
                      makes it computationally intractable to use the hash to
                      determine the original password, which is an important
                      security precaution in a production environment, but in
                      tests we want the <code>digest</code> method to be as
                      fast as possible.<span class="intersentencespace"></span>
                      The secure password source code has a line for this as
                      well:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">cost</span> <span class="o">=</span> <span
class="no">ActiveModel</span><span class="o">::</span><span class="no">SecurePassword</span><span
class="o">.</span><span class="n">min_cost</span> <span class="p">?</span> <span
class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span
class="o">::</span><span class="no">MIN_COST</span> <span class="p">:</span>
                                              <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
</pre></div>
                    </div>
                    <p>This rather obscure code, which you don’t need to
                      understand in detail, arranges for precisely the behavior
                      described above: it uses the minimum cost parameter in
                      tests and a normal (high) cost parameter in production.<span
                        class="intersentencespace"></span> (We’ll learn more
                      about the strange <code>?</code>-<code>:</code> notation
                      in <a href="#sec-remember_me_checkbox" class="hyperref">Section&nbsp;<span
                          class="ref">8.4.5</span></a>.)</p>
                    <p>There are several places we could put the resulting <code>digest</code>
                      method, but we’ll have an opportunity in <a href="#sec-remember_token"
                        class="hyperref">Section&nbsp;<span class="ref">8.4.1</span></a>
                      to reuse <code>digest</code> in the User model.<span class="intersentencespace"></span>
                      This suggests placing the method in <code>user.rb</code>.<span
                        class="intersentencespace"></span> Because we won’t
                      necessarily have access to a user object when calculating
                      the digest (as will be the case in the fixtures file),
                      we’ll attach the <code>digest</code> method to the User
                      class itself, which (as we saw briefly in <a href="#sec-constructors"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.1</span></a>)
                      makes it a <em>class method</em>.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-digest_method" class="hyperref">Listing&nbsp;<span
                          class="ref">8.18</span></a>.</p>
                    <div class="codelisting" id="_code-digest_method" data-tralics-id="uid781"
                      data-number="8.18">
                      <div class="heading"><span class="number">Listing 8.18:</span>
                        <span class="description">Adding a digest method for use
                          in fixtures.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>

  <span class="c1"># Returns the hash digest of the given string.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">digest</span><span class="p">(</span><span class="n">string</span><span
class="p">)</span>
<span class="hll">    <span class="n">cost</span> <span class="o">=</span> <span
class="no">ActiveModel</span><span class="o">::</span><span class="no">SecurePassword</span><span
class="o">.</span><span class="n">min_cost</span> <span class="p">?</span> <span
class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span
class="o">::</span><span class="no">MIN_COST</span> <span class="p">:</span>
</span><span class="hll">                                                  <span
class="no">BCrypt</span><span class="o">::</span><span class="no">Engine</span><span
class="o">.</span><span class="n">cost</span>
</span><span class="hll">    <span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">create</span><span
class="p">(</span><span class="n">string</span><span class="p">,</span> <span class="ss">cost</span><span
class="p">:</span> <span class="n">cost</span><span class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the <code>digest</code> method from <a href="#code-digest_method"
                        class="hyperref">Listing&nbsp;<span class="ref">8.18</span></a>,
                      we are now ready to create a user fixture for a valid
                      user, as shown in <a href="#code-real_user_fixture" class="hyperref">Listing&nbsp;<span
                          class="ref">8.19</span></a>.</p>
                    <div class="codelisting" id="_code-real_user_fixture" data-tralics-id="uid782"
                      data-number="8.19">
                      <div class="heading"><span class="number">Listing 8.19:</span>
                        <span class="description">A fixture for testing user
                          login.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="l-Scalar-Plain">michael</span><span
class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Michael Example</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael@example.com</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note in particular that fixtures support embedded Ruby,
                      which allows us to use</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="o">&lt;%=</span> <span class="no">User</span><span
class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="s1">'password'</span><span
class="p">)</span> <span class="o">%&gt;</span>
</pre></div>
                    </div>
                    <p>to create the valid password digest for the test user.</p>
                    <p>Although we’ve defined the <code>password_digest</code>
                      attribute required by <code>has_secure_password</code>,
                      sometimes it’s convenient to refer to the plain (virtual)
                      password as well.<span class="intersentencespace"></span>
                      Unfortunately, this is impossible to arrange with
                      fixtures, and adding a <code>password</code> attribute to
                      <a href="#code-real_user_fixture" class="hyperref">Listing&nbsp;<span
                          class="ref">8.19</span></a> causes Rails to complain
                      that there is no such column in the database (which is
                      true).<span class="intersentencespace"></span> We’ll make
                      do by adopting the convention that all fixture users have
                      the same password (<code>’password’</code>).</p>
                    <p>Having created a fixture with a valid user, we can
                      retrieve it inside a test as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:michael</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>Here <code>users</code> corresponds to the fixture
                      filename <code>users.yml</code>, while the symbol <code>:michael</code>
                      references user with the key shown in <a href="#code-real_user_fixture"
                        class="hyperref">Listing&nbsp;<span class="ref">8.19</span></a>.</p>
                    <p>With the fixture user as above, we can now write a test
                      for the layout links by converting the sequence enumerated
                      at the beginning of this section into code, as shown in <a
                        href="#code-user_login_test_valid_information" class="hyperref">Listing&nbsp;<span
                          class="ref">8.20</span></a>.</p>
                    <div class="codelisting" id="_code-user_login_test_valid_information"
                      data-tralics-id="uid783" data-number="8.20">
                      <div class="heading"><span class="number">Listing 8.20:</span>
                        <span class="description">A test for user logging in
                          with valid information.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_login_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersLoginTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

<span class="hll">  <span class="k">def</span> <span class="nf">setup</span>
</span><span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:michael</span><span
class="p">)</span>
</span><span class="hll">  <span class="k">end</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"login with valid information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">login_path</span>
    <span class="n">post</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">session</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span> <span class="ss">password</span><span
class="p">:</span> <span class="s1">'password'</span> <span class="p">}</span>
    <span class="n">assert_redirected_to</span> <span class="vi">@user</span>
    <span class="n">follow_redirect!</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">logout_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here we’ve used</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_redirected_to</span> <span class="vi">@user</span>
</pre></div>
                    </div>
                    <p>to check the right redirect target and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">follow_redirect!</span>
</pre></div>
                    </div>
                    <p>to actually visit the target page.<span class="intersentencespace"></span>
                      <a href="#code-user_login_test_valid_information" class="hyperref">Listing&nbsp;<span
                          class="ref">8.20</span></a> also verifies that the
                      login link disappears by verifying that there are <em>zero</em>
                      login path links on the page:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
</pre></div>
                    </div>
                    <p>By including the extra <code>count: 0</code> option, we
                      tell <code>assert_select</code> that we expect there to
                      be zero links matching the given pattern.<span class="intersentencespace"></span>
                      (Compare to <code>count: 2</code> in <a href="#code-layout_links_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.25</span></a>,
                      which checks for exactly two matching links.)</p>
                    <p>Because the application code was already working, this
                      test should be <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid784" data-tralics-id="uid784"
                      data-number="8.21">
                      <div class="heading"><span class="number">Listing 8.21:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test TEST=test/integration/users_login_test.rb \
&gt;                       TESTOPTS="--name test_login_with_valid_information"
</pre></div>
                      </div>
                    </div>
                    <p>This shows how to run a specific test within a test file
                      by passing the option</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">TESTOPTS="--name test_login_with_valid_information"</span>
</pre></div>
                    </div>
                    <p>containing the name of the test.<span class="intersentencespace"></span>
                      (A test’s name is just the word “test” and the words in
                      the test description joined using underscores.)</p>
                  </div>
                  <div id="_sec-login_upon_signup" data-tralics-id="uid785" class="subsection"
                    data-number="8.2.5">
                    <h3><a href="#sec-login_upon_signup" class="heading hyperref"><span
                          class="number">8.2.5 </span>Login upon signup</a></h3>
                    <p>Although our authentication system is now working, newly
                      registered users might be confused, as they are not logged
                      in by default.<span class="intersentencespace"></span>
                      Because it would be strange to force users to log in
                      immediately after signing up, we’ll log in new users
                      automatically as part of the signup process.<span class="intersentencespace"></span>
                      To arrange this behavior, all we need to do is add a call
                      to <code>log_in</code> in the Users controller <code>create</code>
                      action, as shown in <a href="#code-login_upon_signup" class="hyperref">Listing&nbsp;<span
                          class="ref">8.22</span></a>.<sup id="_cha-8_footnote-ref-10"
                        class="footnote"><a href="#cha-8_footnote-10">10</a></sup></p>
                    <div class="codelisting" id="_code-login_upon_signup" data-tralics-id="uid787"
                      data-number="8.22">
                      <div class="heading"><span class="number">Listing 8.22:</span>
                        <span class="description">Logging in the user upon
                          signup.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
<span class="hll">      <span class="n">log_in</span> <span class="vi">@user</span>
</span>      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Welcome to the Sample App!"</span>
      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To test the behavior from <a href="#code-login_upon_signup"
                        class="hyperref">Listing&nbsp;<span class="ref">8.22</span></a>,
                      we can add a line to the test from <a href="#code-a_test_for_valid_submission"
                        class="hyperref">Listing&nbsp;<span class="ref">7.26</span></a>
                      to check that the user is logged in.<span class="intersentencespace"></span>
                      It’s helpful in this context to define a <code>is_logged_in?</code>
                      helper method to parallel the <code>logged_in?</code>
                      helper defined in <a href="#code-logged_in_p" class="hyperref">Listing&nbsp;<span
                          class="ref">8.15</span></a>, which returns <code>true</code>
                      if there’s a user id in the (test) session and false
                      otherwise (<a href="#code-test_helper_sessions" class="hyperref">Listing&nbsp;<span
                          class="ref">8.23</span></a>).<span class="intersentencespace"></span>
                      (Because helper methods aren’t available in tests, we
                      can’t use the <code>current_user</code> as in <a href="#code-logged_in_p"
                        class="hyperref">Listing&nbsp;<span class="ref">8.15</span></a>,
                      but the <code>session</code> method is available, so we
                      use that instead.)<span class="intersentencespace"></span>
                      Here we use <code>is_logged_in?</code> instead of <code>logged_in?</code>
                      so that the test helper and Sessions helper methods have
                      different names, which prevents them from being mistaken
                      for each other.<sup id="_cha-8_footnote-ref-11" class="footnote"><a
                          href="#cha-8_footnote-11">11</a></sup></p>
                    <div class="codelisting" id="_code-test_helper_sessions" data-tralics-id="uid789"
                      data-number="8.23">
                      <div class="heading"><span class="number">Listing 8.23:</span>
                        <span class="description">A boolean method for login
                          status inside tests.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/test_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">ENV</span><span class="o">[</span><span
class="s1">'RAILS_ENV'</span><span class="o">]</span> <span class="o">||=</span> <span
class="s1">'test'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="k">class</span> <span class="nc">ActiveSupport</span><span class="o">::</span><span
class="no">TestCase</span>
  <span class="n">fixtures</span> <span class="ss">:all</span>

  <span class="c1"># Returns true if a test user is logged in.</span>
<span class="hll">  <span class="k">def</span> <span class="nf">is_logged_in?</span>
</span><span class="hll">    <span class="o">!</span><span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">].</span><span
class="n">nil?</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-test_helper_sessions" class="hyperref">Listing&nbsp;<span
                          class="ref">8.23</span></a>, we can assert that the
                      user is logged in after signup using the line shown in <a
                        href="#code-login_after_signup_test" class="hyperref">Listing&nbsp;<span
                          class="ref">8.24</span></a>.</p>
                    <div class="codelisting" id="_code-login_after_signup_test"
                      data-tralics-id="uid790" data-number="8.24">
                      <div class="heading"><span class="number">Listing 8.24:</span>
                        <span class="description">A test of login after signup.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_signup_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersSignupTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"valid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">post_via_redirect</span> <span class="n">users_path</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span>  <span class="s2">"Example User"</span><span
class="p">,</span>
                                            <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@example.com"</span><span class="p">,</span>
                                            <span class="ss">password</span><span
class="p">:</span>              <span class="s2">"password"</span><span class="p">,</span>
                                            <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"password"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
<span class="hll">    <span class="n">assert</span> <span class="n">is_logged_in?</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the test suite should still be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid791" data-tralics-id="uid791"
                      data-number="8.25">
                      <div class="heading"><span class="number">Listing 8.25:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-logging_out" data-tralics-id="cid54" class="section"
                  data-number="8.3">
                  <h2><a href="#sec-logging_out" class="heading hyperref"><span
                        class="number">8.3 </span>Logging out</a></h2>
                  <p>As discussed in <a href="#sec-sessions_and_failed_login" class="hyperref">Section&nbsp;<span
                        class="ref">8.1</span></a>, our authentication model is
                    to keep users logged in until they log out explicitly.<span
                      class="intersentencespace"></span> In this section, we’ll
                    add this necessary logout capability.<span class="intersentencespace"></span>
                    Because the “Log out” link has already been defined (<a href="#code-layout_login_logout_links"
                      class="hyperref">Listing&nbsp;<span class="ref">8.16</span></a>),
                    all we need is to write a valid controller action to destroy
                    user sessions.</p>
                  <p>So far, the Sessions controller actions have followed the
                    RESTful convention of using <code>new</code> for a login
                    page and <code>create</code> to complete the login.<span class="intersentencespace"></span>
                    We’ll continue this theme by using a <code>destroy</code>
                    action to delete sessions, i.e., to log out.<span class="intersentencespace"></span>
                    Unlike the login functionality, which we use in both <a href="#code-log_in_success"
                      class="hyperref">Listing&nbsp;<span class="ref">8.13</span></a>
                    and <a href="#code-login_upon_signup" class="hyperref">Listing&nbsp;<span
                        class="ref">8.22</span></a>, we’ll only be logging out
                    in one place, so we’ll put the relevant code directly in the
                    <code>destroy</code> action.<span class="intersentencespace"></span>
                    As we’ll see in <a href="#sec-remember_tests" class="hyperref">Section&nbsp;<span
                        class="ref">8.4.6</span></a>, this design (with a little
                    refactoring) will also make the authentication machinery
                    easier to test.</p>
                  <p>Logging out involves undoing the effects of the <code>log_in</code>
                    method from <a href="#code-log_in_function" class="hyperref">Listing&nbsp;<span
                        class="ref">8.12</span></a>, which involves deleting the
                    user id from the session.<sup id="_cha-8_footnote-ref-12" class="footnote"><a
                        href="#cha-8_footnote-12">12</a></sup><span class="intersentencespace"></span>
                    To do this, we use the <code>delete</code> method as
                    follows:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="n">session</span><span class="o">.</span><span
class="n">delete</span><span class="p">(</span><span class="ss">:user_id</span><span
class="p">)</span>
</pre></div>
                  </div>
                  <p>We’ll also set the current user to <code>nil</code>,
                    although in the present case this won’t matter because of an
                    immediate redirect to the root URL.<sup id="_cha-8_footnote-ref-13"
                      class="footnote"><a href="#cha-8_footnote-13">13</a></sup><span
                      class="intersentencespace"></span> As with <code>log_in</code>
                    and associated methods, we’ll put the resulting <code>log_out</code>
                    method in the Sessions helper module, as shown in <a href="#code-log_out_method"
                      class="hyperref">Listing&nbsp;<span class="ref">8.26</span></a>.</p>
                  <div class="codelisting" id="_code-log_out_method" data-tralics-id="uid794"
                    data-number="8.26">
                    <div class="heading"><span class="number">Listing 8.26:</span>
                      <span class="description">The <code>log_out</code>
                        method.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Logs out the current user.</span>
  <span class="k">def</span> <span class="nf">log_out</span>
<span class="hll">    <span class="n">session</span><span class="o">.</span><span
class="n">delete</span><span class="p">(</span><span class="ss">:user_id</span><span
class="p">)</span>
</span><span class="hll">    <span class="vi">@current_user</span> <span class="o">=</span> <span
class="kp">nil</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>We can put the <code>log_out</code> method to use in the
                    Sessions controller’s <code>destroy</code> action, as shown
                    in <a href="#code-destroy_session" class="hyperref">Listing&nbsp;<span
                        class="ref">8.27</span></a>.</p>
                  <div class="codelisting" id="_code-destroy_session" data-tralics-id="uid795"
                    data-number="8.27">
                    <div class="heading"><span class="number">Listing 8.27:</span>
                      <span class="description">Destroying a session (user
                        logout).<span class="intersentencespace"></span> <span
                          class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
      <span class="n">log_in</span> <span class="n">user</span>
      <span class="n">redirect_to</span> <span class="n">user</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
<span class="hll">    <span class="n">log_out</span>
</span><span class="hll">    <span class="n">redirect_to</span> <span class="n">root_url</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>To test the logout machinery, we can add some steps to the
                    user login test from <a href="#code-user_login_test_valid_information"
                      class="hyperref">Listing&nbsp;<span class="ref">8.20</span></a>.<span
                      class="intersentencespace"></span> After logging in, we
                    use <code>delete</code> to issue a <span class="tt">DELETE</span>
                    request to the logout path (<a href="#table-RESTful_sessions"
                      class="hyperref">Table&nbsp;<span class="ref">8.1</span></a>)
                    and verify that the user is logged out and redirected to the
                    root URL. We also check that the login link reappears and
                    that the logout and profile links disappear.<span class="intersentencespace"></span>
                    The new steps appear in <a href="#code-user_logout_test" class="hyperref">Listing&nbsp;<span
                        class="ref">8.28</span></a>.</p>
                  <div class="codelisting" id="_code-user_logout_test" data-tralics-id="uid796"
                    data-number="8.28">
                    <div class="heading"><span class="number">Listing 8.28:</span>
                      <span class="description">A test for user logout.<span class="intersentencespace"></span>
                        <span style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">test/integration/users_login_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersLoginTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"login with valid information followed by logout"</span> <span
class="k">do</span>
</span>    <span class="n">get</span> <span class="n">login_path</span>
    <span class="n">post</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">session</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span> <span class="ss">password</span><span
class="p">:</span> <span class="s1">'password'</span> <span class="p">}</span>
<span class="hll">    <span class="n">assert</span> <span class="n">is_logged_in?</span>
</span>    <span class="n">assert_redirected_to</span> <span class="vi">@user</span>
    <span class="n">follow_redirect!</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">logout_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
<span class="hll">    <span class="n">delete</span> <span class="n">logout_path</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="n">is_logged_in?</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
</span><span class="hll">    <span class="n">follow_redirect!</span>
</span><span class="hll">    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">login_path</span>
</span><span class="hll">    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">logout_path</span><span class="p">,</span>      <span
class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
</span><span class="hll">    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">),</span> <span class="ss">count</span><span
class="p">:</span> <span class="mi">0</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>(Now that we have <code>is_logged_in?</code> available in
                    tests, we’ve also thrown in a bonus <code>assert
                      is_logged_in?</code> immediately after posting valid
                    information to the sessions path.)</p>
                  <p>With the session <code>destroy</code> action thus defined
                    and tested, the initial signup/login/logout triumvirate is
                    complete, and the test suite should be <span style="color: ForestGreen"><span
                        class="sc"></span><span class="sc"><strong>green</strong></span><span
                        class="sc"></span></span>:</p>
                  <div class="codelisting" id="_uid797" data-tralics-id="uid797"
                    data-number="8.29">
                    <div class="heading"><span class="number">Listing 8.29:</span>
                      <span class="description"><span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span></span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-remember_me" data-tralics-id="cid55" class="section"
                  data-number="8.4">
                  <h2><a href="#sec-remember_me" class="heading hyperref"><span
                        class="number">8.4 </span>Remember me</a></h2>
                  <p>The login system we finished in <a href="#sec-logging_in"
                      class="hyperref">Section&nbsp;<span class="ref">8.2</span></a>
                    is self-contained and fully functional, but most websites
                    have the additional capability of remembering users’
                    sessions even after they close their browsers.<span class="intersentencespace"></span>
                    In this section, we’ll start by remembering user logins by
                    default, expiring their sessions only when they explicitly
                    log out.<span class="intersentencespace"></span> In <a href="#sec-remember_me_checkbox"
                      class="hyperref">Section&nbsp;<span class="ref">8.4.5</span></a>,
                    we’ll enable a common alternative model, a “remember me”
                    checkbox that allows users to opt out of being remembered.<span
                      class="intersentencespace"></span> Both of these models
                    are professional-grade, with the first used by sites such as
                    <a href="http://github.com/" target="_blank">GitHub</a> and
                    <a href="http://bitbucket.org/" target="_blank">Bitbucket</a>,
                    and the second used by sites such as <a href="http://www.facebook.com/"
                      target="_blank">Facebook</a> and <a href="http://twitter.com/"
                      target="_blank">Twitter</a>.</p>
                  <div id="_sec-remember_token" data-tralics-id="uid798" class="subsection"
                    data-number="8.4.1">
                    <h3><a href="#sec-remember_token" class="heading hyperref"><span
                          class="number">8.4.1 </span>Remember token and digest</a></h3>
                    <p>In <a href="#sec-logging_in" class="hyperref">Section&nbsp;<span
                          class="ref">8.2</span></a>, we used the Rails <code>session</code>
                      method to store the user’s id, but this information
                      disappears when the user closes their browser.<span class="intersentencespace"></span>
                      In this section, we’ll take the first step toward
                      persistent sessions by generating a <em>remember token</em>
                      appropriate for creating permanent cookies using the <code>cookies</code>
                      method, together with a secure <em>remember digest</em>
                      for authenticating those tokens.</p>
                    <p>As noted in <a href="#sec-a_working_log_in_method" class="hyperref">Section&nbsp;<span
                          class="ref">8.2.1</span></a>, information stored using
                      <code>session</code> is automatically secure, but this is
                      not the case with information stored using <code>cookies</code>.<span
                        class="intersentencespace"></span> In particular,
                      persistent cookies are vulnerable to <a href="http://en.wikipedia.org/wiki/Session_hijacking"
                        target="_blank">session hijacking</a>, in which an
                      attacker uses a stolen remember token to log in as a
                      particular user.<span class="intersentencespace"></span>
                      There are four main ways to steal cookies: (1) using a <a
                        href="https://en.wikipedia.org/wiki/Packet_analyzer" target="_blank">packet
                        sniffer</a> to detect cookies being passed over insecure
                      networks,<sup id="_cha-8_footnote-ref-14" class="footnote"><a
                          href="#cha-8_footnote-14">14</a></sup> (2)
                      compromising a database containing remember tokens, (3)
                      using <a href="http://en.wikipedia.org/wiki/Cross-site_scripting"
                        target="_blank">cross-site scripting (XSS)</a>, and (4)
                      gaining physical access to a machine with a logged-in
                      user.<span class="intersentencespace"></span> We prevented
                      the first problem in <a href="#sec-professional_grade_deployment"
                        class="hyperref">Section&nbsp;<span class="ref">7.5</span></a>
                      by using <a href="https://en.wikipedia.org/wiki/Transport_Layer_Security"
                        target="_blank">Secure Sockets Layer</a> (SSL)
                      site-wide, which protects network data from packet
                      sniffers.<span class="intersentencespace"></span> We’ll
                      prevent the second problem by storing a hash digest of the
                      remember token instead of the token itself, in much the
                      same way that we stored password digests instead of raw
                      passwords in <a href="#sec-adding_a_secure_password" class="hyperref">Section&nbsp;<span
                          class="ref">6.3</span></a>.<span class="intersentencespace"></span>
                      Rails automatically prevents the third problem by escaping
                      any content inserted into view templates.<span class="intersentencespace"></span>
                      Finally, although there’s no iron-clad way to stop
                      attackers who have physical access to a logged-in
                      computer, we’ll minimize the fourth problem by changing
                      tokens every time a user logs out and by taking care to <em>cryptographically
                        sign</em> any potentially sensitive information we place
                      on the browser.</p>
                    <p>With these design and security considerations in mind,
                      our plan for creating persistent sessions appears as
                      follows:</p>
                    <ol>
                      <li>Create a random string of digits for use as a remember
                        token.<span class="intersentencespace"></span> </li>
                      <li>Place the token in the browser cookies with an
                        expiration date far in the future.<span class="intersentencespace"></span>
                      </li>
                      <li>Save the hash digest of the token to the database.<span
                          class="intersentencespace"></span> </li>
                      <li>Place an encrypted version of the user’s id in the
                        browser cookies.<span class="intersentencespace"></span>
                      </li>
                      <li>When presented with a cookie containing a persistent
                        user id, find the user in the database using the given
                        id, and verify that the remember token cookie matches
                        the associated hash digest from the database.<span class="intersentencespace"></span>
                      </li>
                    </ol>
                    <p>Note how similar the final step is to logging a user in,
                      where we retrieve the user by email address and then
                      verify (using the <code>authenticate</code> method) that
                      the submitted password matches the password digest (<a href="#code-find_authenticate_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.5</span></a>).<span
                        class="intersentencespace"></span> As a result, our
                      implementation will parallel aspects of <code>has_secure_password</code>.</p>
                    <p>We’ll start by adding the required <code>remember_digest</code>
                      attribute to the User model, as shown in <a href="#fig-user_model_remember_digest"
                        class="hyperref">Figure&nbsp;<span class="ref">8.9</span></a>.</p>
                    <div class="center figure" id="_fig-user_model_remember_digest"
                      data-tralics-id="uid805" data-number="8.9"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_remember_digest.png"
                          alt="user_model_remember_digest"></span>
                      <div class="caption"><span class="header">Figure 8.9: </span><span
                          class="description">The User model with an added <code>remember_digest</code>
                          attribute. </span></div>
                    </div>
                    <p>To add the data model from <a href="#fig-user_model_remember_digest"
                        class="hyperref">Figure&nbsp;<span class="ref">8.9</span></a>
                      to our application, we’ll generate a migration:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_remember_digest_to_users remember_digest:string
</pre></div>
                    </div>
                    <p>(Compare to the password digest migration in <a href="#sec-a_hashed_password"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.1</span></a>.)<span
                        class="intersentencespace"></span> As in previous
                      migrations, we’ve used a migration name that ends in <code>_to_users</code>
                      to tell Rails that the migration is designed to alter the
                      <code>users</code> table in the database.<span class="intersentencespace"></span>
                      Because we also included the attribute (<code>remember_digest</code>)
                      and type (<code>string</code>), Rails generates a default
                      migration for us, as shown in <a href="#code-add_remember_digest_to_users_generated"
                        class="hyperref">Listing&nbsp;<span class="ref">8.30</span></a>.</p>
                    <div class="codelisting" id="_code-add_remember_digest_to_users_generated"
                      data-tralics-id="uid806" data-number="8.30">
                      <div class="heading"><span class="number">Listing 8.30:</span>
                        <span class="description">The generated migration for
                          the remember digest.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/migrate/[timestamp]_add_remember_digest_to_users.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AddRememberDigestToUsers</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">add_column</span> <span class="ss">:users</span><span class="p">,</span> <span
class="ss">:remember_digest</span><span class="p">,</span> <span class="ss">:string</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because we don’t expect to retrieve users by remember
                      digest, there’s no need to put an index on the <code>remember_digest</code>
                      column, and we can use the default migration as generated
                      above:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                    <p>Now we have to decide what to use as a remember token.<span
                        class="intersentencespace"></span> There are many mostly
                      equivalent possibilities—essentially, any long random
                      string will do.<span class="intersentencespace"></span>
                      The <code>urlsafe_base64</code> method from the <code>SecureRandom</code>
                      module in the Ruby standard library fits the bill:<sup id="_cha-8_footnote-ref-15"
                        class="footnote"><a href="#cha-8_footnote-15">15</a></sup>
                      it returns a random string of length 22 composed of the
                      characters A–Z, a–z, 0–9, “-”, and “_” (for a total of 64
                      possibilities, thus “<a href="http://en.wikipedia.org/wiki/Base64"
                        target="_blank">base64</a>”).<span class="intersentencespace"></span>
                      A typical base64 string appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails console
<span class="gp">&gt;</span>&gt; SecureRandom.urlsafe_base64
<span class="go">=&gt; "q5lt38hQDc_959PVoo6b7A"</span>
</pre></div>
                    </div>
                    <p>Just as it’s perfectly fine if two users have the same
                      password,<sup id="_cha-8_footnote-ref-16" class="footnote"><a
                          href="#cha-8_footnote-16">16</a></sup> there’s no need
                      for remember tokens to be unique, but it’s more secure if
                      they are.<sup id="_cha-8_footnote-ref-17" class="footnote"><a
                          href="#cha-8_footnote-17">17</a></sup><span class="intersentencespace"></span>
                      In the case of the base64 string above, each of the 22
                      characters has 64 possibilities, so the probability of two
                      remember tokens colliding is a negligibly small <span class="inline_math"><span
                          class="MathJax_Preview" style="color: inherit;"></span><span
                          class="MathJax" id="MathJax-Element-1-Frame"><nobr><span
                              class="math" id="MathJax-Span-1" role="math" style="width: 10.537em; display: inline-block;"><span
                                style="display: inline-block; position: relative; width: 9.908em; height: 0px; font-size: 106%;"><span
                                  style="position: absolute; clip: rect(2.938em 1000.003em 4.405em -999.997em); top: -3.981em; left: 0.003em;"><span
                                    class="mrow" id="MathJax-Span-2"><span class="mn"
                                      id="MathJax-Span-3" style="font-family: MathJax_Main;">1</span><span
                                      class="texatom" id="MathJax-Span-4"><span
                                        class="mrow" id="MathJax-Span-5"><span class="mo"
                                          id="MathJax-Span-6" style="font-family: MathJax_Main;">/</span></span></span><span
                                      class="msubsup" id="MathJax-Span-7"><span
                                        style="display: inline-block; position: relative; width: 1.785em; height: 0px;"><span
                                          style="position: absolute; clip: rect(3.147em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            class="mn" id="MathJax-Span-8" style="font-family: MathJax_Main;">64</span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                          style="position: absolute; top: -4.4em; left: 0.998em;"><span
                                            class="texatom" id="MathJax-Span-9"><span
                                              class="mrow" id="MathJax-Span-10"><span
                                                class="mn" id="MathJax-Span-11"
                                                style="font-size: 70.7%; font-family: MathJax_Main;">22</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                      class="mo" id="MathJax-Span-12" style="font-family: MathJax_Main; padding-left: 0.265em;">=</span><span
                                      class="msubsup" id="MathJax-Span-13" style="padding-left: 0.265em;"><span
                                        style="display: inline-block; position: relative; width: 2.204em; height: 0px;"><span
                                          style="position: absolute; clip: rect(3.147em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            class="mn" id="MathJax-Span-14" style="font-family: MathJax_Main;">2</span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                          style="position: absolute; top: -4.347em; left: 0.527em;"><span
                                            class="texatom" id="MathJax-Span-15"><span
                                              class="mrow" id="MathJax-Span-16"><span
                                                class="mo" id="MathJax-Span-17"
                                                style="font-size: 70.7%; font-family: MathJax_Main;">−</span><span
                                                class="mn" id="MathJax-Span-18"
                                                style="font-size: 70.7%; font-family: MathJax_Main;">132</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                      class="mo" id="MathJax-Span-19" style="font-family: MathJax_Main; padding-left: 0.265em;">≈</span><span
                                      class="msubsup" id="MathJax-Span-20" style="padding-left: 0.265em;"><span
                                        style="display: inline-block; position: relative; width: 2.309em; height: 0px;"><span
                                          style="position: absolute; clip: rect(3.147em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            class="mn" id="MathJax-Span-21" style="font-family: MathJax_Main;">10</span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                          style="position: absolute; top: -4.347em; left: 0.998em;"><span
                                            class="texatom" id="MathJax-Span-22"><span
                                              class="mrow" id="MathJax-Span-23"><span
                                                class="mo" id="MathJax-Span-24"
                                                style="font-size: 70.7%; font-family: MathJax_Main;">−</span><span
                                                class="mn" id="MathJax-Span-25"
                                                style="font-size: 70.7%; font-family: MathJax_Main;">40</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span><span
                                    style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.281em; vertical-align: -0.331em;"></span></span></nobr></span>
                        <script type="math/tex" id="MathJax-Element-1"> 1/64^{22} = 2^{-132} \approx 10^{-40} </script></span>.<span
                        class="intersentencespace"></span> As a bonus, by using
                      base64 strings specifically designed to be safe in URLs
                      (as indicated by the name <code>urlsafe_base64</code>),
                      we’ll be able to use the same token generator to make
                      account activation and password reset links in <a href="#cha-account_activation_and_password_reset"
                        class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>.</p>
                    <p>Remembering users involves creating a remember token and
                      saving the digest of the token to the database.<span class="intersentencespace"></span>
                      We’ve already defined a <code>digest</code> method for
                      use in the test fixtures (<a href="#code-digest_method" class="hyperref">Listing&nbsp;<span
                          class="ref">8.18</span></a>), and we can use the
                      results of the discussion above to create a <code>new_token</code>
                      method to create a new token.<span class="intersentencespace"></span>
                      As with <code>digest</code>, the new token method doesn’t
                      need a user object, so we’ll make it a class method.<sup id="_cha-8_footnote-ref-18"
                        class="footnote"><a href="#cha-8_footnote-18">18</a></sup><span
                        class="intersentencespace"></span> The result is the
                      User model shown in <a href="#code-token_method" class="hyperref">Listing&nbsp;<span
                          class="ref">8.31</span></a>.</p>
                    <div class="codelisting" id="_code-token_method" data-tralics-id="uid811"
                      data-number="8.31">
                      <div class="heading"><span class="number">Listing 8.31:</span>
                        <span class="description">Adding a method for generating
                          tokens.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>

  <span class="c1"># Returns the hash digest of the given string.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">digest</span><span class="p">(</span><span class="n">string</span><span
class="p">)</span>
    <span class="n">cost</span> <span class="o">=</span> <span class="no">ActiveModel</span><span
class="o">::</span><span class="no">SecurePassword</span><span class="o">.</span><span
class="n">min_cost</span> <span class="p">?</span> <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">::</span><span
class="no">MIN_COST</span> <span class="p">:</span>
                                                  <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">string</span><span
class="p">,</span> <span class="ss">cost</span><span class="p">:</span> <span class="n">cost</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns a random token.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">new_token</span>
<span class="hll">    <span class="no">SecureRandom</span><span class="o">.</span><span
class="n">urlsafe_base64</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Our plan for the implementation is to make a <code>user.remember</code>
                      method that associates a remember token with the user and
                      saves the corresponding remember digest to the database.<span
                        class="intersentencespace"></span> Because of the
                      migration in <a href="#code-add_remember_digest_to_users_generated"
                        class="hyperref">Listing&nbsp;<span class="ref">8.30</span></a>,
                      the User model already has a <code>remember_digest</code>
                      attribute, but it doesn’t yet have a <code>remember_token</code>
                      attribute.<span class="intersentencespace"></span> We need
                      a way to make a token available via <code>user.remember_token</code>
                      (for storage in the cookies) <em>without</em> storing it
                      in the database.<span class="intersentencespace"></span>
                      We solved a similar issue with secure passwords in <a href="#sec-adding_a_secure_password"
                        class="hyperref">Section&nbsp;<span class="ref">6.3</span></a>,
                      which paired a virtual <code>password</code> attribute
                      with a secure <code>password_digest</code> attribute in
                      the database.<span class="intersentencespace"></span> In
                      that case, the virtual <code>password</code> attribute
                      was created automatically by <code>has_secure_password</code>,
                      but we’ll have to write the code for a <code>remember_token</code>
                      ourselves.<span class="intersentencespace"></span> The way
                      to do this is to use <code>attr_accessor</code> to create
                      an accessible attribute, which we saw before in <a href="#sec-a_user_class"
                        class="hyperref">Section&nbsp;<span class="ref">4.4.5</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">remember</span>
<span class="hll">    <span class="nb">self</span><span class="o">.</span><span
class="n">remember_token</span> <span class="o">=</span> <span class="o">.</span><span
class="n">.</span><span class="o">.</span>
</span><span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:remember_digest</span><span class="p">,</span> <span class="o">.</span><span
class="n">.</span><span class="o">.</span><span class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Note the form of the assignment in the first line of the
                      <code>remember</code> method.<span class="intersentencespace"></span>
                      Because of the way Ruby handles assignments inside
                      objects, without <code>self</code> the assignment would
                      create a <em>local</em> variable called <code>remember_token</code>,
                      which isn’t what we want.<span class="intersentencespace"></span>
                      Using <code>self</code> ensures that assignment sets the
                      user’s <code>remember_token</code> attribute.<span class="intersentencespace"></span>
                      (Now you know why the <code>before_save</code> callback
                      from <a href="#code-email_downcase" class="hyperref">Listing&nbsp;<span
                          class="ref">6.31</span></a> uses <code>self.email</code>
                      instead of just <code>email</code>.)<span class="intersentencespace"></span>
                      Meanwhile, the second line of <code>remember</code> uses
                      the <code>update_attribute</code> method to update the
                      remember digest.<span class="intersentencespace"></span>
                      (As noted in <a href="#sec-updating_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.5</span></a>, this method bypasses the
                      validations, which is necessary in this case because we
                      don’t have access to the user’s password or confirmation.)</p>
                    <p>With these considerations in mind, we can create a valid
                      token and associated digest by first making a new remember
                      token using <code>User.new_token</code>, and then
                      updating the remember digest with the result of applying <code>User.digest</code>.<span
                        class="intersentencespace"></span> This procedure gives
                      the <code>remember</code> method shown in <a href="#code-user_model_remember"
                        class="hyperref">Listing&nbsp;<span class="ref">8.32</span></a>.</p>
                    <div class="codelisting" id="_code-user_model_remember" data-tralics-id="uid812"
                      data-number="8.32">
                      <div class="heading"><span class="number">Listing 8.32:</span>
                        <span class="description">Adding a <code>remember</code>
                          method to the User model.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span>
</span>  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>

  <span class="c1"># Returns the hash digest of the given string.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">digest</span><span class="p">(</span><span class="n">string</span><span
class="p">)</span>
    <span class="n">cost</span> <span class="o">=</span> <span class="no">ActiveModel</span><span
class="o">::</span><span class="no">SecurePassword</span><span class="o">.</span><span
class="n">min_cost</span> <span class="p">?</span> <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">::</span><span
class="no">MIN_COST</span> <span class="p">:</span>
                                                  <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">string</span><span
class="p">,</span> <span class="ss">cost</span><span class="p">:</span> <span class="n">cost</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns a random token.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">new_token</span>
    <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
  <span class="k">end</span>

  <span class="c1"># Remembers a user in the database for use in persistent sessions.</span>
  <span class="k">def</span> <span class="nf">remember</span>
<span class="hll">    <span class="nb">self</span><span class="o">.</span><span
class="n">remember_token</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new_token</span>
</span><span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:remember_digest</span><span class="p">,</span> <span class="no">User</span><span
class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="n">remember_token</span><span
class="p">))</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-login_with_remembering" data-tralics-id="uid813"
                    class="subsection" data-number="8.4.2">
                    <h3><a href="#sec-login_with_remembering" class="heading hyperref"><span
                          class="number">8.4.2 </span>Login with remembering</a></h3>
                    <p>Having created a working <code>user.remember</code>
                      method, we’re now in a position to create a persistent
                      session by storing a user’s (encrypted) id and remember
                      token as permanent cookies on the browser.<span class="intersentencespace"></span>
                      The way to do this is with the <code>cookies</code>
                      method, which (as with <code>session</code>) we can treat
                      as a hash.<span class="intersentencespace"></span> A
                      cookie consists of two pieces of information, a <code>value</code>
                      and an optional <code>expires</code> date.<span class="intersentencespace"></span>
                      For example, we could make a persistent session by
                      creating a cookie with value equal to the remember token
                      that expires 20&nbsp;years from now:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">cookies</span><span class="o">[</span><span
class="ss">:remember_token</span><span class="o">]</span> <span class="o">=</span> <span
class="p">{</span> <span class="ss">value</span><span class="p">:</span>   <span
class="n">remember_token</span><span class="p">,</span>
                             <span class="ss">expires</span><span class="p">:</span> <span
class="mi">20</span><span class="o">.</span><span class="n">years</span><span class="o">.</span><span
class="n">from_now</span><span class="o">.</span><span class="n">utc</span> <span
class="p">}</span>
</pre></div>
                    </div>
                    <p>(This uses one of the convenient Rails time helpers, as
                      discussed in <a href="#aside-time_helpers" class="hyperref">Box&nbsp;<span
                          class="ref">8.2</span></a>.)<span class="intersentencespace"></span>
                      This pattern of setting a cookie that expires 20 years in
                      the future is so common that Rails has a special <code>permanent</code>
                      method to implement it, so that we can simply write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">cookies</span><span class="o">.</span><span
class="n">permanent</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span> <span class="o">=</span> <span class="n">remember_token</span>
</pre></div>
                    </div>
                    <p>This causes Rails to set the expiration to <code>20.years.from_now</code>
                      automatically.</p>
                    <div class="aside" id="_aside-time_helpers" data-tralics-id="uid814"
                      data-number="8.2">
                      <div class="heading"><span class="number">Box 8.2.</span>
                        <span class="description">Cookies expire <span class="tt">20.years.from_now</span></span></div>
                      <p>You may recall from <a href="#sec-a_class_of_our_own"
                          class="hyperref">Section&nbsp;<span class="ref">4.4.2</span></a>
                        that Ruby lets you add methods to <em>any</em> class,
                        even built-in ones.<span class="intersentencespace"></span>
                        In that section, we added a <span class="tt">palindrome?</span>
                        method to the <span class="tt">String</span> class (and
                        discovered as a result that <span class="tt">"deified"</span>
                        is a palindrome), and we also saw how Rails adds a <span
                          class="tt">blank?</span> method to class <span class="tt">Object</span>
                        (so that <span class="tt">"".blank?</span>, <span class="tt">"&nbsp;".blank?</span>,
                        and <span class="tt">nil.blank?</span> are all <span class="tt">true</span>).<span
                          class="intersentencespace"></span> The <span class="tt">cookies.permanent</span>
                        method, which creates “permanent” cookies with an
                        expiration <span class="tt">20.years.from_now</span>,
                        gives yet another example of this practice through one
                        of Rails’ <em>time helpers</em>, which are methods
                        added to <span class="tt">Fixnum</span> (the base class
                        for integers):</p>
                      <pre>  $ rails console
  &gt;&gt; 1.year.from_now
  =&gt; Sun, 09 Aug 2015 16:48:17 UTC +00:00
  &gt;&gt; 10.weeks.ago
  =&gt; Sat, 31 May 2014 16:48:45 UTC +00:00</pre>
                      <p>Rails adds other helpers, too:</p>
                      <pre>  &gt;&gt; 1.kilobyte
  =&gt; 1024
  &gt;&gt; 5.megabytes
  =&gt; 5242880</pre>
                      <p>These are useful for upload validations, making it easy
                        to restrict, say, image uploads to <span class="tt">5.megabytes</span>.</p>
                      <p>Although it should be used with caution, the
                        flexibility to add methods to built-in classes allows
                        for extraordinarily natural additions to plain Ruby.<span
                          class="intersentencespace"></span> Indeed, much of the
                        elegance of Rails ultimately derives from the
                        malleability of the underlying Ruby language.</p>
                    </div>
                    <p>To store the user’s id in the cookies, we could follow
                      the pattern used with the <code>session</code> method (<a
                        href="#code-log_in_function" class="hyperref">Listing&nbsp;<span
                          class="ref">8.12</span></a>) using something like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">cookies</span><span class="o">[</span><span
class="ss">:user_id</span><span class="o">]</span> <span class="o">=</span> <span
class="n">user</span><span class="o">.</span><span class="n">id</span>
</pre></div>
                    </div>
                    <p>Because it places the id as plain text, this method
                      exposes the form of the application’s cookies and makes it
                      easier for an attacker to compromise user accounts.<span class="intersentencespace"></span>
                      To avoid this problem, we’ll use a <em>signed</em>
                      cookie, which securely encrypts the cookie before placing
                      it on the browser:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">cookies</span><span class="o">.</span><span
class="n">signed</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
</pre></div>
                    </div>
                    <p>Because we want the user id to be paired with the
                      permanent remember token, we should make it permanent as
                      well, which we can do by chaining the <code>signed</code>
                      and <code>permanent</code> methods:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">cookies</span><span class="o">.</span><span
class="n">permanent</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span> <span
class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span>
</pre></div>
                    </div>
                    <p>After the cookies are set, on subsequent page views we
                      can retrieve the user with code like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">User</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>where <code>cookies.signed[:user_id]</code>
                      automatically decrypts the user id cookie.<span class="intersentencespace"></span>
                      We can then use bcrypt to verify that <code>cookies[:remember_token]</code>
                      matches the <code>remember_digest</code> generated in <a
                        href="#code-user_model_remember" class="hyperref">Listing&nbsp;<span
                          class="ref">8.32</span></a>.<span class="intersentencespace"></span>
                      (In case you’re wondering why we don’t just use the signed
                      user id, without the remember token, this would allow an
                      attacker with possession of the encrypted id to log in as
                      the user in perpetuity.<span class="intersentencespace"></span>
                      In the present design, an attacker with both cookies can
                      log in as the user only until the user logs out.)</p>
                    <p>The final piece of the puzzle is to verify that a given
                      remember token matches the user’s remember digest, and in
                      this context there are a couple of equivalent ways to use
                      bcrypt to verify a match.<span class="intersentencespace"></span>
                      If you look at the <a href="https://github.com/rails/rails/blob/master/activemodel/lib/active_model/secure_password.rb"
                        target="_blank">secure password source code</a>, you’ll
                      find a comparison like this:<sup id="_cha-8_footnote-ref-19"
                        class="footnote"><a href="#cha-8_footnote-19">19</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="n">password_digest</span><span class="p">)</span> <span
class="o">==</span> <span class="n">unencrypted_password</span>
</pre></div>
                    </div>
                    <p>In our case, the analogous code would look like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="n">remember_digest</span><span class="p">)</span> <span
class="o">==</span> <span class="n">remember_token</span>
</pre></div>
                    </div>
                    <p>If you think about it, this code is really strange: it
                      appears to be comparing a bcrypt password digest directly
                      with a token, which would imply <em>decrypting</em> the
                      digest in order to compare using <code>==</code>.<span class="intersentencespace"></span>
                      But the whole point of using bcrypt is for hashing to be
                      irreversible, so this can’t be right.<span class="intersentencespace"></span>
                      Indeed, digging into the <a href="https://github.com/codahale/bcrypt-ruby/blob/master/lib/bcrypt/password.rb"
                        target="_blank">source code of the bcrypt gem</a>
                      verifies that the comparison operator <code>==</code> is
                      being <em>redefined</em>, and under the hood the
                      comparison above is equivalent to the following:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="n">remember_digest</span><span class="p">)</span><span
class="o">.</span><span class="n">is_password?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Instead of <code>==</code>, this uses the boolean method
                      <code>is_password?</code> to perform the comparison.<span
                        class="intersentencespace"></span> Because its meaning
                      is a little clearer, we’ll prefer this second comparison
                      form in the application code.</p>
                    <p>The above discussion suggests putting the digest–token
                      comparison into an <code>authenticated?</code> method in
                      the User model, which plays a similar role to the <code>authenticate</code>
                      method provided by <code>has_secure_password</code> for
                      authenticating a user (<a href="#code-log_in_success" class="hyperref">Listing&nbsp;<span
                          class="ref">8.13</span></a>).<span class="intersentencespace"></span>
                      The implementation appears in <a href="#code-authenticated_p"
                        class="hyperref">Listing&nbsp;<span class="ref">8.33</span></a>.</p>
                    <div class="codelisting" id="_code-authenticated_p" data-tralics-id="uid816"
                      data-number="8.33">
                      <div class="heading"><span class="number">Listing 8.33:</span>
                        <span class="description">Adding an <code>authenticated?</code>
                          method to the User model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>

  <span class="c1"># Returns the hash digest of the given string.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">digest</span><span class="p">(</span><span class="n">string</span><span
class="p">)</span>
    <span class="n">cost</span> <span class="o">=</span> <span class="no">ActiveModel</span><span
class="o">::</span><span class="no">SecurePassword</span><span class="o">.</span><span
class="n">min_cost</span> <span class="p">?</span> <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">::</span><span
class="no">MIN_COST</span> <span class="p">:</span>
                                                  <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">string</span><span
class="p">,</span> <span class="ss">cost</span><span class="p">:</span> <span class="n">cost</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns a random token.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">new_token</span>
    <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
  <span class="k">end</span>

  <span class="c1"># Remembers a user in the database for use in persistent sessions.</span>
  <span class="k">def</span> <span class="nf">remember</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">remember_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
    <span class="n">update_attribute</span><span class="p">(</span><span class="ss">:remember_digest</span><span
class="p">,</span> <span class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">))</span>
  <span class="k">end</span>

  <span class="c1"># Returns true if the given token matches the digest.</span>
  <span class="k">def</span> <span class="nf">authenticated?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
<span class="hll">    <span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="n">remember_digest</span><span class="p">)</span><span
class="o">.</span><span class="n">is_password?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Although the <code>authenticated?</code> method in <a href="#code-authenticated_p"
                        class="hyperref">Listing&nbsp;<span class="ref">8.33</span></a>
                      is tied specifically to the remember token, it will turn
                      out to be useful in other contexts as well, and we’ll
                      generalize it in <a href="#cha-account_activation_and_password_reset"
                        class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>.</p>
                    <p>We’re now in a position to remember a logged-in user,
                      which we’ll do by adding a <code>remember</code> helper
                      to go along with <code>log_in</code>, as shown in <a href="#code-log_in_with_remember"
                        class="hyperref">Listing&nbsp;<span class="ref">8.34</span></a>.</p>
                    <div class="codelisting" id="_code-log_in_with_remember" data-tralics-id="uid817"
                      data-number="8.34">
                      <div class="heading"><span class="number">Listing 8.34:</span>
                        <span class="description">Logging in and remembering a
                          user.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
      <span class="n">log_in</span> <span class="n">user</span>
<span class="hll">      <span class="n">remember</span> <span class="n">user</span>
</span>      <span class="n">redirect_to</span> <span class="n">user</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="n">log_out</span>
    <span class="n">redirect_to</span> <span class="n">root_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As with <code>log_in</code>, <a href="#code-log_in_with_remember"
                        class="hyperref">Listing&nbsp;<span class="ref">8.34</span></a>
                      defers the real work to the Sessions helper, where we
                      define a <code>remember</code> method that calls <code>user.remember</code>,
                      thereby generating a remember token and saving its digest
                      to the database.<span class="intersentencespace"></span>
                      It then uses <code>cookies</code> to create permanent
                      cookies for the user id and remember token as described
                      above.<span class="intersentencespace"></span> The result
                      appears in <a href="#code-remember_method" class="hyperref">Listing&nbsp;<span
                          class="ref">8.35</span></a>.</p>
                    <div class="codelisting" id="_code-remember_method" data-tralics-id="uid818"
                      data-number="8.35">
                      <div class="heading"><span class="number">Listing 8.35:</span>
                        <span class="description">Remembering the user.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>

  <span class="c1"># Remembers a user in a persistent session.</span>
  <span class="k">def</span> <span class="nf">remember</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
<span class="hll">    <span class="n">user</span><span class="o">.</span><span class="n">remember</span>
</span><span class="hll">    <span class="n">cookies</span><span class="o">.</span><span
class="n">permanent</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span> <span
class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">id</span>
</span><span class="hll">    <span class="n">cookies</span><span class="o">.</span><span
class="n">permanent</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">remember_token</span>
</span>  <span class="k">end</span>

  <span class="c1"># Returns the current logged-in user (if any).</span>
  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns true if the user is logged in, false otherwise.</span>
  <span class="k">def</span> <span class="nf">logged_in?</span>
    <span class="o">!</span><span class="n">current_user</span><span class="o">.</span><span
class="n">nil?</span>
  <span class="k">end</span>

  <span class="c1"># Logs out the current user.</span>
  <span class="k">def</span> <span class="nf">log_out</span>
    <span class="n">session</span><span class="o">.</span><span class="n">delete</span><span
class="p">(</span><span class="ss">:user_id</span><span class="p">)</span>
    <span class="vi">@current_user</span> <span class="o">=</span> <span class="kp">nil</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-remember_method" class="hyperref">Listing&nbsp;<span
                          class="ref">8.35</span></a>, a user logging in will be
                      remembered in the sense that their browser will get a
                      valid remember token, but it doesn’t yet do us any good
                      because the <code>current_user</code> method defined in <a
                        href="#code-current_user" class="hyperref">Listing&nbsp;<span
                          class="ref">8.14</span></a> knows only about the
                      temporary session:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@current_user</span> <span class="o">||=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>In the case of persistent sessions, we want to retrieve
                      the user from the temporary session if <code>session[:user_id]</code>
                      exists, but otherwise we should look for <code>cookies[:user_id]</code>
                      to retrieve (and log in) the user corresponding to the
                      persistent session.<span class="intersentencespace"></span>
                      We can accomplish this as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span>
  <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
<span class="k">elsif</span> <span class="n">cookies</span><span class="o">.</span><span
class="n">signed</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span>
  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
  <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
    <span class="n">log_in</span> <span class="n">user</span>
    <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>(This follows the same <code>user &amp;&amp;
                        user.authenticated</code> pattern we saw in <a href="#code-find_authenticate_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.5</span></a>.)<span
                        class="intersentencespace"></span> The code above will
                      work, but note the repeated use of both <code>session</code>
                      and <code>cookies</code>.<span class="intersentencespace"></span>
                      We can eliminate this duplication as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="k">if</span> <span class="p">(</span><span
class="n">user_id</span> <span class="o">=</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</span>  <span class="vi">@current_user</span> <span class="o">||=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">user_id</span><span
class="p">)</span>
<span class="hll"><span class="k">elsif</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</span>  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
  <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
    <span class="n">log_in</span> <span class="n">user</span>
    <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>This uses the common but potentially confusing
                      construction</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="p">(</span><span
class="n">user_id</span> <span class="o">=</span> <span class="n">session</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>Despite appearances, this is <em>not</em> a comparison
                      (which would use double-equals <code>==</code>), but
                      rather is an <em>assignment</em>.<span class="intersentencespace"></span>
                      If you were to read it in words, you wouldn’t say “If user
                      id equals session of user id…”, but rather something like
                      “If session of user id exists (while setting user id to
                      session of user id)…”.<sup id="_cha-8_footnote-ref-20" class="footnote"><a
                          href="#cha-8_footnote-20">20</a></sup></p>
                    <p>Defining the <code>current_user</code> helper as
                      discussed above leads to the implementation shown in <a href="#code-persistent_current_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.36</span></a>.</p>
                    <div class="codelisting" id="_code-persistent_current_user"
                      data-tralics-id="uid820" data-number="8.36">
                      <div class="heading"><span class="number">Listing 8.36:</span>
                        <span class="description">Updating <code>current_user</code>
                          for persistent sessions.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>

  <span class="c1"># Remembers a user in a persistent session.</span>
  <span class="k">def</span> <span class="nf">remember</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">user</span><span class="o">.</span><span class="n">remember</span>
    <span class="n">cookies</span><span class="o">.</span><span class="n">permanent</span><span
class="o">.</span><span class="n">signed</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
    <span class="n">cookies</span><span class="o">.</span><span class="n">permanent</span><span
class="o">[</span><span class="ss">:remember_token</span><span class="o">]</span> <span
class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">remember_token</span>
  <span class="k">end</span>

  <span class="c1"># Returns the user corresponding to the remember token cookie.</span>
  <span class="k">def</span> <span class="nf">current_user</span>
<span class="hll">    <span class="k">if</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
</span><span class="hll">      <span class="vi">@current_user</span> <span class="o">||=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">user_id</span><span
class="p">)</span>
</span><span class="hll">    <span class="k">elsif</span> <span class="p">(</span><span
class="n">user_id</span> <span class="o">=</span> <span class="n">cookies</span><span
class="o">.</span><span class="n">signed</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
</span><span class="hll">      <span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">user_id</span><span
class="p">)</span>
</span><span class="hll">      <span class="k">if</span> <span class="n">user</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="n">cookies</span><span
class="o">[</span><span class="ss">:remember_token</span><span class="o">]</span><span
class="p">)</span>
</span><span class="hll">        <span class="n">log_in</span> <span class="n">user</span>
</span><span class="hll">        <span class="vi">@current_user</span> <span class="o">=</span> <span
class="n">user</span>
</span><span class="hll">      <span class="k">end</span>
</span><span class="hll">    <span class="k">end</span>
</span>  <span class="k">end</span>

  <span class="c1"># Returns true if the user is logged in, false otherwise.</span>
  <span class="k">def</span> <span class="nf">logged_in?</span>
    <span class="o">!</span><span class="n">current_user</span><span class="o">.</span><span
class="n">nil?</span>
  <span class="k">end</span>

  <span class="c1"># Logs out the current user.</span>
  <span class="k">def</span> <span class="nf">log_out</span>
    <span class="n">session</span><span class="o">.</span><span class="n">delete</span><span
class="p">(</span><span class="ss">:user_id</span><span class="p">)</span>
    <span class="vi">@current_user</span> <span class="o">=</span> <span class="kp">nil</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code as in <a href="#code-persistent_current_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.36</span></a>,
                      newly logged in users are correctly remembered, as you can
                      verify by logging in, closing the browser, and checking
                      that you’re still logged in when you restart the sample
                      application and revisit the sample application.<span class="intersentencespace"></span>
                      If you want, you can even inspect the browser cookies to
                      see the result directly (<a href="#fig-cookie_in_browser"
                        class="hyperref">Figure&nbsp;<span class="ref">8.10</span></a>).<sup
                        id="_cha-8_footnote-ref-21" class="footnote"><a href="#cha-8_footnote-21">21</a></sup></p>
                    <div class="center figure" id="_fig-cookie_in_browser" data-tralics-id="uid822"
                      data-number="8.10">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/cookie_in_browser_chrome.png"
                          alt="images/figures/cookie_in_browser_chrome"></div>
                      <div class="caption"><span class="header">Figure 8.10: </span><span
                          class="description">The remember token cookie in the
                          local browser. </span></div>
                    </div>
                    <p>There’s only one problem with our application as it
                      stands: short of clearing their browser cookies (or
                      waiting 20 years), there’s no way for users to log out.<span
                        class="intersentencespace"></span> This is exactly the
                      sort of thing our test suite should catch, and indeed it
                      should currently be <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid823" data-tralics-id="uid823"
                      data-number="8.37">
                      <div class="heading"><span class="number">Listing 8.37:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-forgetting_users" data-tralics-id="uid824" class="subsection"
                    data-number="8.4.3">
                    <h3><a href="#sec-forgetting_users" class="heading hyperref"><span
                          class="number">8.4.3 </span>Forgetting users</a></h3>
                    <p>To allow users to log out, we’ll define methods to forget
                      users in analogy with the ones to remember them.<span class="intersentencespace"></span>
                      The resulting <code>user.forget</code> method just undoes
                      <code>user.remember</code> by updating the remember digest
                      with <code>nil</code>, as shown in <a href="#code-user_model_forget"
                        class="hyperref">Listing&nbsp;<span class="ref">8.38</span></a>.</p>
                    <div class="codelisting" id="_code-user_model_forget" data-tralics-id="uid825"
                      data-number="8.38">
                      <div class="heading"><span class="number">Listing 8.38:</span>
                        <span class="description">Adding a <code>forget</code>
                          method to the User model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">},</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
  <span class="n">validates</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">minimum</span><span class="p">:</span> <span class="mi">6</span> <span
class="p">}</span>

  <span class="c1"># Returns the hash digest of the given string.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">digest</span><span class="p">(</span><span class="n">string</span><span
class="p">)</span>
    <span class="n">cost</span> <span class="o">=</span> <span class="no">ActiveModel</span><span
class="o">::</span><span class="no">SecurePassword</span><span class="o">.</span><span
class="n">min_cost</span> <span class="p">?</span> <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">::</span><span
class="no">MIN_COST</span> <span class="p">:</span>
                                                  <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">string</span><span
class="p">,</span> <span class="ss">cost</span><span class="p">:</span> <span class="n">cost</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns a random token.</span>
  <span class="k">def</span> <span class="nc">User</span><span class="o">.</span><span
class="nf">new_token</span>
    <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
  <span class="k">end</span>

  <span class="c1"># Remembers a user in the database for use in persistent sessions.</span>
  <span class="k">def</span> <span class="nf">remember</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">remember_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
    <span class="n">update_attribute</span><span class="p">(</span><span class="ss">:remember_digest</span><span
class="p">,</span> <span class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">))</span>
  <span class="k">end</span>

  <span class="c1"># Returns true if the given token matches the digest.</span>
  <span class="k">def</span> <span class="nf">authenticated?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">remember_digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Forgets a user.</span>
  <span class="k">def</span> <span class="nf">forget</span>
<span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:remember_digest</span><span class="p">,</span> <span class="kp">nil</span><span
class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-user_model_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.38</span></a>, we’re now ready to forget
                      a permanent session by adding a <code>forget</code>
                      helper and calling it from the <code>log_out</code>
                      helper (<a href="#code-log_out_with_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.39</span></a>).<span class="intersentencespace"></span>
                      As seen in <a href="#code-log_out_with_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.39</span></a>, the <code>forget</code>
                      helper calls <code>user.forget</code> and then deletes
                      the <code>user_id</code> and <code>remember_token</code>
                      cookies.</p>
                    <div class="codelisting" id="_code-log_out_with_forget" data-tralics-id="uid826"
                      data-number="8.39">
                      <div class="heading"><span class="number">Listing 8.39:</span>
                        <span class="description">Logging out from a persistent
                          session.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Forgets a persistent session.</span>
  <span class="k">def</span> <span class="nf">forget</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
<span class="hll">    <span class="n">user</span><span class="o">.</span><span class="n">forget</span>
</span><span class="hll">    <span class="n">cookies</span><span class="o">.</span><span
class="n">delete</span><span class="p">(</span><span class="ss">:user_id</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">cookies</span><span class="o">.</span><span
class="n">delete</span><span class="p">(</span><span class="ss">:remember_token</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Logs out the current user.</span>
  <span class="k">def</span> <span class="nf">log_out</span>
<span class="hll">    <span class="n">forget</span><span class="p">(</span><span
class="n">current_user</span><span class="p">)</span>
</span>    <span class="n">session</span><span class="o">.</span><span class="n">delete</span><span
class="p">(</span><span class="ss">:user_id</span><span class="p">)</span>
    <span class="vi">@current_user</span> <span class="o">=</span> <span class="kp">nil</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-two_subtle_bugs" data-tralics-id="uid827" class="subsection"
                    data-number="8.4.4">
                    <h3><a href="#sec-two_subtle_bugs" class="heading hyperref"><span
                          class="number">8.4.4 </span>Two subtle bugs</a></h3>
                    <p>There are two closely related subtleties left to address.<span
                        class="intersentencespace"></span> The first subtlety is
                      that, even though the “Log out” link appears only when
                      logged-in, a user could potentially have multiple browser
                      windows open to the site.<span class="intersentencespace"></span>
                      If the user then logged out in one window, clicking the
                      “Log out” link in a second window would result in an error
                      due to the use of <code>current_user</code> in <a href="#code-log_out_with_forget"
                        class="hyperref">Listing&nbsp;<span class="ref">8.39</span></a>.<sup
                        id="_cha-8_footnote-ref-22" class="footnote"><a href="#cha-8_footnote-22">22</a></sup><span
                        class="intersentencespace"></span> We can avoid this by
                      logging out only if the user is logged in.</p>
                    <p>The second subtlety is that a user could be logged in
                      (and remembered) in multiple browsers, such as Chrome and
                      Firefox, which causes a problem if the user logs out in
                      one browser but not the other.<sup id="_cha-8_footnote-ref-23"
                        class="footnote"><a href="#cha-8_footnote-23">23</a></sup><span
                        class="intersentencespace"></span> For example, suppose
                      that the user logs out in Firefox, thereby setting the
                      remember digest to <code>nil</code> (via <code>user.forget</code>
                      in <a href="#code-user_model_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.38</span></a>).<span class="intersentencespace"></span>
                      The application will still work in Firefox; because the <code>log_out</code>
                      method in <a href="#code-log_out_with_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.39</span></a> deletes the user’s id,
                      both highlighted conditionals are <code>false</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Returns the user corresponding to the remember token cookie.</span>
<span class="k">def</span> <span class="nf">current_user</span>
<span class="hll">  <span class="k">if</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
</span>    <span class="vi">@current_user</span> <span class="o">||=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">user_id</span><span
class="p">)</span>
<span class="hll">  <span class="k">elsif</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</span>    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
      <span class="n">log_in</span> <span class="n">user</span>
      <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>As a result, evaluation falls off the end of the <code>current_user</code>
                      method, thereby returning <code>nil</code> as required.</p>
                    <p>In contrast, inside Chrome the <code>user_id</code>
                      cookie hasn’t been deleted, so <code>user_id</code> will
                      be <code>true</code> in a boolean context and the
                      corresponding user will be found in the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Returns the user corresponding to the remember token cookie.</span>
<span class="k">def</span> <span class="nf">current_user</span>
  <span class="k">if</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
    <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
<span class="hll">  <span class="k">elsif</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="n">user_id</span><span
class="p">)</span>
</span><span class="hll">    <span class="k">if</span> <span class="n">user</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="n">cookies</span><span
class="o">[</span><span class="ss">:remember_token</span><span class="o">]</span><span
class="p">)</span>
</span>      <span class="n">log_in</span> <span class="n">user</span>
      <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Consequently, the inner <code>if</code> conditional will
                      be evaluated:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>In particular, because <code>user</code> isn’t <code>nil</code>,
                      the <em>second</em> expression will be evaluated, which
                      raises an error.<span class="intersentencespace"></span>
                      This is because the user’s remember digest was deleted as
                      part of logging out (<a href="#code-user_model_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.38</span></a>) in Firefox, so when we
                      access the application in Chrome we end up calling</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">BCrypt</span><span class="o">::</span><span
class="no">Password</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="n">remember_digest</span><span class="p">)</span><span
class="o">.</span><span class="n">is_password?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>with a <code>nil</code> remember digest, thereby raising
                      an exception inside the bcrypt library.<span class="intersentencespace"></span>
                      To fix this, we want <code>authenticated?</code> to
                      return <code>false</code> instead.</p>
                    <p>These are exactly the sorts of subtleties that benefit
                      from test-driven development, so we’ll write tests to
                      catch the two errors before correcting them.<span class="intersentencespace"></span>
                      We first get the integration test from <a href="#code-user_logout_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.28</span></a>
                      to <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>,
                      as shown in <a href="#code-test_double_logout" class="hyperref">Listing&nbsp;<span
                          class="ref">8.40</span></a>.</p>
                    <div class="codelisting" id="_code-test_double_logout" data-tralics-id="uid830"
                      data-number="8.40">
                      <div class="heading"><span class="number">Listing 8.40:</span>
                        <span class="description">A test for user logout.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_login_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersLoginTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"login with valid information followed by logout"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">login_path</span>
    <span class="n">post</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">session</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span> <span class="ss">password</span><span
class="p">:</span> <span class="s1">'password'</span> <span class="p">}</span>
    <span class="n">assert</span> <span class="n">is_logged_in?</span>
    <span class="n">assert_redirected_to</span> <span class="vi">@user</span>
    <span class="n">follow_redirect!</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">login_path</span><span class="p">,</span> <span
class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">logout_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
    <span class="n">delete</span> <span class="n">logout_path</span>
    <span class="n">assert_not</span> <span class="n">is_logged_in?</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
<span class="hll">    <span class="c1"># Simulate a user clicking logout in a second window.</span>
</span><span class="hll">    <span class="n">delete</span> <span class="n">logout_path</span>
</span>    <span class="n">follow_redirect!</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">login_path</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">logout_path</span><span class="p">,</span>      <span
class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
    <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">),</span> <span class="ss">count</span><span
class="p">:</span> <span class="mi">0</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The second call to <code>delete logout_path</code> in <a
                        href="#code-test_double_logout" class="hyperref">Listing&nbsp;<span
                          class="ref">8.40</span></a> should raise an error due
                      to the missing <code>current_user</code>, leading to a <span
                        style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span> test suite:</p>
                    <div class="codelisting" id="_uid831" data-tralics-id="uid831"
                      data-number="8.41">
                      <div class="heading"><span class="number">Listing 8.41:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>The application code simply involves calling <code>log_out</code>
                      only if <code>logged_in?</code> is true, as shown in <a
                        href="#code-destroy_forget" class="hyperref">Listing&nbsp;<span
                          class="ref">8.42</span></a>.</p>
                    <div class="codelisting" id="_code-destroy_forget" data-tralics-id="uid832"
                      data-number="8.42">
                      <div class="heading"><span class="number">Listing 8.42:</span>
                        <span class="description">Only logging out if logged in.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">destroy</span>
<span class="hll">    <span class="n">log_out</span> <span class="k">if</span> <span
class="n">logged_in?</span>
</span>    <span class="n">redirect_to</span> <span class="n">root_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The second case, involving a scenario with two different
                      browsers, is harder to simulate with an integration test,
                      but it’s easy to check in the User model test directly.<span
                        class="intersentencespace"></span> All we need is to
                      start with a user that has no remember digest (which is
                      true for the <code>@user</code> variable defined in the <code>setup</code>
                      method) and then call <code>authenticated?</code>, as
                      shown in <a href="#code-test_authenticated_invalid_token"
                        class="hyperref">Listing&nbsp;<span class="ref">8.43</span></a>.<span
                        class="intersentencespace"></span> (Note that we’ve just
                      left the remember token blank; it doesn’t matter what its
                      value is, because the error occurs before it ever gets
                      used.)</p>
                    <div class="codelisting" id="_code-test_authenticated_invalid_token"
                      data-tralics-id="uid833" data-number="8.43">
                      <div class="heading"><span class="number">Listing 8.43:</span>
                        <span class="description">A test of <code>authenticated?</code>
                          with a nonexistent digest.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">,</span>
                     <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"authenticated? should return false for a user with nil digest"</span> <span
class="k">do</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="s1">''</span><span
class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because <code>BCrypt::Password.new(nil)</code> raises an
                      error, the test suite should now be <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid834" data-tralics-id="uid834"
                      data-number="8.44">
                      <div class="heading"><span class="number">Listing 8.44:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>To fix the error and get to <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>, all we need to do is return
                      <code>false</code> if the remember digest is <code>nil</code>,
                      as shown in <a href="#code-authenticated_p_fixed" class="hyperref">Listing&nbsp;<span
                          class="ref">8.45</span></a>.</p>
                    <div class="codelisting" id="_code-authenticated_p_fixed" data-tralics-id="uid835"
                      data-number="8.45">
                      <div class="heading"><span class="number">Listing 8.45:</span>
                        <span class="description">Updating <code>authenticated?</code>
                          to handle a nonexistent digest.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns true if the given token matches the digest.</span>
  <span class="k">def</span> <span class="nf">authenticated?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
<span class="hll">    <span class="k">return</span> <span class="kp">false</span> <span
class="k">if</span> <span class="n">remember_digest</span><span class="o">.</span><span
class="n">nil?</span>
</span>    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">remember_digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>This uses the <code>return</code> keyword to return
                      immediately if the remember digest is <code>nil</code>,
                      which is a common way to emphasize that the rest of the
                      method gets ignored in that case.<span class="intersentencespace"></span>
                      The equivalent code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="n">remember_digest</span><span
class="o">.</span><span class="n">nil?</span>
  <span class="kp">false</span>
<span class="k">else</span>
  <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">remember_digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>would also work fine, but I prefer the explicitness of
                      the version in <a href="#code-authenticated_p_fixed" class="hyperref">Listing&nbsp;<span
                          class="ref">8.45</span></a> (which also happens to be
                      slightly shorter).</p>
                    <p>With the code in <a href="#code-authenticated_p_fixed" class="hyperref">Listing&nbsp;<span
                          class="ref">8.45</span></a>, our full test suite
                      should be <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>,
                      and both subtleties should now be addressed:</p>
                    <div class="codelisting" id="_uid836" data-tralics-id="uid836"
                      data-number="8.46">
                      <div class="heading"><span class="number">Listing 8.46:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-remember_me_checkbox" data-tralics-id="uid837" class="subsection"
                    data-number="8.4.5">
                    <h3><a href="#sec-remember_me_checkbox" class="heading hyperref"><span
                          class="number">8.4.5 </span>“Remember me” checkbox</a></h3>
                    <p>With the code in <a href="#sec-forgetting_users" class="hyperref">Section&nbsp;<span
                          class="ref">8.4.3</span></a>, our application has a
                      complete, professional-grade authentication system.<span class="intersentencespace"></span>
                      As a final step, we’ll see how to make staying logged in
                      optional using a “remember me” checkbox.<span class="intersentencespace"></span>
                      A mockup of the login form with such a checkbox appears in
                      <a href="#fig-login_remember_me_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">8.11</span></a>.</p>
                    <div class="center figure" id="_fig-login_remember_me_mockup"
                      data-tralics-id="uid838" data-number="8.11">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_remember_me_mockup.png"
                          alt="images/figures/login_remember_me_mockup"></div>
                      <div class="caption"><span class="header">Figure 8.11: </span><span
                          class="description">A mockup of a “remember me”
                          checkbox. </span></div>
                    </div>
                    <p>To write the implementation, we start by adding a
                      checkbox to the login form from <a href="#code-login_form"
                        class="hyperref">Listing&nbsp;<span class="ref">8.2</span></a>.<span
                        class="intersentencespace"></span> As with labels, text
                      fields, password fields, and submit buttons, checkboxes
                      can be created with a Rails helper method.<span class="intersentencespace"></span>
                      In order to get the styling right, though, we have to <em>nest</em>
                      the checkbox inside the label, as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">label</span> <span class="ss">:remember_me</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"checkbox inline"</span> <span
class="k">do</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">check_box</span> <span class="ss">:remember_me</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;span&gt;</span>Remember me on this computer<span class="nt">&lt;/span&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>Putting this into the login form gives the code shown in
                      <a href="#code-remember_me_checkbox" class="hyperref">Listing&nbsp;<span
                          class="ref">8.47</span></a>.</p>
                    <div class="codelisting" id="_code-remember_me_checkbox" data-tralics-id="uid839"
                      data-number="8.47">
                      <div class="heading"><span class="number">Listing 8.47:</span>
                        <span class="description">Adding a “remember me”
                          checkbox to the login form.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/sessions/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Log in"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Log in<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="ss">:session</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">login_path</span><span class="p">)</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">label</span> <span class="ss">:remember_me</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">"checkbox inline"</span> <span
class="k">do</span> <span class="cp">%&gt;</span>
</span><span class="hll">        <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">check_box</span> <span class="ss">:remember_me</span> <span
class="cp">%&gt;</span>
</span><span class="hll">        <span class="nt">&lt;span&gt;</span>Remember me on this computer<span
class="nt">&lt;/span&gt;</span>
</span><span class="hll">      <span class="cp">&lt;%</span> <span class="k">end</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

    <span class="nt">&lt;p&gt;</span>New user? <span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Sign up now!"</span><span class="p">,</span> <span
class="n">signup_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>In <a href="#code-remember_me_checkbox" class="hyperref">Listing&nbsp;<span
                          class="ref">8.47</span></a>, we’ve included the CSS
                      classes <code>checkbox</code> and <code>inline</code>,
                      which Bootstrap uses to put the checkbox and the text
                      (“Remember me on this computer”) in the same line.<span class="intersentencespace"></span>
                      In order to complete the styling, we need just a few more
                      CSS rules, as shown in <a href="#code-remember_me_css" class="hyperref">Listing&nbsp;<span
                          class="ref">8.48</span></a>.<span class="intersentencespace"></span>
                      The resulting login form appears in <a href="#fig-login_form_remember_me"
                        class="hyperref">Figure&nbsp;<span class="ref">8.12</span></a>.</p>
                    <div class="codelisting" id="_code-remember_me_css" data-tralics-id="uid840"
                      data-number="8.48">
                      <div class="heading"><span class="number">Listing 8.48:</span>
                        <span class="description">CSS for the “remember me”
                          checkbox.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">forms</span> <span class="o">*/</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.checkbox</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">-10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="nt">span</span> <span class="p">{</span>
    <span class="na">margin-left</span><span class="o">:</span> <span class="mi">20</span><span
class="kt">px</span><span class="p">;</span>
    <span class="na">font-weight</span><span class="o">:</span> <span class="no">normal</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nn">#session_remember_me</span> <span class="p">{</span>
  <span class="na">width</span><span class="o">:</span> <span class="no">auto</span><span
class="p">;</span>
  <span class="na">margin-left</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-login_form_remember_me"
                      data-tralics-id="uid841" data-number="8.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_form_remember_me.png"
                          alt="images/figures/login_form_remember_me"></div>
                      <div class="caption"><span class="header">Figure 8.12: </span><span
                          class="description">The login form with an added
                          “remember me” checkbox. </span></div>
                    </div>
                    <p>Having edited the login form, we’re now ready to remember
                      users if they check the checkbox and forget them
                      otherwise.<span class="intersentencespace"></span>
                      Incredibly, because of all our work in the previous
                      sections, the implementation can be reduced to one line.<span
                        class="intersentencespace"></span> We start by noting
                      that the <code>params</code> hash for submitted login
                      forms now includes a value based on the checkbox (as you
                      can verify by submitting the form in <a href="#code-remember_me_checkbox"
                        class="hyperref">Listing&nbsp;<span class="ref">8.47</span></a>
                      with invalid information and inspecting the values in the
                      debug section of the page).<span class="intersentencespace"></span>
                      In particular, the value of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span>
</pre></div>
                    </div>
                    <p>is <code>’1’</code> if the box is checked and <code>’0’</code>
                      if it isn’t.</p>
                    <p>By testing the relevant value of the <code>params</code>
                      hash, we can now remember or forget the user based on the
                      value of the submission:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:session</span><span class="o">][</span><span
class="ss">:remember_me</span><span class="o">]</span> <span class="o">==</span> <span
class="s1">'1'</span>
  <span class="n">remember</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
<span class="k">else</span>
  <span class="n">forget</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>As explained in <a href="#aside-ternary_operator" class="hyperref">Box&nbsp;<span
                          class="ref">8.3</span></a>, this sort of <code>if</code>-<code>then</code>
                      branching structure can be converted to one line using the
                      <em>ternary operator</em> as follows:<sup id="_cha-8_footnote-ref-24"
                        class="footnote"><a href="#cha-8_footnote-24">24</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="o">==</span> <span class="s1">'1'</span> <span class="p">?</span> <span
class="n">remember</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span> <span class="p">:</span> <span class="n">forget</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Adding this to the Sessions controller’s <code>create</code>
                      method leads to the incredibly compact code shown in <a href="#code-remember_me_ternary"
                        class="hyperref">Listing&nbsp;<span class="ref">8.49</span></a>.<span
                        class="intersentencespace"></span> (Now you’re in a
                      position to understand the code in <a href="#code-digest_method"
                        class="hyperref">Listing&nbsp;<span class="ref">8.18</span></a>,
                      which uses the ternary operator to define the bcrypt <code>cost</code>
                      variable.)</p>
                    <div class="codelisting" id="_code-remember_me_ternary" data-tralics-id="uid843"
                      data-number="8.49">
                      <div class="heading"><span class="number">Listing 8.49:</span>
                        <span class="description">Handling the submission of the
                          “remember me” checkbox.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
      <span class="n">log_in</span> <span class="n">user</span>
<span class="hll">      <span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="o">==</span> <span class="s1">'1'</span> <span class="p">?</span> <span
class="n">remember</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span> <span class="p">:</span> <span class="n">forget</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
</span>      <span class="n">redirect_to</span> <span class="n">user</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="n">log_out</span> <span class="k">if</span> <span class="n">logged_in?</span>
    <span class="n">redirect_to</span> <span class="n">root_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the implementation in <a href="#code-remember_me_ternary"
                        class="hyperref">Listing&nbsp;<span class="ref">8.49</span></a>,
                      our login system is complete, as you can verify by
                      checking or unchecking the box in your browser.</p>
                    <div class="aside" id="_aside-ternary_operator" data-tralics-id="uid844"
                      data-number="8.3">
                      <div class="heading"><span class="number">Box 8.3.</span>
                        <span class="description">10 types of people</span></div>
                      <p>There’s an old joke that there are 10 kinds of people
                        in the world: those who understand binary and those who
                        don’t (10, of course, being 2 in binary).<span class="intersentencespace"></span>
                        In this spirit, we can say that there are 10 kinds of
                        people in the world: those who like the ternary
                        operator, those who don’t, and those who don’t yet know
                        about it.<span class="intersentencespace"></span> (If
                        you happen to be in the third category, soon you won’t
                        be any longer.)</p>
                      <p>When you do a lot of programming, you quickly learn
                        that one of the most common bits of control flow goes
                        something like this:</p>
                      <pre>  if boolean?
    do_one_thing
  else
    do_something_else
  end</pre>
                      <p>Ruby, like many other languages (including C/C++, Perl,
                        PHP, and Java), allows you to replace this with a much
                        more compact expression using the <em>ternary operator</em>
                        (so called because it consists of three parts):</p>
                      <pre>  boolean? ? do_one_thing : do_something_else</pre>
                      <p>You can also use the ternary operator to replace
                        assignment, so that</p>
                      <pre>  if boolean?
    var = foo
  else
    var = bar
  end</pre>
                      <p>becomes</p>
                      <pre>  var = boolean? ? foo : bar</pre>
                      <p>Finally, it’s often convenient to use the ternary
                        operator in a function’s return value:</p>
                      <pre>  def foo
    do_stuff
    boolean? ? "bar" : "baz"
  end</pre>
                      <p>Since Ruby implicitly returns the value of the last
                        expression in a function, here the <span class="tt">foo</span>
                        method returns <span class="tt">"bar"</span> or <span
                          class="tt">"baz"</span> depending on whether <span class="tt">boolean?</span>
                        is <span class="tt">true</span> or <span class="tt">false</span>.</p>
                    </div>
                  </div>
                  <div id="_sec-remember_tests" data-tralics-id="uid845" class="subsection"
                    data-number="8.4.6">
                    <h3><a href="#sec-remember_tests" class="heading hyperref"><span
                          class="number">8.4.6 </span>Remember tests</a></h3>
                    <p>Although our “remember me” functionality is now working,
                      it’s important to write some tests to verify its behavior.<span
                        class="intersentencespace"></span> One reason is to
                      catch implementation errors, as discussed momentarily.<span
                        class="intersentencespace"></span> Even more important,
                      though, is that the core user persistence code is in fact
                      completely untested at present.<span class="intersentencespace"></span>
                      Fixing these issues will require some trickery, but the
                      result will be a far more powerful test suite.</p>
                    <div id="_sec-testing_the_remember_me_box" data-tralics-id="uid846"
                      class="subsubsection" data-number="8.4.6.1">
                      <h4><a href="#sec-testing_the_remember_me_box" class="heading">Testing
                          the “remember me” box</a></h4>
                      <p>When I originally implemented the checkbox handling in
                        <a href="#code-remember_me_ternary" class="hyperref">Listing&nbsp;<span
                            class="ref">8.49</span></a>, instead of the correct</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="o">==</span> <span class="s1">'1'</span> <span class="p">?</span> <span
class="n">remember</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span> <span class="p">:</span> <span class="n">forget</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
</pre></div>
                      </div>
                      <p>I actually used</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="p">?</span> <span class="n">remember</span><span
class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">:</span> <span
class="n">forget</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
</pre></div>
                      </div>
                      <p>In this context, <code>params[:session][:remember_me]</code>
                        is either <code>’0’</code> or <code>’1’</code>, both
                        of which are <code>true</code> in a boolean context, so
                        the resulting expression is <em>always true</em>, and
                        the application acts as if the checkbox is always
                        checked.<span class="intersentencespace"></span> This is
                        exactly the kind of error a test can catch.</p>
                      <p>Because remembering users requires that they be logged
                        in, our first step is to define a helper to log users in
                        inside tests.<span class="intersentencespace"></span> In
                        <a href="#code-user_login_test_valid_information" class="hyperref">Listing&nbsp;<span
                            class="ref">8.20</span></a>, we logged a user in
                        using the <code>post</code> method and a valid <code>session</code>
                        hash, but it’s cumbersome to do this every time.<span class="intersentencespace"></span>
                        To avoid needless repetition, we’ll write a helper
                        method called <code>log_in_as</code> to log in for us.</p>
                      <p>Our method for logging a user in depends on the type of
                        test.<span class="intersentencespace"></span> Inside
                        integration tests, we can post to the sessions path as
                        in <a href="#code-user_login_test_valid_information" class="hyperref">Listing&nbsp;<span
                            class="ref">8.20</span></a>, but in other tests
                        (such as controller and model tests) this won’t work,
                        and we need to manipulate the <code>session</code>
                        method directly.<span class="intersentencespace"></span>
                        As a result, <code>log_in_as</code> should detect the
                        kind of test being used and adjust accordingly.<span class="intersentencespace"></span>
                        We can tell the difference between integration tests and
                        other kinds of tests using Ruby’s convenient <code>defined?</code>
                        method, which returns true if its argument is defined
                        and false otherwise.<span class="intersentencespace"></span>
                        In the present case, the <code>post_via_redirect</code>
                        method (seen before in <a href="#code-a_test_for_valid_submission"
                          class="hyperref">Listing&nbsp;<span class="ref">7.26</span></a>)
                        is available only in integration tests, so the code</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">defined?</span><span class="p">(</span><span
class="n">post_via_redirect</span><span class="p">)</span> <span class="o">.</span><span
class="n">.</span><span class="o">.</span>
</pre></div>
                      </div>
                      <p>will return <code>true</code> inside an integration
                        test and false otherwise.<span class="intersentencespace"></span>
                        This suggests defining an <code>integration_test?</code>
                        boolean method and writing an if-then statement
                        schematically as follows:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">if</span> <span class="n">integration_test?</span>
  <span class="c1"># Log in by posting to the sessions path</span>
<span class="k">else</span>
  <span class="c1"># Log in using the session</span>
<span class="k">end</span>
</pre></div>
                      </div>
                      <p>Filling in the comments with code leads to the <code>log_in_as</code>
                        helper method shown in <a href="#code-test_helper_log_in"
                          class="hyperref">Listing&nbsp;<span class="ref">8.50</span></a>.<span
                          class="intersentencespace"></span> (This is a fairly
                        advanced method, so you are doing well if you can read
                        it with full comprehension.)</p>
                      <div class="codelisting" id="_code-test_helper_log_in" data-tralics-id="uid847"
                        data-number="8.50">
                        <div class="heading"><span class="number">Listing 8.50:</span>
                          <span class="description">Adding a <code>log_in_as</code>
                            helper.<span class="intersentencespace"></span> <span
                              class="break"></span> <span class="filepath">test/test_helper.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="no">ENV</span><span class="o">[</span><span
class="s1">'RAILS_ENV'</span><span class="o">]</span> <span class="o">||=</span> <span
class="s1">'test'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="k">class</span> <span class="nc">ActiveSupport</span><span class="o">::</span><span
class="no">TestCase</span>
  <span class="n">fixtures</span> <span class="ss">:all</span>

  <span class="c1"># Returns true if a test user is logged in.</span>
  <span class="k">def</span> <span class="nf">is_logged_in?</span>
    <span class="o">!</span><span class="n">session</span><span class="o">[</span><span
class="ss">:user_id</span><span class="o">].</span><span class="n">nil?</span>
  <span class="k">end</span>

  <span class="c1"># Logs in a test user.</span>
  <span class="k">def</span> <span class="nf">log_in_as</span><span class="p">(</span><span
class="n">user</span><span class="p">,</span> <span class="n">options</span> <span
class="o">=</span> <span class="p">{})</span>
    <span class="n">password</span>    <span class="o">=</span> <span class="n">options</span><span
class="o">[</span><span class="ss">:password</span><span class="o">]</span>    <span
class="o">||</span> <span class="s1">'password'</span>
    <span class="n">remember_me</span> <span class="o">=</span> <span class="n">options</span><span
class="o">[</span><span class="ss">:remember_me</span><span class="o">]</span> <span
class="o">||</span> <span class="s1">'1'</span>
<span class="hll">    <span class="k">if</span> <span class="n">integration_test?</span>
</span>      <span class="n">post</span> <span class="n">login_path</span><span
class="p">,</span> <span class="ss">session</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">email</span><span class="p">:</span>       <span
class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
                                  <span class="ss">password</span><span class="p">:</span>    <span
class="n">password</span><span class="p">,</span>
                                  <span class="ss">remember_me</span><span class="p">:</span> <span
class="n">remember_me</span> <span class="p">}</span>
    <span class="k">else</span>
      <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="c1"># Returns true inside an integration test.</span>
    <span class="k">def</span> <span class="nf">integration_test?</span>
<span class="hll">      <span class="n">defined?</span><span class="p">(</span><span
class="n">post_via_redirect</span><span class="p">)</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>Note that, for maximum flexibility, the <code>log_in_as</code>
                        method in <a href="#code-test_helper_log_in" class="hyperref">Listing&nbsp;<span
                            class="ref">8.50</span></a> accepts an <code>options</code>
                        hash (as in <a href="#code-gravatar_option" class="hyperref">Listing&nbsp;<span
                            class="ref">7.31</span></a>), with default options
                        for the password and for the “remember me” checkbox set
                        to <code>’password’</code> and <code>’1’</code>,
                        respectively.<span class="intersentencespace"></span> In
                        particular, because hashes return <code>nil</code> for
                        nonexistent keys, code like</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">remember_me</span> <span class="o">=</span> <span
class="n">options</span><span class="o">[</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="o">||</span> <span class="s1">'1'</span>
</pre></div>
                      </div>
                      <p>evaluates to the given option if present and to the
                        default otherwise (an application of the short-circuit
                        evaluation described in <a href="#aside-or_equals" class="hyperref">Box&nbsp;<span
                            class="ref">8.1</span></a>).</p>
                      <p>To verify the behavior of the “remember me” checkbox,
                        we’ll write two tests, one each for submitting with and
                        without the checkbox checked.<span class="intersentencespace"></span>
                        This is easy using the login helper defined in <a href="#code-test_helper_log_in"
                          class="hyperref">Listing&nbsp;<span class="ref">8.50</span></a>,
                        with the two cases appearing as</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">,</span> <span class="ss">remember_me</span><span
class="p">:</span> <span class="s1">'1'</span><span class="p">)</span>
</pre></div>
                      </div>
                      <p>and</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">,</span> <span class="ss">remember_me</span><span
class="p">:</span> <span class="s1">'0'</span><span class="p">)</span>
</pre></div>
                      </div>
                      <p>(Because <code>’1’</code> is the default value of <code>remember_me</code>,
                        we could omit the corresponding option in the first case
                        above, but I’ve included it to make the parallel
                        structure more apparent.)</p>
                      <p>After logging in, we can check if the user has been
                        remembered by looking for the <code>remember_token</code>
                        key in the <code>cookies</code>.<span class="intersentencespace"></span>
                        Ideally, we would check that the cookie’s value is equal
                        to the user’s remember token, but as currently designed
                        there’s no way for the test to get access to it: the <code>user</code>
                        variable in the controller has a remember token
                        attribute, but (because <code>remember_token</code> is
                        virtual) the <code>@user</code> variable in the test
                        doesn’t.<span class="intersentencespace"></span> Fixing
                        this minor blemish is left as an exercise (<a href="#sec-log_in_out_exercises"
                          class="hyperref">Section&nbsp;<span class="ref">8.6</span></a>),
                        but for now we can just test to see if the relevant
                        cookie is <code>nil</code> or not.</p>
                      <p>There’s one more subtlety, which is that for some
                        reason inside tests the <code>cookies</code> method
                        doesn’t work with symbols as keys, so that</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">cookies</span><span class="o">[</span><span
class="ss">:remember_token</span><span class="o">]</span>
</pre></div>
                      </div>
                      <p>is always <code>nil</code>.<span class="intersentencespace"></span>
                        Luckily, <code>cookies</code> <em>does</em> work with
                        string keys, so that</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">cookies</span><span class="o">[</span><span
class="s1">'remember_token'</span><span class="o">]</span>
</pre></div>
                      </div>
                      <p>has the value we need.<span class="intersentencespace"></span>
                        The resulting tests appear in <a href="#code-remember_me_test"
                          class="hyperref">Listing&nbsp;<span class="ref">8.51</span></a>.<span
                          class="intersentencespace"></span> (Recall from <a href="#code-user_login_test_valid_information"
                          class="hyperref">Listing&nbsp;<span class="ref">8.20</span></a>
                        that <code>users(:michael)</code> references the
                        fixture user from <a href="#code-real_user_fixture" class="hyperref">Listing&nbsp;<span
                            class="ref">8.19</span></a>.)</p>
                      <div class="codelisting" id="_code-remember_me_test" data-tralics-id="uid848"
                        data-number="8.51">
                        <div class="heading"><span class="number">Listing 8.51:</span>
                          <span class="description">A test of the “remember me”
                            checkbox.<span class="intersentencespace"></span> <span
                              style="color: ForestGreen"><span class="sc"></span><span
                                class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                              class="break"></span> <span class="filepath">test/integration/users_login_test.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersLoginTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"login with remembering"</span> <span
class="k">do</span>
<span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">,</span> <span class="ss">remember_me</span><span
class="p">:</span> <span class="s1">'1'</span><span class="p">)</span>
</span><span class="hll">    <span class="n">assert_not_nil</span> <span class="n">cookies</span><span
class="o">[</span><span class="s1">'remember_token'</span><span class="o">]</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"login without remembering"</span> <span
class="k">do</span>
<span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">,</span> <span class="ss">remember_me</span><span
class="p">:</span> <span class="s1">'0'</span><span class="p">)</span>
</span><span class="hll">    <span class="n">assert_nil</span> <span class="n">cookies</span><span
class="o">[</span><span class="s1">'remember_token'</span><span class="o">]</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>Assuming you didn’t make the same implementation
                        mistake I did, the tests should be <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span>:</p>
                      <div class="codelisting" id="_uid849" data-tralics-id="uid849"
                        data-number="8.52">
                        <div class="heading"><span class="number">Listing 8.52:</span>
                          <span class="description"><span style="color: ForestGreen"><span
                                class="sc"></span><span class="sc"><strong>green</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test
</pre></div>
                        </div>
                      </div>
                    </div>
                    <div id="_sec-testing_the_remember_branch" data-tralics-id="uid850"
                      class="subsubsection" data-number="8.4.6.2">
                      <h4><a href="#sec-testing_the_remember_branch" class="heading">Testing
                          the remember branch</a></h4>
                      <p>In <a href="#sec-login_with_remembering" class="hyperref">Section&nbsp;<span
                            class="ref">8.4.2</span></a>, we verified by hand
                        that the persistent session implemented in the preceding
                        sections is working, but in fact the relevant branch in
                        the <code>current_user</code> method is currently
                        completely untested.<span class="intersentencespace"></span>
                        My favorite way to handle this kind of situation is to
                        raise an exception in the suspected untested block of
                        code: if the code isn’t covered, the tests will still
                        pass; if it is covered, the resulting error will
                        identify the relevant test.<span class="intersentencespace"></span>
                        The result in the present case appears in <a href="#code-branch_raise"
                          class="hyperref">Listing&nbsp;<span class="ref">8.53</span></a>.</p>
                      <div class="codelisting" id="_code-branch_raise" data-tralics-id="uid851"
                        data-number="8.53">
                        <div class="heading"><span class="number">Listing 8.53:</span>
                          <span class="description">Raising an exception in an
                            untested branch.<span class="intersentencespace"></span>
                            <span style="color: ForestGreen"><span class="sc"></span><span
                                class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                              class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns the user corresponding to the remember token cookie.</span>
  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
      <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
    <span class="k">elsif</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
<span class="hll">      <span class="k">raise</span>       <span class="c1"># The tests still pass, so this branch is currently untested.</span>
</span>      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
      <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
        <span class="n">log_in</span> <span class="n">user</span>
        <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>At this point, the tests are <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span>:</p>
                      <div class="codelisting" id="_uid852" data-tralics-id="uid852"
                        data-number="8.54">
                        <div class="heading"><span class="number">Listing 8.54:</span>
                          <span class="description"><span style="color: ForestGreen"><span
                                class="sc"></span><span class="sc"><strong>green</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test
</pre></div>
                        </div>
                      </div>
                      <p>This is a problem, of course, because the code in <a href="#code-branch_raise"
                          class="hyperref">Listing&nbsp;<span class="ref">8.53</span></a>
                        is broken.<span class="intersentencespace"></span>
                        Moreover, persistent sessions are cumbersome to check by
                        hand, so if we ever want to refactor the <code>current_user</code>
                        method (as we will in <a href="#cha-account_activation_and_password_reset"
                          class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>)
                        it’s important to test it.</p>
                      <p>Because the <code>log_in_as</code> helper method
                        defined in <a href="#code-test_helper_log_in" class="hyperref">Listing&nbsp;<span
                            class="ref">8.50</span></a> automatically sets <code>session[:user_id]</code>,
                        testing the “remember” branch of the <code>current_user</code>
                        method is difficult in an integration test.<span class="intersentencespace"></span>
                        Luckily, we can bypass this restriction by testing the <code>current_user</code>
                        method directly in a Sessions helper test, whose file we
                        have to create:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">$</span> touch <span class="nb">test</span>/helpers/sessions_helper_test.rb
</pre></div>
                      </div>
                      <p>The test sequence is simple:</p>
                      <ol>
                        <li>Define a <code>user</code> variable using the
                          fixtures.<span class="intersentencespace"></span> </li>
                        <li>Call the <code>remember</code> method to remember
                          the given user.<span class="intersentencespace"></span>
                        </li>
                        <li>Verify that <code>current_user</code> is equal to
                          the given user.<span class="intersentencespace"></span>
                        </li>
                      </ol>
                      <p>Because the <code>remember</code> method doesn’t set <code>session[:user_id]</code>,
                        this procedure will test the desired “remember” branch.<span
                          class="intersentencespace"></span> The result appears
                        in <a href="#code-persistent_sessions_test" class="hyperref">Listing&nbsp;<span
                            class="ref">8.55</span></a>.</p>
                      <div class="codelisting" id="_code-persistent_sessions_test"
                        data-tralics-id="uid856" data-number="8.55">
                        <div class="heading"><span class="number">Listing 8.55:</span>
                          <span class="description">A test for persistent
                            sessions.<span class="intersentencespace"></span> <span
                              class="break"></span> <span class="filepath">test/helpers/sessions_helper_test.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">SessionsHelperTest</span> <span class="o">&lt;</span> <span
class="no">ActionView</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">remember</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"current_user returns right user when session is nil"</span> <span
class="k">do</span>
    <span class="n">assert_equal</span> <span class="vi">@user</span><span class="p">,</span> <span
class="n">current_user</span>
    <span class="n">assert</span> <span class="n">is_logged_in?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"current_user returns nil when remember digest is wrong"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">update_attribute</span><span
class="p">(</span><span class="ss">:remember_digest</span><span class="p">,</span> <span
class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="no">User</span><span class="o">.</span><span class="n">new_token</span><span
class="p">))</span>
    <span class="n">assert_nil</span> <span class="n">current_user</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>Note that we’ve added a second test, which checks that
                        the current user is <code>nil</code> if the user’s
                        remember digest doesn’t correspond correctly to the
                        remember token, thereby testing the <code>authenticated?</code>
                        expression in the nested <code>if</code> statement:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">if</span> <span class="n">user</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="n">cookies</span><span
class="o">[</span><span class="ss">:remember_token</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                      </div>
                      <p>The test in <a href="#code-persistent_sessions_test" class="hyperref">Listing&nbsp;<span
                            class="ref">8.55</span></a> is <span style="color: red"><span
                            class="sc"></span><span class="sc"><strong>red</strong></span><span
                            class="sc"></span></span> as required:</p>
                      <div class="codelisting" id="_uid857" data-tralics-id="uid857"
                        data-number="8.56">
                        <div class="heading"><span class="number">Listing 8.56:</span>
                          <span class="description"><span style="color: red"><span
                                class="sc"></span><span class="sc"><strong>red</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test TEST=test/helpers/sessions_helper_test.rb
</pre></div>
                        </div>
                      </div>
                      <p>We can get the tests in <a href="#code-persistent_sessions_test"
                          class="hyperref">Listing&nbsp;<span class="ref">8.55</span></a>
                        to pass by removing the <code>raise</code> and
                        restoring the original <code>current_user</code>
                        method, as shown in <a href="#code-branch_no_raise" class="hyperref">Listing&nbsp;<span
                            class="ref">8.57</span></a>.<span class="intersentencespace"></span>
                        (You can also verify by removing the <code>authenticated?</code>
                        expression in <a href="#code-branch_no_raise" class="hyperref">Listing&nbsp;<span
                            class="ref">8.57</span></a> that the second test in
                        <a href="#code-persistent_sessions_test" class="hyperref">Listing&nbsp;<span
                            class="ref">8.55</span></a> fails, which confirms
                        that it tests the right thing.)</p>
                      <div class="codelisting" id="_code-branch_no_raise" data-tralics-id="uid858"
                        data-number="8.57">
                        <div class="heading"><span class="number">Listing 8.57:</span>
                          <span class="description">Removing the raised
                            exception.<span class="intersentencespace"></span> <span
                              style="color: ForestGreen"><span class="sc"></span><span
                                class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                              class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns the user corresponding to the remember token cookie.</span>
  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
      <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
<span class="hll">    <span class="k">elsif</span> <span class="p">(</span><span
class="n">user_id</span> <span class="o">=</span> <span class="n">cookies</span><span
class="o">.</span><span class="n">signed</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
</span>      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
      <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
        <span class="n">log_in</span> <span class="n">user</span>
        <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>At this point, the test suite should be <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span>:</p>
                      <div class="codelisting" id="_uid859" data-tralics-id="uid859"
                        data-number="8.58">
                        <div class="heading"><span class="number">Listing 8.58:</span>
                          <span class="description"><span style="color: ForestGreen"><span
                                class="sc"></span><span class="sc"><strong>green</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test
</pre></div>
                        </div>
                      </div>
                      <p>Now that the “remember” branch of <code>current_user</code>
                        is tested, we can be confident of catching regressions
                        without having to check by hand.</p>
                    </div>
                  </div>
                </div>
                <div id="_cid56" data-tralics-id="cid56" class="section" data-number="8.5">
                  <h2><a href="#cid56" class="heading hyperref"><span class="number">8.5
                        </span>Висновок</a></h2>
                  <p>We’ve covered a lot of ground in the last two chapters,
                    transforming our promising but unformed application into a
                    site capable of the full suite of signup and login
                    behaviors.<span class="intersentencespace"></span> All that
                    is needed to complete the authentication functionality is to
                    restrict access to pages based on login status and user
                    identity.<span class="intersentencespace"></span> We’ll
                    accomplish this task en route to giving users the ability to
                    edit their information, which is the main goal of <a href="#cha-updating_showing_and_deleting_users"
                      class="hyperref">Chapter&nbsp;<span class="ref">9</span></a>.</p>
                  <p>Before moving on, merge your changes back into the master
                    branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Finish log in/log out"
$ git checkout master
$ git merge log-in-log-out
</pre></div>
                  </div>
                  <p>Then push up the remote repository and the production
                    server:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git push
$ git push heroku
$ heroku run rake db:migrate
</pre></div>
                  </div>
                  <p>Note that the application will briefly be in an invalid
                    state after pushing but before the migration is finished.<span
                      class="intersentencespace"></span> On a production site
                    with significant traffic, it is a good idea to turn <a href="https://devcenter.heroku.com/articles/maintenance-mode"
                      target="_blank"><em>maintenance mode</em></a> on before
                    making the changes:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ heroku maintenance:on
$ git push heroku
$ heroku run rake db:migrate
$ heroku maintenance:off
</pre></div>
                  </div>
                  <p>This arranges to show a standard error page during the
                    deployment and migration.<span class="intersentencespace"></span>
                    (We won’t bother with this step again, but it’s good to see
                    it at least once.)<span class="intersentencespace"></span>
                    For more information, see the Heroku documentation on <a href="https://devcenter.heroku.com/articles/error-pages"
                      target="_blank">error pages</a>.</p>
                  <div id="_sec-log_in_out_what_we_learned_in_this_chapter" data-tralics-id="uid860"
                    class="subsection" data-number="8.5.1">
                    <h3><a href="#sec-log_in_out_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">8.5.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Rails can maintain state from one page to the next
                        using both temporary and persistent cookies.<span class="intersentencespace"></span>
                      </li>
                      <li>The login form is designed to create a new session to
                        log a user in.<span class="intersentencespace"></span> </li>
                      <li>The <code>flash.now</code> method is used for flash
                        messages on rendered pages.<span class="intersentencespace"></span>
                      </li>
                      <li>Test-driven development is useful when debugging by
                        reproducing the bug in a test.<span class="intersentencespace"></span>
                      </li>
                      <li>Using the <code>session</code> method, we can
                        securely place a user id on the browser to create a
                        temporary session.<span class="intersentencespace"></span>
                      </li>
                      <li>We can change features such as links on the layouts
                        based on login status.<span class="intersentencespace"></span>
                      </li>
                      <li>Integration tests can verify correct routes, database
                        updates, and proper changes to the layout.<span class="intersentencespace"></span>
                      </li>
                      <li>We associate to each user a remember token and a
                        corresponding remember digest for use in persistent
                        sessions.<span class="intersentencespace"></span> </li>
                      <li>Using the <code>cookies</code> method, we create a
                        persistent session by placing a permanent remember token
                        cookie on the browser.<span class="intersentencespace"></span>
                      </li>
                      <li>Login status is determined by the presence of a
                        current user based on the temporary session’s user id or
                        the permanent session’s unique remember token.<span class="intersentencespace"></span>
                      </li>
                      <li>The application signs users out by deleting the
                        session’s user id and removing the permanent cookie from
                        the browser.<span class="intersentencespace"></span> </li>
                      <li>The ternary operator is a compact way to write simple
                        if-then statements.<span class="intersentencespace"></span>
                      </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-log_in_out_exercises" data-tralics-id="cid57" class="section"
                  data-number="8.6">
                  <h2><a href="#sec-log_in_out_exercises" class="heading hyperref"><span
                        class="number">8.6 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>In <a href="#code-user_model_remember" class="hyperref">Listing&nbsp;<span
                          class="ref">8.32</span></a>, we defined the new token
                      and digest class methods by explicitly prefixing them with
                      <code>User</code>.<span class="intersentencespace"></span>
                      This works fine and, because they are actually <em>called</em>
                      using <code>User.new_token</code> and <code>User.digest</code>,
                      it is probably the clearest way to define them.<span class="intersentencespace"></span>
                      But there are two perhaps more idiomatically correct ways
                      to define class methods, one slightly confusing and one
                      extremely confusing.<span class="intersentencespace"></span>
                      By running the test suite, verify that the implementations
                      in <a href="#code-token_digest_self" class="hyperref">Listing&nbsp;<span
                          class="ref">8.59</span></a> (slightly confusing) and <a
                        href="#code-token_digest_class_self" class="hyperref">Listing&nbsp;<span
                          class="ref">8.60</span></a> (extremely confusing) are
                      correct.<span class="intersentencespace"></span> (Note
                      that, in the context of <a href="#code-token_digest_self"
                        class="hyperref">Listing&nbsp;<span class="ref">8.59</span></a>
                      and <a href="#code-token_digest_class_self" class="hyperref">Listing&nbsp;<span
                          class="ref">8.60</span></a>, <code>self</code> is the
                      <code>User</code> class, whereas the other uses of <code>self</code>
                      in the User model refer to a user object <em>instance</em>.<span
                        class="intersentencespace"></span> This is part of what
                      makes them confusing.) </li>
                    <li>As indicated in <a href="#sec-remember_tests" class="hyperref">Section&nbsp;<span
                          class="ref">8.4.6</span></a>, as the application is
                      currently designed there’s no way to access the virtual <code>remember_token</code>
                      attribute in the integration test in <a href="#code-remember_me_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.51</span></a>.<span
                        class="intersentencespace"></span> It is possible,
                      though, using a special test method called <code>assigns</code>.<span
                        class="intersentencespace"></span> Inside a test, you
                      can access <em>instance</em> variables defined in the
                      controller by using <code>assigns</code> with the
                      corresponding symbol.<span class="intersentencespace"></span>
                      For example, if the <code>create</code> action defines an
                      <code>@user</code> variable, we can access it in the test
                      using <code>assigns(:user)</code>.<span class="intersentencespace"></span>
                      Right now, the Sessions controller <code>create</code>
                      action defines a normal (non-instance) variable called <code>user</code>,
                      but if we change it to an instance variable we can test
                      that <code>cookies</code> correctly contains the user’s
                      remember token.<span class="intersentencespace"></span> By
                      filling in the missing elements in <a href="#code-login_create_user_instance"
                        class="hyperref">Listing&nbsp;<span class="ref">8.61</span></a>
                      and <a href="#code-improved_remember_me_test" class="hyperref">Listing&nbsp;<span
                          class="ref">8.62</span></a> (indicated with question
                      marks&nbsp;<code>?</code><span class="intersentencespace"></span>
                      and <code>FILL_IN</code>), complete this improved test of
                      the “remember me” checkbox. </li>
                  </ol>
                  <div class="codelisting" id="_code-token_digest_self" data-tralics-id="uid875"
                    data-number="8.59">
                    <div class="heading"><span class="number">Listing 8.59:</span>
                      <span class="description">Defining the new token and
                        digest methods using <code>self</code>.<span class="intersentencespace"></span>
                        <span style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns the hash digest of the given string.</span>
<span class="hll">  <span class="k">def</span> <span class="nc">self</span><span
class="o">.</span><span class="nf">digest</span><span class="p">(</span><span class="n">string</span><span
class="p">)</span>
</span>    <span class="n">cost</span> <span class="o">=</span> <span class="no">ActiveModel</span><span
class="o">::</span><span class="no">SecurePassword</span><span class="o">.</span><span
class="n">min_cost</span> <span class="p">?</span> <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">::</span><span
class="no">MIN_COST</span> <span class="p">:</span>
                                                  <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">string</span><span
class="p">,</span> <span class="ss">cost</span><span class="p">:</span> <span class="n">cost</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Returns a random token.</span>
<span class="hll">  <span class="k">def</span> <span class="nc">self</span><span
class="o">.</span><span class="nf">new_token</span>
</span>    <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-token_digest_class_self" data-tralics-id="uid876"
                    data-number="8.60">
                    <div class="heading"><span class="number">Listing 8.60:</span>
                      <span class="description">Defining the new token and
                        digest methods using <code>class &lt;&lt; self</code>.<span
                          class="intersentencespace"></span> <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span><span class="break"></span>
                        <span class="filepath">app/models/user.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="hll">  <span class="k">class</span> <span class="o">&lt;&lt;</span> <span
class="nb">self</span>
</span>    <span class="c1"># Returns the hash digest of the given string.</span>
<span class="hll">    <span class="k">def</span> <span class="nf">digest</span><span
class="p">(</span><span class="n">string</span><span class="p">)</span>
</span>      <span class="n">cost</span> <span class="o">=</span> <span class="no">ActiveModel</span><span
class="o">::</span><span class="no">SecurePassword</span><span class="o">.</span><span
class="n">min_cost</span> <span class="p">?</span> <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">::</span><span
class="no">MIN_COST</span> <span class="p">:</span>
                                                    <span class="no">BCrypt</span><span
class="o">::</span><span class="no">Engine</span><span class="o">.</span><span class="n">cost</span>
      <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">string</span><span
class="p">,</span> <span class="ss">cost</span><span class="p">:</span> <span class="n">cost</span><span
class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># Returns a random token.</span>
<span class="hll">    <span class="k">def</span> <span class="nf">new_token</span>
</span>      <span class="no">SecureRandom</span><span class="o">.</span><span class="n">urlsafe_base64</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-login_create_user_instance"
                    data-tralics-id="uid877" data-number="8.61">
                    <div class="heading"><span class="number">Listing 8.61:</span>
                      <span class="description">A template for using an instance
                        variable in the <code>create</code> action.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
<span class="hll">    <span class="p">?</span><span class="n">user</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:session</span><span class="o">][</span><span
class="ss">:email</span><span class="o">].</span><span class="n">downcase</span><span
class="p">)</span>
</span><span class="hll">    <span class="k">if</span> <span class="p">?</span><span
class="n">user</span> <span class="o">&amp;&amp;</span> <span class="p">?</span><span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
</span><span class="hll">      <span class="n">log_in</span> <span class="p">?</span><span
class="n">user</span>
</span><span class="hll">      <span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="o">==</span> <span class="s1">'1'</span> <span class="p">?</span> <span
class="n">remember</span><span class="p">(?</span><span class="n">user</span><span
class="p">)</span> <span class="p">:</span> <span class="n">forget</span><span class="p">(?</span><span
class="n">user</span><span class="p">)</span>
</span><span class="hll">      <span class="n">redirect_to</span> <span class="p">?</span><span
class="n">user</span>
</span>    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="n">log_out</span> <span class="k">if</span> <span class="n">logged_in?</span>
    <span class="n">redirect_to</span> <span class="n">root_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-improved_remember_me_test"
                    data-tralics-id="uid878" data-number="8.62">
                    <div class="heading"><span class="number">Listing 8.62:</span>
                      <span class="description">A template for an improved
                        “remember me” test.<span class="intersentencespace"></span>
                        <span style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                          class="break"></span> <span class="filepath">test/integration/users_login_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersLoginTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"login with remembering"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">,</span> <span class="ss">remember_me</span><span class="p">:</span> <span
class="s1">'1'</span><span class="p">)</span>
<span class="hll">    <span class="n">assert_equal</span> <span class="n">assigns</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">FILL_IN</span><span class="p">,</span> <span class="no">FILL_IN</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"login without remembering"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">,</span> <span class="ss">remember_me</span><span class="p">:</span> <span
class="s1">'0'</span><span class="p">)</span>
    <span class="n">assert_nil</span> <span class="n">cookies</span><span class="o">[</span><span
class="s1">'remember_token'</span><span class="o">]</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-8_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-8_footnote-1">Another common model is to expire
                      the session after a certain amount of time.<span class="intersentencespace"></span>
                      This is especially appropriate on sites containing
                      sensitive information, such as banking and financial
                      trading accounts.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-1">↑</a></li>
                    <li id="_cha-8_footnote-2">Some browsers offer an option to
                      restore such sessions via a “continue where you left off”
                      feature, but of course Rails has no control over this
                      behavior.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-2">↑</a></li>
                    <li id="_cha-8_footnote-3">A second option is to use <code>form_tag</code>
                      in place of <code>form_for</code>, which might be even
                      more idiomatically correct Rails, but it has less in
                      common with the signup form, and at this stage I want to
                      emphasize the parallel structure.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-3">↑</a></li>
                    <li id="_cha-8_footnote-4">The <code>log_in</code> method
                      is available in the Sessions controller because of the
                      module inclusion in <a href="#code-sessions_helper_include"
                        class="hyperref">Listing&nbsp;<span class="ref">8.11</span></a>.&nbsp;<a
                        class="arrow" href="#cha-8_footnote-ref-4">↑</a></li>
                    <li id="_cha-8_footnote-5">This practice of remembering
                      variable assignments from one method invocation to the
                      next is known as <a href="http://en.wikipedia.org/wiki/Memoization"
                        target="_blank"><em>memoization</em></a>.<span class="intersentencespace"></span>
                      (Note that this is a technical term; in particular, it’s <em>not</em>
                      a misspelling of “memorization”.)&nbsp;<a class="arrow" href="#cha-8_footnote-ref-5">↑</a></li>
                    <li id="_cha-8_footnote-6">Image from <a href="http://www.flickr.com/photos/hermanusbackpackers/3343254977/"
                        target="_blank">http://www.flickr.com/photos/hermanusbackpackers/3343254977/</a>.&nbsp;<a
                        class="arrow" href="#cha-8_footnote-ref-6">↑</a></li>
                    <li id="_cha-8_footnote-7">Web browsers can’t actually issue
                      <span class="tt">DELETE</span> requests; Rails fakes it
                      with JavaScript.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-7">↑</a></li>
                    <li id="_cha-8_footnote-8">See the <a href="http://getbootstrap.com/components/"
                        target="_blank">Bootstrap components page</a> for more
                      information.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-8">↑</a></li>
                    <li id="_cha-8_footnote-9">If you’re using the cloud IDE, I
                      recommend using a different browser to test the login
                      behavior so that you don’t have to close down the browser
                      running the IDE.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-9">↑</a></li>
                    <li id="_cha-8_footnote-10">As with the Sessions controller,
                      the <code>log_in</code> method is available in the Users
                      controller because of the module inclusion in <a href="#code-sessions_helper_include"
                        class="hyperref">Listing&nbsp;<span class="ref">8.11</span></a>.&nbsp;<a
                        class="arrow" href="#cha-8_footnote-ref-10">↑</a></li>
                    <li id="_cha-8_footnote-11">For example, I once had a test
                      suite that was <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>
                      even after accidentally deleting the main <code>log_in</code>
                      method in the Sessions helper.<span class="intersentencespace"></span>
                      The reason is that the tests were happily using a test
                      helper with the same name, thereby passing even though the
                      application was completely broken.<span class="intersentencespace"></span>
                      As with <code>is_logged_in?</code>, we’ll avoid this
                      issue by defining the test helper <code>log_in_as</code>
                      in <a href="#code-test_helper_log_in" class="hyperref">Listing&nbsp;<span
                          class="ref">8.50</span></a>.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-11">↑</a></li>
                    <li id="_cha-8_footnote-12">Some browsers offer a “<a href="http://stackoverflow.com/questions/20449641/rails-4-session-value-never-expires-or-dies-when-browser-closes"
                        target="_blank">remember where I left off</a>” feature,
                      which restores the session automatically, so be sure to
                      disable any such feature before trying to log out.&nbsp;<a
                        class="arrow" href="#cha-8_footnote-ref-12">↑</a></li>
                    <li id="_cha-8_footnote-13">Setting <code>@current_user</code>
                      to <code>nil</code> would only matter if <code>@current_user</code>
                      were created before the <code>destroy</code> action
                      (which it isn’t) <em>and</em> if we didn’t issue an
                      immediate redirect (which we do).<span class="intersentencespace"></span>
                      This is an unlikely combination of events, and with the
                      application as presently constructed it isn’t necessary,
                      but because it’s security-related I include it for
                      completeness.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-13">↑</a></li>
                    <li id="_cha-8_footnote-14">Session hijacking was widely
                      publicized by the <a href="http://codebutler.com/firesheep"
                        target="_blank">Firesheep</a> application, which showed
                      that remember tokens at many high-profile sites were
                      visible when connected to public Wi-Fi networks.&nbsp;<a class="arrow"
                        href="#cha-8_footnote-ref-14">↑</a></li>
                    <li id="_cha-8_footnote-15">This choice is based on the <a
                        href="http://railscasts.com/episodes/274-remember-me-reset-password"
                        target="_blank">RailsCast on remember me</a>.&nbsp;<a class="arrow"
                        href="#cha-8_footnote-ref-15">↑</a></li>
                    <li id="_cha-8_footnote-16">Indeed, it had better be OK,
                      because with bcrypt’s <a href="https://en.wikipedia.org/wiki/Salt_%28cryptography%29"
                        target="_blank">salted hashes</a> there’s no way for us
                      to tell if two users’ passwords match.&nbsp;<a class="arrow"
                        href="#cha-8_footnote-ref-16">↑</a></li>
                    <li id="_cha-8_footnote-17">With unique remember tokens, an
                      attacker always needs <em>both</em> the user id and the
                      remember token cookies to hijack the session.&nbsp;<a class="arrow"
                        href="#cha-8_footnote-ref-17">↑</a></li>
                    <li id="_cha-8_footnote-18">As a general rule, if a method
                      doesn’t need an instance of an object, it should be a
                      class method.<span class="intersentencespace"></span>
                      Indeed, this decision will prove important in <a href="#sec-account_activation_mailer"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.2</span></a>.&nbsp;<a
                        class="arrow" href="#cha-8_footnote-ref-18">↑</a></li>
                    <li id="_cha-8_footnote-19">As noted in <a href="#sec-a_hashed_password"
                        class="hyperref">Section&nbsp;<span class="ref">6.3.1</span></a>,
                      “unencrypted password” is a misnomer, as the secure
                      password is <em>hashed</em>, not encrypted.&nbsp;<a class="arrow"
                        href="#cha-8_footnote-ref-19">↑</a></li>
                    <li id="_cha-8_footnote-20">I generally use the convention
                      of putting such assignments in parentheses, which is a
                      visual reminder that it’s not a comparison.&nbsp;<a class="arrow"
                        href="#cha-8_footnote-ref-20">↑</a></li>
                    <li id="_cha-8_footnote-21">Google “&lt;your browser
                      name&gt; inspect cookies” to learn how to inspect the
                      cookies on your system.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-21">↑</a></li>
                    <li id="_cha-8_footnote-22">Thanks to reader Paulo Célio
                      Júnior for pointing this out.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-22">↑</a></li>
                    <li id="_cha-8_footnote-23">Thanks to reader Niels de Ron
                      for pointing this out.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-23">↑</a></li>
                    <li id="_cha-8_footnote-24">Before we wrote <code>remember
                        user</code> without parentheses, but when used with the
                      ternary operator omitting them results in a syntax
                      error.&nbsp;<a class="arrow" href="#cha-8_footnote-ref-24">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-updating_showing_and_deleting_users" data-tralics-id="cid58"
                  class="chapter" data-number="9">
                  <h1><a name="cha-updating_showing_and_deleting_users" class="heading hyperref"><span
                        class="number">Chapter 9 </span>Updating, showing, and
                      deleting users</a></h1>
                  <p>In this chapter, we will complete the REST actions for the
                    Users resource (<a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                        class="ref">7.1</span></a>) by adding <code>edit</code>,
                    <code>update</code>, <code>index</code>, and <code>destroy</code>
                    actions.<span class="intersentencespace"></span> We’ll start
                    by giving users the ability to update their profiles, which
                    will also provide a natural opportunity to enforce an
                    authorization model (made possible by the authentication
                    code in <a href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                        class="ref">8</span></a>).<span class="intersentencespace"></span>
                    Then we’ll make a listing of all users (also requiring
                    authentication), which will motivate the introduction of
                    sample data and pagination.<span class="intersentencespace"></span>
                    Finally, we’ll add the ability to destroy users, wiping them
                    clear from the database.<span class="intersentencespace"></span>
                    Since we can’t allow just any user to have such dangerous
                    powers, we’ll take care to create a privileged class of
                    administrative users authorized to delete other users.</p>
                </div>
                <div id="_sec-updating_users" data-tralics-id="cid59" class="section"
                  data-number="9.1">
                  <h2><a href="#sec-updating_users" class="heading hyperref"><span
                        class="number">9.1 </span>Updating users</a></h2>
                  <p>The pattern for editing user information closely parallels
                    that for creating new users (<a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                        class="ref">7</span></a>).<span class="intersentencespace"></span>
                    Instead of a <code>new</code> action rendering a view for
                    new users, we have an <code>edit</code> action rendering a
                    view to edit users; instead of <code>create</code>
                    responding to a <span class="tt">POST</span> request, we
                    have an <code>update</code> action responding to a <span class="tt">PATCH</span>
                    request (<a href="#aside-get_etc" class="hyperref">Box&nbsp;<span
                        class="ref">3.2</span></a>).<span class="intersentencespace"></span>
                    The biggest difference is that, while anyone can sign up,
                    only the current user should be able to update their
                    information.<span class="intersentencespace"></span> The
                    authentication machinery from <a href="#cha-log_in_log_out"
                      class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>
                    will allow us to use a <em>before filter</em> to ensure
                    that this is the case.</p>
                  <p>To get started, let’s start work on an <code>updating-users</code>
                    topic branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b updating-users
</pre></div>
                  </div>
                  <div id="_sec-edit_form" data-tralics-id="uid879" class="subsection"
                    data-number="9.1.1">
                    <h3><a href="#sec-edit_form" class="heading hyperref"><span
                          class="number">9.1.1 </span>Edit form</a></h3>
                    <p>We start with the edit form, whose mockup appears in <a
                        href="#fig-edit_user_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">9.1</span></a>.<sup id="_cha-9_footnote-ref-1"
                        class="footnote"><a href="#cha-9_footnote-1">1</a></sup><span
                        class="intersentencespace"></span> To turn the mockup in
                      <a href="#fig-edit_user_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">9.1</span></a> into a working page, we
                      need to fill in both the Users controller <code>edit</code>
                      action and the user edit view.<span class="intersentencespace"></span>
                      We start with the <code>edit</code> action, which
                      requires pulling the relevant user out of the database.<span
                        class="intersentencespace"></span> Note from <a href="#table-RESTful_users"
                        class="hyperref">Table&nbsp;<span class="ref">7.1</span></a>
                      that the proper URL for a user’s edit page is
                      /users/1/edit (assuming the user’s id is&nbsp;<span class="tt">1</span>).<span
                        class="intersentencespace"></span> Recall that the id of
                      the user is available in the <code>params[:id]</code>
                      variable, which means that we can find the user with the
                      code in <a href="#code-initial_edit_action" class="hyperref">Listing&nbsp;<span
                          class="ref">9.1</span></a>.</p>
                    <div class="center figure" id="_fig-edit_user_mockup" data-tralics-id="uid881"
                      data-number="9.1">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/edit_user_mockup_bootstrap.png"
                          alt="images/figures/edit_user_mockup_bootstrap"></div>
                      <div class="caption"><span class="header">Figure 9.1: </span><span
                          class="description">A mockup of the user edit page. </span></div>
                    </div>
                    <div class="codelisting" id="_code-initial_edit_action" data-tralics-id="uid882"
                      data-number="9.1">
                      <div class="heading"><span class="number">Listing 9.1:</span>
                        <span class="description">The user <code>edit</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
      <span class="n">log_in</span> <span class="vi">@user</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Welcome to the Sample App!"</span>
      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The corresponding user edit view (which you will have to
                      create by hand) is shown in <a href="#code-user_edit_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.2</span></a>.<span
                        class="intersentencespace"></span> Note how closely this
                      resembles the new user view from <a href="#code-signup_form"
                        class="hyperref">Listing&nbsp;<span class="ref">7.13</span></a>;
                      the large overlap suggests factoring the repeated code
                      into a partial, which is left as an exercise (<a href="#sec-updating_deleting_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">9.6</span></a>).</p>
                    <div class="codelisting" id="_code-user_edit_view" data-tralics-id="uid883"
                      data-number="9.2">
                      <div class="heading"><span class="number">Listing 9.2:</span>
                        <span class="description">The user edit view.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/edit.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Edit user"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Update your profile<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/error_messages'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Save changes"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"gravatar_edit"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="vi">@user</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://gravatar.com/emails"</span> <span
class="na">target=</span><span class="s">_blank</span><span class="nt">&gt;</span>change<span
class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here we have reused the shared <code>error_messages</code>
                      partial introduced in <a href="#sec-signup_error_messages"
                        class="hyperref">Section&nbsp;<span class="ref">7.3.3</span></a>.<span
                        class="intersentencespace"></span> By the way, the use
                      of <code>target=_blank</code> in the Gravatar link is a
                      neat trick to get the browser to open the page in a new
                      window or tab, which is convenient behavior when linking
                      to a third-party site.</p>
                    <p>With the <code>@user</code> instance variable from <a href="#code-initial_edit_action"
                        class="hyperref">Listing&nbsp;<span class="ref">9.1</span></a>,
                      the edit page should render properly, as shown in <a href="#fig-edit_page"
                        class="hyperref">Figure&nbsp;<span class="ref">9.2</span></a>.<span
                        class="intersentencespace"></span> The “Name” and
                      “Email” fields in <a href="#fig-edit_page" class="hyperref">Figure&nbsp;<span
                          class="ref">9.2</span></a> also shows how Rails
                      automatically pre-fills the Name and Email fields using
                      the attributes of the existing <code>@user</code>
                      variable.</p>
                    <div class="center figure" id="_fig-edit_page" data-tralics-id="uid884"
                      data-number="9.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/edit_page_3rd_edition.png"
                          alt="images/figures/edit_page_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.2: </span><span
                          class="description">The initial user edit page with
                          pre-filled name &amp; email. </span></div>
                    </div>
                    <p>Looking at the HTML source for <a href="#fig-edit_page"
                        class="hyperref">Figure&nbsp;<span class="ref">9.2</span></a>,
                      we see a form tag as expected, as in <a href="#code-edit_form_html"
                        class="hyperref">Listing&nbsp;<span class="ref">9.3</span></a>
                      (slight details may differ).</p>
                    <div class="codelisting" id="_code-edit_form_html" data-tralics-id="uid885"
                      data-number="9.3">
                      <div class="heading"><span class="number">Listing 9.3:</span>
                        <span class="description">HTML for the edit form defined
                          in <a href="#code-user_edit_view" class="hyperref">Listing&nbsp;<span
                              class="ref">9.2</span></a> and shown in <a href="#fig-edit_page"
                            class="hyperref">Figure&nbsp;<span class="ref">9.2</span></a>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;form</span> <span class="na">accept-charset=</span><span
class="s">"UTF-8"</span> <span class="na">action=</span><span class="s">"/users/1"</span> <span
class="na">class=</span><span class="s">"edit_user"</span>
      <span class="na">id=</span><span class="s">"edit_user_1"</span> <span class="na">method=</span><span
class="s">"post"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"_method"</span> <span
class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span
class="s">"patch"</span> <span class="nt">/&gt;</span>
  .
  .
  .
<span class="nt">&lt;/form&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note here the hidden input field</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;input</span> <span class="na">name=</span><span
class="s">"_method"</span> <span class="na">type=</span><span class="s">"hidden"</span> <span
class="na">value=</span><span class="s">"patch"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>Since web browsers can’t natively send <span class="tt">PATCH</span>
                      requests (as required by the REST conventions from <a href="#table-RESTful_users"
                        class="hyperref">Table&nbsp;<span class="ref">7.1</span></a>),
                      Rails fakes it with a <span class="tt">POST</span>
                      request and a hidden <code>input</code> field.<sup id="_cha-9_footnote-ref-2"
                        class="footnote"><a href="#cha-9_footnote-2">2</a></sup></p>
                    <p>There’s another subtlety to address here: the code <code>form_for(@user)</code>
                      in <a href="#code-user_edit_view" class="hyperref">Listing&nbsp;<span
                          class="ref">9.2</span></a> is <em>exactly</em> the
                      same as the code in <a href="#code-signup_form" class="hyperref">Listing&nbsp;<span
                          class="ref">7.13</span></a>—so how does Rails know to
                      use a <span class="tt">POST</span> request for new users
                      and a <span class="tt">PATCH</span> for editing users?<span
                        class="intersentencespace"></span> The answer is that it
                      is possible to tell whether a user is new or already
                      exists in the database via Active Record’s <code>new_record?</code>
                      boolean method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">new</span><span class="o">.</span><span class="n">new_record?</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">first</span><span class="o">.</span><span class="n">new_record?</span>
<span class="go">=&gt; false</span>
</pre></div>
                    </div>
                    <p>When constructing a form using <code>form_for(@user)</code>,
                      Rails uses <span class="tt">POST</span> if <code>@user.new_record?</code>
                      is <code>true</code> and <span class="tt">PATCH</span>
                      if it is <code>false</code>.</p>
                    <p>As a final touch, we’ll fill in the URL of the settings
                      link in the site navigation.<span class="intersentencespace"></span>
                      This is easy using the named route <code>edit_user_path</code>
                      from <a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>, together with the handy <code>current_user</code>
                      helper method defined in <a href="#code-persistent_current_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.36</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Settings"</span><span class="p">,</span> <span class="n">edit_user_path</span><span
class="p">(</span><span class="n">current_user</span><span class="p">)</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>The full application code appears in <a href="#code-settings_link"
                        class="hyperref">Listing&nbsp;<span class="ref">9.4</span></a>).</p>
                    <div class="codelisting" id="_code-settings_link" data-tralics-id="uid887"
                      data-number="9.4">
                      <div class="heading"><span class="number">Listing 9.4:</span>
                        <span class="description">Adding a URL to the “Settings”
                          link in the site layout.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/layouts/_header.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"sample app"</span><span
class="p">,</span> <span class="n">root_path</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="s2">"logo"</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;nav&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span> <span class="n">root_path</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span> <span class="n">help_path</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">logged_in?</span> <span
class="cp">%&gt;</span>
          <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Users"</span><span class="p">,</span> <span
class="s1">'#'</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
          <span class="nt">&lt;li</span> <span class="na">class=</span><span class="s">"dropdown"</span><span
class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span
class="na">class=</span><span class="s">"dropdown-toggle"</span> <span class="na">data-toggle=</span><span
class="s">"dropdown"</span><span class="nt">&gt;</span>
              Account <span class="nt">&lt;b</span> <span class="na">class=</span><span
class="s">"caret"</span><span class="nt">&gt;&lt;/b&gt;</span>
            <span class="nt">&lt;/a&gt;</span>
            <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"dropdown-menu"</span><span
class="nt">&gt;</span>
              <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Profile"</span><span class="p">,</span> <span
class="n">current_user</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
<span class="hll">              <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Settings"</span><span class="p">,</span> <span
class="n">edit_user_path</span><span class="p">(</span><span class="n">current_user</span><span
class="p">)</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span>              <span class="nt">&lt;li</span> <span class="na">class=</span><span
class="s">"divider"</span><span class="nt">&gt;&lt;/li&gt;</span>
              <span class="nt">&lt;li&gt;</span>
                <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log out"</span><span class="p">,</span> <span class="n">logout_path</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="s2">"delete"</span> <span class="cp">%&gt;</span>
              <span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;/ul&gt;</span>
          <span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
          <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="n">login_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/header&gt;</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-unsuccessful_edits" data-tralics-id="uid888" class="subsection"
                    data-number="9.1.2">
                    <h3><a href="#sec-unsuccessful_edits" class="heading hyperref"><span
                          class="number">9.1.2 </span>Unsuccessful edits</a></h3>
                    <p>In this section we’ll handle unsuccessful edits,
                      following similar ideas to unsuccessful signups (<a href="#sec-unsuccessful_signups"
                        class="hyperref">Section&nbsp;<span class="ref">7.3</span></a>).<span
                        class="intersentencespace"></span> We start by creating
                      an <code>update</code> action, which uses <code>update_attributes</code>
                      (<a href="#sec-updating_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.5</span></a>) to update the user based
                      on the submitted <code>params</code> hash, as shown in <a
                        href="#code-user_update_action_unsuccessful" class="hyperref">Listing&nbsp;<span
                          class="ref">9.5</span></a>.<span class="intersentencespace"></span>
                      With invalid information, the update attempt returns <code>false</code>,
                      so the <code>else</code> branch renders the edit page.<span
                        class="intersentencespace"></span> We’ve seen this
                      pattern before; the structure closely parallels the first
                      version of the <code>create</code> action (<a href="#code-first_create_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.16</span></a>).</p>
                    <div class="codelisting" id="_code-user_update_action_unsuccessful"
                      data-tralics-id="uid889" data-number="9.5">
                      <div class="heading"><span class="number">Listing 9.5:</span>
                        <span class="description">The initial user <code>update</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">new</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
<span class="hll">    <span class="k">if</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">save</span>
</span>      <span class="n">log_in</span> <span class="vi">@user</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Welcome to the Sample App!"</span>
      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
<span class="hll">      <span class="n">render</span> <span class="s1">'new'</span>
</span>    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="hll">    <span class="k">if</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span
class="n">user_params</span><span class="p">)</span>
</span>      <span class="c1"># Handle a successful update.</span>
    <span class="k">else</span>
<span class="hll">      <span class="n">render</span> <span class="s1">'edit'</span>
</span>    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the use of <code>user_params</code> in the call to
                      <code>update_attributes</code>, which uses strong
                      parameters to prevent mass assignment vulnerability (as
                      described in <a href="#sec-strong_parameters" class="hyperref">Section&nbsp;<span
                          class="ref">7.3.2</span></a>).</p>
                    <p>Because of the existing User model validations and the
                      error-messages partial in <a href="#code-user_edit_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.2</span></a>,
                      submission of invalid information results in helpful error
                      messages (<a href="#fig-buggy_edit_with_invalid_information"
                        class="hyperref">Figure&nbsp;<span class="ref">9.3</span></a>).</p>
                    <div class="center figure" id="_fig-buggy_edit_with_invalid_information"
                      data-tralics-id="uid890" data-number="9.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/edit_with_invalid_information_3rd_edition.png"
                          alt="images/figures/edit_with_invalid_information_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.3: </span><span
                          class="description">Error message from submitting the
                          update form. </span></div>
                    </div>
                  </div>
                  <div id="_sec-testing_unsuccessful_edits" data-tralics-id="uid891"
                    class="subsection" data-number="9.1.3">
                    <h3><a href="#sec-testing_unsuccessful_edits" class="heading hyperref"><span
                          class="number">9.1.3 </span>Testing unsuccessful
                        edits</a></h3>
                    <p>We left <a href="#sec-unsuccessful_edits" class="hyperref">Section&nbsp;<span
                          class="ref">9.1.2</span></a> with a working edit form.<span
                        class="intersentencespace"></span> Following the testing
                      guidelines from <a href="#aside-when_to_test" class="hyperref">Box&nbsp;<span
                          class="ref">3.3</span></a>, we’ll now write an
                      integration test to catch any regressions.<span class="intersentencespace"></span>
                      Our first step is to generate an integration test as
                      usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test users_edit
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/users_edit_test.rb</span>
</pre></div>
                    </div>
                    <p>Then we’ll write a simple test of an unsuccessful edit,
                      as shown in <a href="#code-unsuccessful_edit_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.6</span></a>.<span class="intersentencespace"></span>
                      The test in <a href="#code-unsuccessful_edit_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.6</span></a> checks for the correct
                      behavior by verifying that the edit template is rendered
                      after getting the edit page and re-rendered upon
                      submission of invalid information.<span class="intersentencespace"></span>
                      Note the use of the <code>patch</code> method to issue a
                      <span class="tt">PATCH</span> request, which follows the
                      same pattern as <code>get</code>, <code>post</code>, and
                      <code>delete</code>.</p>
                    <div class="codelisting" id="_code-unsuccessful_edit_test" data-tralics-id="uid892"
                      data-number="9.6">
                      <div class="heading"><span class="number">Listing 9.6:</span>
                        <span class="description">A test for an unsuccessful
                          edit.<span class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_edit_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersEditTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"unsuccessful edit"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">edit_user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
    <span class="n">assert_template</span> <span class="s1">'users/edit'</span>
    <span class="n">patch</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">),</span> <span class="ss">user</span><span
class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span>  <span
class="s2">""</span><span class="p">,</span>
                                    <span class="ss">email</span><span class="p">:</span> <span
class="s2">"foo@invalid"</span><span class="p">,</span>
                                    <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foo"</span><span class="p">,</span>
                                    <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"bar"</span> <span class="p">}</span>
    <span class="n">assert_template</span> <span class="s1">'users/edit'</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the test suite should still be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid893" data-tralics-id="uid893"
                      data-number="9.7">
                      <div class="heading"><span class="number">Listing 9.7:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-successful_edits" data-tralics-id="uid894" class="subsection"
                    data-number="9.1.4">
                    <h3><a href="#sec-successful_edits" class="heading hyperref"><span
                          class="number">9.1.4 </span>Successful edits (with
                        TDD)</a></h3>
                    <p>Now it’s time to get the edit form to work.<span class="intersentencespace"></span>
                      Editing the profile images is already functional since
                      we’ve outsourced image upload to the Gravatar website; we
                      can edit Gravatars by clicking on the “change” link from <a
                        href="#fig-edit_page" class="hyperref">Figure&nbsp;<span
                          class="ref">9.2</span></a>, as shown in <a href="#fig-gravatar_cropper"
                        class="hyperref">Figure&nbsp;<span class="ref">9.4</span></a>.<span
                        class="intersentencespace"></span> Let’s get the rest of
                      the user edit functionality working as well.</p>
                    <div class="center figure" id="_fig-gravatar_cropper" data-tralics-id="uid895"
                      data-number="9.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/gravatar_cropper.png"
                          alt="images/figures/gravatar_cropper"></div>
                      <div class="caption"><span class="header">Figure 9.4: </span><span
                          class="description">The <a href="http://gravatar.com/"
                            target="_blank">Gravatar</a> image-cropping
                          interface, with a picture of <a href="http://www.michaelhartl.com/"
                            target="_blank">some dude</a>. </span></div>
                    </div>
                    <p>As you get more comfortable with testing, you might find
                      that it’s useful to write integration tests before writing
                      the application code instead of after.<span class="intersentencespace"></span>
                      In this context, such tests are sometimes known as <em>acceptance
                        tests</em>, since they determine when a particular
                      feature should be accepted as complete.<span class="intersentencespace"></span>
                      To see how this works, we’ll complete the user edit
                      feature using test-driven development.</p>
                    <p>We’ll test for the correct behavior of updating users by
                      writing a test similar to the one shown in <a href="#code-unsuccessful_edit_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.6</span></a>,
                      only this time we’ll submit valid information.<span class="intersentencespace"></span>
                      Then we’ll check for a nonempty flash message and a
                      successful redirect to the profile page, while also
                      verifying that the user’s information correctly changed in
                      the database.<span class="intersentencespace"></span> The
                      result appears in <a href="#code-successful_edit_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.8</span></a>.<span class="intersentencespace"></span>
                      Note that the password and confirmation in <a href="#code-successful_edit_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.8</span></a>
                      are blank, which is convenient for users who don’t want to
                      update their passwords every time they update their names
                      or email addresses.<span class="intersentencespace"></span>
                      Note also the use of <code>@user.reload</code> (first
                      seen in <a href="#sec-updating_user_objects" class="hyperref">Section&nbsp;<span
                          class="ref">6.1.5</span></a>) to reload the user’s
                      values from the database and confirm that they were
                      successfully updated.<span class="intersentencespace"></span>
                      (This is the kind of detail you could easily forget
                      initially, which is why acceptance testing (and TDD
                      generally) require a certain level of experience to be
                      effective.)</p>
                    <div class="codelisting" id="_code-successful_edit_test" data-tralics-id="uid896"
                      data-number="9.8">
                      <div class="heading"><span class="number">Listing 9.8:</span>
                        <span class="description">A test of a successful edit.<span
                            class="intersentencespace"></span> <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_edit_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersEditTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"successful edit"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">edit_user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
    <span class="n">assert_template</span> <span class="s1">'users/edit'</span>
    <span class="nb">name</span>  <span class="o">=</span> <span class="s2">"Foo Bar"</span>
    <span class="n">email</span> <span class="o">=</span> <span class="s2">"foo@bar.com"</span>
    <span class="n">patch</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">),</span> <span class="ss">user</span><span
class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span>  <span
class="nb">name</span><span class="p">,</span>
                                    <span class="ss">email</span><span class="p">:</span> <span
class="n">email</span><span class="p">,</span>
                                    <span class="ss">password</span><span class="p">:</span>              <span
class="s2">""</span><span class="p">,</span>
                                    <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">""</span> <span class="p">}</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_redirected_to</span> <span class="vi">@user</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">reload</span>
    <span class="n">assert_equal</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span><span class="p">,</span>  <span class="nb">name</span>
    <span class="n">assert_equal</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">email</span><span class="p">,</span> <span class="n">email</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The <code>update</code> action needed to get the tests
                      in <a href="#code-successful_edit_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.8</span></a> to pass is similar to the
                      final form of the <code>create</code> action (<a href="#code-login_upon_signup"
                        class="hyperref">Listing&nbsp;<span class="ref">8.22</span></a>),
                      as seen in <a href="#code-user_update_action" class="hyperref">Listing&nbsp;<span
                          class="ref">9.9</span></a>.</p>
                    <div class="codelisting" id="_code-user_update_action" data-tralics-id="uid897"
                      data-number="9.9">
                      <div class="heading"><span class="number">Listing 9.9:</span>
                        <span class="description">The user <code>update</code>
                          action.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">update</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">update_attributes</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
<span class="hll">      <span class="n">flash</span><span class="o">[</span><span
class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Profile updated"</span>
</span><span class="hll">      <span class="n">redirect_to</span> <span class="vi">@user</span>
</span>    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'edit'</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As indicated in the caption to <a href="#code-user_update_action"
                        class="hyperref">Listing&nbsp;<span class="ref">9.9</span></a>,
                      the test suite is still <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>,
                      which is the result of the password length validation (<a
                        href="#code-password_implementation" class="hyperref">Listing&nbsp;<span
                          class="ref">6.39</span></a>) failing due to the blank
                      password and confirmation in <a href="#code-successful_edit_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.8</span></a>.<span
                        class="intersentencespace"></span> To get the tests to <span
                        style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>,
                      we need to make an exception to the minimum length
                      validation if the password is blank.<span class="intersentencespace"></span>
                      We can do this by passing the <code>allow_blank: true</code>
                      option to <code>validates</code>, as seen in <a href="#code-allow_blank_password"
                        class="hyperref">Listing&nbsp;<span class="ref">9.10</span></a>.</p>
                    <div class="codelisting" id="_code-allow_blank_password" data-tralics-id="uid898"
                      data-number="9.10">
                      <div class="heading"><span class="number">Listing 9.10:</span>
                        <span class="description">Allowing blank passwords on
                          update.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">before_save</span> <span class="p">{</span> <span class="nb">self</span><span
class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span> <span class="p">}</span>
  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="no">VALID_EMAIL_REGEX</span> <span class="o">=</span> <span class="sr">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span>
  <span class="n">validates</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">255</span> <span class="p">}</span>
                    <span class="nb">format</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">with</span><span class="p">:</span> <span class="no">VALID_EMAIL_REGEX</span> <span
class="p">},</span>
                    <span class="ss">uniqueness</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">case_sensitive</span><span class="p">:</span> <span
class="kp">false</span> <span class="p">}</span>
  <span class="n">has_secure_password</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:password</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span
class="mi">6</span> <span class="p">},</span> <span class="ss">allow_blank</span><span
class="p">:</span> <span class="kp">true</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>In case you’re worried that <a href="#code-allow_blank_password"
                        class="hyperref">Listing&nbsp;<span class="ref">9.10</span></a>
                      might allow new users to sign up with blank passwords,
                      recall from <a href="#sec-adding_a_secure_password" class="hyperref">Section&nbsp;<span
                          class="ref">6.3</span></a> that <code>has_secure_password</code>
                      enforces presence validations upon object creation.</p>
                    <p>With the code in this section, the user edit page should
                      be working (<a href="#fig-edit_form_working" class="hyperref">Figure&nbsp;<span
                          class="ref">9.5</span></a>), as you can double-check
                      by re-running the test suite, which should now be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid899" data-tralics-id="uid899"
                      data-number="9.11">
                      <div class="heading"><span class="number">Listing 9.11:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-edit_form_working" data-tralics-id="uid900"
                      data-number="9.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/edit_form_working.png"
                          alt="images/figures/edit_form_working"></div>
                      <div class="caption"><span class="header">Figure 9.5: </span><span
                          class="description">The result of a successful edit. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-authorization" data-tralics-id="cid60" class="section"
                  data-number="9.2">
                  <h2><a href="#sec-authorization" class="heading hyperref"><span
                        class="number">9.2 </span>Authorization</a></h2>
                  <p>In the context of web applications, <em>authentication</em>
                    allows us to identify users of our site, and <em>authorization</em>
                    lets us control what they can do.<span class="intersentencespace"></span>
                    One nice effect of building the authentication machinery in
                    <a href="#cha-log_in_log_out" class="hyperref">Chapter&nbsp;<span
                        class="ref">8</span></a> is that we are now in a
                    position to implement authorization as well.</p>
                  <p>Although the edit and update actions from <a href="#sec-updating_users"
                      class="hyperref">Section&nbsp;<span class="ref">9.1</span></a>
                    are functionally complete, they suffer from a ridiculous
                    security flaw: they allow anyone (even non-logged-in users)
                    to access either action, and any logged-in user can update
                    the information for any other user.<span class="intersentencespace"></span>
                    In this section, we’ll implement a security model that
                    requires users to be logged in and prevents them from
                    updating any information other than their own.</p>
                  <p>In <a href="#sec-requiring_logged_in_users" class="hyperref">Section&nbsp;<span
                        class="ref">9.2.1</span></a>, we’ll handle the case of
                    non-logged-in users who try to access a protected page to
                    which they might normally have access.<span class="intersentencespace"></span>
                    Because this could easily happen in the normal course of
                    using the application, such users will be forwarded to the
                    login page with a helpful message, as mocked up in <a href="#fig-login_page_protected_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">9.6</span></a>.<span
                      class="intersentencespace"></span> On the other hand,
                    users who try to access a page for which they would never be
                    authorized (such as a logged-in user trying to access a
                    different user’s edit page) will be redirected to the root
                    URL (<a href="#sec-requiring_the_right_user" class="hyperref">Section&nbsp;<span
                        class="ref">9.2.2</span></a>).</p>
                  <div class="center figure" id="_fig-login_page_protected_mockup"
                    data-tralics-id="uid901" data-number="9.6">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_page_protected_mockup.png"
                        alt="images/figures/login_page_protected_mockup"></div>
                    <div class="caption"><span class="header">Figure 9.6: </span><span
                        class="description">A mockup of the result of visiting a
                        protected page </span></div>
                  </div>
                  <div id="_sec-requiring_logged_in_users" data-tralics-id="uid902"
                    class="subsection" data-number="9.2.1">
                    <h3><a href="#sec-requiring_logged_in_users" class="heading hyperref"><span
                          class="number">9.2.1 </span>Requiring logged-in users</a></h3>
                    <p>To implement the forwarding behavior shown in <a href="#fig-login_page_protected_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">9.6</span></a>,
                      we’ll use a <em>before filter</em> in the Users
                      controller.<span class="intersentencespace"></span> Before
                      filters use the <code>before_action</code> command to
                      arrange for a particular method to be called before the
                      given actions.<sup id="_cha-9_footnote-ref-3" class="footnote"><a
                          href="#cha-9_footnote-3">3</a></sup><span class="intersentencespace"></span>
                      To require users to be logged in, we define a <code>logged_in_user</code>
                      method and invoke it using <code>before_action
                        :logged_in_user</code>, as shown in <a href="#code-authorize_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.12</span></a>.</p>
                    <div class="codelisting" id="_code-authorize_before_filter"
                      data-tralics-id="uid904" data-number="9.12">
                      <div class="heading"><span class="number">Listing 9.12:</span>
                        <span class="description">Adding a <code>logged_in_user</code>
                          before filter.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># Before filters</span>

    <span class="c1"># Confirms a logged-in user.</span>
    <span class="k">def</span> <span class="nf">logged_in_user</span>
<span class="hll">      <span class="k">unless</span> <span class="n">logged_in?</span>
</span><span class="hll">        <span class="n">flash</span><span class="o">[</span><span
class="ss">:danger</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Please log in."</span>
</span><span class="hll">        <span class="n">redirect_to</span> <span class="n">login_url</span>
</span><span class="hll">      <span class="k">end</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>By default, before filters apply to <em>every</em>
                      action in a controller, so here we restrict the filter to
                      act only on the <code>:edit</code> and <code>:update</code>
                      actions by passing the appropriate <code>:only</code>
                      options hash.</p>
                    <p>We can see the result of the before filter in <a href="#code-authorize_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.12</span></a>
                      by logging out and attempting to access the user edit page
                      <a href="http://localhost:3000/users/1/edit" target="_blank">/users/1/edit</a>,
                      as seen in <a href="#fig-protected_log_in" class="hyperref">Figure&nbsp;<span
                          class="ref">9.7</span></a>.</p>
                    <div class="center figure" id="_fig-protected_log_in" data-tralics-id="uid905"
                      data-number="9.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/protected_log_in_3rd_edition.png"
                          alt="images/figures/protected_log_in_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.7: </span><span
                          class="description">The login form after trying to
                          access a protected page. </span></div>
                    </div>
                    <p>As indicated in the caption of <a href="#code-authorize_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.12</span></a>,
                      our test suite is currently <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid906" data-tralics-id="uid906"
                      data-number="9.13">
                      <div class="heading"><span class="number">Listing 9.13:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>The reason is that the edit and update actions now
                      require a logged-in user, but no user is logged in inside
                      the corresponding tests.</p>
                    <p>We’ll fix our test suite by logging the user in before
                      hitting the edit or update actions.<span class="intersentencespace"></span>
                      This is easy using the <code>log_in_as</code> helper
                      developed in <a href="#sec-remember_tests" class="hyperref">Section&nbsp;<span
                          class="ref">8.4.6</span></a> (<a href="#code-test_helper_log_in"
                        class="hyperref">Listing&nbsp;<span class="ref">8.50</span></a>),
                      as shown in <a href="#code-edit_tests_logged_in" class="hyperref">Listing&nbsp;<span
                          class="ref">9.14</span></a>.</p>
                    <div class="codelisting" id="_code-edit_tests_logged_in" data-tralics-id="uid907"
                      data-number="9.14">
                      <div class="heading"><span class="number">Listing 9.14:</span>
                        <span class="description">Logging in a test user.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_edit_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersEditTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"unsuccessful edit"</span> <span
class="k">do</span>
<span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
</span>    <span class="n">get</span> <span class="n">edit_user_path</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"successful edit"</span> <span class="k">do</span>
<span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
</span>    <span class="n">get</span> <span class="n">edit_user_path</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>(We could eliminate some duplication by putting the test
                      login in the <code>setup</code> method of <a href="#code-edit_tests_logged_in"
                        class="hyperref">Listing&nbsp;<span class="ref">9.14</span></a>,
                      but in <a href="#sec-friendly_forwarding" class="hyperref">Section&nbsp;<span
                          class="ref">9.2.3</span></a> we’ll change one of the
                      tests to visit the edit page <em>before</em> logging in,
                      which isn’t possible if the login step happens during the
                      test setup.)</p>
                    <p>At this point, our test suite should be green:</p>
                    <div class="codelisting" id="_uid908" data-tralics-id="uid908"
                      data-number="9.15">
                      <div class="heading"><span class="number">Listing 9.15:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>Even though our test suite is now passing, we’re not
                      finished with the before filter, because the suite is
                      still <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>
                      even if we remove our security model, as you can verify by
                      commenting it out (<a href="#code-commented_out_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.16</span></a>).<span
                        class="intersentencespace"></span> This is a <a href="http://catb.org/jargon/html/B/Bad-Thing.html"
                        target="_blank">Bad Thing</a>—of all the regressions
                      we’d like our test suite to catch, a massive security hole
                      is probably&nbsp;#1, so the code in <a href="#code-commented_out_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.16</span></a>
                      should definitely be <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>.<span
                        class="intersentencespace"></span> Let’s write tests to
                      arrange that.</p>
                    <div class="codelisting" id="_code-commented_out_before_filter"
                      data-tralics-id="uid909" data-number="9.16">
                      <div class="heading"><span class="number">Listing 9.16:</span>
                        <span class="description">Commenting out the before
                          filter to test our security model.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="c1"># before_action :logged_in_user, only: [:edit, :update]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because the before filter operates on a per-action basis,
                      we’ll put the corresponding tests in the Users controller
                      test.<span class="intersentencespace"></span> The plan is
                      to hit the <code>edit</code> and <code>update</code>
                      action with the right kinds of requests and verify that
                      the flash is set and that the user is redirected to the
                      login path.<span class="intersentencespace"></span> From <a
                        href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>, we see that the proper
                      requests are <span class="tt">GET</span> and <span class="tt">PATCH</span>,
                      respectively, which means using the <code>get</code> and
                      <code>patch</code> methods inside the tests.<span class="intersentencespace"></span>
                      The results appear in <a href="#code-edit_update_redirect_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">9.17</span></a>.</p>
                    <div class="codelisting" id="_code-edit_update_redirect_tests"
                      data-tralics-id="uid910" data-number="9.17">
                      <div class="heading"><span class="number">Listing 9.17:</span>
                        <span class="description">Testing that <code>edit</code>
                          and <code>update</code> are protected.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:michael</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get new"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:new</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should redirect edit when not logged in"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">get</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="n">flash</span><span
class="o">.</span><span class="n">empty?</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
</span><span class="hll">  <span class="k">end</span>
</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"should redirect update when not logged in"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">patch</span> <span class="ss">:update</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="p">}</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="n">flash</span><span
class="o">.</span><span class="n">empty?</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the arguments to <code>get</code> and <code>patch</code>
                      involve code like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">get</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
</pre></div>
                    </div>
                    <p>and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">patch</span> <span class="ss">:update</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="p">}</span>
</pre></div>
                    </div>
                    <p>This uses the Rails convention of <code>id: @user</code>,
                      which (as in controller redirects) automatically uses <code>@user.id</code>.<span
                        class="intersentencespace"></span> In the second case,
                      we need to supply an additional <code>user</code> hash in
                      order for the routes to work properly.<span class="intersentencespace"></span>
                      (If you look at the generated Users controller tests from
                      the toy app in <a href="#cha-a_toy_app" class="hyperref">Chapter&nbsp;<span
                          class="ref">2</span></a>, you’ll see the code above.)</p>
                    <p>The test suite should now be <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>, as required.<span class="intersentencespace"></span>
                      To get it to <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>,
                      just uncomment the before filter (<a href="#code-uncommented_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.18</span></a>).</p>
                    <div class="codelisting" id="_code-uncommented_before_filter"
                      data-tralics-id="uid911" data-number="9.18">
                      <div class="heading"><span class="number">Listing 9.18:</span>
                        <span class="description">Uncommenting the before
                          filter.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With that, our test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid912" data-tralics-id="uid912"
                      data-number="9.19">
                      <div class="heading"><span class="number">Listing 9.19:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>Any accidental exposure of the edit methods to
                      unauthorized users will now be caught immediately by our
                      test suite.</p>
                  </div>
                  <div id="_sec-requiring_the_right_user" data-tralics-id="uid913"
                    class="subsection" data-number="9.2.2">
                    <h3><a href="#sec-requiring_the_right_user" class="heading hyperref"><span
                          class="number">9.2.2 </span>Requiring the right user</a></h3>
                    <p>Of course, requiring users to log in isn’t quite enough;
                      users should only be allowed to edit their <em>own</em>
                      information.<span class="intersentencespace"></span> As we
                      saw in <a href="#sec-requiring_logged_in_users" class="hyperref">Section&nbsp;<span
                          class="ref">9.2.1</span></a>, it’s easy to have a test
                      suite that misses an essential security flaw, so we’ll
                      proceed using test-driven development to be sure our code
                      implements the security model correctly.<span class="intersentencespace"></span>
                      To do this, we’ll add tests to the Users controller test
                      to complement the ones shown in <a href="#code-edit_update_redirect_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">9.17</span></a>.</p>
                    <p>In order to make sure users can’t edit other users’
                      information, we need to be able to log in as a second
                      user.<span class="intersentencespace"></span> This means
                      adding a second user to our users fixture file, as shown
                      in <a href="#code-fixture_second_user" class="hyperref">Listing&nbsp;<span
                          class="ref">9.20</span></a>.</p>
                    <div class="codelisting" id="_code-fixture_second_user" data-tralics-id="uid914"
                      data-number="9.20">
                      <div class="heading"><span class="number">Listing 9.20:</span>
                        <span class="description">Adding a second user to the
                          fixture file.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="l-Scalar-Plain">michael</span><span
class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Michael Example</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael@example.com</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>

<span class="hll"><span class="l-Scalar-Plain">archer</span><span class="p-Indicator">:</span>
</span><span class="hll">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Sterling Archer</span>
</span><span class="hll">  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">duchess@example.gov</span>
</span><span class="hll">  <span class="l-Scalar-Plain">password_digest</span><span
class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>By using the <code>log_in_as</code> method defined in <a
                        href="#code-test_helper_log_in" class="hyperref">Listing&nbsp;<span
                          class="ref">8.50</span></a>, we can test the <code>edit</code>
                      and <code>update</code> actions as in <a href="#code-edit_update_wrong_user_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">9.21</span></a>.<span
                        class="intersentencespace"></span> Note that we expect
                      to redirect users to the root path instead of the login
                      path because a user trying to edit a different user would
                      already be logged in.</p>
                    <div class="codelisting" id="_code-edit_update_wrong_user_tests"
                      data-tralics-id="uid915" data-number="9.21">
                      <div class="heading"><span class="number">Listing 9.21:</span>
                        <span class="description">Tests for trying to edit as
                          the wrong user.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span>       <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
<span class="hll">    <span class="vi">@other_user</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:archer</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should get new"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:new</span>
    <span class="n">assert_response</span> <span class="ss">:success</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect edit when not logged in"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:edit</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect update when not logged in"</span> <span
class="k">do</span>
    <span class="n">patch</span> <span class="ss">:update</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="p">}</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should redirect edit when logged in as wrong user"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@other_user</span><span class="p">)</span>
</span><span class="hll">    <span class="n">get</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
</span><span class="hll">    <span class="n">assert</span> <span class="n">flash</span><span
class="o">.</span><span class="n">empty?</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
</span><span class="hll">  <span class="k">end</span>
</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"should redirect update when logged in as wrong user"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@other_user</span><span class="p">)</span>
</span><span class="hll">    <span class="n">patch</span> <span class="ss">:update</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="p">}</span>
</span><span class="hll">    <span class="n">assert</span> <span class="n">flash</span><span
class="o">.</span><span class="n">empty?</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To redirect users trying to edit another user’s profile,
                      we’ll add a second method called <code>correct_user</code>,
                      together with a before filter to call it (<a href="#code-correct_user_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.22</span></a>).<span
                        class="intersentencespace"></span> Note that the <code>correct_user</code>
                      before filter defines the <code>@user</code> variable, so
                      <a href="#code-correct_user_before_filter" class="hyperref">Listing&nbsp;<span
                          class="ref">9.22</span></a> also shows that we can
                      eliminate the <code>@user</code> assignments in the <code>edit</code>
                      and <code>update</code> actions.</p>
                    <div class="codelisting" id="_code-correct_user_before_filter"
                      data-tralics-id="uid916" data-number="9.22">
                      <div class="heading"><span class="number">Listing 9.22:</span>
                        <span class="description">A <code>correct_user</code>
                          before filter to protect the edit/update pages.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">edit</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">update_attributes</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Profile updated"</span>
      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'edit'</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># Before filters</span>

    <span class="c1"># Confirms a logged-in user.</span>
    <span class="k">def</span> <span class="nf">logged_in_user</span>
      <span class="k">unless</span> <span class="n">logged_in?</span>
        <span class="n">flash</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Please log in."</span>
        <span class="n">redirect_to</span> <span class="n">login_url</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="c1"># Confirms the correct user.</span>
    <span class="k">def</span> <span class="nf">correct_user</span>
<span class="hll">      <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
</span><span class="hll">      <span class="n">redirect_to</span><span class="p">(</span><span
class="n">root_url</span><span class="p">)</span> <span class="k">unless</span> <span
class="vi">@user</span> <span class="o">==</span> <span class="n">current_user</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, our test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid917" data-tralics-id="uid917"
                      data-number="9.23">
                      <div class="heading"><span class="number">Listing 9.23:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>As a final refactoring, we’ll adopt a common convention
                      and define a <code>current_user?</code> boolean method
                      for use in the <code>correct_user</code> before filter,
                      which we define in the Sessions helper (<a href="#code-current_user_p"
                        class="hyperref">Listing&nbsp;<span class="ref">9.24</span></a>).<span
                        class="intersentencespace"></span> We’ll use this method
                      to replace code like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">unless</span> <span class="vi">@user</span> <span
class="o">==</span> <span class="n">current_user</span>
</pre></div>
                    </div>
                    <p>with the (slightly) more expressive</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">unless</span> <span class="n">current_user?</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</pre></div>
                    </div>
                    <div class="codelisting" id="_code-current_user_p" data-tralics-id="uid918"
                      data-number="9.24">
                      <div class="heading"><span class="number">Listing 9.24:</span>
                        <span class="description">The <code>current_user?</code>
                          method.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>

  <span class="c1"># Logs in the given user.</span>
  <span class="k">def</span> <span class="nf">log_in</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
  <span class="k">end</span>

  <span class="c1"># Remembers a user in a persistent session.</span>
  <span class="k">def</span> <span class="nf">remember</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">user</span><span class="o">.</span><span class="n">remember</span>
    <span class="n">cookies</span><span class="o">.</span><span class="n">permanent</span><span
class="o">.</span><span class="n">signed</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span> <span class="o">=</span> <span class="n">user</span><span class="o">.</span><span
class="n">id</span>
    <span class="n">cookies</span><span class="o">.</span><span class="n">permanent</span><span
class="o">[</span><span class="ss">:remember_token</span><span class="o">]</span> <span
class="o">=</span> <span class="n">user</span><span class="o">.</span><span class="n">remember_token</span>
  <span class="k">end</span>

  <span class="c1"># Returns true if the given user is the current user.</span>
  <span class="k">def</span> <span class="nf">current_user?</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
<span class="hll">    <span class="n">user</span> <span class="o">==</span> <span
class="n">current_user</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Replacing the direct comparison with the boolean method
                      gives the code shown in <a href="#code-correct_user_before_filter_boolean"
                        class="hyperref">Listing&nbsp;<span class="ref">9.25</span></a>.</p>
                    <div class="codelisting" id="_code-correct_user_before_filter_boolean"
                      data-tralics-id="uid919" data-number="9.25">
                      <div class="heading"><span class="number">Listing 9.25:</span>
                        <span class="description">The final <code>correct_user</code>
                          before filter.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">edit</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">update_attributes</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Profile updated"</span>
      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'edit'</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># Before filters</span>

    <span class="c1"># Confirms a logged-in user.</span>
    <span class="k">def</span> <span class="nf">logged_in_user</span>
      <span class="k">unless</span> <span class="n">logged_in?</span>
        <span class="n">flash</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Please log in."</span>
        <span class="n">redirect_to</span> <span class="n">login_url</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="c1"># Confirms the correct user.</span>
    <span class="k">def</span> <span class="nf">correct_user</span>
      <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="hll">      <span class="n">redirect_to</span><span class="p">(</span><span
class="n">root_url</span><span class="p">)</span> <span class="k">unless</span> <span
class="n">current_user?</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-friendly_forwarding" data-tralics-id="uid920" class="subsection"
                    data-number="9.2.3">
                    <h3><a href="#sec-friendly_forwarding" class="heading hyperref"><span
                          class="number">9.2.3 </span>Friendly forwarding</a></h3>
                    <p>Our site authorization is complete as written, but there
                      is one minor blemish: when users try to access a protected
                      page, they are currently redirected to their profile pages
                      regardless of where they were trying to go.<span class="intersentencespace"></span>
                      In other words, if a non-logged-in user tries to visit the
                      edit page, after logging in the user will be redirected to
                      /users/1 instead of /users/1/edit.<span class="intersentencespace"></span>
                      It would be much friendlier to redirect them to their
                      intended destination instead.</p>
                    <p>The application code will turn out to be relatively
                      complicated, but we can write a ridiculously simple test
                      for friendly forwarding just by reversing the order of
                      logging in and visiting the edit page in <a href="#code-edit_tests_logged_in"
                        class="hyperref">Listing&nbsp;<span class="ref">9.14</span></a>.<span
                        class="intersentencespace"></span> As seen in <a href="#code-friendly_forwarding_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.26</span></a>,
                      the resulting test tries to visit the edit page, then logs
                      in, and then checks that the user is redirected to the <em>edit</em>
                      page instead of the default profile page.<span class="intersentencespace"></span>
                      (<a href="#code-friendly_forwarding_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.26</span></a> also removes the test for
                      rendering the edit template since that’s no longer the
                      expected behavior.)</p>
                    <div class="codelisting" id="_code-friendly_forwarding_test"
                      data-tralics-id="uid921" data-number="9.26">
                      <div class="heading"><span class="number">Listing 9.26:</span>
                        <span class="description">A test for friendly
                          forwarding.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_edit_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersEditTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"successful edit with friendly forwarding"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">get</span> <span class="n">edit_user_path</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span><span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">edit_user_path</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
</span>    <span class="nb">name</span>  <span class="o">=</span> <span class="s2">"Foo Bar"</span>
    <span class="n">email</span> <span class="o">=</span> <span class="s2">"foo@bar.com"</span>
    <span class="n">patch</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">),</span> <span class="ss">user</span><span
class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span>  <span
class="nb">name</span><span class="p">,</span>
                                    <span class="ss">email</span><span class="p">:</span> <span
class="n">email</span><span class="p">,</span>
                                    <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foobar"</span><span class="p">,</span>
                                    <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span> <span class="p">}</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_redirected_to</span> <span class="vi">@user</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">reload</span>
    <span class="n">assert_equal</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span><span class="p">,</span>  <span class="nb">name</span>
    <span class="n">assert_equal</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">email</span><span class="p">,</span> <span class="n">email</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Now that we have a failing test, we’re ready to implement
                      friendly forwarding.<sup id="_cha-9_footnote-ref-4" class="footnote"><a
                          href="#cha-9_footnote-4">4</a></sup><span class="intersentencespace"></span>
                      In order to forward users to their intended destination,
                      we need to store the location of the requested page
                      somewhere, and then redirect to that location instead of
                      to the default.<span class="intersentencespace"></span> We
                      accomplish this with a pair of methods, <code>store_location</code>
                      and <code>redirect_back_or</code>, both defined in the
                      Sessions helper (<a href="#code-friendly_forwarding_code"
                        class="hyperref">Listing&nbsp;<span class="ref">9.27</span></a>).</p>
                    <div class="codelisting" id="_code-friendly_forwarding_code"
                      data-tralics-id="uid923" data-number="9.27">
                      <div class="heading"><span class="number">Listing 9.27:</span>
                        <span class="description">Code to implement friendly
                          forwarding.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Redirects to stored location (or to the default).</span>
  <span class="k">def</span> <span class="nf">redirect_back_or</span><span class="p">(</span><span
class="n">default</span><span class="p">)</span>
<span class="hll">    <span class="n">redirect_to</span><span class="p">(</span><span
class="n">session</span><span class="o">[</span><span class="ss">:forwarding_url</span><span
class="o">]</span> <span class="o">||</span> <span class="n">default</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">session</span><span class="o">.</span><span
class="n">delete</span><span class="p">(</span><span class="ss">:forwarding_url</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Stores the URL trying to be accessed.</span>
  <span class="k">def</span> <span class="nf">store_location</span>
<span class="hll">    <span class="n">session</span><span class="o">[</span><span
class="ss">:forwarding_url</span><span class="o">]</span> <span class="o">=</span> <span
class="n">request</span><span class="o">.</span><span class="n">url</span> <span
class="k">if</span> <span class="n">request</span><span class="o">.</span><span
class="n">get?</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here the storage mechanism for the forwarding URL is the
                      same <code>session</code> facility we used in <a href="#sec-a_working_log_in_method"
                        class="hyperref">Section&nbsp;<span class="ref">8.2.1</span></a>
                      to log the user in.<span class="intersentencespace"></span>
                      <a href="#code-friendly_forwarding_code" class="hyperref">Listing&nbsp;<span
                          class="ref">9.27</span></a> also uses the <code>request</code>
                      object (via <code>request.url</code>) to get the URL of
                      the requested page.</p>
                    <p>The <code>store_location</code> method in <a href="#code-friendly_forwarding_code"
                        class="hyperref">Listing&nbsp;<span class="ref">9.27</span></a>
                      puts the requested URL in the <code>session</code>
                      variable under the key <code>:forwarding_url</code>, but
                      only for a <code>GET</code> request.<span class="intersentencespace"></span>
                      This prevents storing the forwarding URL if a user, say,
                      submits a form when not logged in (which is an edge case
                      but could happen if, e.g., a user deleted the session
                      cookies by hand before submitting the form).<span class="intersentencespace"></span>
                      In such a case, the resulting redirect would issue a <code>GET</code>
                      request to a URL expecting <code>POST</code>, <code>PATCH</code>,
                      or <code>DELETE</code>, thereby causing an error.<span class="intersentencespace"></span>
                      Including <code>if request.get?</code> prevents this from
                      happening.<sup id="_cha-9_footnote-ref-5" class="footnote"><a
                          href="#cha-9_footnote-5">5</a></sup></p>
                    <p>To make use of <code>store_location</code>, we need to
                      add it to the <code>logged_in_user</code> before filter,
                      as shown in <a href="#code-add_store_location" class="hyperref">Listing&nbsp;<span
                          class="ref">9.28</span></a>.</p>
                    <div class="codelisting" id="_code-add_store_location" data-tralics-id="uid925"
                      data-number="9.28">
                      <div class="heading"><span class="number">Listing 9.28:</span>
                        <span class="description">Adding <code>store_location</code>
                          to the logged-in user before filter.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">edit</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># Before filters</span>

    <span class="c1"># Confirms a logged-in user.</span>
    <span class="k">def</span> <span class="nf">logged_in_user</span>
      <span class="k">unless</span> <span class="n">logged_in?</span>
<span class="hll">        <span class="n">store_location</span>
</span>        <span class="n">flash</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Please log in."</span>
        <span class="n">redirect_to</span> <span class="n">login_url</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="c1"># Confirms the correct user.</span>
    <span class="k">def</span> <span class="nf">correct_user</span>
      <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
      <span class="n">redirect_to</span><span class="p">(</span><span class="n">root_url</span><span
class="p">)</span> <span class="k">unless</span> <span class="n">current_user?</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To implement the forwarding itself, we use the <code>redirect_back_or</code>
                      method to redirect to the requested URL if it exists, or
                      some default URL otherwise, which we add to the Sessions
                      controller <code>create</code> action to redirect after
                      successful login (<a href="#code-friendly_session_create"
                        class="hyperref">Listing&nbsp;<span class="ref">9.29</span></a>).<span
                        class="intersentencespace"></span> The <code>redirect_back_or</code>
                      method uses the or operator&nbsp;<code>||</code> through</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">session</span><span class="o">[</span><span
class="ss">:forwarding_url</span><span class="o">]</span> <span class="o">||</span> <span
class="n">default</span>
</pre></div>
                    </div>
                    <p>This evaluates to <code>session[:forwarding_url]</code>
                      unless it’s <code>nil</code>, in which case it evaluates
                      to the given default URL. Note that <a href="#code-friendly_forwarding_code"
                        class="hyperref">Listing&nbsp;<span class="ref">9.27</span></a>
                      is careful to remove the forwarding URL; otherwise,
                      subsequent login attempts would forward to the protected
                      page until the user closed their browser.<span class="intersentencespace"></span>
                      (Testing for this is left as an exercise (<a href="#sec-updating_deleting_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">9.6</span></a>).)<span
                        class="intersentencespace"></span> Also note that the
                      session deletion occurs even though the line with the
                      redirect appears first; redirects don’t happen until an
                      explicit <code>return</code> or the end of the method, so
                      any code appearing after the redirect is still executed.</p>
                    <div class="codelisting" id="_code-friendly_session_create"
                      data-tralics-id="uid926" data-number="9.29">
                      <div class="heading"><span class="number">Listing 9.29:</span>
                        <span class="description">The Sessions <code>create</code>
                          action with friendly forwarding.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
      <span class="n">log_in</span> <span class="n">user</span>
      <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:remember_me</span><span class="o">]</span> <span
class="o">==</span> <span class="s1">'1'</span> <span class="p">?</span> <span class="n">remember</span><span
class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="p">:</span> <span
class="n">forget</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
<span class="hll">      <span class="n">redirect_back_or</span> <span class="n">user</span>
</span>    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With that, the friendly forwarding integration test in <a
                        href="#code-friendly_forwarding_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.26</span></a> should pass, and the basic
                      user authentication and page protection implementation is
                      complete.<span class="intersentencespace"></span> As
                      usual, it’s a good idea to verify that the test suite is <span
                        style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>
                      before proceeding:</p>
                    <div class="codelisting" id="_uid927" data-tralics-id="uid927"
                      data-number="9.30">
                      <div class="heading"><span class="number">Listing 9.30:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-showing_all_users" data-tralics-id="cid61" class="section"
                  data-number="9.3">
                  <h2><a href="#sec-showing_all_users" class="heading hyperref"><span
                        class="number">9.3 </span>Showing all users</a></h2>
                  <p>In this section, we’ll add the <a href="http://www.answers.com/penultimate"
                      target="_blank">penultimate</a> user action, the <code>index</code>
                    action, which is designed to display <em>all</em> the users
                    instead of just one.<span class="intersentencespace"></span>
                    Along the way, we’ll learn how to seed the database with
                    sample users and how to <em>paginate</em> the user output
                    so that the index page can scale up to display a potentially
                    large number of users.<span class="intersentencespace"></span>
                    A mockup of the result—users, pagination links, and a
                    “Users” navigation link—appears in <a href="#fig-user_index_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">9.8</span></a>.<sup
                      id="_cha-9_footnote-ref-6" class="footnote"><a href="#cha-9_footnote-6">6</a></sup><span
                      class="intersentencespace"></span> In <a href="#sec-deleting_users"
                      class="hyperref">Section&nbsp;<span class="ref">9.4</span></a>,
                    we’ll add an administrative interface to the users index so
                    that users can also be destroyed.</p>
                  <div class="center figure" id="_fig-user_index_mockup" data-tralics-id="uid929"
                    data-number="9.8">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_index_mockup_bootstrap.png"
                        alt="images/figures/user_index_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 9.8: </span><span
                        class="description">A mockup of the users index page. </span></div>
                  </div>
                  <div id="_sec-users_index" data-tralics-id="uid930" class="subsection"
                    data-number="9.3.1">
                    <h3><a href="#sec-users_index" class="heading hyperref"><span
                          class="number">9.3.1 </span>Users index</a></h3>
                    <p>To get started with the users index, we’ll first
                      implement a security model.<span class="intersentencespace"></span>
                      Although we’ll keep individual user <code>show</code>
                      pages visible to all site visitors, the user <code>index</code>
                      will be restricted to logged-in users so that there’s a
                      limit to how much unregistered users can see by default.<sup
                        id="_cha-9_footnote-ref-7" class="footnote"><a href="#cha-9_footnote-7">7</a></sup></p>
                    <p>To protect the <code>index</code> page from unauthorized
                      access, we’ll first add a short test to verify that the <code>index</code>
                      action is redirected properly (<a href="#code-index_action_redirected_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.31</span></a>).</p>
                    <div class="codelisting" id="_code-index_action_redirected_test"
                      data-tralics-id="uid932" data-number="9.31">
                      <div class="heading"><span class="number">Listing 9.31:</span>
                        <span class="description">Testing the <code>index</code>
                          action redirect.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span>       <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="vi">@other_user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should redirect index when not logged in"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">get</span> <span class="ss">:index</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
</span><span class="hll">  <span class="k">end</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Then we just need to add an <code>index</code> action
                      and include it in the list of actions protected by the <code>logged_in_user</code>
                      before filter (<a href="#code-logged_in_user_index" class="hyperref">Listing&nbsp;<span
                          class="ref">9.32</span></a>).</p>
                    <div class="codelisting" id="_code-logged_in_user_index" data-tralics-id="uid933"
                      data-number="9.32">
                      <div class="heading"><span class="number">Listing 9.32:</span>
                        <span class="description">Requiring a logged-in user for
                          the <code>index</code> action.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="o">]</span>
</span>  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>

<span class="hll">  <span class="k">def</span> <span class="nf">index</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="hll">
</span>  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To display the users themselves, we need to make a
                      variable containing all the site’s users and then render
                      each one by iterating through them in the index view.<span
                        class="intersentencespace"></span> As you may recall
                      from the corresponding action in the toy app (<a href="#code-demo_index_action"
                        class="hyperref">Listing&nbsp;<span class="ref">2.5</span></a>),
                      we can use <code>User.all</code> to pull all the users
                      out of the database, assigning them to an <code>@users</code>
                      instance variable for use in the view, as seen in <a href="#code-user_index"
                        class="hyperref">Listing&nbsp;<span class="ref">9.33</span></a>.<span
                        class="intersentencespace"></span> (If displaying all
                      the users at once seems like a bad idea, you’re right, and
                      we’ll remove this blemish in <a href="#sec-pagination" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.3</span></a>.)</p>
                    <div class="codelisting" id="_code-user_index" data-tralics-id="uid934"
                      data-number="9.33">
                      <div class="heading"><span class="number">Listing 9.33:</span>
                        <span class="description">The user <code>index</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">index</span>
<span class="hll">    <span class="vi">@users</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">all</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To make the actual index page, we’ll make a view (whose
                      file you’ll have to create) that iterates through the
                      users and wraps each one in an&nbsp;<code>li</code> tag.<span
                        class="intersentencespace"></span> We do this with the <code>each</code>
                      method, displaying each user’s Gravatar and name, while
                      wrapping the whole thing in a <code>ul</code> tag (<a href="#code-user_index_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.34</span></a>).</p>
                    <div class="codelisting" id="_code-user_index_view" data-tralics-id="uid935"
                      data-number="9.34">
                      <div class="heading"><span class="number">Listing 9.34:</span>
                        <span class="description">The users index view.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/index.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'All users'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>All users<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"users"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%</span> <span class="vi">@users</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span
class="o">|</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;li&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="n">user</span><span
class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">50</span> <span
class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">user</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The code in <a href="#code-user_index_view" class="hyperref">Listing&nbsp;<span
                          class="ref">9.34</span></a> uses the result of <a href="#code-gravatar_option"
                        class="hyperref">Listing&nbsp;<span class="ref">7.31</span></a>
                      from <a href="#sec-signup_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">7.7</span></a>, which allows us to pass an
                      option to the Gravatar helper specifying a size other than
                      the default.<span class="intersentencespace"></span> If
                      you didn’t do that exercise, update your Users helper file
                      with the contents of <a href="#code-gravatar_option" class="hyperref">Listing&nbsp;<span
                          class="ref">7.31</span></a> before proceeding.</p>
                    <p>Let’s also add a little CSS (or, rather, SCSS) for style
                      (<a href="#code-user_index_css" class="hyperref">Listing&nbsp;<span
                          class="ref">9.35</span></a>).</p>
                    <div class="codelisting" id="_code-user_index_css" data-tralics-id="uid936"
                      data-number="9.35">
                      <div class="heading"><span class="number">Listing 9.35:</span>
                        <span class="description">CSS for the users index.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">Users</span> <span class="nt">index</span> <span
class="o">*/</span>

<span class="nc">.users</span> <span class="p">{</span>
  <span class="na">list-style</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
  <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="nt">li</span> <span class="p">{</span>
    <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span
class="p">;</span>
    <span class="na">padding</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span> <span class="mi">0</span><span class="p">;</span>
    <span class="na">border-bottom</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="nv">$gray-lighter</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <p>Finally, we’ll add the URL to the users link in the
                      site’s navigation header using <code>users_path</code>,
                      thereby using the last of the unused named routes in <a href="#table-RESTful_users"
                        class="hyperref">Table&nbsp;<span class="ref">7.1</span></a>.<span
                        class="intersentencespace"></span> The result appears in
                      <a href="#code-users_link" class="hyperref">Listing&nbsp;<span
                          class="ref">9.36</span></a>.</p>
                    <div class="codelisting" id="_code-users_link" data-tralics-id="uid937"
                      data-number="9.36">
                      <div class="heading"><span class="number">Listing 9.36:</span>
                        <span class="description">Adding the URL to the users
                          link.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/layouts/_header.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;header</span> <span class="na">class=</span><span
class="s">"navbar navbar-fixed-top navbar-inverse"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"container"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"sample app"</span><span
class="p">,</span> <span class="n">root_path</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="s2">"logo"</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;nav&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"nav navbar-nav navbar-right"</span><span
class="nt">&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Home"</span><span class="p">,</span> <span class="n">root_path</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Help"</span><span class="p">,</span> <span class="n">help_path</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">logged_in?</span> <span
class="cp">%&gt;</span>
<span class="hll">          <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Users"</span><span class="p">,</span> <span
class="n">users_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
</span>          <span class="nt">&lt;li</span> <span class="na">class=</span><span
class="s">"dropdown"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"#"</span> <span
class="na">class=</span><span class="s">"dropdown-toggle"</span> <span class="na">data-toggle=</span><span
class="s">"dropdown"</span><span class="nt">&gt;</span>
              Account <span class="nt">&lt;b</span> <span class="na">class=</span><span
class="s">"caret"</span><span class="nt">&gt;&lt;/b&gt;</span>
            <span class="nt">&lt;/a&gt;</span>
            <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"dropdown-menu"</span><span
class="nt">&gt;</span>
              <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Profile"</span><span class="p">,</span> <span
class="n">current_user</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
              <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Settings"</span><span class="p">,</span> <span
class="n">edit_user_path</span><span class="p">(</span><span class="n">current_user</span><span
class="p">)</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
              <span class="nt">&lt;li</span> <span class="na">class=</span><span
class="s">"divider"</span><span class="nt">&gt;&lt;/li&gt;</span>
              <span class="nt">&lt;li&gt;</span>
                <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"Log out"</span><span class="p">,</span> <span class="n">logout_path</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="s2">"delete"</span> <span class="cp">%&gt;</span>
              <span class="nt">&lt;/li&gt;</span>
            <span class="nt">&lt;/ul&gt;</span>
          <span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
          <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="n">login_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
        <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
    <span class="nt">&lt;/nav&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/header&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>With that, the users index is fully functional, with all
                      tests <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid938" data-tralics-id="uid938"
                      data-number="9.37">
                      <div class="heading"><span class="number">Listing 9.37:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>On the other hand, as seen in <a href="#fig-user_index_only_one"
                        class="hyperref">Figure&nbsp;<span class="ref">9.9</span></a>,
                      it is a bit…lonely.<span class="intersentencespace"></span>
                      Let’s remedy this sad situation.</p>
                    <div class="center figure" id="_fig-user_index_only_one" data-tralics-id="uid939"
                      data-number="9.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_index_only_one_3rd_edition.png"
                          alt="images/figures/user_index_only_one_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.9: </span><span
                          class="description">The users index page with only one
                          user. </span></div>
                    </div>
                  </div>
                  <div id="_sec-sample_users" data-tralics-id="uid940" class="subsection"
                    data-number="9.3.2">
                    <h3><a href="#sec-sample_users" class="heading hyperref"><span
                          class="number">9.3.2 </span>Sample users</a></h3>
                    <p>In this section, we’ll give our lonely sample user some
                      company.<span class="intersentencespace"></span> Of
                      course, to create enough users to make a decent users
                      index, we <em>could</em> use our web browser to visit the
                      signup page and make the new users one by one, but a far
                      better solution is to use Ruby (and Rake) to make the
                      users for us.</p>
                    <p>First, we’ll add the <em>Faker</em> gem to the <code>Gemfile</code>,
                      which will allow us to make sample users with
                      semi-realistic names and email addresses (<a href="#code-faker_gemfile"
                        class="hyperref">Listing&nbsp;<span class="ref">9.38</span></a>).</p>
                    <div class="codelisting" id="_code-faker_gemfile" data-tralics-id="uid941"
                      data-number="9.38">
                      <div class="heading"><span class="number">Listing 9.38:</span>
                        <span class="description">Adding the Faker gem to the <code>Gemfile</code>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'bcrypt'</span><span class="p">,</span>               <span
class="s1">'3.1.7'</span>
<span class="hll"><span class="n">gem</span> <span class="s1">'faker'</span><span
class="p">,</span>                <span class="s1">'1.4.2'</span>
</span><span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</pre></div>
                      </div>
                    </div>
                    <p>Then install as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install
</pre></div>
                    </div>
                    <p>Next, we’ll add a Rake task to seed the database with
                      sample users, for which Rails uses the standard location <code>db/seeds.rb</code>.<span
                        class="intersentencespace"></span> The result appears in
                      <a href="#code-db_seed" class="hyperref">Listing&nbsp;<span
                          class="ref">9.39</span></a>.<span class="intersentencespace"></span>
                      (The code in <a href="#code-db_seed" class="hyperref">Listing&nbsp;<span
                          class="ref">9.39</span></a> is a bit advanced, so
                      don’t worry too much about the details.)</p>
                    <div class="codelisting" id="_code-db_seed" data-tralics-id="uid942"
                      data-number="9.39">
                      <div class="heading"><span class="number">Listing 9.39:</span>
                        <span class="description">A Rake task for seeding the
                          database with sample users.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/seeds.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">User</span><span class="o">.</span><span
class="n">create!</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span>  <span class="s2">"Example User"</span><span class="p">,</span>
             <span class="ss">email</span><span class="p">:</span> <span class="s2">"example@railstutorial.org"</span><span
class="p">,</span>
             <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foobar"</span><span class="p">,</span>
             <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">)</span>

<span class="mi">99</span><span class="o">.</span><span class="n">times</span> <span
class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
  <span class="nb">name</span>  <span class="o">=</span> <span class="no">Faker</span><span
class="o">::</span><span class="no">Name</span><span class="o">.</span><span class="n">name</span>
  <span class="n">email</span> <span class="o">=</span> <span class="s2">"example-</span><span
class="si">#{</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span
class="si">}</span><span class="s2">@railstutorial.org"</span>
  <span class="n">password</span> <span class="o">=</span> <span class="s2">"password"</span>
  <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span>  <span class="nb">name</span><span
class="p">,</span>
               <span class="ss">email</span><span class="p">:</span> <span class="n">email</span><span
class="p">,</span>
               <span class="ss">password</span><span class="p">:</span>              <span
class="n">password</span><span class="p">,</span>
               <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="n">password</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The code in <a href="#code-db_seed" class="hyperref">Listing&nbsp;<span
                          class="ref">9.39</span></a> creates an example user
                      with name and email address replicating our previous one,
                      and then makes 99 more.<span class="intersentencespace"></span>
                      The <code>create!</code> method is just like the <code>create</code>
                      method, except it raises an exception (<a href="#sec-finding_user_objects"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.4</span></a>)
                      for an invalid user rather than returning <code>false</code>.<span
                        class="intersentencespace"></span> This behavior makes
                      debugging easier by avoiding silent errors.</p>
                    <p>With the code as in <a href="#code-db_seed" class="hyperref">Listing&nbsp;<span
                          class="ref">9.39</span></a>, we can reset the database
                      and then invoke the Rake task using <code>db:seed</code>:<sup
                        id="_cha-9_footnote-ref-8" class="footnote"><a href="#cha-9_footnote-8">8</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate:reset
$ bundle exec rake db:seed
</pre></div>
                    </div>
                    <p>Seeding the database can be slow, and on some systems
                      could take up to a few minutes.</p>
                    <p>After running the <code>db:seed</code> Rake task, our
                      application has 100 sample users.<span class="intersentencespace"></span>
                      As seen in <a href="#fig-user_index_all" class="hyperref">Figure&nbsp;<span
                          class="ref">9.10</span></a>, I’ve taken the liberty of
                      associating the first few sample addresses with Gravatars
                      so that they’re not all the default Gravatar image.<span class="intersentencespace"></span>
                      (You may have to restart the webserver at this point.)</p>
                    <div class="center figure" id="_fig-user_index_all" data-tralics-id="uid944"
                      data-number="9.10">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_index_all_3rd_edition.png"
                          alt="images/figures/user_index_all_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.10: </span><span
                          class="description">The users index page with 100
                          sample users. </span></div>
                    </div>
                  </div>
                  <div id="_sec-pagination" data-tralics-id="uid945" class="subsection"
                    data-number="9.3.3">
                    <h3><a href="#sec-pagination" class="heading hyperref"><span
                          class="number">9.3.3 </span>Pagination</a></h3>
                    <p>Our original user doesn’t suffer from loneliness any
                      more, but now we have the opposite problem: our user has <em>too
                        many</em> companions, and they all appear on the same
                      page.<span class="intersentencespace"></span> Right now
                      there are a hundred, which is already a reasonably large
                      number, and on a real site it could be thousands.<span class="intersentencespace"></span>
                      The solution is to <em>paginate</em> the users, so that
                      (for example) only 30 show up on a page at any one time.</p>
                    <p>There are several pagination methods in Rails; we’ll use
                      one of the simplest and most robust, called <a href="http://wiki.github.com/mislav/will_paginate/"
                        target="_blank">will_paginate</a>.<span class="intersentencespace"></span>
                      To use it, we need to include both the <span class="tt">will_paginate</span>
                      gem and <span class="tt">bootstrap-will_paginate</span>,
                      which configures will_paginate to use Bootstrap’s
                      pagination styles.<span class="intersentencespace"></span>
                      The updated <code>Gemfile</code> appears in <a href="#code-will_paginate_gem"
                        class="hyperref">Listing&nbsp;<span class="ref">9.40</span></a>.</p>
                    <div class="codelisting" id="_code-will_paginate_gem" data-tralics-id="uid946"
                      data-number="9.40">
                      <div class="heading"><span class="number">Listing 9.40:</span>
                        <span class="description">Including <span class="tt">will_paginate</span>
                          in the <code>Gemfile</code>.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                   <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'bcrypt'</span><span class="p">,</span>                  <span
class="s1">'3.1.7'</span>
<span class="n">gem</span> <span class="s1">'faker'</span><span class="p">,</span>                   <span
class="s1">'1.4.2'</span>
<span class="hll"><span class="n">gem</span> <span class="s1">'will_paginate'</span><span
class="p">,</span>           <span class="s1">'3.0.7'</span>
</span><span class="hll"><span class="n">gem</span> <span class="s1">'bootstrap-will_paginate'</span><span
class="p">,</span> <span class="s1">'0.0.10'</span>
</span><span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</pre></div>
                      </div>
                    </div>
                    <p>Then run <code>bundle install</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install
</pre></div>
                    </div>
                    <p>You should also restart the web server to ensure that the
                      new gems are loaded properly.</p>
                    <p>To get pagination working, we need to add some code to
                      the index view telling Rails to paginate the users, and we
                      need to replace <code>User.all</code> in the <code>index</code>
                      action with an object that knows about pagination.<span class="intersentencespace"></span>
                      We’ll start by adding the special <code>will_paginate</code>
                      method in the view (<a href="#code-will_paginate_index_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.41</span></a>);
                      we’ll see in a moment why the code appears both above and
                      below the user list.</p>
                    <div class="codelisting" id="_code-will_paginate_index_view"
                      data-tralics-id="uid947" data-number="9.41">
                      <div class="heading"><span class="number">Listing 9.41:</span>
                        <span class="description">The users index with
                          pagination.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/users/index.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'All users'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>All users<span class="nt">&lt;/h1&gt;</span>

<span class="hll"><span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="cp">%&gt;</span>
</span>
<span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"users"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%</span> <span class="vi">@users</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span
class="o">|</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;li&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="n">user</span><span
class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">50</span> <span
class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">user</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/ul&gt;</span>

<span class="hll"><span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="cp">%&gt;</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>The <code>will_paginate</code> method is a little
                      magical; inside a <code>users</code> view, it
                      automatically looks for an <code>@users</code> object,
                      and then displays pagination links to access other pages.<span
                        class="intersentencespace"></span> The view in <a href="#code-will_paginate_index_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.41</span></a>
                      doesn’t work yet, though, because currently <code>@users</code>
                      contains the results of <code>User.all</code> (<a href="#code-user_index"
                        class="hyperref">Listing&nbsp;<span class="ref">9.33</span></a>),
                      whereas <code>will_paginate</code> requires that we
                      paginate the results explicitly using the <code>paginate</code>
                      method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="mi">1</span><span class="p">)</span>
<span class="go">  User Load (1.5ms)  SELECT "users".* FROM "users" LIMIT 30 OFFSET 0</span>
<span class="go">   (1.7ms)  SELECT COUNT(*) FROM "users"</span>
<span class="go">=&gt; #&lt;ActiveRecord::Relation [#&lt;User id: 1,...</span>
</pre></div>
                    </div>
                    <p>Note that <code>paginate</code> takes a hash argument
                      with key <code>:page</code> and value equal to the page
                      requested.<span class="intersentencespace"></span> <code>User.paginate</code>
                      pulls the users out of the database one chunk at a time
                      (30 by default), based on the <code>:page</code>
                      parameter.<span class="intersentencespace"></span> So, for
                      example, page&nbsp;1 is users 1–30, page&nbsp;2 is users
                      31–60, etc.<span class="intersentencespace"></span> If <code>page</code>
                      is <code>nil</code>, <code>paginate</code> simply
                      returns the first page.</p>
                    <p>Using the <code>paginate</code> method, we can paginate
                      the users in the sample application by using <code>paginate</code>
                      in place of <code>all</code> in the <code>index</code>
                      action (<a href="#code-will_paginate_index_action" class="hyperref">Listing&nbsp;<span
                          class="ref">9.42</span></a>).<span class="intersentencespace"></span>
                      Here the <code>page</code> parameter comes from <code>params[:page]</code>,
                      which is generated automatically by <code>will_paginate</code>.</p>
                    <div class="codelisting" id="_code-will_paginate_index_action"
                      data-tralics-id="uid948" data-number="9.42">
                      <div class="heading"><span class="number">Listing 9.42:</span>
                        <span class="description">Paginating the users in the <code>index</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">index</span>
<span class="hll">    <span class="vi">@users</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">paginate</span><span
class="p">(</span><span class="ss">page</span><span class="p">:</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The users index page should now be working, appearing as
                      in <a href="#fig-user_index_pagination" class="hyperref">Figure&nbsp;<span
                          class="ref">9.11</span></a>.<span class="intersentencespace"></span>
                      (On some systems, you may have to restart the Rails server
                      at this point.)<span class="intersentencespace"></span>
                      Because we included <code>will_paginate</code> both above
                      and below the user list, the pagination links appear in
                      both places.</p>
                    <div class="center figure" id="_fig-user_index_pagination" data-tralics-id="uid949"
                      data-number="9.11">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_index_pagination_3rd_edition.png"
                          alt="images/figures/user_index_pagination_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.11: </span><span
                          class="description">The users index page with
                          pagination. </span></div>
                    </div>
                    <p>If you now click on either the&nbsp;<a href="http://localhost:3000/users?page=2"
                        target="_blank">2</a> link or <a href="http://localhost:3000/users?page=2"
                        target="_blank">Next</a> link, you’ll get the second
                      page of results, as shown in <a href="#fig-user_index_page_two_rails_3"
                        class="hyperref">Figure&nbsp;<span class="ref">9.12</span></a>.</p>
                    <div class="center figure" id="_fig-user_index_page_two_rails_3"
                      data-tralics-id="uid950" data-number="9.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_index_page_two_3rd_edition.png"
                          alt="images/figures/user_index_page_two_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.12: </span><span
                          class="description">Page 2 of the users index. </span></div>
                    </div>
                  </div>
                  <div id="_sec-users_index_test" data-tralics-id="uid951" class="subsection"
                    data-number="9.3.4">
                    <h3><a href="#sec-users_index_test" class="heading hyperref"><span
                          class="number">9.3.4 </span>Users index test</a></h3>
                    <p>Now that our users index page is working, we’ll write a
                      lightweight test for it, including a minimal test for the
                      pagination from <a href="#sec-pagination" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.3</span></a>.<span class="intersentencespace"></span>
                      The idea is to log in, visit the index path, verify the
                      first page of users is present, and then confirm that
                      pagination is present on the page.<span class="intersentencespace"></span>
                      For these last two steps to work, we need to have enough
                      users in the test database to invoke pagination, i.e.,
                      more than 30.</p>
                    <p>We created a second user in the fixtures in <a href="#code-fixture_second_user"
                        class="hyperref">Listing&nbsp;<span class="ref">9.20</span></a>,
                      but 30 or so more users is a lot to create by hand.<span class="intersentencespace"></span>
                      Luckily, as we’ve seen with the user fixture’s <code>password_digest</code>
                      attribute, fixture files support embedded Ruby, which
                      means we can create 30 additional users as shown in <a href="#code-users_fixtures_extra_users"
                        class="hyperref">Listing&nbsp;<span class="ref">9.43</span></a>.<span
                        class="intersentencespace"></span> (<a href="#code-users_fixtures_extra_users"
                        class="hyperref">Listing&nbsp;<span class="ref">9.43</span></a>
                      also creates a couple of other named users for future
                      reference.)</p>
                    <div class="codelisting" id="_code-users_fixtures_extra_users"
                      data-tralics-id="uid952" data-number="9.43">
                      <div class="heading"><span class="number">Listing 9.43:</span>
                        <span class="description">Adding 30 extra users to the
                          fixture.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>michael:
  name: Michael Example
  email: michael@example.com
  password_digest: &lt;%= User.digest('password') %&gt;

archer:
  name: Sterling Archer
  email: duchess@example.gov
  password_digest: &lt;%= User.digest('password') %&gt;

lana:
  name: Lana Kane
  email: hands@example.gov
  password_digest: &lt;%= User.digest('password') %&gt;

mallory:
  name: Mallory Archer
  email: boss@example.gov
  password_digest: &lt;%= User.digest('password') %&gt;

&lt;% 30.times do |n| %&gt;
user_&lt;%= n %&gt;:
  name:  &lt;%= "User #{n}" %&gt;
  email: &lt;%= "user-#{n}@example.com" %&gt;
  password_digest: &lt;%= User.digest('password') %&gt;
&lt;% end %&gt;
</pre></div>
                      </div>
                    </div>
                    <p>With the fixtures defined in <a href="#code-users_fixtures_extra_users"
                        class="hyperref">Listing&nbsp;<span class="ref">9.43</span></a>,
                      we’re ready to write a test of the users index.<span class="intersentencespace"></span>
                      First we generate the relevant test:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test users_index
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/users_index_test.rb</span>
</pre></div>
                    </div>
                    <p>The test itself involves checking for a <code>div</code>
                      with the required <code>pagination</code> class and
                      verifying that the first page of users is present.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-user_index_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.44</span></a>.</p>
                    <div class="codelisting" id="_code-user_index_test" data-tralics-id="uid953"
                      data-number="9.44">
                      <div class="heading"><span class="number">Listing 9.44:</span>
                        <span class="description">A test of the users index,
                          including pagination.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_index_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersIndexTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"index including pagination"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">users_path</span>
    <span class="n">assert_template</span> <span class="s1">'users/index'</span>
    <span class="n">assert_select</span> <span class="s1">'div.pagination'</span>
    <span class="no">User</span><span class="o">.</span><span class="n">paginate</span><span
class="p">(</span><span class="ss">page</span><span class="p">:</span> <span class="mi">1</span><span
class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span
class="o">|</span><span class="n">user</span><span class="o">|</span>
      <span class="n">assert_select</span> <span class="s1">'a[href=?]'</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">user</span><span class="p">),</span> <span class="ss">text</span><span
class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The result should be a <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span> test suite:</p>
                    <div class="codelisting" id="_uid954" data-tralics-id="uid954"
                      data-number="9.45">
                      <div class="heading"><span class="number">Listing 9.45:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-partial_refactoring" data-tralics-id="uid955" class="subsection"
                    data-number="9.3.5">
                    <h3><a href="#sec-partial_refactoring" class="heading hyperref"><span
                          class="number">9.3.5 </span>Partial refactoring</a></h3>
                    <p>The paginated users index is now complete, but there’s
                      one improvement I can’t resist including: Rails has some
                      incredibly slick tools for making compact views, and in
                      this section we’ll refactor the index page to use them.<span
                        class="intersentencespace"></span> Because our code is
                      well-tested, we can refactor with confidence, assured that
                      we are unlikely to break our site’s functionality.</p>
                    <p>The first step in our refactoring is to replace the
                      user&nbsp;<code>li</code> from <a href="#code-will_paginate_index_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.41</span></a>
                      with a <code>render</code> call (<a href="#code-index_view_first_refactoring"
                        class="hyperref">Listing&nbsp;<span class="ref">9.46</span></a>).</p>
                    <div class="codelisting" id="_code-index_view_first_refactoring"
                      data-tralics-id="uid956" data-number="9.46">
                      <div class="heading"><span class="number">Listing 9.46:</span>
                        <span class="description">The first refactoring attempt
                          in the index view.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/index.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'All users'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>All users<span class="nt">&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span class="cp">%&gt;</span>

<span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"users"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%</span> <span class="vi">@users</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span
class="o">|</span> <span class="cp">%&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="n">user</span> <span class="cp">%&gt;</span>
</span>  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;/ul&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here we call <code>render</code> not on a string with
                      the name of a partial, but rather on a <code>user</code>
                      variable of class <code>User</code>;<sup id="_cha-9_footnote-ref-9"
                        class="footnote"><a href="#cha-9_footnote-9">9</a></sup>
                      in this context, Rails automatically looks for a partial
                      called <code>_user.html.erb</code>, which we must create
                      (<a href="#code-user_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">9.47</span></a>).</p>
                    <div class="codelisting" id="_code-user_partial" data-tralics-id="uid958"
                      data-number="9.47">
                      <div class="heading"><span class="number">Listing 9.47:</span>
                        <span class="description">A partial to render a single
                          user.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/users/_user.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;li&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="n">user</span><span
class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">50</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">user</span> <span
class="cp">%&gt;</span>
<span class="nt">&lt;/li&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>This is a definite improvement, but we can do even
                      better: we can call <code>render</code> <em>directly</em>
                      on the <code>@users</code> variable (<a href="#code-index_final_refactoring"
                        class="hyperref">Listing&nbsp;<span class="ref">9.48</span></a>).</p>
                    <div class="codelisting" id="_code-index_final_refactoring"
                      data-tralics-id="uid959" data-number="9.48">
                      <div class="heading"><span class="number">Listing 9.48:</span>
                        <span class="description">The fully refactored users
                          index.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/users/index.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'All users'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>All users<span class="nt">&lt;/h1&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span class="cp">%&gt;</span>

<span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"users"</span><span
class="nt">&gt;</span>
<span class="hll">  <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="vi">@users</span> <span class="cp">%&gt;</span>
</span><span class="nt">&lt;/ul&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Here Rails infers that <code>@users</code> is a list of
                      <code>User</code> objects; moreover, when called with a
                      collection of users, Rails automatically iterates through
                      them and renders each one with the <code>_user.html.erb</code>
                      partial.<span class="intersentencespace"></span> The
                      result is the impressively compact code in <a href="#code-index_final_refactoring"
                        class="hyperref">Listing&nbsp;<span class="ref">9.48</span></a>.</p>
                    <p>As with any refactoring, you should verify that the test
                      suite is still <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>
                      after changing the application code:</p>
                    <div class="codelisting" id="_uid960" data-tralics-id="uid960"
                      data-number="9.49">
                      <div class="heading"><span class="number">Listing 9.49:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-deleting_users" data-tralics-id="cid62" class="section"
                  data-number="9.4">
                  <h2><a href="#sec-deleting_users" class="heading hyperref"><span
                        class="number">9.4 </span>Deleting users</a></h2>
                  <p>Now that the users index is complete, there’s only one
                    canonical REST action left: <code>destroy</code>.<span class="intersentencespace"></span>
                    In this section, we’ll add links to delete users, as mocked
                    up in <a href="#fig-user_index_delete_links_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">9.13</span></a>, and define the <code>destroy</code>
                    action necessary to accomplish the deletion.<span class="intersentencespace"></span>
                    But first, we’ll create the class of administrative users,
                    or <em>admins</em>, authorized to do so.</p>
                  <div class="center figure" id="_fig-user_index_delete_links_mockup"
                    data-tralics-id="uid961" data-number="9.13">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_index_delete_links_mockup_bootstrap.png"
                        alt="images/figures/user_index_delete_links_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 9.13: </span><span
                        class="description">A mockup of the users index with
                        delete links. </span></div>
                  </div>
                  <div id="_sec-administrative_users" data-tralics-id="uid962" class="subsection"
                    data-number="9.4.1">
                    <h3><a href="#sec-administrative_users" class="heading hyperref"><span
                          class="number">9.4.1 </span>Administrative users</a></h3>
                    <p>We will identify privileged administrative users with a
                      boolean <code>admin</code> attribute in the User model,
                      which will lead automatically to an <code>admin?</code>
                      boolean method to test for admin status.<span class="intersentencespace"></span>
                      The resulting data model appears in <a href="#fig-user_model_admin"
                        class="hyperref">Figure&nbsp;<span class="ref">9.14</span></a>.</p>
                    <div class="center figure" id="_fig-user_model_admin" data-tralics-id="uid963"
                      data-number="9.14"><span class="graphics"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_admin_3rd_edition.png"
                          alt="user_model_admin_3rd_edition"></span>
                      <div class="caption"><span class="header">Figure 9.14: </span><span
                          class="description">The User model with an added <code>admin</code>
                          boolean attribute. </span></div>
                    </div>
                    <p>As usual, we add the <code>admin</code> attribute with a
                      migration, indicating the <code>boolean</code> type on
                      the command line:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_admin_to_users admin:boolean
</pre></div>
                    </div>
                    <p>The migration adds the <code>admin</code> column to the
                      <code>users</code> table, as shown in <a href="#code-admin_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">9.50</span></a>.<span
                        class="intersentencespace"></span> Note that we’ve added
                      the argument <code>default: false</code> to <code>add_column</code>
                      in <a href="#code-admin_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">9.50</span></a>, which means that users
                      will <em>not</em> be administrators by default.<span class="intersentencespace"></span>
                      (Without the <code>default: false</code> argument, <code>admin</code>
                      will be <code>nil</code> by default, which is still <code>false</code>,
                      so this step is not strictly necessary.<span class="intersentencespace"></span>
                      It is more explicit, though, and communicates our
                      intentions more clearly both to Rails and to readers of
                      our code.)</p>
                    <div class="codelisting" id="_code-admin_migration" data-tralics-id="uid964"
                      data-number="9.50">
                      <div class="heading"><span class="number">Listing 9.50:</span>
                        <span class="description">The migration to add a boolean
                          <code>admin</code> attribute to users.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/migrate/[timestamp]_add_admin_to_users.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AddAdminToUsers</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
<span class="hll">    <span class="n">add_column</span> <span class="ss">:users</span><span
class="p">,</span> <span class="ss">:admin</span><span class="p">,</span> <span
class="ss">:boolean</span><span class="p">,</span> <span class="ss">default</span><span
class="p">:</span> <span class="kp">false</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Next, we migrate as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                    <p>As expected, Rails figures out the boolean nature of the
                      <code>admin</code> attribute and automatically adds the
                      question-mark method <code>admin?</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console --sandbox</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">first</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">admin?</span>
<span class="go">=&gt; false</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">toggle!</span><span class="p">(</span><span class="ss">:admin</span><span
class="p">)</span>
<span class="go">=&gt; true</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">admin?</span>
<span class="go">=&gt; true</span>
</pre></div>
                    </div>
                    <p>Here we’ve used the <code>toggle!</code> method to flip
                      the <code>admin</code> attribute from <code>false</code>
                      to <code>true</code>.</p>
                    <p>As a final step, let’s update our seed data to make the
                      first user an admin by default (<a href="#code-populator_with_admin"
                        class="hyperref">Listing&nbsp;<span class="ref">9.51</span></a>).</p>
                    <div class="codelisting" id="_code-populator_with_admin" data-tralics-id="uid965"
                      data-number="9.51">
                      <div class="heading"><span class="number">Listing 9.51:</span>
                        <span class="description">The seed data code with an
                          admin user.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">db/seeds.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">User</span><span class="o">.</span><span
class="n">create!</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span>  <span class="s2">"Example User"</span><span class="p">,</span>
             <span class="ss">email</span><span class="p">:</span> <span class="s2">"example@railstutorial.org"</span><span
class="p">,</span>
             <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foobar"</span><span class="p">,</span>
             <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span>
<span class="hll">             <span class="ss">admin</span><span class="p">:</span> <span
class="kp">true</span><span class="p">)</span>
</span>
<span class="mi">99</span><span class="o">.</span><span class="n">times</span> <span
class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
  <span class="nb">name</span>  <span class="o">=</span> <span class="no">Faker</span><span
class="o">::</span><span class="no">Name</span><span class="o">.</span><span class="n">name</span>
  <span class="n">email</span> <span class="o">=</span> <span class="s2">"example-</span><span
class="si">#{</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span
class="si">}</span><span class="s2">@railstutorial.org"</span>
  <span class="n">password</span> <span class="o">=</span> <span class="s2">"password"</span>
  <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span>  <span class="nb">name</span><span
class="p">,</span>
               <span class="ss">email</span><span class="p">:</span> <span class="n">email</span><span
class="p">,</span>
               <span class="ss">password</span><span class="p">:</span>              <span
class="n">password</span><span class="p">,</span>
               <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="n">password</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Then reset the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate:reset
$ bundle exec rake db:seed
</pre></div>
                    </div>
                    <div id="_sec-revisiting_strong_parameters" data-tralics-id="uid966"
                      class="subsubsection" data-number="9.4.1.1">
                      <h4><a href="#sec-revisiting_strong_parameters" class="heading">Revisiting
                          strong parameters</a></h4>
                      <p>You might have noticed that <a href="#code-populator_with_admin"
                          class="hyperref">Listing&nbsp;<span class="ref">9.51</span></a>
                        makes the user an admin by including <code>admin: true</code>
                        in the initialization hash.<span class="intersentencespace"></span>
                        This underscores the danger of exposing our objects to
                        the wild Web: if we simply passed an initialization hash
                        in from an arbitrary web request, a malicious user could
                        send a <span class="tt">PATCH</span> request as
                        follows:<sup id="_cha-9_footnote-ref-10" class="footnote"><a
                            href="#cha-9_footnote-10">10</a></sup></p>
                      <div class="code">
                        <div class="highlight">
                          <pre>patch /users/17?admin=1
</pre></div>
                      </div>
                      <p>This request would make user 17 an admin, which would
                        be a potentially serious security breach.</p>
                      <p>Because of this danger, it is essential that we only
                        update attributes that are safe to edit through the web.<span
                          class="intersentencespace"></span> As noted in <a href="#sec-strong_parameters"
                          class="hyperref">Section&nbsp;<span class="ref">7.3.2</span></a>,
                        this is accomplished using <em>strong parameters</em>
                        by calling <code>require</code> and <code>permit</code>
                        on the <code>params</code> hash:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre>    <span class="k">def</span> <span class="nf">user_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span
class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span
class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">:password</span><span class="p">,</span>
                                   <span class="ss">:password_confirmation</span><span
class="p">)</span>
    <span class="k">end</span>
</pre></div>
                      </div>
                      <p>Note in particular that <code>admin</code> is <em>not</em>
                        in the list of permitted attributes.<span class="intersentencespace"></span>
                        This is what prevents arbitrary users from granting
                        themselves administrative access to our application.<span
                          class="intersentencespace"></span> Because of its
                        importance, it’s a good idea to write a test for any
                        attribute that isn’t editable, and writing such a test
                        for the <code>admin</code> attribute is left as an
                        exercise (<a href="#sec-updating_deleting_exercises" class="hyperref">Section&nbsp;<span
                            class="ref">9.6</span></a>).</p>
                    </div>
                  </div>
                  <div id="_sec-the_destroy_action" data-tralics-id="uid968" class="subsection"
                    data-number="9.4.2">
                    <h3><a href="#sec-the_destroy_action" class="heading hyperref"><span
                          class="number">9.4.2 </span>The <span class="tt">destroy</span>
                        action</a></h3>
                    <p>The final step needed to complete the Users resource is
                      to add delete links and a <code>destroy</code> action.<span
                        class="intersentencespace"></span> We’ll start by adding
                      a delete link for each user on the users index page,
                      restricting access to administrative users.<span class="intersentencespace"></span>
                      The resulting <code>"delete"</code> links will be
                      displayed only if the current user is an admin (<a href="#code-delete_links"
                        class="hyperref">Listing&nbsp;<span class="ref">9.52</span></a>).</p>
                    <div class="codelisting" id="_code-delete_links" data-tralics-id="uid969"
                      data-number="9.52">
                      <div class="heading"><span class="number">Listing 9.52:</span>
                        <span class="description">User delete links (viewable
                          only by admins).<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/_user.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;li&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="n">user</span><span
class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">50</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">user</span> <span
class="cp">%&gt;</span>
<span class="hll">  <span class="cp">&lt;%</span> <span class="k">if</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">admin?</span> <span
class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">current_user?</span><span
class="p">(</span><span class="n">user</span><span class="p">)</span> <span class="cp">%&gt;</span>
</span><span class="hll">    | <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"delete"</span><span class="p">,</span> <span class="n">user</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="ss">:delete</span><span class="p">,</span>
</span><span class="hll">                                  <span class="ss">data</span><span
class="p">:</span> <span class="p">{</span> <span class="ss">confirm</span><span
class="p">:</span> <span class="s2">"You sure?"</span> <span class="p">}</span> <span
class="cp">%&gt;</span>
</span><span class="hll">  <span class="cp">&lt;%</span> <span class="k">end</span> <span
class="cp">%&gt;</span>
</span><span class="nt">&lt;/li&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the <code>method: :delete</code> argument, which
                      arranges for the link to issue the necessary <span class="tt">DELETE</span>
                      request.<span class="intersentencespace"></span> We’ve
                      also wrapped each link inside an&nbsp;<code>if</code>
                      statement so that only admins can see them.<span class="intersentencespace"></span>
                      The result for our admin user appears in <a href="#fig-index_delete_links_rails_3"
                        class="hyperref">Figure&nbsp;<span class="ref">9.15</span></a>.</p>
                    <p>Web browsers can’t send <span class="tt">DELETE</span>
                      requests natively, so Rails fakes them with JavaScript.<span
                        class="intersentencespace"></span> This means that the
                      delete links won’t work if the user has JavaScript
                      disabled.<span class="intersentencespace"></span> If you
                      must support non-JavaScript-enabled browsers you can fake
                      a <span class="tt">DELETE</span> request using a form and
                      a <span class="tt">POST</span> request, which works even
                      without JavaScript.<sup id="_cha-9_footnote-ref-11" class="footnote"><a
                          href="#cha-9_footnote-11">11</a></sup></p>
                    <div class="center figure" id="_fig-index_delete_links_rails_3"
                      data-tralics-id="uid971" data-number="9.15">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/index_delete_links_3rd_edition.png"
                          alt="images/figures/index_delete_links_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 9.15: </span><span
                          class="description">The users index with delete links.
                        </span></div>
                    </div>
                    <p>To get the delete links to work, we need to add a <code>destroy</code>
                      action (<a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                          class="ref">7.1</span></a>), which finds the
                      corresponding user and destroys it with the Active Record
                      <code>destroy</code> method, finally redirecting to the
                      users index, as seen in <a href="#code-destroy_action" class="hyperref">Listing&nbsp;<span
                          class="ref">9.53</span></a>.<span class="intersentencespace"></span>
                      Because users have to be logged in to delete users, <a href="#code-destroy_action"
                        class="hyperref">Listing&nbsp;<span class="ref">9.53</span></a>
                      also adds <code>:destroy</code> to the <code>logged_in_user</code>
                      before filter.</p>
                    <div class="codelisting" id="_code-destroy_action" data-tralics-id="uid972"
                      data-number="9.53">
                      <div class="heading"><span class="number">Listing 9.53:</span>
                        <span class="description">Adding a working <code>destroy</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span
class="ss">:destroy</span><span class="o">]</span>
</span>  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">destroy</span>
<span class="hll">    <span class="no">User</span><span class="o">.</span><span
class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span
class="o">.</span><span class="n">destroy</span>
</span><span class="hll">    <span class="n">flash</span><span class="o">[</span><span
class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"User deleted"</span>
</span><span class="hll">    <span class="n">redirect_to</span> <span class="n">users_url</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that the <code>destroy</code> action uses method
                      chaining to combine the <code>find</code> and <code>destroy</code>
                      into one line:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">User</span><span class="o">.</span><span
class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span
class="o">.</span><span class="n">destroy</span>
</pre></div>
                    </div>
                    <p>As constructed, only admins can destroy users through the
                      web since only they can see the delete links, but there’s
                      still a terrible security hole: any sufficiently
                      sophisticated attacker could simply issue a <span class="tt">DELETE</span>
                      request directly from the command line to delete any user
                      on the site.<span class="intersentencespace"></span> To
                      secure the site properly, we also need access control on
                      the <code>destroy</code> action, so that <em>only</em>
                      admins can delete users.</p>
                    <p>As in <a href="#sec-requiring_logged_in_users" class="hyperref">Section&nbsp;<span
                          class="ref">9.2.1</span></a> and <a href="#sec-requiring_the_right_user"
                        class="hyperref">Section&nbsp;<span class="ref">9.2.2</span></a>,
                      we’ll enforce access control using a before filter, this
                      time to restrict access to the <code>destroy</code>
                      action to admins.<span class="intersentencespace"></span>
                      The resulting <code>admin_user</code> before filter
                      appears in <a href="#code-admin_destroy_before_filter" class="hyperref">Listing&nbsp;<span
                          class="ref">9.54</span></a>.</p>
                    <div class="codelisting" id="_code-admin_destroy_before_filter"
                      data-tralics-id="uid973" data-number="9.54">
                      <div class="heading"><span class="number">Listing 9.54:</span>
                        <span class="description">A before filter restricting
                          the <code>destroy</code> action to admins.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span
class="ss">:destroy</span><span class="o">]</span>
  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:admin_user</span><span
class="p">,</span>     <span class="ss">only</span><span class="p">:</span> <span
class="ss">:destroy</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="c1"># Confirms an admin user.</span>
    <span class="k">def</span> <span class="nf">admin_user</span>
<span class="hll">      <span class="n">redirect_to</span><span class="p">(</span><span
class="n">root_url</span><span class="p">)</span> <span class="k">unless</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">admin?</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-user_destroy_tests" data-tralics-id="uid974" class="subsection"
                    data-number="9.4.3">
                    <h3><a href="#sec-user_destroy_tests" class="heading hyperref"><span
                          class="number">9.4.3 </span>User destroy tests</a></h3>
                    <p>With something as dangerous as destroying users, it’s
                      important to have good tests for the expected behavior.<span
                        class="intersentencespace"></span> We start by arranging
                      for one of our fixture users to be an admin, as shown in <a
                        href="#code-fixture_user_admin" class="hyperref">Listing&nbsp;<span
                          class="ref">9.55</span></a>.</p>
                    <div class="codelisting" id="_code-fixture_user_admin" data-tralics-id="uid975"
                      data-number="9.55">
                      <div class="heading"><span class="number">Listing 9.55:</span>
                        <span class="description">Making one of the fixture
                          users an admin.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>michael:
  name: Michael Example
  email: michael@example.com
  password_digest: &lt;%= User.digest('password') %&gt;
<span class="hll">  admin: true
</span>
archer:
  name: Sterling Archer
  email: duchess@example.gov
  password_digest: &lt;%= User.digest('password') %&gt;

lana:
  name: Lana Kane
  email: hands@example.gov
  password_digest: &lt;%= User.digest('password') %&gt;

mallory:
  name: Mallory Archer
  email: boss@example.gov
  password_digest: &lt;%= User.digest('password') %&gt;

&lt;% 30.times do |n| %&gt;
user_&lt;%= n %&gt;:
  name:  &lt;%= "User #{n}" %&gt;
  email: &lt;%= "user-#{n}@example.com" %&gt;
  password_digest: &lt;%= User.digest('password') %&gt;
&lt;% end %&gt;
</pre></div>
                      </div>
                    </div>
                    <p>Following the practice from <a href="#sec-requiring_logged_in_users"
                        class="hyperref">Section&nbsp;<span class="ref">9.2.1</span></a>,
                      we’ll put action-level tests of access control in the
                      Users controller test file.<span class="intersentencespace"></span>
                      As with the logout test in <a href="#code-user_logout_test"
                        class="hyperref">Listing&nbsp;<span class="ref">8.28</span></a>,
                      we’ll use <code>delete</code> to issue a <span class="tt">DELETE</span>
                      request directly to the <code>destroy</code> action.<span
                        class="intersentencespace"></span> We need to check two
                      cases: first, users who aren’t logged in should be
                      redirected to the login page; second, users who are logged
                      in but who aren’t admins should be redirected to the Home
                      page.<span class="intersentencespace"></span> The result
                      appears in <a href="#code-action_tests_admin" class="hyperref">Listing&nbsp;<span
                          class="ref">9.56</span></a>.</p>
                    <div class="codelisting" id="_code-action_tests_admin" data-tralics-id="uid976"
                      data-number="9.56">
                      <div class="heading"><span class="number">Listing 9.56:</span>
                        <span class="description">Action-level tests for admin
                          access control.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span>       <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="vi">@other_user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"should redirect destroy when not logged in"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
      <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect destroy when logged in as a non-admin"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@other_user</span><span
class="p">)</span>
    <span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
      <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that <a href="#code-action_tests_admin" class="hyperref">Listing&nbsp;<span
                          class="ref">9.56</span></a> also makes sure that the
                      user count doesn’t change using the <code>assert_no_difference</code>
                      method (seen before in <a href="#code-a_test_for_invalid_submission"
                        class="hyperref">Listing&nbsp;<span class="ref">7.21</span></a>).</p>
                    <p>The tests in <a href="#code-action_tests_admin" class="hyperref">Listing&nbsp;<span
                          class="ref">9.56</span></a> verify the behavior in the
                      case of an unauthorized (non-admin) user, but we also want
                      to check that an admin can use a delete link to
                      successfully destroy a user.<span class="intersentencespace"></span>
                      Since the delete links appear on the users index, we’ll
                      add these tests to the users index test from <a href="#code-user_index_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.44</span></a>.<span
                        class="intersentencespace"></span> The only really
                      tricky part is verifying that a user gets deleted when an
                      admin clicks on a delete link, which we’ll accomplish as
                      follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
  <span class="n">delete</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@other_user</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>This uses the <code>assert_difference</code> method
                      first seen in <a href="#code-a_test_for_valid_submission"
                        class="hyperref">Listing&nbsp;<span class="ref">7.26</span></a>
                      when creating a user, this time verifying that a user is <em>destroyed</em>
                      by checking that <code>User.count</code> changes by <span
                        class="inline_math"><span class="MathJax_Preview" style="color: inherit;"></span><span
                          class="MathJax" id="MathJax-Element-2-Frame"><nobr><span
                              class="math" id="MathJax-Span-26" role="math" style="width: 1.365em; display: inline-block;"><span
                                style="display: inline-block; position: relative; width: 1.26em; height: 0px; font-size: 106%;"><span
                                  style="position: absolute; clip: rect(3.147em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                    class="mrow" id="MathJax-Span-27"><span class="mo"
                                      id="MathJax-Span-28" style="font-family: MathJax_Main;">−</span><span
                                      class="mn" id="MathJax-Span-29" style="font-family: MathJax_Main;">1</span></span><span
                                    style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.836em; vertical-align: -0.053em;"></span></span></nobr></span>
                        <script type="math/tex" id="MathJax-Element-2"> -1 </script></span>
                      when issuing a <code>delete</code> request to the
                      corresponding user path.</p>
                    <p>Putting everything together gives the pagination and
                      delete test in <a href="#code-delete_link_integration_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.57</span></a>,
                      which includes tests for both admins and non-admins.</p>
                    <div class="codelisting" id="_code-delete_link_integration_test"
                      data-tralics-id="uid977" data-number="9.57">
                      <div class="heading"><span class="number">Listing 9.57:</span>
                        <span class="description">An integration test for delete
                          links and destroying users.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_index_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersIndexTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@admin</span>     <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="vi">@non_admin</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"index as admin including pagination and delete links"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@admin</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">users_path</span>
    <span class="n">assert_template</span> <span class="s1">'users/index'</span>
    <span class="n">assert_select</span> <span class="s1">'div.pagination'</span>
    <span class="n">first_page_of_users</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="mi">1</span><span class="p">)</span>
    <span class="n">first_page_of_users</span><span class="o">.</span><span class="n">each</span> <span
class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span>
      <span class="n">assert_select</span> <span class="s1">'a[href=?]'</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">user</span><span class="p">),</span> <span class="ss">text</span><span
class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span>
      <span class="k">unless</span> <span class="n">user</span> <span class="o">==</span> <span
class="vi">@admin</span>
        <span class="n">assert_select</span> <span class="s1">'a[href=?]'</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">user</span><span class="p">),</span> <span class="ss">text</span><span
class="p">:</span> <span class="s1">'delete'</span><span class="p">,</span>
                                                    <span class="nb">method</span><span
class="p">:</span> <span class="ss">:delete</span>
      <span class="k">end</span>
    <span class="k">end</span>
    <span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
      <span class="n">delete</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@non_admin</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"index as non-admin"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@non_admin</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">users_path</span>
    <span class="n">assert_select</span> <span class="s1">'a'</span><span class="p">,</span> <span
class="ss">text</span><span class="p">:</span> <span class="s1">'delete'</span><span
class="p">,</span> <span class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that <a href="#code-delete_link_integration_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.57</span></a> checks for the right
                      delete links, including skipping the test if the user
                      happens to be the admin (which lacks a delete link due to
                      <a href="#code-delete_links" class="hyperref">Listing&nbsp;<span
                          class="ref">9.52</span></a>).</p>
                    <p>At this point, our deletion code is well-tested, and the
                      test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid978" data-tralics-id="uid978"
                      data-number="9.58">
                      <div class="heading"><span class="number">Listing 9.58:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-updating_and_deleting_users_conclusion" data-tralics-id="cid63"
                  class="section" data-number="9.5">
                  <h2><a href="#sec-updating_and_deleting_users_conclusion" class="heading hyperref"><span
                        class="number">9.5 </span>Висновок</a></h2>
                  <p>We’ve come a long way since introducing the Users
                    controller way back in <a href="#sec-user_signup" class="hyperref">Section&nbsp;<span
                        class="ref">5.4</span></a>.<span class="intersentencespace"></span>
                    Those users couldn’t even sign up; now users can sign up,
                    log in, log out, view their profiles, edit their settings,
                    and see an index of all users—and some can even destroy
                    other users.</p>
                  <p>As it presently stands, the sample application forms a
                    solid foundation for any website requiring users with
                    authentication and authorization.<span class="intersentencespace"></span>
                    In <a href="#cha-account_activation_and_password_reset" class="hyperref">Chapter&nbsp;<span
                        class="ref">10</span></a>, we’ll add two additional
                    refinements: an account activation link for newly registered
                    users (verifying a valid email address in the process) and
                    password resets to help users who forget their passwords.</p>
                  <p>Before moving on, be sure to merge all the changes into the
                    master branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Finish user edit, update, index, and destroy actions"</span>
<span class="gp">$</span> git checkout master
<span class="gp">$</span> git merge updating-users
<span class="gp">$</span> git push
</pre></div>
                  </div>
                  <p>You can also deploy the application and even populate the
                    production database with sample users (using the <code>pg:reset</code>
                    task to reset the production database):</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git push heroku
$ heroku pg:reset DATABASE
$ heroku run rake db:migrate
$ heroku run rake db:seed
$ heroku restart
</pre></div>
                  </div>
                  <p>Of course, on a real site you probably wouldn’t want to
                    seed it with sample data, but I include it here for purposes
                    of illustration (<a href="#fig-heroku_sample_users" class="hyperref">Figure&nbsp;<span
                        class="ref">9.16</span></a>).<span class="intersentencespace"></span>
                    Incidentally, the order of the sample users in <a href="#fig-heroku_sample_users"
                      class="hyperref">Figure&nbsp;<span class="ref">9.16</span></a>
                    may vary, and on my system doesn’t match the local version
                    from <a href="#fig-user_index_pagination" class="hyperref">Figure&nbsp;<span
                        class="ref">9.11</span></a>; this is because we haven’t
                    specified a default ordering for users when retrieved from
                    the database, so the current order is database-dependent.<span
                      class="intersentencespace"></span> This doesn’t matter
                    much for users, but it will for microposts, and we’ll
                    address this issue further in <a href="#sec-ordering_and_dependency"
                      class="hyperref">Section&nbsp;<span class="ref">11.1.4</span></a>.</p>
                  <div class="center figure" id="_fig-heroku_sample_users" data-tralics-id="uid979"
                    data-number="9.16">
                    <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/heroku_sample_users.png"
                        alt="images/figures/heroku_sample_users"></div>
                    <div class="caption"><span class="header">Figure 9.16: </span><span
                        class="description">The sample users in production. </span></div>
                  </div>
                  <div id="_sec-updating_what_we_learned_in_this_chapter" data-tralics-id="uid980"
                    class="subsection" data-number="9.5.1">
                    <h3><a href="#sec-updating_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">9.5.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Users can be updated using an edit form, which sends a
                        <span class="tt">PATCH</span> request to the <code>update</code>
                        action. </li>
                      <li>Safe updating through the web is enforced using strong
                        parameters. </li>
                      <li>Before filters give a standard way to run methods
                        before particular controller actions. </li>
                      <li>We implement an authorization using before filters. </li>
                      <li>Authorization tests use both low-level commands to
                        submit particular HTTP requests directly to controller
                        actions and high-level integration tests. </li>
                      <li>Friendly forwarding redirects users where they wanted
                        to go after logging in. </li>
                      <li>The users index page shows all users, one page at a
                        time. </li>
                      <li>Rails uses the standard file <code>db/seeds.rb</code>
                        to seed the database with sample data using <code>rake
                          db:seed</code>. </li>
                      <li>Running <code>render @users</code> automatically
                        calls the <code>_user.html.erb</code> partial on each
                        user in the collection. </li>
                      <li>A boolean attribute <code>admin</code> on users
                        automatically gives a <code>user.admin?</code> boolean
                        method. </li>
                      <li>Admins can delete users through the web by clicking on
                        delete links that issue <span class="tt">DELETE</span>
                        requests to the Users controller <code>destroy</code>
                        action. </li>
                      <li>We can create a large number of test users using
                        embedded Ruby inside fixtures. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-updating_deleting_exercises" data-tralics-id="cid64"
                  class="section" data-number="9.6">
                  <h2><a href="#sec-updating_deleting_exercises" class="heading hyperref"><span
                        class="number">9.6 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>Write a test to make sure that friendly forwarding only
                      forwards to the given URL the first time.<span class="intersentencespace"></span>
                      On subsequent login attempts, the forwarding URL should
                      revert to the default (i.e., the profile page).<span class="intersentencespace"></span>
                      <em>Hint</em>: Add to the test in <a href="#code-friendly_forwarding_test"
                        class="hyperref">Listing&nbsp;<span class="ref">9.26</span></a>
                      by checking for the right value of <code>session[:forwarding_url]</code>.
                    </li>
                    <li>Write an integration test for all the layout links,
                      including the proper behavior for logged-in and
                      non-logged-in users.<span class="intersentencespace"></span>
                      <em>Hint</em>: Add to the test in <a href="#code-layout_links_test"
                        class="hyperref">Listing&nbsp;<span class="ref">5.25</span></a>
                      using the <code>log_in_as</code> helper. </li>
                    <li>By issuing a <span class="tt">PATCH</span> request
                      directly to the <code>update</code> method as shown in <a
                        href="#code-forbidden_admin_test" class="hyperref">Listing&nbsp;<span
                          class="ref">9.59</span></a>, verify that the <code>admin</code>
                      attribute isn’t editable through the web.<span class="intersentencespace"></span>
                      To be sure your test is covering the right thing, your
                      first step should be to <em>add</em> <code>admin</code>
                      to the list of permitted parameters in <code>user_params</code>
                      so that the initial test is <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>. </li>
                    <li>Remove the duplicated form code by refactoring the <code>new.html.erb</code>
                      and <code>edit.html.erb</code> views to use the partial
                      in <a href="#code-new_edit_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">9.60</span></a>.<span class="intersentencespace"></span>
                      Note that you will have to pass the form variable&nbsp;<code>f</code>
                      explicitly as a local variable, as shown in <a href="#code-new_user_with_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">9.61</span></a>.
                    </li>
                  </ol>
                  <div class="codelisting" id="_code-forbidden_admin_test" data-tralics-id="uid997"
                    data-number="9.59">
                    <div class="heading"><span class="number">Listing 9.59:</span>
                      <span class="description">Testing that the <code>admin</code>
                        attribute is forbidden.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span>       <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="vi">@other_user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"should redirect update when logged in as wrong user"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@other_user</span><span
class="p">)</span>
    <span class="n">patch</span> <span class="ss">:update</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span> <span
class="p">}</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should not allow the admin attribute to be edited via the web"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="vi">@other_user</span><span class="p">)</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@other_user</span><span
class="o">.</span><span class="n">admin?</span>
</span><span class="hll">    <span class="n">patch</span> <span class="ss">:update</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="vi">@other_user</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">password</span><span class="p">:</span>              <span class="no">FILL_IN</span><span
class="p">,</span>
</span><span class="hll">                                            <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="no">FILL_IN</span><span class="p">,</span>
</span><span class="hll">                                            <span class="ss">admin</span><span
class="p">:</span> <span class="no">FILL_IN</span> <span class="p">}</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@other_user</span><span
class="o">.</span><span class="n">FILL_IN</span><span class="o">.</span><span class="n">admin?</span>
</span><span class="hll">  <span class="k">end</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-new_edit_partial" data-tralics-id="uid998"
                    data-number="9.60">
                    <div class="heading"><span class="number">Listing 9.60:</span>
                      <span class="description">A partial for the <code>new</code>
                        and <code>edit</code> form fields.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">app/views/users/_fields.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/error_messages'</span> <span class="cp">%&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
<span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-new_user_with_partial" data-tralics-id="uid999"
                    data-number="9.61">
                    <div class="heading"><span class="number">Listing 9.61:</span>
                      <span class="description">The signup view with partial.<span
                          class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/views/users/new.html.erb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Sign up'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sign up<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'fields'</span><span
class="p">,</span> <span class="ss">f</span><span class="p">:</span> <span class="n">f</span> <span
class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Create my account"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-9_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-9_footnote-1">Image from <a href="http://www.flickr.com/photos/sashawolff/4598355045/"
                        target="_blank">http://www.flickr.com/photos/sashawolff/4598355045/</a>.&nbsp;<a
                        class="arrow" href="#cha-9_footnote-ref-1">↑</a></li>
                    <li id="_cha-9_footnote-2">Don’t worry about how this works;
                      the details are of interest to developers of the Rails
                      framework itself, and by design are not important for
                      Rails application developers.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-2">↑</a></li>
                    <li id="_cha-9_footnote-3">The command for before filters
                      used to be called <code>before_filter</code>, but the
                      Rails core team decided to rename it to emphasize that the
                      filter takes place before particular controller
                      actions.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-3">↑</a></li>
                    <li id="_cha-9_footnote-4">The code in this section is
                      adapted from the <a href="http://github.com/thoughtbot/clearance"
                        target="_blank">Clearance</a> gem by <a href="http://thoughtbot.com/"
                        target="_blank">thoughtbot</a>.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-4">↑</a></li>
                    <li id="_cha-9_footnote-5">Thanks to reader Yoel Adler for
                      pointing out this subtle issue, and for discovering the
                      solution.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-5">↑</a></li>
                    <li id="_cha-9_footnote-6">Baby photo from <a href="http://www.flickr.com/photos/glasgows/338937124/"
                        target="_blank">http://www.flickr.com/photos/glasgows/338937124/</a>.&nbsp;<a
                        class="arrow" href="#cha-9_footnote-ref-6">↑</a></li>
                    <li id="_cha-9_footnote-7">This is the same authorization
                      model used by Twitter.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-7">↑</a></li>
                    <li id="_cha-9_footnote-8">In principle, these two tasks can
                      be combined in <code>rake db:reset</code>, but as of this
                      writing this command doesn’t work with the latest version
                      of Rails.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-8">↑</a></li>
                    <li id="_cha-9_footnote-9">The name <code>user</code> is
                      immaterial—we could have written <code>@users.each do
                        |foobar|</code> and then used <code>render foobar</code>.<span
                        class="intersentencespace"></span> The key is the <em>class</em>
                      of the object—in this case, <code>User</code>.&nbsp;<a class="arrow"
                        href="#cha-9_footnote-ref-9">↑</a></li>
                    <li id="_cha-9_footnote-10">Command-line tools such as <span
                        class="tt">curl</span> can issue <span class="tt">PATCH</span>
                      requests of this form.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-10">↑</a></li>
                    <li id="_cha-9_footnote-11">See the RailsCast on “<a href="http://railscasts.com/episodes/77-destroy-without-javascript"
                        target="_blank">Destroy Without JavaScript</a>” for
                      details.&nbsp;<a class="arrow" href="#cha-9_footnote-ref-11">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-account_activation_and_password_reset" data-tralics-id="cid65"
                  class="chapter" data-number="10">
                  <h1><a name="cha-account_activation_and_password_reset" class="heading hyperref"><span
                        class="number">Chapter 10 </span>Account activation and
                      password reset</a></h1>
                  <p>In <a href="#cha-updating_showing_and_deleting_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">9</span></a>, we finished making a basic
                    Users resource (filling in all the standard REST actions
                    from <a href="#table-RESTful_users" class="hyperref">Table&nbsp;<span
                        class="ref">7.1</span></a>), together with a flexible
                    authentication and authorization system.<span class="intersentencespace"></span>
                    In this chapter, we’ll put the finishing touches on this
                    system by adding two closely related features: account
                    activation (which verifies a new user’s email address) and
                    password reset (for users who forget their passwords).<span
                      class="intersentencespace"></span> Each of these two
                    features will involve creating a new resource, thereby
                    giving us a chance to see further examples of controllers,
                    routing, and database migrations.<span class="intersentencespace"></span>
                    In the process, we’ll also have a chance to learn how to
                    send email in Rails, both in development and in production.<span
                      class="intersentencespace"></span> Finally, the two
                    features complement each other nicely: password resets
                    involve sending a reset link to a user’s email address, the
                    validity of which is confirmed by the initial account
                    activation.<sup id="_cha-10_footnote-ref-1" class="footnote"><a
                        href="#cha-10_footnote-1">1</a></sup></p>
                </div>
                <div id="_sec-account_activation" data-tralics-id="cid66" class="section"
                  data-number="10.1">
                  <h2><a href="#sec-account_activation" class="heading hyperref"><span
                        class="number">10.1 </span>Account activation</a></h2>
                  <p>At present, newly registered users immediately have full
                    access to their accounts (<a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                        class="ref">7</span></a>).<span class="intersentencespace"></span>
                    In this section, we’ll implement an account activation step
                    to verify that the user controls the email address they used
                    to sign up.<span class="intersentencespace"></span> This
                    will involve associating an activation token and digest with
                    a user, sending the user an email with a link including the
                    token, and activating the user upon clicking the link.</p>
                  <p>Our strategy for handling account activation parallels user
                    login (<a href="#sec-logging_in" class="hyperref">Section&nbsp;<span
                        class="ref">8.2</span></a>) and especially remembering
                    users (<a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                        class="ref">8.4</span></a>).<span class="intersentencespace"></span>
                    The basic sequence appears as follows:</p>
                  <ol>
                    <li>Start users in an “unactivated” state.<span class="intersentencespace"></span>
                    </li>
                    <li>When a user signs up, generate an activation token and
                      corresponding activation digest.<span class="intersentencespace"></span>
                    </li>
                    <li>Save the activation digest to the database, and then
                      send an email to the user with a link containing the
                      activation token and user’s email address.<sup id="_cha-10_footnote-ref-2"
                        class="footnote"><a href="#cha-10_footnote-2">2</a></sup>
                    </li>
                    <li>When the user clicks the link, find the user by email
                      address, and then authenticate the token by comparing with
                      the activation digest.<span class="intersentencespace"></span>
                    </li>
                    <li>If the user is authenticated, change the status from
                      “unactivated” to “activated”.<span class="intersentencespace"></span>
                    </li>
                  </ol>
                  <p>Because of the similarity with passwords and remember
                    tokens, we will be able to reuse many of the same ideas for
                    account activation (as well as password reset), including
                    the <code>User.digest</code> and <code>User.new_token</code>
                    methods and a modified version of the <code>user.authenticated?</code>
                    method.<span class="intersentencespace"></span> <a href="#table-password_token_digest"
                      class="hyperref">Table&nbsp;<span class="ref">10.1</span></a>
                    illustrates the analogy (including the password reset from <a
                      href="#sec-password_reset" class="hyperref">Section&nbsp;<span
                        class="ref">10.2</span></a>).<span class="intersentencespace"></span>
                    We’ll define the generalized version of the <code>authenticated?</code>
                    method from <a href="#table-password_token_digest" class="hyperref">Table&nbsp;<span
                        class="ref">10.1</span></a> in <a href="#sec-activating_the_account"
                      class="hyperref">Section&nbsp;<span class="ref">10.1.3</span></a>.</p>
                  <div class="table" id="_table-password_token_digest" data-tralics-id="uid1007"
                    data-number="10.1">
                    <table class="tabular">
                      <tbody>
                        <tr class="bottom_border">
                          <td colspan="1" class="align_center"><strong>find&nbsp;by</strong></td>
                          <td colspan="1" class="align_center"><strong>string</strong></td>
                          <td colspan="1" class="align_center"><strong>digest</strong></td>
                          <td colspan="1" class="align_center"><strong>authentication</strong></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>email</code></td>
                          <td class="align_left"><code>password</code></td>
                          <td class="align_left"><code>password_digest</code></td>
                          <td class="align_left"><code>authenticate(password)</code></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>id</code></td>
                          <td class="align_left"><code>remember_token</code></td>
                          <td class="align_left"><code>remember_digest</code></td>
                          <td class="align_left"><code>authenticated?(:remember,
                              token)</code></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>email</code></td>
                          <td class="align_left"><code>activation_token</code></td>
                          <td class="align_left"><code>activation_digest</code></td>
                          <td class="align_left"><code>authenticated?(:activation,
                              token)</code></td>
                        </tr>
                        <tr>
                          <td class="align_left"><code>email</code></td>
                          <td class="align_left"><code>reset_token</code></td>
                          <td class="align_left"><code>reset_digest</code></td>
                          <td class="align_left"><code>authenticated?(:reset,
                              token)</code></td>
                        </tr>
                      </tbody>
                    </table>
                    <div class="caption"><span class="header">Table 10.1: </span><span
                        class="description">The analogy between login,
                        remembering, account activation, and password reset. </span></div>
                  </div>
                  <p>As usual, we’ll make a topic branch for the new feature.<span
                      class="intersentencespace"></span> As we’ll see in <a href="#sec-email_in_production"
                      class="hyperref">Section&nbsp;<span class="ref">10.3</span></a>,
                    account activation and password reset include some common
                    email configuration, which we’ll want to apply to both
                    features before merging to master.<span class="intersentencespace"></span>
                    As a result, it’s convenient to use a common topic branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b account-activation-password-reset
</pre></div>
                  </div>
                  <div id="_sec-account_activations_resource" data-tralics-id="uid1008"
                    class="subsection" data-number="10.1.1">
                    <h3><a href="#sec-account_activations_resource" class="heading hyperref"><span
                          class="number">10.1.1 </span>Account activations
                        resource</a></h3>
                    <p>As with sessions (<a href="#sec-sessions_and_failed_login"
                        class="hyperref">Section&nbsp;<span class="ref">8.1</span></a>),
                      we’ll model account activations as a resource even though
                      they won’t be associated with an Active Record model.<span
                        class="intersentencespace"></span> Instead, we’ll
                      include the relevant data (including the activation token
                      and activation status) in the User model.<span class="intersentencespace"></span>
                      Nevertheless, we’ll interact with account activations via
                      a standard REST URL; because the activation link will be
                      modifying the user’s activation status, we’ll plan to use
                      the <code>edit</code> action.<sup id="_cha-10_footnote-ref-3"
                        class="footnote"><a href="#cha-10_footnote-3">3</a></sup><span
                        class="intersentencespace"></span> This requires an
                      Account Activations controller, which we can generate as
                      follows:<sup id="_cha-10_footnote-ref-4" class="footnote"><a
                          href="#cha-10_footnote-4">4</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller AccountActivations
</pre></div>
                    </div>
                    <p>The activation email will involve a URL of the form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">edit_account_activation_url</span><span
class="p">(</span><span class="n">activation_token</span><span class="p">,</span> <span
class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>which means we’ll need a named route for the <code>edit</code>
                      action.<span class="intersentencespace"></span> We can
                      arrange this with the <code>resources</code> line shown
                      in <a href="#code-account_activations_route" class="hyperref">Listing&nbsp;<span
                          class="ref">10.1</span></a>.</p>
                    <div class="codelisting" id="_code-account_activations_route"
                      data-tralics-id="uid1011" data-number="10.1">
                      <div class="heading"><span class="number">Listing 10.1:</span>
                        <span class="description">Adding a resource for account
                          activations.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>                <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>    <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span>    <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span>    <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span>    <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
  <span class="n">get</span>    <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#new'</span>
  <span class="n">post</span>   <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#create'</span>
  <span class="n">delete</span> <span class="s1">'logout'</span>  <span class="o">=&gt;</span> <span
class="s1">'sessions#destroy'</span>
  <span class="n">resources</span> <span class="ss">:users</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:account_activations</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="o">]</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Next, we need a unique activation token to activate
                      users.<span class="intersentencespace"></span> Security is
                      less of a concern with account activations than it is with
                      passwords, remember tokens, or (as we’ll see in <a href="#sec-password_reset"
                        class="hyperref">Section&nbsp;<span class="ref">10.2</span></a>)
                      password resets—all of which could give full control of an
                      account if obtained by an attacker—but there are still
                      some scenarios in which an unhashed activation token could
                      compromise an account.<sup id="_cha-10_footnote-ref-5" class="footnote"><a
                          href="#cha-10_footnote-5">5</a></sup><span class="intersentencespace"></span>
                      Thus, following the example of the remember token in <a href="#sec-remember_me"
                        class="hyperref">Section&nbsp;<span class="ref">8.4</span></a>,
                      we’ll pair a publicly exposed virtual token with a hash
                      digest in the database.<span class="intersentencespace"></span>
                      This way we can access the activation token using</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">activation_token</span>
</pre></div>
                    </div>
                    <p>and authenticate the user with code like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="ss">:activation</span><span
class="p">,</span> <span class="n">token</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>(This will require a modification of the <code>authenticated?</code>
                      method defined in <a href="#code-authenticated_p" class="hyperref">Listing&nbsp;<span
                          class="ref">8.33</span></a>.)<span class="intersentencespace"></span>
                      We’ll also add a boolean attribute <code>activated</code>,
                      which will allow us to test if a user is activated using
                      the same kind of auto-generated boolean method we saw in <a
                        href="#sec-administrative_users" class="hyperref">Section&nbsp;<span
                          class="ref">9.4.1</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="n">user</span><span
class="o">.</span><span class="n">activated?</span> <span class="o">.</span><span
class="n">.</span><span class="o">.</span>
</pre></div>
                    </div>
                    <p>Finally, although we won’t use it in this tutorial, we’ll
                      record the time and date of the activation in case we want
                      it for future reference.<span class="intersentencespace"></span>
                      The full data model appears in <a href="#fig-user_model_account_activation"
                        class="hyperref">Figure&nbsp;<span class="ref">10.1</span></a>.</p>
                    <div class="center figure" id="_fig-user_model_account_activation"
                      data-tralics-id="uid1013" data-number="10.1"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_account_activation.png"
                          alt="user_model_account_activation"></span>
                      <div class="caption"><span class="header">Figure 10.1: </span><span
                          class="description">The User model with added account
                          activation attributes. </span></div>
                    </div>
                    <p>The migration to add the data model from <a href="#fig-user_model_account_activation"
                        class="hyperref">Figure&nbsp;<span class="ref">10.1</span></a>
                      adds all three attributes at the command line:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_activation_to_users <span
class="se">\</span>
<span class="gp">&gt;</span> activation_digest:string activated:boolean activated_at:datetime
</pre></div>
                    </div>
                    <p>As with the <code>admin</code> attribute (<a href="#code-admin_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">9.50</span></a>),
                      we’ll add a default boolean value of <code>false</code>
                      to the <code>activated</code> attribute, as shown in in <a
                        href="#code-add_activation_to_users_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">10.2</span></a>.</p>
                    <div class="codelisting" id="_code-add_activation_to_users_migration"
                      data-tralics-id="uid1014" data-number="10.2">
                      <div class="heading"><span class="number">Listing 10.2:</span>
                        <span class="description">A migration for account
                          activation (with added index).<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/migrate/[timestamp]_add_activation_to_users.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AddActivationToUsers</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">add_column</span> <span class="ss">:users</span><span class="p">,</span> <span
class="ss">:activation_digest</span><span class="p">,</span> <span class="ss">:string</span>
<span class="hll">    <span class="n">add_column</span> <span class="ss">:users</span><span
class="p">,</span> <span class="ss">:activated</span><span class="p">,</span> <span
class="ss">:boolean</span><span class="p">,</span> <span class="ss">default</span><span
class="p">:</span> <span class="kp">false</span>
</span>    <span class="n">add_column</span> <span class="ss">:users</span><span
class="p">,</span> <span class="ss">:activated_at</span><span class="p">,</span> <span
class="ss">:datetime</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We then apply the migration as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                    <p>Because every newly signed-up user will require
                      activation, we should assign an activation token and
                      digest to each user object before it’s created.<span class="intersentencespace"></span>
                      We saw a similar idea in <a href="#sec-uniqueness_validation"
                        class="hyperref">Section&nbsp;<span class="ref">6.2.5</span></a>,
                      where we needed to convert an email address to lower-case
                      before saving a user to the database.<span class="intersentencespace"></span>
                      In that case, we used a <code>before_save</code> callback
                      combined with the <code>downcase</code> method (<a href="#code-email_downcase"
                        class="hyperref">Listing&nbsp;<span class="ref">6.31</span></a>).<span
                        class="intersentencespace"></span> A <code>before_save</code>
                      callback is automatically called before the object is
                      saved, which includes both object creation and updates,
                      but in the case of the activation digest we only want the
                      callback to fire when the user is created.<span class="intersentencespace"></span>
                      This requires a <code>before_create</code> callback,
                      which we’ll define as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">before_create</span> <span class="ss">:create_activation_digest</span>
</pre></div>
                    </div>
                    <p>This code, called a <em>method reference</em>, arranges
                      for Rails to look for a method called <code>create_activation_digest</code>
                      and run it before creating the user.<span class="intersentencespace"></span>
                      (In <a href="#code-email_downcase" class="hyperref">Listing&nbsp;<span
                          class="ref">6.31</span></a>, we passed <code>before_save</code>
                      an explicit block, but the method reference technique is
                      generally preferred.)<span class="intersentencespace"></span>
                      Because the <code>create_activation_digest</code> method
                      itself is only used internally by the User model, there’s
                      no need to expose it to outside users; as we saw in <a href="#sec-strong_parameters"
                        class="hyperref">Section&nbsp;<span class="ref">7.3.2</span></a>,
                      the Ruby way to accomplish this is to use the <code>private</code>
                      keyword:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="kp">private</span>

  <span class="k">def</span> <span class="nf">create_activation_digest</span>
    <span class="c1"># Create the token and digest.</span>
  <span class="k">end</span>
</pre></div>
                    </div>
                    <p>All methods defined in a class after <code>private</code>
                      are automatically hidden, as seen in this console session:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="no">User</span><span class="o">.</span><span
class="n">first</span><span class="o">.</span><span class="n">create_activation_digest</span>
<span class="go">NoMethodError: private method `create_activation_digest' called for #&lt;User&gt;</span>
</pre></div>
                    </div>
                    <p>The purpose of the <code>before_create</code> callback
                      is to assign the token and corresponding digest, which we
                      can accomplish as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span><span class="o">.</span><span
class="n">activation_token</span>  <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new_token</span>
<span class="nb">self</span><span class="o">.</span><span class="n">activation_digest</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="n">activation_token</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>This code simply reuses the token and digest methods used
                      for the remember token, as we can see by comparing with
                      the <code>remember</code> method from <a href="#code-user_model_remember"
                        class="hyperref">Listing&nbsp;<span class="ref">8.32</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Remembers a user in the database for use in persistent sessions.</span>
<span class="k">def</span> <span class="nf">remember</span>
  <span class="nb">self</span><span class="o">.</span><span class="n">remember_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
  <span class="n">update_attribute</span><span class="p">(</span><span class="ss">:remember_digest</span><span
class="p">,</span> <span class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">))</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>The main difference is the use of <code>update_attribute</code>
                      in the latter case.<span class="intersentencespace"></span>
                      The reason for the difference is that remember tokens and
                      digests are created for users that already exist in the
                      database, whereas the <code>before_create</code> callback
                      happens <em>before</em> the user has been created.<span class="intersentencespace"></span>
                      As a result of the callback, when a new user is defined
                      with <code>User.new</code> (as in user signup, <a href="#code-create_action_strong_parameters"
                        class="hyperref">Listing&nbsp;<span class="ref">7.17</span></a>),
                      it will automatically get both <code>activation_token</code>
                      and <code>activation_digest</code> attributes; because
                      the latter is associated with a column in the database (<a
                        href="#fig-user_model_account_activation" class="hyperref">Figure&nbsp;<span
                          class="ref">10.1</span></a>), it will be written
                      automatically when the user is saved.</p>
                    <p>Putting together the discussion above yields the User
                      model shown in <a href="#code-user_model_activation_code"
                        class="hyperref">Listing&nbsp;<span class="ref">10.3</span></a>.<span
                        class="intersentencespace"></span> As required by the
                      virtual nature of the activation token, we’ve added a
                      second <code>attr_accessor</code> to our model.<span class="intersentencespace"></span>
                      Note that we’ve taken the opportunity to use a method
                      reference for email downcasing as well.</p>
                    <div class="codelisting" id="_code-user_model_activation_code"
                      data-tralics-id="uid1015" data-number="10.3">
                      <div class="heading"><span class="number">Listing 10.3:</span>
                        <span class="description">Adding account activation code
                          to the User model.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span><span
class="p">,</span> <span class="ss">:activation_token</span>
</span><span class="hll">  <span class="n">before_save</span>   <span class="ss">:downcase_email</span>
</span><span class="hll">  <span class="n">before_create</span> <span class="ss">:create_activation_digest</span>
</span>  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span>  <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">50</span> <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>

    <span class="c1"># Converts email to all lower-case.</span>
    <span class="k">def</span> <span class="nf">downcase_email</span>
<span class="hll">      <span class="nb">self</span><span class="o">.</span><span
class="n">email</span> <span class="o">=</span> <span class="n">email</span><span
class="o">.</span><span class="n">downcase</span>
</span>    <span class="k">end</span>

    <span class="c1"># Creates and assigns the activation token and digest.</span>
    <span class="k">def</span> <span class="nf">create_activation_digest</span>
<span class="hll">      <span class="nb">self</span><span class="o">.</span><span
class="n">activation_token</span>  <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new_token</span>
</span><span class="hll">      <span class="nb">self</span><span class="o">.</span><span
class="n">activation_digest</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="n">activation_token</span><span
class="p">)</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Before moving on, we should also update our seed data and
                      fixtures so that our sample and test users are initially
                      activated, as shown in <a href="#code-seed_users_activated"
                        class="hyperref">Listing&nbsp;<span class="ref">10.4</span></a>
                      and <a href="#code-fixture_users_activated" class="hyperref">Listing&nbsp;<span
                          class="ref">10.5</span></a>.<span class="intersentencespace"></span>
                      (The <code>Time.zone.now</code> method is a built-in
                      Rails helper that returns the current timestamp, taking
                      into account the time zone on the server.)</p>
                    <div class="codelisting" id="_code-seed_users_activated" data-tralics-id="uid1016"
                      data-number="10.4">
                      <div class="heading"><span class="number">Listing 10.4:</span>
                        <span class="description">Activating seed users by
                          default.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">db/seeds.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">User</span><span class="o">.</span><span
class="n">create!</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span>  <span class="s2">"Example User"</span><span class="p">,</span>
             <span class="ss">email</span><span class="p">:</span> <span class="s2">"example@railstutorial.org"</span><span
class="p">,</span>
             <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foobar"</span><span class="p">,</span>
             <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span>
             <span class="ss">admin</span><span class="p">:</span>     <span class="kp">true</span><span
class="p">,</span>
<span class="hll">             <span class="ss">activated</span><span class="p">:</span> <span
class="kp">true</span><span class="p">,</span>
</span><span class="hll">             <span class="ss">activated_at</span><span
class="p">:</span> <span class="no">Time</span><span class="o">.</span><span class="n">zone</span><span
class="o">.</span><span class="n">now</span><span class="p">)</span>
</span>
<span class="mi">99</span><span class="o">.</span><span class="n">times</span> <span
class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
  <span class="nb">name</span>  <span class="o">=</span> <span class="no">Faker</span><span
class="o">::</span><span class="no">Name</span><span class="o">.</span><span class="n">name</span>
  <span class="n">email</span> <span class="o">=</span> <span class="s2">"example-</span><span
class="si">#{</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span
class="si">}</span><span class="s2">@railstutorial.org"</span>
  <span class="n">password</span> <span class="o">=</span> <span class="s2">"password"</span>
  <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span>  <span class="nb">name</span><span
class="p">,</span>
              <span class="ss">email</span><span class="p">:</span> <span class="n">email</span><span
class="p">,</span>
              <span class="ss">password</span><span class="p">:</span>              <span
class="n">password</span><span class="p">,</span>
              <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="n">password</span><span class="p">,</span>
<span class="hll">              <span class="ss">activated</span><span class="p">:</span> <span
class="kp">true</span><span class="p">,</span>
</span><span class="hll">              <span class="ss">activated_at</span><span
class="p">:</span> <span class="no">Time</span><span class="o">.</span><span class="n">zone</span><span
class="o">.</span><span class="n">now</span><span class="p">)</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-fixture_users_activated"
                      data-tralics-id="uid1017" data-number="10.5">
                      <div class="heading"><span class="number">Listing 10.5:</span>
                        <span class="description">Activating fixture users.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">test/fixtures/users.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="l-Scalar-Plain">michael</span><span
class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Michael Example</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael@example.com</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
  <span class="l-Scalar-Plain">admin</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">true</span>
<span class="hll">  <span class="l-Scalar-Plain">activated</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">true</span>
</span><span class="hll">  <span class="l-Scalar-Plain">activated_at</span><span
class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
</span>
<span class="l-Scalar-Plain">archer</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Sterling Archer</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">duchess@example.gov</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">activated</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">true</span>
</span><span class="hll">  <span class="l-Scalar-Plain">activated_at</span><span
class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
</span>
<span class="l-Scalar-Plain">lana</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Lana Kane</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">hands@example.gov</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">activated</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">true</span>
</span><span class="hll">  <span class="l-Scalar-Plain">activated_at</span><span
class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
</span>
<span class="l-Scalar-Plain">mallory</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Mallory Archer</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">boss@example.gov</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">activated</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">true</span>
</span><span class="hll">  <span class="l-Scalar-Plain">activated_at</span><span
class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
</span>
<span class="l-Scalar-Plain">&lt;% 30.times do |n| %&gt;</span>
<span class="l-Scalar-Plain">user_&lt;%= n %&gt;</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span>  <span
class="l-Scalar-Plain">&lt;%= "User</span> <span class="c1">#{n}" %&gt;</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= "user-#{n}@example.com" %&gt;</span>
  <span class="l-Scalar-Plain">password_digest</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= User.digest('password') %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">activated</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">true</span>
</span><span class="hll">  <span class="l-Scalar-Plain">activated_at</span><span
class="p-Indicator">:</span> <span class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
</span><span class="l-Scalar-Plain">&lt;% end %&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>To apply the changes in <a href="#code-seed_users_activated"
                        class="hyperref">Listing&nbsp;<span class="ref">10.4</span></a>,
                      reset the database to reseed the data as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate:reset
$ bundle exec rake db:seed
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-account_activation_mailer" data-tralics-id="uid1018"
                    class="subsection" data-number="10.1.2">
                    <h3><a href="#sec-account_activation_mailer" class="heading hyperref"><span
                          class="number">10.1.2 </span>Account activation
                        mailer method</a></h3>
                    <p>With the data modeling complete, we’re now ready to add
                      the code needed to send an account activation email.<span
                        class="intersentencespace"></span> The method is to add
                      a User <em>mailer</em> using the Action Mailer library,
                      which we’ll use in the Users controller <code>create</code>
                      action to send an email with an activation link.<span class="intersentencespace"></span>
                      Mailers are structured much like controller actions, with
                      email templates defined as views.<span class="intersentencespace"></span>
                      Our task in this section is to define the mailers and
                      views with links containing the activation token and email
                      address associated with the account to be activated.</p>
                    <p>As with models and controllers, we can generate a mailer
                      using <code>rails generate</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate mailer UserMailer account_activation password_reset
</pre></div>
                    </div>
                    <p>Here we’ve generated the necessary <code>account_activation</code>
                      method as well as the <code>password_reset</code> method
                      we’ll need in <a href="#sec-password_reset" class="hyperref">Section&nbsp;<span
                          class="ref">10.2</span></a>.</p>
                    <p>As part of generating the mailer, Rails also generates
                      two view templates for each mailer, one for plain-text
                      email and one for HTML email.<span class="intersentencespace"></span>
                      For the account activation mailer method, they appear as
                      in <a href="#code-generated_account_activation_view_text"
                        class="hyperref">Listing&nbsp;<span class="ref">10.6</span></a>
                      and <a href="#code-generated_account_activation_view_html"
                        class="hyperref">Listing&nbsp;<span class="ref">10.7</span></a>.</p>
                    <div class="codelisting" id="_code-generated_account_activation_view_text"
                      data-tralics-id="uid1019" data-number="10.6">
                      <div class="heading"><span class="number">Listing 10.6:</span>
                        <span class="description">The generated account
                          activation text view.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/user_mailer/account_activation.text.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>UserMailer#account_activation

<span class="cp">&lt;%=</span> <span class="vi">@greeting</span> <span class="cp">%&gt;</span>, find me in app/views/user_mailer/account_activation.text.erb
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-generated_account_activation_view_html"
                      data-tralics-id="uid1020" data-number="10.7">
                      <div class="heading"><span class="number">Listing 10.7:</span>
                        <span class="description">The generated account
                          activation HTML view.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/user_mailer/account_activation.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>UserMailer#account_activation<span
class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;p&gt;</span>
  <span class="cp">&lt;%=</span> <span class="vi">@greeting</span> <span class="cp">%&gt;</span>, find me in app/views/user_mailer/account_activation.html.erb
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Let’s take a look at the generated mailers to get a sense
                      of how they work (<a href="#code-generated_application_mailer"
                        class="hyperref">Listing&nbsp;<span class="ref">10.8</span></a>
                      and <a href="#code-generated_user_mailer" class="hyperref">Listing&nbsp;<span
                          class="ref">10.9</span></a>).<span class="intersentencespace"></span>
                      We see in <a href="#code-generated_application_mailer" class="hyperref">Listing&nbsp;<span
                          class="ref">10.8</span></a> that there is a default <code>from</code>
                      address common to all mailers in the application, and each
                      method in <a href="#code-generated_user_mailer" class="hyperref">Listing&nbsp;<span
                          class="ref">10.9</span></a> has a recipient’s address
                      as well.<span class="intersentencespace"></span> (<a href="#code-generated_application_mailer"
                        class="hyperref">Listing&nbsp;<span class="ref">10.8</span></a>
                      also uses a mailer layout corresponding to the email
                      format; although it won’t ever matter in this tutorial,
                      the resulting HTML and plain-text mailer layouts can be
                      found in <code>app/views/layouts</code>.)<span class="intersentencespace"></span>
                      The generated code also includes an instance variable (<code>@greeting</code>),
                      which is available in the mailer views in much the same
                      way that instance variables in controllers are available
                      in ordinary views.</p>
                    <div class="codelisting" id="_code-generated_application_mailer"
                      data-tralics-id="uid1021" data-number="10.8">
                      <div class="heading"><span class="number">Listing 10.8:</span>
                        <span class="description">The generated application
                          mailer.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/mailers/application_mailer.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">ApplicationMailer</span> <span
class="o">&lt;</span> <span class="no">ActionMailer</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">default</span> <span class="ss">from</span><span class="p">:</span> <span
class="s2">"from@example.com"</span>
  <span class="n">layout</span> <span class="s1">'mailer'</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-generated_user_mailer" data-tralics-id="uid1022"
                      data-number="10.9">
                      <div class="heading"><span class="number">Listing 10.9:</span>
                        <span class="description">The generated User mailer.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/mailers/user_mailer.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UserMailer</span> <span
class="o">&lt;</span> <span class="no">ApplicationMailer</span>

  <span class="c1"># Subject can be set in your I18n file at config/locales/en.yml</span>
  <span class="c1"># with the following lookup:</span>
  <span class="c1">#</span>
  <span class="c1">#   en.user_mailer.account_activation.subject</span>
  <span class="c1">#</span>
  <span class="k">def</span> <span class="nf">account_activation</span>
<span class="hll">    <span class="vi">@greeting</span> <span class="o">=</span> <span
class="s2">"Hi"</span>
</span>
<span class="hll">    <span class="n">mail</span> <span class="ss">to</span><span
class="p">:</span> <span class="s2">"to@example.org"</span>
</span>  <span class="k">end</span>

  <span class="c1"># Subject can be set in your I18n file at config/locales/en.yml</span>
  <span class="c1"># with the following lookup:</span>
  <span class="c1">#</span>
  <span class="c1">#   en.user_mailer.password_reset.subject</span>
  <span class="c1">#</span>
  <span class="k">def</span> <span class="nf">password_reset</span>
<span class="hll">    <span class="vi">@greeting</span> <span class="o">=</span> <span
class="s2">"Hi"</span>
</span>
<span class="hll">    <span class="n">mail</span> <span class="ss">to</span><span
class="p">:</span> <span class="s2">"to@example.org"</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To make a working activation email, we’ll create an
                      instance variable containing the user (for use in the
                      view) and then mail the result to <code>user.email</code>.<span
                        class="intersentencespace"></span> As seen in <a href="#code-mail_account_activation"
                        class="hyperref">Listing&nbsp;<span class="ref">10.11</span></a>,
                      the <code>mail</code> method also takes a <code>subject</code>
                      key, whose value is used as the email’s subject line.</p>
                    <div class="codelisting" id="_code-application_mailer" data-tralics-id="uid1023"
                      data-number="10.10">
                      <div class="heading"><span class="number">Listing 10.10:</span>
                        <span class="description">The application mailer with a
                          new default <code>from</code> address.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/mailers/application_mailer.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">ApplicationMailer</span> <span
class="o">&lt;</span> <span class="no">ActionMailer</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">default</span> <span class="ss">from</span><span class="p">:</span> <span
class="s2">"noreply@example.com"</span>
  <span class="n">layout</span> <span class="s1">'mailer'</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-mail_account_activation"
                      data-tralics-id="uid1024" data-number="10.11">
                      <div class="heading"><span class="number">Listing 10.11:</span>
                        <span class="description">Mailing the account activation
                          link.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/mailers/user_mailer.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UserMailer</span> <span
class="o">&lt;</span> <span class="no">ApplicationMailer</span>

<span class="hll">  <span class="k">def</span> <span class="nf">account_activation</span><span
class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="n">user</span>
</span><span class="hll">    <span class="n">mail</span> <span class="ss">to</span><span
class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span><span
class="p">,</span> <span class="ss">subject</span><span class="p">:</span> <span
class="s2">"Account activation"</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">password_reset</span>
    <span class="vi">@greeting</span> <span class="o">=</span> <span class="s2">"Hi"</span>

    <span class="n">mail</span> <span class="ss">to</span><span class="p">:</span> <span
class="s2">"to@example.org"</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As with ordinary views, we can use embedded Ruby to
                      customize the template views, in this case greeting the
                      user by name and including a link to a custom activation
                      link.<span class="intersentencespace"></span> Our plan is
                      to find the user by email address and then authenticate
                      the activation token, so the link needs to include both
                      the email and the token.<span class="intersentencespace"></span>
                      Because we’re modeling activations using an Account
                      Activations resource, the token itself can appear as the
                      argument of the named route defined in <a href="#code-account_activations_route"
                        class="hyperref">Listing&nbsp;<span class="ref">10.1</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">edit_account_activation_url</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">activation_token</span><span
class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>Recalling that</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">edit_user_url</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>produces a URL of the form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>http://www.example.com/users/1/edit
</pre></div>
                    </div>
                    <p>the corresponding account activation link’s base URL will
                      look like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>http://www.example.com/account_activations/q5lt38hQDc_959PVoo6b7A/edit
</pre></div>
                    </div>
                    <p>Here <code>q5lt38hQDc_959PVoo6b7A</code> is a URL-safe
                      base64 string generated by the <code>new_token</code>
                      method (<a href="#code-token_method" class="hyperref">Listing&nbsp;<span
                          class="ref">8.31</span></a>), and it plays the same
                      role as the user id in /users/1/edit.<span class="intersentencespace"></span>
                      In particular, in the Activations controller <code>edit</code>
                      action, the token will be available in the <code>params</code>
                      hash as <code>params[:id]</code>.</p>
                    <p>In order to include the email as well, we need to use a <em>query
                        parameter</em>, which in a URL appears as a key-value
                      pair located after a question mark:<sup id="_cha-10_footnote-ref-6"
                        class="footnote"><a href="#cha-10_footnote-6">6</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre>account_activations/q5lt38hQDc_959PVoo6b7A/edit?email=foo%40example.com
</pre></div>
                    </div>
                    <p>Notice that the ‘@’ in the email address appears as <code>%40</code>,
                      i.e., it’s “escaped out” to guarantee a valid URL.<span class="intersentencespace"></span>
                      The way to set a query parameter in Rails is to include a
                      hash in the named route:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">edit_account_activation_url</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">activation_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>When using named routes in this way to define query
                      parameters, Rails automatically escapes out any special
                      characters.<span class="intersentencespace"></span> The
                      resulting email address will also be unescaped
                      automatically in the controller, and will be available via
                      <code>params[:email]</code>.</p>
                    <p>With the <code>@user</code> instance variable as defined
                      in <a href="#code-mail_account_activation" class="hyperref">Listing&nbsp;<span
                          class="ref">10.11</span></a>, we can create the
                      necessary links using the named edit route and embedded
                      Ruby, as shown in <a href="#code-account_activation_view_text"
                        class="hyperref">Listing&nbsp;<span class="ref">10.12</span></a>
                      and <a href="#code-account_activation_view_html" class="hyperref">Listing&nbsp;<span
                          class="ref">10.13</span></a>.<span class="intersentencespace"></span>
                      Note that the HTML template in <a href="#code-account_activation_view_html"
                        class="hyperref">Listing&nbsp;<span class="ref">10.13</span></a>
                      uses the <code>link_to</code> method to construct a valid
                      link.</p>
                    <div class="codelisting" id="_code-account_activation_view_text"
                      data-tralics-id="uid1026" data-number="10.12">
                      <div class="heading"><span class="number">Listing 10.12:</span>
                        <span class="description">The account activation text
                          view.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/user_mailer/account_activation.text.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>Hi <span class="cp">&lt;%=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span>,

Welcome to the Sample App! Click on the link below to activate your account:

<span class="cp">&lt;%=</span> <span class="n">edit_account_activation_url</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">activation_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-account_activation_view_html"
                      data-tralics-id="uid1027" data-number="10.13">
                      <div class="heading"><span class="number">Listing 10.13:</span>
                        <span class="description">The account activation HTML
                          view.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/user_mailer/account_activation.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>Sample App<span
class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;p&gt;</span>Hi <span class="cp">&lt;%=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span>,<span
class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>
Welcome to the Sample App! Click on the link below to activate your account:
<span class="nt">&lt;/p&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"Activate"</span><span
class="p">,</span> <span class="n">edit_account_activation_url</span><span class="p">(</span><span
class="vi">@user</span><span class="o">.</span><span class="n">activation_token</span><span
class="p">,</span>
                                                    <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span
class="p">)</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>To see the results of the templates defined in <a href="#code-account_activation_view_text"
                        class="hyperref">Listing&nbsp;<span class="ref">10.12</span></a>
                      and <a href="#code-account_activation_view_html" class="hyperref">Listing&nbsp;<span
                          class="ref">10.13</span></a>, we can use <em>email
                        previews</em>, which are special URLs exposed by Rails
                      to let us see what our email messages look like.<span class="intersentencespace"></span>
                      First, we need to add some configuration to our
                      application’s development environment, as shown in <a href="#code-development_email_settings"
                        class="hyperref">Listing&nbsp;<span class="ref">10.14</span></a>.</p>
                    <div class="codelisting" id="_code-development_email_settings"
                      data-tralics-id="uid1028" data-number="10.14">
                      <div class="heading"><span class="number">Listing 10.14:</span>
                        <span class="description">Email settings in development.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/environments/development.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">configure</span> <span
class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">raise_delivery_errors</span> <span class="o">=</span> <span
class="kp">true</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span
class="ss">:test</span>
  <span class="n">host</span> <span class="o">=</span> <span class="s1">'example.com'</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">default_url_options</span> <span class="o">=</span> <span
class="p">{</span> <span class="ss">host</span><span class="p">:</span> <span class="n">host</span> <span
class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-development_email_settings" class="hyperref">Listing&nbsp;<span
                          class="ref">10.14</span></a> uses a host name of <code>’example.com’</code>,
                      but you should use the actual host of your development
                      environment.<span class="intersentencespace"></span> For
                      example, on my system either of the following works
                      (depending on whether I’m using the cloud IDE or the local
                      server):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">host</span> <span class="o">=</span> <span
class="s1">'rails-tutorial-c9-mhartl.c9.io'</span>     <span class="c1"># Cloud IDE</span>
</pre></div>
                    </div>
                    <p>or</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">host</span> <span class="o">=</span> <span
class="s1">'localhost:3000'</span>                     <span class="c1"># Local server</span>
</pre></div>
                    </div>
                    <p>After restarting the development server to activate the
                      configuration in <a href="#code-development_email_settings"
                        class="hyperref">Listing&nbsp;<span class="ref">10.14</span></a>,
                      we next need to update the User mailer <em>preview file</em>,
                      which was automatically generated in <a href="#sec-account_activation_mailer"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.2</span></a>,
                      as shown in <a href="#code-generated_user_mailer_previews"
                        class="hyperref">Listing&nbsp;<span class="ref">10.15</span></a>.</p>
                    <div class="codelisting" id="_code-generated_user_mailer_previews"
                      data-tralics-id="uid1029" data-number="10.15">
                      <div class="heading"><span class="number">Listing 10.15:</span>
                        <span class="description">The generated User mailer
                          previews.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">test/mailers/previews/user_mailer_preview.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Preview all emails at http://localhost:3000/rails/mailers/user_mailer</span>
<span class="k">class</span> <span class="nc">UserMailerPreview</span> <span class="o">&lt;</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">Preview</span>

  <span class="c1"># Preview this email at</span>
  <span class="c1"># http://localhost:3000/rails/mailers/user_mailer/account_activation</span>
  <span class="k">def</span> <span class="nf">account_activation</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">account_activation</span>
  <span class="k">end</span>

  <span class="c1"># Preview this email at</span>
  <span class="c1"># http://localhost:3000/rails/mailers/user_mailer/password_reset</span>
  <span class="k">def</span> <span class="nf">password_reset</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">password_reset</span>
  <span class="k">end</span>

<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because the <code>account_activation</code> method
                      defined in <a href="#code-mail_account_activation" class="hyperref">Listing&nbsp;<span
                          class="ref">10.11</span></a> requires a valid user
                      object as an argument, the code in <a href="#code-generated_user_mailer_previews"
                        class="hyperref">Listing&nbsp;<span class="ref">10.15</span></a>
                      won’t work as written.<span class="intersentencespace"></span>
                      To fix it, we define a <code>user</code> variable equal
                      to the first user in the development database, and then
                      pass it as an argument to <code>UserMailer.account_activation</code>
                      (<a href="#code-account_activation_preview" class="hyperref">Listing&nbsp;<span
                          class="ref">10.16</span></a>).<span class="intersentencespace"></span>
                      Note that <a href="#code-account_activation_preview" class="hyperref">Listing&nbsp;<span
                          class="ref">10.16</span></a> also assigns a value to <code>user.activation_token</code>,
                      which is necessary because the account activation
                      templates in <a href="#code-account_activation_view_text"
                        class="hyperref">Listing&nbsp;<span class="ref">10.12</span></a>
                      and <a href="#code-account_activation_view_html" class="hyperref">Listing&nbsp;<span
                          class="ref">10.13</span></a> need an account
                      activation token.<span class="intersentencespace"></span>
                      (Because <code>activation_token</code> is a virtual
                      attribute (<a href="#sec-account_activations_resource" class="hyperref">Section&nbsp;<span
                          class="ref">10.1.1</span></a>), the user from the
                      database doesn’t have one.)</p>
                    <div class="codelisting" id="_code-account_activation_preview"
                      data-tralics-id="uid1030" data-number="10.16">
                      <div class="heading"><span class="number">Listing 10.16:</span>
                        <span class="description">A working preview method for
                          account activation.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/mailers/previews/user_mailer_preview.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Preview all emails at http://localhost:3000/rails/mailers/user_mailer</span>
<span class="k">class</span> <span class="nc">UserMailerPreview</span> <span class="o">&lt;</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">Preview</span>

  <span class="c1"># Preview this email at</span>
  <span class="c1"># http://localhost:3000/rails/mailers/user_mailer/account_activation</span>
  <span class="k">def</span> <span class="nf">account_activation</span>
<span class="hll">    <span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class="hll">    <span class="n">user</span><span class="o">.</span><span
class="n">activation_token</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new_token</span>
</span><span class="hll">    <span class="no">UserMailer</span><span class="o">.</span><span
class="n">account_activation</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Preview this email at</span>
  <span class="c1"># http://localhost:3000/rails/mailers/user_mailer/password_reset</span>
  <span class="k">def</span> <span class="nf">password_reset</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">password_reset</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the preview code as in <a href="#code-account_activation_preview"
                        class="hyperref">Listing&nbsp;<span class="ref">10.16</span></a>,
                      we can visit the suggested URLs to preview the account
                      activation emails.<span class="intersentencespace"></span>
                      (If you are using the cloud IDE, you should replace <code>localhost:3000</code>
                      with the corresponding base URL.) The resulting HTML and
                      text emails appear as in <a href="#fig-account_activation_html_preview"
                        class="hyperref">Figure&nbsp;<span class="ref">10.2</span></a>
                      and <a href="#fig-account_activation_text_preview" class="hyperref">Figure&nbsp;<span
                          class="ref">10.3</span></a>.</p>
                    <div class="center figure" id="_fig-account_activation_html_preview"
                      data-tralics-id="uid1031" data-number="10.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/account_activation_html_preview.png"
                          alt="images/figures/account_activation_html_preview"></div>
                      <div class="caption"><span class="header">Figure 10.2: </span><span
                          class="description">A preview of HTML version of the
                          account activation email. </span></div>
                    </div>
                    <div class="center figure" id="_fig-account_activation_text_preview"
                      data-tralics-id="uid1032" data-number="10.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/account_activation_text_preview.png"
                          alt="images/figures/account_activation_text_preview"></div>
                      <div class="caption"><span class="header">Figure 10.3: </span><span
                          class="description">A preview of text version the
                          account activation email. </span></div>
                    </div>
                    <p>As a final step, we’ll write a couple of tests to
                      double-check the results shown in the email previews.<span
                        class="intersentencespace"></span> This isn’t as hard as
                      it sounds, because Rails has generated useful example
                      tests for us (<a href="#code-generated_user_mailer_test" class="hyperref">Listing&nbsp;<span
                          class="ref">10.17</span></a>).</p>
                    <div class="codelisting" id="_code-generated_user_mailer_test"
                      data-tralics-id="uid1033" data-number="10.17">
                      <div class="heading"><span class="number">Listing 10.17:</span>
                        <span class="description">The User mailer test generated
                          by Rails.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">test/mailers/user_mailer_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserMailerTest</span> <span class="o">&lt;</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"account_activation"</span> <span
class="k">do</span>
    <span class="n">mail</span> <span class="o">=</span> <span class="no">UserMailer</span><span
class="o">.</span><span class="n">account_activation</span>
    <span class="n">assert_equal</span> <span class="s2">"Account activation"</span><span
class="p">,</span> <span class="n">mail</span><span class="o">.</span><span class="n">subject</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"to@example.org"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">to</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"from@example.com"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">from</span>
    <span class="n">assert_match</span> <span class="s2">"Hi"</span><span class="p">,</span> <span
class="n">mail</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span
class="n">encoded</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"password_reset"</span> <span class="k">do</span>
    <span class="n">mail</span> <span class="o">=</span> <span class="no">UserMailer</span><span
class="o">.</span><span class="n">password_reset</span>
    <span class="n">assert_equal</span> <span class="s2">"Password reset"</span><span
class="p">,</span> <span class="n">mail</span><span class="o">.</span><span class="n">subject</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"to@example.org"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">to</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"from@example.com"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">from</span>
    <span class="n">assert_match</span> <span class="s2">"Hi"</span><span class="p">,</span> <span
class="n">mail</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span
class="n">encoded</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The tests in <a href="#code-generated_user_mailer_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.17</span></a>
                      use the powerful <code>assert_match</code> method, which
                      can be used either with a string or a regular expression:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_match</span> <span class="s1">'foo'</span><span
class="p">,</span> <span class="s1">'foobar'</span>      <span class="c1"># true</span>
<span class="n">assert_match</span> <span class="s1">'baz'</span><span class="p">,</span> <span
class="s1">'foobar'</span>      <span class="c1"># false</span>
<span class="n">assert_match</span> <span class="sr">/\w+/</span><span class="p">,</span> <span
class="s1">'foobar'</span>      <span class="c1"># true</span>
<span class="n">assert_match</span> <span class="sr">/\w+/</span><span class="p">,</span> <span
class="s1">'$#!*+@'</span>      <span class="c1"># false</span>
</pre></div>
                    </div>
                    <p>The test in <a href="#code-real_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.18</span></a>
                      uses <code>assert_match</code> to check that the name,
                      activation token, and escaped email appear in the email’s
                      body.<span class="intersentencespace"></span> For the last
                      of these, note the use of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">CGI</span><span class="o">::</span><span
class="n">escape</span><span class="p">(</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>to escape the test user’s email.<sup id="_cha-10_footnote-ref-7"
                        class="footnote"><a href="#cha-10_footnote-7">7</a></sup></p>
                    <div class="codelisting" id="_code-real_account_activation_test"
                      data-tralics-id="uid1035" data-number="10.18">
                      <div class="heading"><span class="number">Listing 10.18:</span>
                        <span class="description">A test of the current email
                          implementation.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/mailers/user_mailer_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserMailerTest</span> <span class="o">&lt;</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"account_activation"</span> <span
class="k">do</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">user</span><span class="o">.</span><span class="n">activation_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
    <span class="n">mail</span> <span class="o">=</span> <span class="no">UserMailer</span><span
class="o">.</span><span class="n">account_activation</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">assert_equal</span> <span class="s2">"Account activation"</span><span
class="p">,</span> <span class="n">mail</span><span class="o">.</span><span class="n">subject</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="o">]</span><span class="p">,</span> <span
class="n">mail</span><span class="o">.</span><span class="n">to</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"noreply@example.com"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">from</span>
    <span class="n">assert_match</span> <span class="n">user</span><span class="o">.</span><span
class="n">name</span><span class="p">,</span>               <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
    <span class="n">assert_match</span> <span class="n">user</span><span class="o">.</span><span
class="n">activation_token</span><span class="p">,</span>   <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
    <span class="n">assert_match</span> <span class="no">CGI</span><span class="o">::</span><span
class="n">escape</span><span class="p">(</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">),</span> <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that <a href="#code-real_account_activation_test" class="hyperref">Listing&nbsp;<span
                          class="ref">10.18</span></a> takes care to add an
                      activation token to the fixture user, which would
                      otherwise be blank.</p>
                    <p>To get the test to pass, we have to configure our test
                      file with the proper domain host, as shown in <a href="#code-test_domain_host"
                        class="hyperref">Listing&nbsp;<span class="ref">10.19</span></a>.</p>
                    <div class="codelisting" id="_code-test_domain_host" data-tralics-id="uid1036"
                      data-number="10.19">
                      <div class="heading"><span class="number">Listing 10.19:</span>
                        <span class="description">Setting the test domain host.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/environments/test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">configure</span> <span
class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span
class="ss">:test</span>
<span class="hll">  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">default_url_options</span> <span class="o">=</span> <span
class="p">{</span> <span class="ss">host</span><span class="p">:</span> <span class="s1">'example.com'</span> <span
class="p">}</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code as above, the mailer test should be <span
                        style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1037" data-tralics-id="uid1037"
                      data-number="10.20">
                      <div class="heading"><span class="number">Listing 10.20:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:mailers
</pre></div>
                      </div>
                    </div>
                    <p>To use the mailer in our application, we just need to add
                      a couple of lines to the <code>create</code> action used
                      to sign users up, as shown in <a href="#code-user_signup_with_account_activation"
                        class="hyperref">Listing&nbsp;<span class="ref">10.21</span></a>.<span
                        class="intersentencespace"></span> Note that <a href="#code-user_signup_with_account_activation"
                        class="hyperref">Listing&nbsp;<span class="ref">10.21</span></a>
                      has changed the redirect behavior upon signing up.<span class="intersentencespace"></span>
                      Before, we redirected to the user’s profile page (<a href="#sec-successful_signups"
                        class="hyperref">Section&nbsp;<span class="ref">7.4</span></a>),
                      but that doesn’t make sense now that we’re requiring
                      account activation.<span class="intersentencespace"></span>
                      Instead, we now redirect to the root URL.</p>
                    <div class="codelisting" id="_code-user_signup_with_account_activation"
                      data-tralics-id="uid1038" data-number="10.21">
                      <div class="heading"><span class="number">Listing 10.21:</span>
                        <span class="description">Adding account activation to
                          user signup.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
<span class="hll">      <span class="no">UserMailer</span><span class="o">.</span><span
class="n">account_activation</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span><span class="o">.</span><span class="n">deliver_now</span>
</span><span class="hll">      <span class="n">flash</span><span class="o">[</span><span
class="ss">:info</span><span class="o">]</span> <span class="o">=</span> <span class="s2">"Please check your email to activate your account."</span>
</span><span class="hll">      <span class="n">redirect_to</span> <span class="n">root_url</span>
</span>    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because <a href="#code-user_signup_with_account_activation"
                        class="hyperref">Listing&nbsp;<span class="ref">10.21</span></a>
                      redirects to the root URL instead of to the profile page
                      and doesn’t log the user in as before, the test suite is
                      currently <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>,
                      even though the application is working as designed.<span class="intersentencespace"></span>
                      We’ll fix this by temporarily commenting out the failing
                      lines, as shown in <a href="#code-comment_out_failing_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">10.22</span></a>.<span
                        class="intersentencespace"></span> We’ll uncomment those
                      lines and write passing tests for account activation in <a
                        href="#sec-activation_test_and_refactoring" class="hyperref">Section&nbsp;<span
                          class="ref">10.1.4</span></a>.</p>
                    <div class="codelisting" id="_code-comment_out_failing_tests"
                      data-tralics-id="uid1039" data-number="10.22">
                      <div class="heading"><span class="number">Listing 10.22:</span>
                        <span class="description">Temporarily commenting out
                          failing tests.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_signup_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersSignupTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="nb">test</span> <span class="s2">"invalid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span
class="p">:</span>  <span class="s2">""</span><span class="p">,</span>
                               <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@invalid"</span><span class="p">,</span>
                               <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foo"</span><span class="p">,</span>
                               <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"bar"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/new'</span>
    <span class="n">assert_select</span> <span class="s1">'div#error_explanation'</span>
    <span class="n">assert_select</span> <span class="s1">'div.field_with_errors'</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"valid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">post_via_redirect</span> <span class="n">users_path</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span>  <span class="s2">"Example User"</span><span
class="p">,</span>
                                            <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@example.com"</span><span class="p">,</span>
                                            <span class="ss">password</span><span
class="p">:</span>              <span class="s2">"password"</span><span class="p">,</span>
                                            <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"password"</span> <span class="p">}</span>
    <span class="k">end</span>
<span class="hll">    <span class="c1"># assert_template 'users/show'</span>
</span><span class="hll">    <span class="c1"># assert is_logged_in?</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>If you now try signing up as a new user, you should be
                      redirected as shown in <a href="#fig-redirected_not_activated"
                        class="hyperref">Figure&nbsp;<span class="ref">10.4</span></a>,
                      and an email like the one shown in <a href="#code-account_activation_email"
                        class="hyperref">Listing&nbsp;<span class="ref">10.23</span></a>
                      should be generated.<span class="intersentencespace"></span>
                      Note that you will <em>not</em> receive an actual email
                      in a development environment, but it will show up in your
                      server logs.<span class="intersentencespace"></span> (You
                      may have to scroll up a bit to see it.)<span class="intersentencespace"></span>
                      <a href="#sec-email_in_production" class="hyperref">Section&nbsp;<span
                          class="ref">10.3</span></a> discusses how to send
                      email for real in a production environment.</p>
                    <div class="codelisting" id="_code-account_activation_email"
                      data-tralics-id="uid1040" data-number="10.23">
                      <div class="heading"><span class="number">Listing 10.23:</span>
                        <span class="description">A sample account activation
                          email from the server log.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>Sent mail to michael@michaelhartl.com (931.6ms)
Date: Wed, 03 Sep 2014 19:47:18 +0000
From: noreply@example.com
To: michael@michaelhartl.com
Message-ID: &lt;540770474e16_61d3fd1914f4cd0300a0@mhartl-rails-tutorial-953753.mail&gt;
Subject: Account activation
Mime-Version: 1.0
Content-Type: multipart/alternative;
 boundary="--==_mimepart_5407704656b50_61d3fd1914f4cd02996a";
 charset=UTF-8
Content-Transfer-Encoding: 7bit


----==_mimepart_5407704656b50_61d3fd1914f4cd02996a
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi Michael Hartl,

Welcome to the Sample App! Click on the link below to activate your account:

http://rails-tutorial-c9-mhartl.c9.io/account_activations/
fFb_F94mgQtmlSvRFGsITw/edit?email=michael%40michaelhartl.com
----==_mimepart_5407704656b50_61d3fd1914f4cd02996a
Content-Type: text/html;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

&lt;h1&gt;Sample App&lt;/h1&gt;

&lt;p&gt;Hi Michael Hartl,&lt;/p&gt;

&lt;p&gt;
Welcome to the Sample App! Click on the link below to activate your account:
&lt;/p&gt;

&lt;a href="http://rails-tutorial-c9-mhartl.c9.io/account_activations/
fFb_F94mgQtmlSvRFGsITw/edit?email=michael%40michaelhartl.com"&gt;Activate&lt;/a&gt;
----==_mimepart_5407704656b50_61d3fd1914f4cd02996a--
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-redirected_not_activated"
                      data-tralics-id="uid1041" data-number="10.4">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/redirected_not_activated.png"
                          alt="images/figures/redirected_not_activated"></div>
                      <div class="caption"><span class="header">Figure 10.4: </span><span
                          class="description">The Home page with an activation
                          message after signup. </span></div>
                    </div>
                  </div>
                  <div id="_sec-activating_the_account" data-tralics-id="uid1042"
                    class="subsection" data-number="10.1.3">
                    <h3><a href="#sec-activating_the_account" class="heading hyperref"><span
                          class="number">10.1.3 </span>Activating the account</a></h3>
                    <p>Now that we have a correctly generated email as in <a href="#code-account_activation_email"
                        class="hyperref">Listing&nbsp;<span class="ref">10.23</span></a>,
                      we need to write an <code>edit</code> action in the
                      Account Activations controller to activate the user.<span
                        class="intersentencespace"></span> Recall from the
                      discussion in <a href="#sec-account_activation_mailer" class="hyperref">Section&nbsp;<span
                          class="ref">10.1.2</span></a> that the activation
                      token and email are available as <code>params[:id]</code>
                      and <code>params[:email]</code>, respectively.<span class="intersentencespace"></span>
                      Following the model of passwords (<a href="#code-find_authenticate_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.5</span></a>)
                      and remember tokens (<a href="#code-persistent_current_user"
                        class="hyperref">Listing&nbsp;<span class="ref">8.36</span></a>),
                      we plan to find and authenticate the user with code
                      something like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>
<span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="ss">:activation</span><span class="p">,</span> <span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>(As we’ll see momentarily, there will be one extra
                      boolean in the expression above.<span class="intersentencespace"></span>
                      See if you can guess what it will be.)</p>
                    <p>The above code uses the <code>authenticated?</code>
                      method to test if the account activation digest matches
                      the given token, but at present this won’t work because
                      that method is specialized to the remember token (<a href="#code-authenticated_p"
                        class="hyperref">Listing&nbsp;<span class="ref">8.33</span></a>):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="c1"># Returns true if the given token matches the digest.</span>
<span class="k">def</span> <span class="nf">authenticated?</span><span class="p">(</span><span
class="n">remember_token</span><span class="p">)</span>
  <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span
class="n">remember_digest</span><span class="o">.</span><span class="n">nil?</span>
  <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">remember_digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Here <code>remember_digest</code> is an attribute on the
                      User model, and inside the model we can rewrite it as
                      follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span><span class="o">.</span><span
class="n">remember_digest</span>
</pre></div>
                    </div>
                    <p>Somehow, we want to be able to make this <em>variable</em>,
                      so we can call</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">self</span><span class="o">.</span><span
class="n">activation_token</span>
</pre></div>
                    </div>
                    <p>instead by passing in the appropriate parameter to <code>authenticated?</code>.</p>
                    <p>The solution involves our first example of <em>metaprogramming</em>,
                      which is essentially a program that writes a program.<span
                        class="intersentencespace"></span> (Metaprogramming is
                      one of Ruby’s strongest suits, and many of the “magic”
                      features of Rails are due to its use of Ruby
                      metaprogramming.)<span class="intersentencespace"></span>
                      The key in this case is the powerful <code>send</code>
                      method, which lets us call a method with a name of our
                      choice by “sending a message” to a given object.<span class="intersentencespace"></span>
                      For example, in this console session we use <code>send</code>
                      on a native Ruby object to find the length of an array:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span> <span class="o">=</span> <span
class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span
class="p">,</span> <span class="mi">3</span><span class="o">]</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">length</span>
<span class="go">=&gt; 3</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">send</span><span class="p">(</span><span class="ss">:length</span><span
class="p">)</span>
<span class="go">=&gt; 3</span>
<span class="gp">&gt;&gt; </span><span class="n">a</span><span class="o">.</span><span
class="n">send</span><span class="p">(</span><span class="s1">'length'</span><span
class="p">)</span>
<span class="go">=&gt; 3</span>
</pre></div>
                    </div>
                    <p>Here we see that passing the symbol <code>:length</code>
                      or string <code>’length’</code> to <code>send</code> is
                      equivalent to calling the <code>length</code> method on
                      the given object.<span class="intersentencespace"></span>
                      As a second example, we’ll access the <code>activation_digest</code>
                      attribute of the first user in the database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="n">user</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">first</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">activation_digest</span>
<span class="go">=&gt; "$2a$10$4e6TFzEJAVNyjLv8Q5u22ensMt28qEkx0roaZvtRcp6UZKRM6N9Ae"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">send</span><span class="p">(</span><span class="ss">:activation_digest</span><span
class="p">)</span>
<span class="go">=&gt; "$2a$10$4e6TFzEJAVNyjLv8Q5u22ensMt28qEkx0roaZvtRcp6UZKRM6N9Ae"</span>
<span class="gp">&gt;&gt; </span><span class="n">user</span><span class="o">.</span><span
class="n">send</span><span class="p">(</span><span class="s1">'activation_digest'</span><span
class="p">)</span>
<span class="go">=&gt; "$2a$10$4e6TFzEJAVNyjLv8Q5u22ensMt28qEkx0roaZvtRcp6UZKRM6N9Ae"</span>
<span class="hll"><span class="gp">&gt;&gt; </span><span class="n">attribute</span> <span
class="o">=</span> <span class="ss">:activation</span>
</span><span class="hll"><span class="gp">&gt;&gt; </span><span class="n">user</span><span
class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">"</span><span
class="si">#{</span><span class="n">attribute</span><span class="si">}</span><span
class="s2">_digest"</span><span class="p">)</span>
</span><span class="hll"><span class="go">=&gt; "$2a$10$4e6TFzEJAVNyjLv8Q5u22ensMt28qEkx0roaZvtRcp6UZKRM6N9Ae"</span>
</span></pre></div>
                    </div>
                    <p>Note in the last example that we’ve defined an <code>attribute</code>
                      variable equal to the symbol <code>:activation</code> and
                      used string interpolation to build up the proper argument
                      to <code>send</code>.<span class="intersentencespace"></span>
                      This would work also with the string <code>’activation’</code>,
                      but using a symbol is more conventional, and in either
                      case</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="s2">"</span><span class="si">#{</span><span
class="n">attribute</span><span class="si">}</span><span class="s2">_digest"</span>
</pre></div>
                    </div>
                    <p>becomes</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="s2">"activation_digest"</span>
</pre></div>
                    </div>
                    <p>once the string is interpolated.<span class="intersentencespace"></span>
                      (We saw how symbols are interpolated as strings in <a href="#sec-the_flash"
                        class="hyperref">Section&nbsp;<span class="ref">7.4.2</span></a>.)</p>
                    <p>Based on this discussion of <code>send</code>, we can
                      rewrite the current <code>authenticated?</code> method as
                      follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">authenticated?</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">)</span>
  <span class="n">digest</span> <span class="o">=</span> <span class="nb">self</span><span
class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s1">'remember_digest'</span><span
class="p">)</span>
  <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span
class="n">digest</span><span class="o">.</span><span class="n">nil?</span>
  <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">remember_token</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>With this template in place, we can generalize the method
                      by adding a function argument with the name of the digest,
                      and then use string interpolation as above:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">authenticated?</span><span
class="p">(</span><span class="n">attribute</span><span class="p">,</span> <span
class="n">token</span><span class="p">)</span>
  <span class="n">digest</span> <span class="o">=</span> <span class="nb">self</span><span
class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">"</span><span
class="si">#{</span><span class="n">attribute</span><span class="si">}</span><span
class="s2">_digest"</span><span class="p">)</span>
  <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span
class="n">digest</span><span class="o">.</span><span class="n">nil?</span>
  <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">token</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>(Here we have renamed the second argument <code>token</code>
                      to emphasize that it’s now generic.)<span class="intersentencespace"></span>
                      Because we’re inside the user model, we can also omit <code>self</code>,
                      yielding the most idiomatically correct version:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">authenticated?</span><span
class="p">(</span><span class="n">attribute</span><span class="p">,</span> <span
class="n">token</span><span class="p">)</span>
  <span class="n">digest</span> <span class="o">=</span> <span class="nb">send</span><span
class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">attribute</span><span
class="si">}</span><span class="s2">_digest"</span><span class="p">)</span>
  <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span
class="n">digest</span><span class="o">.</span><span class="n">nil?</span>
  <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">token</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>We can now reproduce the previous behavior of <code>authenticated?</code>
                      by invoking it like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="ss">:remember</span><span
class="p">,</span> <span class="n">remember_token</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Applying this discussion to the User model yields the
                      generalized <code>authenticated?</code> method shown in <a
                        href="#code-generalized_authenticated_p" class="hyperref">Listing&nbsp;<span
                          class="ref">10.24</span></a>.</p>
                    <div class="codelisting" id="_code-generalized_authenticated_p"
                      data-tralics-id="uid1043" data-number="10.24">
                      <div class="heading"><span class="number">Listing 10.24:</span>
                        <span class="description">A generalized <code>authenticated?</code>
                          method.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns true if the given token matches the digest.</span>
  <span class="k">def</span> <span class="nf">authenticated?</span><span class="p">(</span><span
class="n">attribute</span><span class="p">,</span> <span class="n">token</span><span
class="p">)</span>
    <span class="n">digest</span> <span class="o">=</span> <span class="nb">send</span><span
class="p">(</span><span class="s2">"</span><span class="si">#{</span><span class="n">attribute</span><span
class="si">}</span><span class="s2">_digest"</span><span class="p">)</span>
    <span class="k">return</span> <span class="kp">false</span> <span class="k">if</span> <span
class="n">digest</span><span class="o">.</span><span class="n">nil?</span>
    <span class="no">BCrypt</span><span class="o">::</span><span class="no">Password</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">digest</span><span
class="p">)</span><span class="o">.</span><span class="n">is_password?</span><span
class="p">(</span><span class="n">token</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The caption to <a href="#code-generalized_authenticated_p"
                        class="hyperref">Listing&nbsp;<span class="ref">10.24</span></a>
                      indicates a <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>
                      test suite:</p>
                    <div class="codelisting" id="_uid1044" data-tralics-id="uid1044"
                      data-number="10.25">
                      <div class="heading"><span class="number">Listing 10.25:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>The reason for the failure is because the <code>current_user</code>
                      method (<a href="#code-persistent_current_user" class="hyperref">Listing&nbsp;<span
                          class="ref">8.36</span></a>) and the test for <code>nil</code>
                      digests (<a href="#code-test_authenticated_invalid_token"
                        class="hyperref">Listing&nbsp;<span class="ref">8.43</span></a>)
                      both use the old version of <code>authenticated?</code>,
                      which expects one argument instead of two.<span class="intersentencespace"></span>
                      To fix this, we simply update the two cases to use the
                      generalized method, as shown in <a href="#code-generalized_current_user"
                        class="hyperref">Listing&nbsp;<span class="ref">10.26</span></a>
                      and <a href="#code-test_authenticated_invalid_token_updated"
                        class="hyperref">Listing&nbsp;<span class="ref">10.27</span></a>.</p>
                    <div class="codelisting" id="_code-generalized_current_user"
                      data-tralics-id="uid1045" data-number="10.26">
                      <div class="heading"><span class="number">Listing 10.26:</span>
                        <span class="description">Using the generalized <code>authenticated?</code>
                          method in <code>current_user</code>.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/helpers/sessions_helper.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">module</span> <span class="nn">SessionsHelper</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns the current logged-in user (if any).</span>
  <span class="k">def</span> <span class="nf">current_user</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">session</span><span class="o">[</span><span class="ss">:user_id</span><span
class="o">]</span><span class="p">)</span>
      <span class="vi">@current_user</span> <span class="o">||=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
    <span class="k">elsif</span> <span class="p">(</span><span class="n">user_id</span> <span
class="o">=</span> <span class="n">cookies</span><span class="o">.</span><span class="n">signed</span><span
class="o">[</span><span class="ss">:user_id</span><span class="o">]</span><span
class="p">)</span>
      <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">user_id</span><span class="p">)</span>
<span class="hll">      <span class="k">if</span> <span class="n">user</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="ss">:remember</span><span
class="p">,</span> <span class="n">cookies</span><span class="o">[</span><span class="ss">:remember_token</span><span
class="o">]</span><span class="p">)</span>
</span>        <span class="n">log_in</span> <span class="n">user</span>
        <span class="vi">@current_user</span> <span class="o">=</span> <span class="n">user</span>
      <span class="k">end</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-test_authenticated_invalid_token_updated"
                      data-tralics-id="uid1046" data-number="10.27">
                      <div class="heading"><span class="number">Listing 10.27:</span>
                        <span class="description">Using the generalized <code>authenticated?</code>
                          method in the User test.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">,</span>
                     <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"authenticated? should return false for a user with nil digest"</span> <span
class="k">do</span>
<span class="hll">    <span class="n">assert_not</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">authenticated?</span><span class="p">(</span><span
class="ss">:remember</span><span class="p">,</span> <span class="s1">''</span><span
class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1047" data-tralics-id="uid1047"
                      data-number="10.28">
                      <div class="heading"><span class="number">Listing 10.28:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>Refactoring the code as above is incredibly more
                      error-prone without a solid test suite, which is why we
                      went to such trouble to write good tests in <a href="#sec-login_with_remembering"
                        class="hyperref">Section&nbsp;<span class="ref">8.4.2</span></a>
                      and <a href="#sec-remember_tests" class="hyperref">Section&nbsp;<span
                          class="ref">8.4.6</span></a>.</p>
                    <p>With the <code>authenticated?</code> method as in <a href="#code-generalized_authenticated_p"
                        class="hyperref">Listing&nbsp;<span class="ref">10.24</span></a>,
                      we’re now ready to write an <code>edit</code> action that
                      authenticates the user corresponding to the email address
                      in the <code>params</code> hash.<span class="intersentencespace"></span>
                      Our test for validity will look like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="n">user</span> <span
class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">user</span><span
class="o">.</span><span class="n">activated?</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="ss">:activation</span><span class="p">,</span> <span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Note the presence of <code>!user.activated?</code>,
                      which is the extra boolean alluded to above.<span class="intersentencespace"></span>
                      This prevents our code from activating users who have
                      already been activated, which is important because we’ll
                      be logging in users upon confirmation, and we don’t want
                      to allow attackers who manage to obtain the activation
                      link to log in as the user.</p>
                    <p>If the user is authenticated according to the booleans
                      above, we need to activate the user and update the <code>activated_at</code>
                      timestamp:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">update_attribute</span><span class="p">(</span><span class="ss">:activated</span><span
class="p">,</span>    <span class="kp">true</span><span class="p">)</span>
<span class="n">user</span><span class="o">.</span><span class="n">update_attribute</span><span
class="p">(</span><span class="ss">:activated_at</span><span class="p">,</span> <span
class="no">Time</span><span class="o">.</span><span class="n">zone</span><span class="o">.</span><span
class="n">now</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>This leads to the <code>edit</code> action shown in <a
                        href="#code-account_activation_edit_action" class="hyperref">Listing&nbsp;<span
                          class="ref">10.29</span></a>.<span class="intersentencespace"></span>
                      Note also that <a href="#code-account_activation_edit_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.29</span></a>
                      handles the case of an invalid activation token; this
                      should rarely happen, but it’s easy enough to redirect in
                      this case to the root URL.</p>
                    <div class="codelisting" id="_code-account_activation_edit_action"
                      data-tralics-id="uid1048" data-number="10.29">
                      <div class="heading"><span class="number">Listing 10.29:</span>
                        <span class="description">An <code>edit</code> action
                          to activate accounts.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/account_activations_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AccountActivationsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span
class="o">]</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="o">!</span><span class="n">user</span><span class="o">.</span><span class="n">activated?</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="ss">:activation</span><span
class="p">,</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
      <span class="n">user</span><span class="o">.</span><span class="n">update_attribute</span><span
class="p">(</span><span class="ss">:activated</span><span class="p">,</span>    <span
class="kp">true</span><span class="p">)</span>
      <span class="n">user</span><span class="o">.</span><span class="n">update_attribute</span><span
class="p">(</span><span class="ss">:activated_at</span><span class="p">,</span> <span
class="no">Time</span><span class="o">.</span><span class="n">zone</span><span class="o">.</span><span
class="n">now</span><span class="p">)</span>
      <span class="n">log_in</span> <span class="n">user</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Account activated!"</span>
      <span class="n">redirect_to</span> <span class="n">user</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Invalid activation link"</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-account_activation_edit_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.29</span></a>,
                      you should now be able to paste in the URL from <a href="#code-account_activation_email"
                        class="hyperref">Listing&nbsp;<span class="ref">10.23</span></a>
                      to activate the relevant user.<span class="intersentencespace"></span>
                      For example, on my system I visited the URL</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>http://rails-tutorial-c9-mhartl.c9.io/account_activations/
fFb_F94mgQtmlSvRFGsITw/edit?email=michael%40michaelhartl.com
</pre></div>
                    </div>
                    <p>and got the result shown in <a href="#fig-activated_user"
                        class="hyperref">Figure&nbsp;<span class="ref">10.5</span></a>.</p>
                    <div class="center figure" id="_fig-activated_user" data-tralics-id="uid1049"
                      data-number="10.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/activated_user.png"
                          alt="images/figures/activated_user"></div>
                      <div class="caption"><span class="header">Figure 10.5: </span><span
                          class="description">The profile page after a
                          successful activation. </span></div>
                    </div>
                    <p>Of course, currently user activation doesn’t actually <em>do</em>
                      anything, because we haven’t changed how users log in.<span
                        class="intersentencespace"></span> In order to have
                      account activation mean something, we need to allow users
                      to log in only if they are activated.<span class="intersentencespace"></span>
                      As shown in <a href="#code-preventing_unactivated_logins"
                        class="hyperref">Listing&nbsp;<span class="ref">10.30</span></a>,
                      the way to do this is to log the user in as usual if <code>user.activated?</code>
                      is true; otherwise, we redirect to the root URL with a <code>warning</code>
                      message (<a href="#fig-not_activated_warning" class="hyperref">Figure&nbsp;<span
                          class="ref">10.6</span></a>).</p>
                    <div class="codelisting" id="_code-preventing_unactivated_logins"
                      data-tralics-id="uid1050" data-number="10.30">
                      <div class="heading"><span class="number">Listing 10.30:</span>
                        <span class="description">Preventing unactivated users
                          from logging in.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/sessions_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">SessionsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="n">user</span><span class="o">.</span><span class="n">authenticate</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:session</span><span
class="o">][</span><span class="ss">:password</span><span class="o">]</span><span
class="p">)</span>
<span class="hll">      <span class="k">if</span> <span class="n">user</span><span
class="o">.</span><span class="n">activated?</span>
</span><span class="hll">        <span class="n">log_in</span> <span class="n">user</span>
</span><span class="hll">        <span class="n">params</span><span class="o">[</span><span
class="ss">:session</span><span class="o">][</span><span class="ss">:remember_me</span><span
class="o">]</span> <span class="o">==</span> <span class="s1">'1'</span> <span class="p">?</span> <span
class="n">remember</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span> <span class="p">:</span> <span class="n">forget</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
</span><span class="hll">        <span class="n">redirect_back_or</span> <span class="n">user</span>
</span><span class="hll">      <span class="k">else</span>
</span><span class="hll">        <span class="n">message</span>  <span class="o">=</span> <span
class="s2">"Account not activated. "</span>
</span><span class="hll">        <span class="n">message</span> <span class="o">+=</span> <span
class="s2">"Check your email for the activation link."</span>
</span><span class="hll">        <span class="n">flash</span><span class="o">[</span><span
class="ss">:warning</span><span class="o">]</span> <span class="o">=</span> <span
class="n">message</span>
</span><span class="hll">        <span class="n">redirect_to</span> <span class="n">root_url</span>
</span><span class="hll">      <span class="k">end</span>
</span>    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s1">'Invalid email/password combination'</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="n">log_out</span> <span class="k">if</span> <span class="n">logged_in?</span>
    <span class="n">redirect_to</span> <span class="n">root_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-not_activated_warning" data-tralics-id="uid1051"
                      data-number="10.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/not_activated_warning.png"
                          alt="images/figures/not_activated_warning"></div>
                      <div class="caption"><span class="header">Figure 10.6: </span><span
                          class="description">The warning message for a
                          not-yet-activated user. </span></div>
                    </div>
                    <p>With that, apart from one refinement, the basic
                      functionality of user activation is done.<span class="intersentencespace"></span>
                      (That refinement is preventing unactivated users from
                      being displayed, which is left as an exercise (<a href="#sec-activation_resets_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">10.5</span></a>).)<span
                        class="intersentencespace"></span> In <a href="#sec-activation_test_and_refactoring"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.4</span></a>,
                      we’ll complete the process by adding some tests and then
                      doing a little refactoring.</p>
                  </div>
                  <div id="_sec-activation_test_and_refactoring" data-tralics-id="uid1052"
                    class="subsection" data-number="10.1.4">
                    <h3><a href="#sec-activation_test_and_refactoring" class="heading hyperref"><span
                          class="number">10.1.4 </span>Activation test and
                        refactoring</a></h3>
                    <p>In this section, we’ll add an integration test for
                      account activation.<span class="intersentencespace"></span>
                      Because we already have a test for signing up with valid
                      information, we’ll add the steps to the test developed in
                      <a href="#sec-a_test_for_valid_submission" class="hyperref">Section&nbsp;<span
                          class="ref">7.4.4</span></a> (<a href="#code-a_test_for_valid_submission"
                        class="hyperref">Listing&nbsp;<span class="ref">7.26</span></a>).<span
                        class="intersentencespace"></span> There are quite a few
                      steps, but they are mostly straightforward; see if you can
                      follow along in <a href="#code-signup_with_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.31</span></a>.</p>
                    <div class="codelisting" id="_code-signup_with_account_activation_test"
                      data-tralics-id="uid1053" data-number="10.31">
                      <div class="heading"><span class="number">Listing 10.31:</span>
                        <span class="description">Adding account activation to
                          the user signup test.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/users_signup_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersSignupTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

<span class="hll">  <span class="k">def</span> <span class="nf">setup</span>
</span><span class="hll">    <span class="no">ActionMailer</span><span class="o">::</span><span
class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span
class="o">.</span><span class="n">clear</span>
</span><span class="hll">  <span class="k">end</span>
</span>
  <span class="nb">test</span> <span class="s2">"invalid signup information"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_no_difference</span> <span class="s1">'User.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="n">users_path</span><span class="p">,</span> <span
class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span
class="p">:</span>  <span class="s2">""</span><span class="p">,</span>
                               <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@invalid"</span><span class="p">,</span>
                               <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foo"</span><span class="p">,</span>
                               <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"bar"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_template</span> <span class="s1">'users/new'</span>
    <span class="n">assert_select</span> <span class="s1">'div#error_explanation'</span>
    <span class="n">assert_select</span> <span class="s1">'div.field_with_errors'</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"valid signup information with account activation"</span> <span
class="k">do</span>
</span>    <span class="n">get</span> <span class="n">signup_path</span>
    <span class="n">assert_difference</span> <span class="s1">'User.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
<span class="hll">      <span class="n">post</span> <span class="n">users_path</span><span
class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">name</span><span class="p">:</span>  <span class="s2">"Example User"</span><span
class="p">,</span>
</span>                               <span class="ss">email</span><span class="p">:</span> <span
class="s2">"user@example.com"</span><span class="p">,</span>
                               <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"password"</span><span class="p">,</span>
                               <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"password"</span> <span class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_equal</span> <span class="mi">1</span><span class="p">,</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span
class="o">.</span><span class="n">deliveries</span><span class="o">.</span><span
class="n">size</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">assigns</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span>
    <span class="n">assert_not</span> <span class="n">user</span><span class="o">.</span><span
class="n">activated?</span>
    <span class="c1"># Try to log in before activation.</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
    <span class="n">assert_not</span> <span class="n">is_logged_in?</span>
    <span class="c1"># Invalid activation token</span>
    <span class="n">get</span> <span class="n">edit_account_activation_path</span><span
class="p">(</span><span class="s2">"invalid token"</span><span class="p">)</span>
    <span class="n">assert_not</span> <span class="n">is_logged_in?</span>
    <span class="c1"># Valid token, wrong email</span>
    <span class="n">get</span> <span class="n">edit_account_activation_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">activation_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s1">'wrong'</span><span
class="p">)</span>
    <span class="n">assert_not</span> <span class="n">is_logged_in?</span>
    <span class="c1"># Valid activation token</span>
    <span class="n">get</span> <span class="n">edit_account_activation_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">activation_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span>
    <span class="n">assert</span> <span class="n">user</span><span class="o">.</span><span
class="n">reload</span><span class="o">.</span><span class="n">activated?</span>
    <span class="n">follow_redirect!</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
    <span class="n">assert</span> <span class="n">is_logged_in?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>There’s a lot of code in <a href="#code-signup_with_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.31</span></a>,
                      but the only completely novel line is</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_equal</span> <span class="mi">1</span><span
class="p">,</span> <span class="no">ActionMailer</span><span class="o">::</span><span
class="no">Base</span><span class="o">.</span><span class="n">deliveries</span><span
class="o">.</span><span class="n">size</span>
</pre></div>
                    </div>
                    <p>This code verifies that exactly 1 message was delivered.<span
                        class="intersentencespace"></span> Because the <code>deliveries</code>
                      array is global, we have to reset it in the <code>setup</code>
                      method to prevent our code from breaking if any other
                      tests deliver email (as will be the case in <a href="#sec-password_reset_test"
                        class="hyperref">Section&nbsp;<span class="ref">10.2.5</span></a>).<span
                        class="intersentencespace"></span> <a href="#code-signup_with_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.31</span></a>
                      also uses the <code>assigns</code> method for the first
                      time in the main tutorial; as explained in the <a href="#cha-log_in_log_out"
                        class="hyperref">Chapter&nbsp;<span class="ref">8</span></a>
                      exercise (<a href="#sec-log_in_out_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">8.6</span></a>), <code>assigns</code>
                      lets us access instance variables in the corresponding
                      action.<span class="intersentencespace"></span> For
                      example, the Users controller’s <code>create</code>
                      action defines an <code>@user</code> variable (<a href="#code-user_signup_with_account_activation"
                        class="hyperref">Listing&nbsp;<span class="ref">10.21</span></a>),
                      so we can access it in the test using <code>assigns(:user)</code>.<span
                        class="intersentencespace"></span> Finally, note that <a
                        href="#code-signup_with_account_activation_test" class="hyperref">Listing&nbsp;<span
                          class="ref">10.31</span></a> restores the lines we
                      commented out in <a href="#code-comment_out_failing_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">10.22</span></a>.</p>
                    <p>At this point, the test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1054" data-tralics-id="uid1054"
                      data-number="10.32">
                      <div class="heading"><span class="number">Listing 10.32:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>With the test in <a href="#code-signup_with_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.31</span></a>,
                      we’re ready to refactor a little by moving some of the
                      user manipulation out of the controller and into the
                      model.<span class="intersentencespace"></span> In
                      particular, we’ll make an <code>activate</code> method to
                      update the user’s activation attributes and a <code>send_activation_email</code>
                      to send the activation email.<span class="intersentencespace"></span>
                      The extra methods appear in <a href="#code-user_activation_methods"
                        class="hyperref">Listing&nbsp;<span class="ref">10.33</span></a>,
                      and the refactored application code appears in <a href="#code-user_signup_refactored"
                        class="hyperref">Listing&nbsp;<span class="ref">10.34</span></a>
                      and <a href="#code-account_activation_refactored" class="hyperref">Listing&nbsp;<span
                          class="ref">10.35</span></a>.</p>
                    <div class="codelisting" id="_code-user_activation_methods"
                      data-tralics-id="uid1055" data-number="10.33">
                      <div class="heading"><span class="number">Listing 10.33:</span>
                        <span class="description">Adding user activation methods
                          to the User model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Activates an account.</span>
  <span class="k">def</span> <span class="nf">activate</span>
<span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:activated</span><span class="p">,</span>    <span class="kp">true</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:activated_at</span><span class="p">,</span> <span class="no">Time</span><span
class="o">.</span><span class="n">zone</span><span class="o">.</span><span class="n">now</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Sends activation email.</span>
  <span class="k">def</span> <span class="nf">send_activation_email</span>
<span class="hll">    <span class="no">UserMailer</span><span class="o">.</span><span
class="n">account_activation</span><span class="p">(</span><span class="nb">self</span><span
class="p">)</span><span class="o">.</span><span class="n">deliver_now</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-user_signup_refactored" data-tralics-id="uid1056"
                      data-number="10.34">
                      <div class="heading"><span class="number">Listing 10.34:</span>
                        <span class="description">Sending email via the user
                          model object.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">save</span>
<span class="hll">      <span class="vi">@user</span><span class="o">.</span><span
class="n">send_activation_email</span>
</span>      <span class="n">flash</span><span class="o">[</span><span class="ss">:info</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Please check your email to activate your account."</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-account_activation_refactored"
                      data-tralics-id="uid1057" data-number="10.35">
                      <div class="heading"><span class="number">Listing 10.35:</span>
                        <span class="description">Account activation via the
                          user model object.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/account_activations_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">AccountActivationsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">edit</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span
class="o">]</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">user</span> <span class="o">&amp;&amp;</span> <span
class="o">!</span><span class="n">user</span><span class="o">.</span><span class="n">activated?</span> <span
class="o">&amp;&amp;</span> <span class="n">user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="ss">:activation</span><span
class="p">,</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
<span class="hll">      <span class="n">user</span><span class="o">.</span><span
class="n">activate</span>
</span>      <span class="n">log_in</span> <span class="n">user</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Account activated!"</span>
      <span class="n">redirect_to</span> <span class="n">user</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Invalid activation link"</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that <a href="#code-user_activation_methods" class="hyperref">Listing&nbsp;<span
                          class="ref">10.33</span></a> eliminates the use of <code>user.</code>,
                      which would break inside the User model because there is
                      no such variable:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gd">-user.update_attribute(:activated,    true)</span>
<span class="gd">-user.update_attribute(:activated_at, Time.zone.now)</span>
<span class="gi">+update_attribute(:activated,    true)</span>
<span class="gi">+update_attribute(:activated_at, Time.zone.now)</span>
</pre></div>
                    </div>
                    <p>(We could have switched from <code>user</code> to <code>self</code>,
                      but recall from <a href="#sec-uniqueness_validation" class="hyperref">Section&nbsp;<span
                          class="ref">6.2.5</span></a> that <code>self</code>
                      is optional inside the model.)<span class="intersentencespace"></span>
                      It also changes <code>@user</code> to <code>self</code>
                      in the call to the User mailer:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gd">-UserMailer.account_activation(@user).deliver_now</span>
<span class="gi">+UserMailer.account_activation(self).deliver_now</span>
</pre></div>
                    </div>
                    <p>These are <em>exactly</em> the kinds of details that are
                      easy to miss during even a simple refactoring but will be
                      caught by a good test suite.<span class="intersentencespace"></span>
                      Speaking of which, the test suite should still be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1058" data-tralics-id="uid1058"
                      data-number="10.36">
                      <div class="heading"><span class="number">Listing 10.36:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>Account activation is now completed, which is a milestone
                      worthy of a commit:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> git add -A
<span class="gp">$</span> git commit -m <span class="s2">"Add account activations"</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-password_reset" data-tralics-id="cid67" class="section"
                  data-number="10.2">
                  <h2><a href="#sec-password_reset" class="heading hyperref"><span
                        class="number">10.2 </span>Password reset</a></h2>
                  <p>Having completed account activation (and thereby verified
                    the user’s email address), we’re now in a good position to
                    handle the common case of users forgetting their passwords.<span
                      class="intersentencespace"></span> As we’ll see, many of
                    the steps are similar, and we will have several
                    opportunities to apply the lessons learned in <a href="#sec-account_activation"
                      class="hyperref">Section&nbsp;<span class="ref">10.1</span></a>.<span
                      class="intersentencespace"></span> The beginning is
                    different, though; unlike account activation, implementing
                    password resets requires both a change to one of our views
                    and two new forms (to handle email and new password
                    submission).</p>
                  <p>Before writing any code, let’s mock up the expected
                    sequence for resetting passwords.<span class="intersentencespace"></span>
                    We’ll start by adding a “forgot password” link to the sample
                    application’s login form (<a href="#fig-login_forgot_password_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">10.7</span></a>).<span
                      class="intersentencespace"></span> The “forgot password”
                    link will go to a page with a form that takes in an email
                    address and sends an email containing a password reset link
                    (<a href="#fig-forgot_password_form_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">10.8</span></a>).<span class="intersentencespace"></span>
                    The reset link will go to a form for resetting the user’s
                    password (with confirmation) (<a href="#fig-reset_password_form_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">10.9</span></a>).</p>
                  <div class="center figure" id="_fig-login_forgot_password_mockup"
                    data-tralics-id="uid1059" data-number="10.7">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/login_forgot_password_mockup.png"
                        alt="images/figures/login_forgot_password_mockup"></div>
                    <div class="caption"><span class="header">Figure 10.7: </span><span
                        class="description">A mockup of a “forgot password”
                        link. </span></div>
                  </div>
                  <div class="center figure" id="_fig-forgot_password_form_mockup"
                    data-tralics-id="uid1060" data-number="10.8">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/forgot_password_form_mockup.png"
                        alt="images/figures/forgot_password_form_mockup"></div>
                    <div class="caption"><span class="header">Figure 10.8: </span><span
                        class="description">A mockup of the “forgot password”
                        form. </span></div>
                  </div>
                  <div class="center figure" id="_fig-reset_password_form_mockup"
                    data-tralics-id="uid1061" data-number="10.9">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/reset_password_form_mockup.png"
                        alt="images/figures/reset_password_form_mockup"></div>
                    <div class="caption"><span class="header">Figure 10.9: </span><span
                        class="description">A mockup of the reset password form.
                      </span></div>
                  </div>
                  <p>In analogy with account activations, our general plan is to
                    make a Password Resets resource, with each password reset
                    consisting of a reset token and corresponding reset digest.<span
                      class="intersentencespace"></span> The primary sequence
                    goes like this:</p>
                  <ol>
                    <li>When a user requests a password reset, find the user by
                      the submitted email address.<span class="intersentencespace"></span>
                    </li>
                    <li>If the email address exists in the database, generate a
                      reset token and corresponding reset digest.<span class="intersentencespace"></span>
                    </li>
                    <li>Save the reset digest to the database, and then send an
                      email to the user with a link containing the reset token
                      and user’s email address.<span class="intersentencespace"></span>
                    </li>
                    <li>When the user clicks the link, find the user by email
                      address, and then authenticate the token by comparing to
                      the reset digest.<span class="intersentencespace"></span>
                    </li>
                    <li>If authenticated, present the user with the form for
                      changing the password.<span class="intersentencespace"></span>
                    </li>
                  </ol>
                  <div id="_sec-password_resets_resource" data-tralics-id="uid1067"
                    class="subsection" data-number="10.2.1">
                    <h3><a href="#sec-password_resets_resource" class="heading hyperref"><span
                          class="number">10.2.1 </span>Password resets resource</a></h3>
                    <p>As with account activations (<a href="#sec-account_activations_resource"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.1</span></a>),
                      our first step is to generate a controller for our new
                      resource:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller PasswordResets new edit --no-test-framework
</pre></div>
                    </div>
                    <p>Note that we’ve included a flag to skip generating tests.<span
                        class="intersentencespace"></span> This is because we
                      don’t need the controller tests (preferring instead to use
                      the integration test in <a href="#sec-activation_test_and_refactoring"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.4</span></a>),
                      so it’s convenient to omit them.</p>
                    <p>Because we’ll need forms both for creating new password
                      resets (<a href="#fig-forgot_password_form_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">10.8</span></a>) and for updating them by
                      changing the password in the User model (<a href="#fig-reset_password_form_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">10.9</span></a>),
                      we need routes for <code>new</code>, <code>create</code>,
                      <code>edit</code>, and <code>update</code>.<span class="intersentencespace"></span>
                      We can arrange this with the <code>resources</code> line
                      shown in <a href="#code-password_resets_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">10.37</span></a>.</p>
                    <div class="codelisting" id="_code-password_resets_resource"
                      data-tralics-id="uid1068" data-number="10.37">
                      <div class="heading"><span class="number">Listing 10.37:</span>
                        <span class="description">Adding a resource for password
                          resets.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>                <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>    <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span>    <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span>    <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span>    <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
  <span class="n">get</span>    <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#new'</span>
  <span class="n">post</span>   <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#create'</span>
  <span class="n">delete</span> <span class="s1">'logout'</span>  <span class="o">=&gt;</span> <span
class="s1">'sessions#destroy'</span>
  <span class="n">resources</span> <span class="ss">:users</span>
  <span class="n">resources</span> <span class="ss">:account_activations</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="o">]</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:password_resets</span><span
class="p">,</span>     <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span
class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The code in <a href="#code-password_resets_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">10.37</span></a> arranges for the RESTful
                      routes shown in <a href="#table-RESTful_password_resets"
                        class="hyperref">Table&nbsp;<span class="ref">10.2</span></a>.<span
                        class="intersentencespace"></span> In particular, the
                      first route in <a href="#table-RESTful_password_resets" class="hyperref">Table&nbsp;<span
                          class="ref">10.2</span></a> gives a link to the
                      “forgot password” form via</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">new_password_reset_path</span>
</pre></div>
                    </div>
                    <p>as seen in <a href="#code-log_in_password_reset" class="hyperref">Listing&nbsp;<span
                          class="ref">10.38</span></a> and <a href="#fig-forgot_password_link"
                        class="hyperref">Figure&nbsp;<span class="ref">10.10</span></a>.</p>
                    <div class="table" id="_table-RESTful_password_resets" data-tralics-id="uid1069"
                      data-number="10.2">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>HTTP request</strong></td>
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Action</strong></td>
                            <td class="align_left"><strong>Named route</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/password_resets/new</td>
                            <td class="align_left"><code>new</code></td>
                            <td class="align_left"><code>new_password_reset_path</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">POST</span></td>
                            <td class="align_left">/password_resets</td>
                            <td class="align_left"><code>create</code></td>
                            <td class="align_left"><code>password_resets_path</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/password_resets/&lt;token&gt;/edit</td>
                            <td class="align_left"><code>edit</code></td>
                            <td class="align_left"><code>edit_password_reset_path(token)</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">PATCH</span></td>
                            <td class="align_left">/password_resets/&lt;token&gt;</td>
                            <td class="align_left"><code>update</code></td>
                            <td class="align_left"><code>password_reset_path(token)</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 10.2: </span><span
                          class="description">RESTful routes provided by the
                          Password Resets resource in <a href="#code-password_resets_resource"
                            class="hyperref">Listing&nbsp;<span class="ref">10.37</span></a>.
                        </span></div>
                    </div>
                    <div class="codelisting" id="_code-log_in_password_reset" data-tralics-id="uid1070"
                      data-number="10.38">
                      <div class="heading"><span class="number">Listing 10.38:</span>
                        <span class="description">Adding a link to password
                          resets.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/sessions/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Log in"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Log in<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="ss">:session</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">login_path</span><span class="p">)</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"(forgot password)"</span><span class="p">,</span> <span class="n">new_password_reset_path</span> <span
class="cp">%&gt;</span>
</span>      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:remember_me</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"checkbox inline"</span> <span
class="k">do</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">check_box</span> <span class="ss">:remember_me</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;span&gt;</span>Remember me on this computer<span class="nt">&lt;/span&gt;</span>
      <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

    <span class="nt">&lt;p&gt;</span>New user? <span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Sign up now!"</span><span class="p">,</span> <span
class="n">signup_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-forgot_password_link" data-tralics-id="uid1071"
                      data-number="10.10">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/forgot_password_link.png"
                          alt="images/figures/forgot_password_link"></div>
                      <div class="caption"><span class="header">Figure 10.10: </span><span
                          class="description">The login page with a “forgot
                          password” link. </span></div>
                    </div>
                    <p>The data model for password resets is similar to the one
                      used for account activation (<a href="#fig-user_model_account_activation"
                        class="hyperref">Figure&nbsp;<span class="ref">10.1</span></a>).<span
                        class="intersentencespace"></span> Following the pattern
                      set by remember tokens (<a href="#sec-remember_me" class="hyperref">Section&nbsp;<span
                          class="ref">8.4</span></a>) and account activation
                      tokens (<a href="#sec-account_activation" class="hyperref">Section&nbsp;<span
                          class="ref">10.1</span></a>), password resets will
                      pair a virtual reset token for use in the reset email with
                      a corresponding reset digest for retrieving the user.<span
                        class="intersentencespace"></span> If we instead stored
                      an unhashed token, an attacker with access to the database
                      could send a reset request to the user’s email address and
                      then use the token and email to visit the corresponding
                      password reset link, thereby gaining control of the
                      account.<span class="intersentencespace"></span> Using a
                      digest for password resets is thus essential.<span class="intersentencespace"></span>
                      As an additional security precaution, we’ll also plan to <em>expire</em>
                      the reset link after a couple of hours, which requires
                      recording the time when the reset gets sent.<span class="intersentencespace"></span>
                      The resulting <code>reset_digest</code> and <code>reset_sent_at</code>
                      attributes appear in <a href="#fig-user_model_password_reset"
                        class="hyperref">Figure&nbsp;<span class="ref">10.11</span></a>.</p>
                    <div class="center figure" id="_fig-user_model_password_reset"
                      data-tralics-id="uid1072" data-number="10.11"><span class="graphics"><img
                          src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_model_password_reset.png"
                          alt="user_model_password_reset"></span>
                      <div class="caption"><span class="header">Figure 10.11: </span><span
                          class="description">The User model with added password
                          reset attributes. </span></div>
                    </div>
                    <p>The migration to add the attributes from <a href="#fig-user_model_password_reset"
                        class="hyperref">Figure&nbsp;<span class="ref">10.11</span></a>
                      appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_reset_to_users reset_digest:string <span
class="se">\</span>
<span class="gp">&gt;</span> reset_sent_at:datetime
</pre></div>
                    </div>
                    <p>We then migrate as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-password_resets_controller_and_form" data-tralics-id="uid1073"
                    class="subsection" data-number="10.2.2">
                    <h3><a href="#sec-password_resets_controller_and_form" class="heading hyperref"><span
                          class="number">10.2.2 </span>Password resets
                        controller and form</a></h3>
                    <p>To make the view for new password resets, we’ll work in
                      analogy with the previous form for making a new non–Active
                      Record resource, namely, the login form (<a href="#code-login_form"
                        class="hyperref">Listing&nbsp;<span class="ref">8.2</span></a>)
                      for creating a new session, shown again in <a href="#code-login_form_redux"
                        class="hyperref">Listing&nbsp;<span class="ref">10.39</span></a>
                      for reference.</p>
                    <div class="codelisting" id="_code-login_form_redux" data-tralics-id="uid1074"
                      data-number="10.39">
                      <div class="heading"><span class="number">Listing 10.39:</span>
                        <span class="description">Reviewing the code for the
                          login form.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/sessions/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Log in"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Log in<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="ss">:session</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">login_path</span><span class="p">)</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:remember_me</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"checkbox inline"</span> <span
class="k">do</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">check_box</span> <span class="ss">:remember_me</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;span&gt;</span>Remember me on this computer<span class="nt">&lt;/span&gt;</span>
      <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Log in"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

    <span class="nt">&lt;p&gt;</span>New user? <span class="cp">&lt;%=</span> <span
class="n">link_to</span> <span class="s2">"Sign up now!"</span><span class="p">,</span> <span
class="n">signup_path</span> <span class="cp">%&gt;</span><span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The new password resets form has a lot in common with <a
                        href="#code-login_form_redux" class="hyperref">Listing&nbsp;<span
                          class="ref">10.39</span></a>; the most important
                      differences are the use of a different resource and URL in
                      the call to <code>form_for</code> and the omission of the
                      password attribute.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-new_password_reset"
                        class="hyperref">Listing&nbsp;<span class="ref">10.40</span></a>
                      and <a href="#fig-forgot_password_form" class="hyperref">Figure&nbsp;<span
                          class="ref">10.12</span></a>.</p>
                    <div class="codelisting" id="_code-new_password_reset" data-tralics-id="uid1075"
                      data-number="10.40">
                      <div class="heading"><span class="number">Listing 10.40:</span>
                        <span class="description">A new password reset view.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/password_resets/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Forgot password"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Forgot password<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="ss">:password_reset</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">password_resets_path</span><span class="p">)</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Submit"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-forgot_password_form" data-tralics-id="uid1076"
                      data-number="10.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/forgot_password_form.png"
                          alt="images/figures/forgot_password_form"></div>
                      <div class="caption"><span class="header">Figure 10.12: </span><span
                          class="description">The “forgot password” form. </span></div>
                    </div>
                    <p>Upon submitting the form in <a href="#fig-forgot_password_form"
                        class="hyperref">Figure&nbsp;<span class="ref">10.12</span></a>,
                      we need to find the user by email address and update its
                      attributes with the password reset token and sent-at
                      timestamp.<span class="intersentencespace"></span> We then
                      redirect to the root URL with an informative flash
                      message.<span class="intersentencespace"></span> As with
                      login (<a href="#code-correct_login_failure" class="hyperref">Listing&nbsp;<span
                          class="ref">8.9</span></a>), in the case of an invalid
                      submission we re-render the <code>new</code> page with a
                      <code>flash.now</code> message.<span class="intersentencespace"></span>
                      The results appear in <a href="#code-create_password_reset"
                        class="hyperref">Listing&nbsp;<span class="ref">10.41</span></a>.</p>
                    <div class="codelisting" id="_code-create_password_reset" data-tralics-id="uid1077"
                      data-number="10.41">
                      <div class="heading"><span class="number">Listing 10.41:</span>
                        <span class="description">A <code>create</code> action
                          for password resets.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/password_resets_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">PasswordResetsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password_reset</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">create_reset_digest</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">send_password_reset_email</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:info</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Email sent with password reset instructions"</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s2">"Email address not found"</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The code in the User model parallels the <code>create_activation_digest</code>
                      method used in the <code>before_create</code> callback (<a
                        href="#code-user_model_activation_code" class="hyperref">Listing&nbsp;<span
                          class="ref">10.3</span></a>), as seen in <a href="#code-user_model_password_reset"
                        class="hyperref">Listing&nbsp;<span class="ref">10.42</span></a>.</p>
                    <div class="codelisting" id="_code-user_model_password_reset"
                      data-tralics-id="uid1078" data-number="10.42">
                      <div class="heading"><span class="number">Listing 10.42:</span>
                        <span class="description">Adding password reset methods
                          to the User model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span><span
class="p">,</span> <span class="ss">:activation_token</span><span class="p">,</span> <span
class="ss">:reset_token</span>
</span>  <span class="n">before_save</span>   <span class="ss">:downcase_email</span>
  <span class="n">before_create</span> <span class="ss">:create_activation_digest</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Activates an account.</span>
  <span class="k">def</span> <span class="nf">activate</span>
    <span class="n">update_attribute</span><span class="p">(</span><span class="ss">:activated</span><span
class="p">,</span>    <span class="kp">true</span><span class="p">)</span>
    <span class="n">update_attribute</span><span class="p">(</span><span class="ss">:activated_at</span><span
class="p">,</span> <span class="no">Time</span><span class="o">.</span><span class="n">zone</span><span
class="o">.</span><span class="n">now</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Sends activation email.</span>
  <span class="k">def</span> <span class="nf">send_activation_email</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">account_activation</span><span
class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span
class="n">deliver_now</span>
  <span class="k">end</span>

  <span class="c1"># Sets the password reset attributes.</span>
  <span class="k">def</span> <span class="nf">create_reset_digest</span>
<span class="hll">    <span class="nb">self</span><span class="o">.</span><span
class="n">reset_token</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new_token</span>
</span><span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:reset_digest</span><span class="p">,</span>  <span class="no">User</span><span
class="o">.</span><span class="n">digest</span><span class="p">(</span><span class="n">reset_token</span><span
class="p">))</span>
</span><span class="hll">    <span class="n">update_attribute</span><span class="p">(</span><span
class="ss">:reset_sent_at</span><span class="p">,</span> <span class="no">Time</span><span
class="o">.</span><span class="n">zone</span><span class="o">.</span><span class="n">now</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Sends password reset email.</span>
  <span class="k">def</span> <span class="nf">send_password_reset_email</span>
<span class="hll">    <span class="no">UserMailer</span><span class="o">.</span><span
class="n">password_reset</span><span class="p">(</span><span class="nb">self</span><span
class="p">)</span><span class="o">.</span><span class="n">deliver_now</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="c1"># Converts email to all lower-case.</span>
    <span class="k">def</span> <span class="nf">downcase_email</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="n">email</span><span class="o">.</span><span class="n">downcase</span>
    <span class="k">end</span>

    <span class="c1"># Creates and assigns the activation token and digest.</span>
    <span class="k">def</span> <span class="nf">create_activation_digest</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">activation_token</span>  <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">activation_digest</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="n">activation_token</span><span class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As shown in <a href="#fig-invalid_email_password_reset"
                        class="hyperref">Figure&nbsp;<span class="ref">10.13</span></a>,
                      at this point the application’s behavior for invalid email
                      addresses is already working.<span class="intersentencespace"></span>
                      To get the application working upon submission of a valid
                      email address as well, we need to define a password reset
                      mailer method.</p>
                    <div class="center figure" id="_fig-invalid_email_password_reset"
                      data-tralics-id="uid1079" data-number="10.13">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/invalid_email_password_reset.png"
                          alt="images/figures/invalid_email_password_reset"></div>
                      <div class="caption"><span class="header">Figure 10.13: </span><span
                          class="description">The “forgot password” form for an
                          invalid email address. </span></div>
                    </div>
                  </div>
                  <div id="_sec-password_reset_mailer" data-tralics-id="uid1080"
                    class="subsection" data-number="10.2.3">
                    <h3><a href="#sec-password_reset_mailer" class="heading hyperref"><span
                          class="number">10.2.3 </span>Password reset mailer
                        method</a></h3>
                    <p>The code to send the password reset email appears in <a
                        href="#code-user_model_password_reset" class="hyperref">Listing&nbsp;<span
                          class="ref">10.42</span></a> as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">UserMailer</span><span class="o">.</span><span
class="n">password_reset</span><span class="p">(</span><span class="nb">self</span><span
class="p">)</span><span class="o">.</span><span class="n">deliver_now</span>
</pre></div>
                    </div>
                    <p>The password reset mailer method needed to get this
                      working is nearly identical to the mailer for account
                      activation developed in <a href="#sec-account_activation_mailer"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.2</span></a>.<span
                        class="intersentencespace"></span> We first create a <code>password_reset</code>
                      method in the user mailer (<a href="#code-mail_password_reset"
                        class="hyperref">Listing&nbsp;<span class="ref">10.43</span></a>),
                      and then define view templates for plain-text email (<a href="#code-password_reset_text"
                        class="hyperref">Listing&nbsp;<span class="ref">10.44</span></a>)
                      and HTML email (<a href="#code-password_reset_html" class="hyperref">Listing&nbsp;<span
                          class="ref">10.45</span></a>).</p>
                    <div class="codelisting" id="_code-mail_password_reset" data-tralics-id="uid1081"
                      data-number="10.43">
                      <div class="heading"><span class="number">Listing 10.43:</span>
                        <span class="description">Mailing the password reset
                          link.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/mailers/user_mailer.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UserMailer</span> <span
class="o">&lt;</span> <span class="no">ApplicationMailer</span>

  <span class="k">def</span> <span class="nf">account_activation</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
    <span class="n">mail</span> <span class="ss">to</span><span class="p">:</span> <span
class="n">user</span><span class="o">.</span><span class="n">email</span><span class="p">,</span> <span
class="ss">subject</span><span class="p">:</span> <span class="s2">"Account activation"</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">password_reset</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
<span class="hll">    <span class="vi">@user</span> <span class="o">=</span> <span
class="n">user</span>
</span><span class="hll">    <span class="n">mail</span> <span class="ss">to</span><span
class="p">:</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span><span
class="p">,</span> <span class="ss">subject</span><span class="p">:</span> <span
class="s2">"Password reset"</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-password_reset_text" data-tralics-id="uid1082"
                      data-number="10.44">
                      <div class="heading"><span class="number">Listing 10.44:</span>
                        <span class="description">The password reset plain-text
                          email template.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/user_mailer/password_reset.text.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>To reset your password click the link below:

<span class="cp">&lt;%=</span> <span class="n">edit_password_reset_url</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span> <span class="cp">%&gt;</span>

This link will expire in two hours.

If you did not request your password to be reset, please ignore this email and
your password will stay as it is.
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-password_reset_html" data-tralics-id="uid1083"
                      data-number="10.45">
                      <div class="heading"><span class="number">Listing 10.45:</span>
                        <span class="description">The password reset HTML email
                          template.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/user_mailer/password_reset.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;h1&gt;</span>Password reset<span
class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;p&gt;</span>To reset your password click the link below:<span
class="nt">&lt;/p&gt;</span>

<span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"Reset password"</span><span
class="p">,</span> <span class="n">edit_password_reset_url</span><span class="p">(</span><span
class="vi">@user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">,</span>
                                                      <span class="ss">email</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span><span
class="p">)</span> <span class="cp">%&gt;</span>

<span class="nt">&lt;p&gt;</span>This link will expire in two hours.<span class="nt">&lt;/p&gt;</span>

<span class="nt">&lt;p&gt;</span>
If you did not request your password to be reset, please ignore this email and
your password will stay as it is.
<span class="nt">&lt;/p&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>As with account activation emails (<a href="#sec-account_activation_mailer"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.2</span></a>),
                      we can preview password reset emails using the Rails email
                      previewer.<span class="intersentencespace"></span> The
                      code is exactly analogous to <a href="#code-account_activation_preview"
                        class="hyperref">Listing&nbsp;<span class="ref">10.16</span></a>,
                      as shown in <a href="#code-password_reset_preview" class="hyperref">Listing&nbsp;<span
                          class="ref">10.46</span></a>.</p>
                    <div class="codelisting" id="_code-password_reset_preview" data-tralics-id="uid1084"
                      data-number="10.46">
                      <div class="heading"><span class="number">Listing 10.46:</span>
                        <span class="description">A working preview method for
                          password reset.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/mailers/previews/user_mailer_preview.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Preview all emails at http://localhost:3000/rails/mailers/user_mailer</span>
<span class="k">class</span> <span class="nc">UserMailerPreview</span> <span class="o">&lt;</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">Preview</span>

  <span class="c1"># Preview this email at</span>
  <span class="c1"># http://localhost:3000/rails/mailers/user_mailer/account_activation</span>
  <span class="k">def</span> <span class="nf">account_activation</span>
    <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">first</span>
    <span class="n">user</span><span class="o">.</span><span class="n">activation_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">account_activation</span><span
class="p">(</span><span class="n">user</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="c1"># Preview this email at</span>
  <span class="c1"># http://localhost:3000/rails/mailers/user_mailer/password_reset</span>
  <span class="k">def</span> <span class="nf">password_reset</span>
<span class="hll">    <span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">first</span>
</span><span class="hll">    <span class="n">user</span><span class="o">.</span><span
class="n">reset_token</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new_token</span>
</span><span class="hll">    <span class="no">UserMailer</span><span class="o">.</span><span
class="n">password_reset</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-password_reset_preview"
                        class="hyperref">Listing&nbsp;<span class="ref">10.46</span></a>,
                      the HTML and text email previews appear as in <a href="#fig-password_reset_html_preview"
                        class="hyperref">Figure&nbsp;<span class="ref">10.14</span></a>
                      and <a href="#fig-password_reset_text_preview" class="hyperref">Figure&nbsp;<span
                          class="ref">10.15</span></a>.</p>
                    <div class="center figure" id="_fig-password_reset_html_preview"
                      data-tralics-id="uid1085" data-number="10.14">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/password_reset_html_preview.png"
                          alt="images/figures/password_reset_html_preview"></div>
                      <div class="caption"><span class="header">Figure 10.14: </span><span
                          class="description">A preview of the HTML version of
                          the password reset email. </span></div>
                    </div>
                    <div class="center figure" id="_fig-password_reset_text_preview"
                      data-tralics-id="uid1086" data-number="10.15">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/password_reset_text_preview.png"
                          alt="images/figures/password_reset_text_preview"></div>
                      <div class="caption"><span class="header">Figure 10.15: </span><span
                          class="description">A preview of the text version of
                          the password reset email. </span></div>
                    </div>
                    <p>In analogy with the account activation mailer method test
                      (<a href="#code-real_account_activation_test" class="hyperref">Listing&nbsp;<span
                          class="ref">10.18</span></a>), we’ll write a short
                      test of the password reset mailer method, as shown in <a
                        href="#code-password_reset_mailer_test" class="hyperref">Listing&nbsp;<span
                          class="ref">10.47</span></a>.<span class="intersentencespace"></span>
                      Note that we need to create a password reset token for use
                      in the views; unlike the activation token, which is
                      created for every user by a <code>before_create</code>
                      callback (<a href="#code-user_model_activation_code" class="hyperref">Listing&nbsp;<span
                          class="ref">10.3</span></a>), the password reset token
                      is created only when a user successfully submits the
                      “forgot password” form.<span class="intersentencespace"></span>
                      This will occur naturally in an integration test (<a href="#code-password_reset_integration_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.54</span></a>),
                      but in the present context we need to create one by hand.</p>
                    <div class="codelisting" id="_code-password_reset_mailer_test"
                      data-tralics-id="uid1087" data-number="10.47">
                      <div class="heading"><span class="number">Listing 10.47:</span>
                        <span class="description">Adding a test of the password
                          reset mailer method.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/mailers/user_mailer_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserMailerTest</span> <span class="o">&lt;</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"account_activation"</span> <span
class="k">do</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">user</span><span class="o">.</span><span class="n">activation_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
    <span class="n">mail</span> <span class="o">=</span> <span class="no">UserMailer</span><span
class="o">.</span><span class="n">account_activation</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">assert_equal</span> <span class="s2">"Account activation"</span><span
class="p">,</span> <span class="n">mail</span><span class="o">.</span><span class="n">subject</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="o">]</span><span class="p">,</span> <span
class="n">mail</span><span class="o">.</span><span class="n">to</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"noreply@example.com"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">from</span>
    <span class="n">assert_match</span> <span class="n">user</span><span class="o">.</span><span
class="n">name</span><span class="p">,</span>               <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
    <span class="n">assert_match</span> <span class="n">user</span><span class="o">.</span><span
class="n">activation_token</span><span class="p">,</span>   <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
    <span class="n">assert_match</span> <span class="no">CGI</span><span class="o">::</span><span
class="n">escape</span><span class="p">(</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">),</span> <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"password_reset"</span> <span class="k">do</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
<span class="hll">    <span class="n">user</span><span class="o">.</span><span class="n">reset_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
</span>    <span class="n">mail</span> <span class="o">=</span> <span class="no">UserMailer</span><span
class="o">.</span><span class="n">password_reset</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="n">assert_equal</span> <span class="s2">"Password reset"</span><span
class="p">,</span> <span class="n">mail</span><span class="o">.</span><span class="n">subject</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="o">]</span><span class="p">,</span> <span
class="n">mail</span><span class="o">.</span><span class="n">to</span>
    <span class="n">assert_equal</span> <span class="o">[</span><span class="s2">"noreply@example.com"</span><span
class="o">]</span><span class="p">,</span> <span class="n">mail</span><span class="o">.</span><span
class="n">from</span>
    <span class="n">assert_match</span> <span class="n">user</span><span class="o">.</span><span
class="n">reset_token</span><span class="p">,</span>        <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
    <span class="n">assert_match</span> <span class="no">CGI</span><span class="o">::</span><span
class="n">escape</span><span class="p">(</span><span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">),</span> <span class="n">mail</span><span
class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">encoded</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1088" data-tralics-id="uid1088"
                      data-number="10.48">
                      <div class="heading"><span class="number">Listing 10.48:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-mail_password_reset" class="hyperref">Listing&nbsp;<span
                          class="ref">10.43</span></a>, <a href="#code-password_reset_text"
                        class="hyperref">Listing&nbsp;<span class="ref">10.44</span></a>,
                      and <a href="#code-password_reset_html" class="hyperref">Listing&nbsp;<span
                          class="ref">10.45</span></a>, submission of a valid
                      email address appears as shown in <a href="#fig-valid_email_password_reset"
                        class="hyperref">Figure&nbsp;<span class="ref">10.16</span></a>.<span
                        class="intersentencespace"></span> The corresponding
                      email appears in the server log and should look something
                      like <a href="#code-password_reset_email" class="hyperref">Listing&nbsp;<span
                          class="ref">10.49</span></a>.</p>
                    <div class="center figure" id="_fig-valid_email_password_reset"
                      data-tralics-id="uid1089" data-number="10.16">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/valid_email_password_reset.png"
                          alt="images/figures/valid_email_password_reset"></div>
                      <div class="caption"><span class="header">Figure 10.16: </span><span
                          class="description">The result of submitting a valid
                          email address. </span></div>
                    </div>
                    <div class="codelisting" id="_code-password_reset_email" data-tralics-id="uid1090"
                      data-number="10.49">
                      <div class="heading"><span class="number">Listing 10.49:</span>
                        <span class="description">A sample password reset email
                          from the server log.</span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>Sent mail to michael@michaelhartl.com (66.8ms)
Date: Thu, 04 Sep 2014 01:04:59 +0000
From: noreply@example.com
To: michael@michaelhartl.com
Message-ID: &lt;5407babbee139_8722b257d04576a@mhartl-rails-tutorial-953753.mail&gt;
Subject: Password reset
Mime-Version: 1.0
Content-Type: multipart/alternative;
 boundary="--==_mimepart_5407babbe3505_8722b257d045617";
 charset=UTF-8
Content-Transfer-Encoding: 7bit


----==_mimepart_5407babbe3505_8722b257d045617
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

To reset your password click the link below:

http://rails-tutorial-c9-mhartl.c9.io/password_resets/3BdBrXeQZSWqFIDRN8cxHA/
edit?email=michael%40michaelhartl.com

This link will expire in two hours.

If you did not request your password to be reset, please ignore this email and
your password will stay as it is.
----==_mimepart_5407babbe3505_8722b257d045617
Content-Type: text/html;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

&lt;h1&gt;Password reset&lt;/h1&gt;

&lt;p&gt;To reset your password click the link below:&lt;/p&gt;

&lt;a href="http://rails-tutorial-c9-mhartl.c9.io/
password_resets/3BdBrXeQZSWqFIDRN8cxHA/
edit?email=michael%40michaelhartl.com"&gt;Reset password&lt;/a&gt;

&lt;p&gt;This link will expire in two hours.&lt;/p&gt;

&lt;p&gt;
If you did not request your password to be reset, please ignore this email and
your password will stay as it is.
&lt;/p&gt;
----==_mimepart_5407babbe3505_8722b257d045617--
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-resetting_the_password" data-tralics-id="uid1091"
                    class="subsection" data-number="10.2.4">
                    <h3><a href="#sec-resetting_the_password" class="heading hyperref"><span
                          class="number">10.2.4 </span>Resetting the password</a></h3>
                    <p>To get links of the form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>http://example.com/password_resets/3BdBrXeQZSWqFIDRN8cxHA/edit?email=foo%40bar.com
</pre></div>
                    </div>
                    <p>to work, we need a form for resetting passwords.<span class="intersentencespace"></span>
                      The task is similar to updating users via the user edit
                      view (<a href="#code-user_edit_view" class="hyperref">Listing&nbsp;<span
                          class="ref">9.2</span></a>), but in this case with
                      only password and confirmation fields.<span class="intersentencespace"></span>
                      There’s an additional complication, though: we expect to
                      find the user by email address, which means we need its
                      value in both the <code>edit</code> and <code>update</code>
                      actions.<span class="intersentencespace"></span> The email
                      will automatically be available in the <code>edit</code>
                      action because of its presence in the link above, but
                      after we submit the form its value will be lost.<span class="intersentencespace"></span>
                      The solution is to use a <em>hidden field</em> to place
                      (but not display) the email on the page, and then submit
                      it along with the rest of the form’s information.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-password_reset_form"
                        class="hyperref">Listing&nbsp;<span class="ref">10.50</span></a>.</p>
                    <div class="codelisting" id="_code-password_reset_form" data-tralics-id="uid1092"
                      data-number="10.50">
                      <div class="heading"><span class="number">Listing 10.50:</span>
                        <span class="description">The form to reset a password.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/password_resets/edit.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Reset password'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Reset password<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">password_reset_path</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">))</span> <span class="k">do</span> <span class="o">|</span><span
class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/error_messages'</span> <span
class="cp">%&gt;</span>

<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">hidden_field_tag</span> <span
class="ss">:email</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span> <span class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Update password"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that <a href="#code-password_reset_form" class="hyperref">Listing&nbsp;<span
                          class="ref">10.50</span></a> uses the form tag helper</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">hidden_field_tag</span> <span class="ss">:email</span><span
class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span>
</pre></div>
                    </div>
                    <p>instead of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">f</span><span class="o">.</span><span
class="n">hidden_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">email</span>
</pre></div>
                    </div>
                    <p>because the reset link puts the email in <code>params[:email]</code>,
                      whereas the latter would put it in <code>params[:user][:email]</code>.</p>
                    <p>To get the form to render, we need to define an <code>@user</code>
                      variable in the Password Resets controller’s <code>edit</code>
                      action.<span class="intersentencespace"></span> As with
                      account activation (<a href="#code-account_activation_edit_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.29</span></a>),
                      this involves finding the user corresponding to the email
                      address in <code>params[:email]</code>.<span class="intersentencespace"></span>
                      We then need to verify that the user is valid, i.e., that
                      it exists, is activated, and is authenticated according to
                      the reset token from <code>params[:id]</code> (using the
                      generalized <code>authenticated?</code> method defined in
                      <a href="#code-generalized_authenticated_p" class="hyperref">Listing&nbsp;<span
                          class="ref">10.24</span></a>).<span class="intersentencespace"></span>
                      Because the existence of a valid <code>@user</code> is
                      needed in both the <code>edit</code> and <code>update</code>
                      actions, we’ll put the code to find and validate it in a
                      couple of before filters, as shown in <a href="#code-password_reset_edit_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.51</span></a>.</p>
                    <div class="codelisting" id="_code-password_reset_edit_action"
                      data-tralics-id="uid1093" data-number="10.51">
                      <div class="heading"><span class="number">Listing 10.51:</span>
                        <span class="description">The <code>edit</code> action
                          for password reset.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/password_resets_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">PasswordResetsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:get_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span><span class="hll">  <span class="n">before_action</span> <span class="ss">:valid_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">edit</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">get_user</span>
<span class="hll">      <span class="vi">@user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">email</span><span class="p">:</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:email</span><span class="o">]</span><span class="p">)</span>
</span>    <span class="k">end</span>

    <span class="c1"># Confirms a valid user.</span>
    <span class="k">def</span> <span class="nf">valid_user</span>
<span class="hll">      <span class="k">unless</span> <span class="p">(</span><span
class="vi">@user</span> <span class="o">&amp;&amp;</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">activated?</span> <span class="o">&amp;&amp;</span>
</span><span class="hll">              <span class="vi">@user</span><span class="o">.</span><span
class="n">authenticated?</span><span class="p">(</span><span class="ss">:reset</span><span
class="p">,</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">))</span>
</span><span class="hll">        <span class="n">redirect_to</span> <span class="n">root_url</span>
</span><span class="hll">      <span class="k">end</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>In <a href="#code-password_reset_edit_action" class="hyperref">Listing&nbsp;<span
                          class="ref">10.51</span></a>, compare the use of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">authenticated?</span><span class="p">(</span><span
class="ss">:reset</span><span class="p">,</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>to</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">authenticated?</span><span class="p">(</span><span
class="ss">:remember</span><span class="p">,</span> <span class="n">cookies</span><span
class="o">[</span><span class="ss">:remember_token</span><span class="o">]</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>in <a href="#code-generalized_current_user" class="hyperref">Listing&nbsp;<span
                          class="ref">10.26</span></a> and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">authenticated?</span><span class="p">(</span><span
class="ss">:activation</span><span class="p">,</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>in <a href="#code-account_activation_edit_action" class="hyperref">Listing&nbsp;<span
                          class="ref">10.29</span></a>.<span class="intersentencespace"></span>
                      Together, these three uses complete the authentication
                      methods shown in <a href="#table-password_token_digest" class="hyperref">Table&nbsp;<span
                          class="ref">10.1</span></a>.</p>
                    <p>With the code as above, following the link from <a href="#code-password_reset_email"
                        class="hyperref">Listing&nbsp;<span class="ref">10.49</span></a>
                      should render a password reset form.<span class="intersentencespace"></span>
                      The result appears in <a href="#fig-password_reset_form"
                        class="hyperref">Figure&nbsp;<span class="ref">10.17</span></a>.</p>
                    <div class="center figure" id="_fig-password_reset_form" data-tralics-id="uid1094"
                      data-number="10.17">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/password_reset_form.png"
                          alt="images/figures/password_reset_form"></div>
                      <div class="caption"><span class="header">Figure 10.17: </span><span
                          class="description">The password reset form. </span></div>
                    </div>
                    <p>To define the <code>update</code> action corresponding
                      to the <code>edit</code> action in <a href="#code-password_reset_edit_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.51</span></a>,
                      we need to consider four cases: an expired password reset,
                      a successful update, a failed update (due to an invalid
                      password), and a failed update (which initially looks
                      “successful”) due to a blank password and confirmation.<span
                        class="intersentencespace"></span> The first case
                      applies to both the <code>edit</code> and <code>update</code>
                      actions, and so logically belongs in a before filter (<a href="#code-password_reset_update_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.52</span></a>).<span
                        class="intersentencespace"></span> The next two cases
                      correspond to the two branches in the main <code>if</code>
                      statement shown in <a href="#code-password_reset_update_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.52</span></a>.<span
                        class="intersentencespace"></span> Because the edit form
                      is modifying an Active Record model object (i.e., a user),
                      we can rely on the shared partial from <a href="#code-password_reset_form"
                        class="hyperref">Listing&nbsp;<span class="ref">10.50</span></a>
                      to render error messages.<span class="intersentencespace"></span>
                      The only exception is the case where the password is
                      blank, which is currently allowed by our User model (<a href="#code-allow_blank_password"
                        class="hyperref">Listing&nbsp;<span class="ref">9.10</span></a>)
                      and so needs to be caught explicitly and handled with a
                      flash message.<sup id="_cha-10_footnote-ref-8" class="footnote"><a
                          href="#cha-10_footnote-8">8</a></sup></p>
                    <div class="codelisting" id="_code-password_reset_update_action"
                      data-tralics-id="uid1096" data-number="10.52">
                      <div class="heading"><span class="number">Listing 10.52:</span>
                        <span class="description">The <code>update</code>
                          action for password reset.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/password_resets_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">PasswordResetsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:get_user</span><span class="p">,</span>         <span
class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="o">]</span>
  <span class="n">before_action</span> <span class="ss">:valid_user</span><span
class="p">,</span>       <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:check_expiration</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
</span>
  <span class="k">def</span> <span class="nf">new</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:password_reset</span><span
class="o">][</span><span class="ss">:email</span><span class="o">].</span><span
class="n">downcase</span><span class="p">)</span>
    <span class="k">if</span> <span class="vi">@user</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">create_reset_digest</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">send_password_reset_email</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:info</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Email sent with password reset instructions"</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">else</span>
      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s2">"Email address not found"</span>
      <span class="n">render</span> <span class="s1">'new'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">edit</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">update</span>
<span class="hll">    <span class="k">if</span> <span class="n">password_blank?</span>
</span>      <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span
class="o">[</span><span class="ss">:danger</span><span class="o">]</span> <span
class="o">=</span> <span class="s2">"Password can't be blank"</span>
      <span class="n">render</span> <span class="s1">'edit'</span>
<span class="hll">    <span class="k">elsif</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span
class="n">user_params</span><span class="p">)</span>
</span>      <span class="n">log_in</span> <span class="vi">@user</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Password has been reset."</span>
      <span class="n">redirect_to</span> <span class="vi">@user</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'edit'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">user_params</span>
<span class="hll">      <span class="n">params</span><span class="o">.</span><span
class="n">require</span><span class="p">(</span><span class="ss">:user</span><span
class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span
class="ss">:password</span><span class="p">,</span> <span class="ss">:password_confirmation</span><span
class="p">)</span>
</span>    <span class="k">end</span>

    <span class="c1"># Returns true if password is blank.</span>
    <span class="k">def</span> <span class="nf">password_blank?</span>
<span class="hll">      <span class="n">params</span><span class="o">[</span><span
class="ss">:user</span><span class="o">][</span><span class="ss">:password</span><span
class="o">].</span><span class="n">blank?</span>
</span><span class="hll">    <span class="k">end</span>
</span>
    <span class="c1"># Before filters</span>

    <span class="k">def</span> <span class="nf">get_user</span>
      <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">email</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:email</span><span
class="o">]</span><span class="p">)</span>
    <span class="k">end</span>

    <span class="c1"># Confirms a valid user.</span>
    <span class="k">def</span> <span class="nf">valid_user</span>
      <span class="k">unless</span> <span class="p">(</span><span class="vi">@user</span> <span
class="o">&amp;&amp;</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">activated?</span> <span class="o">&amp;&amp;</span>
              <span class="vi">@user</span><span class="o">.</span><span class="n">authenticated?</span><span
class="p">(</span><span class="ss">:reset</span><span class="p">,</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">))</span>
        <span class="n">redirect_to</span> <span class="n">root_url</span>
      <span class="k">end</span>
    <span class="k">end</span>

    <span class="c1"># Checks expiration of reset token.</span>
    <span class="k">def</span> <span class="nf">check_expiration</span>
      <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">password_reset_expired?</span>
<span class="hll">        <span class="n">flash</span><span class="o">[</span><span
class="ss">:danger</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Password reset has expired."</span>
</span><span class="hll">        <span class="n">redirect_to</span> <span class="n">new_password_reset_url</span>
</span><span class="hll">      <span class="k">end</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The implementation in <a href="#code-password_reset_update_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.52</span></a>
                      delegates the boolean test for password reset expiration
                      to the User model via the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span><span class="o">.</span><span
class="n">password_reset_expired?</span>
</pre></div>
                    </div>
                    <p>To get this to work, we need to define the <code>password_reset_expired?</code>
                      method.<span class="intersentencespace"></span> As
                      indicated in the email templates from <a href="#sec-password_reset_mailer"
                        class="hyperref">Section&nbsp;<span class="ref">10.2.3</span></a>,
                      we’ll consider a password reset to be expired if it was
                      sent more than two hours ago, which we can express in Ruby
                      as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">reset_sent_at</span> <span class="o">&lt;</span> <span
class="mi">2</span><span class="o">.</span><span class="n">hours</span><span class="o">.</span><span
class="n">ago</span>
</pre></div>
                    </div>
                    <p>This can be confusing if you read <code>&lt;</code> as
                      “less than”, because then it sounds like “Password reset
                      sent less than two hours ago,” which is the opposite of
                      what we want.<span class="intersentencespace"></span> In
                      this context, it’s better to read <code>&lt;</code> as
                      “earlier than”, which gives something like “Password reset
                      sent earlier than two hours ago.”<span class="intersentencespace"></span>
                      That <em>is</em> what we want, and it leads to the <code>password_reset_expired?</code>
                      method in <a href="#code-user_model_password_reset_expired"
                        class="hyperref">Listing&nbsp;<span class="ref">10.53</span></a>.<span
                        class="intersentencespace"></span> (For a formal
                      demonstration that the comparison is correct, see the
                      proof in <a href="#sec-expiration_proof" class="hyperref">Section&nbsp;<span
                          class="ref">10.6</span></a>.)</p>
                    <div class="codelisting" id="_code-user_model_password_reset_expired"
                      data-tralics-id="uid1097" data-number="10.53">
                      <div class="heading"><span class="number">Listing 10.53:</span>
                        <span class="description">Adding password reset methods
                          to the User model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns true if a password reset has expired.</span>
  <span class="k">def</span> <span class="nf">password_reset_expired?</span>
<span class="hll">    <span class="n">reset_sent_at</span> <span class="o">&lt;</span> <span
class="mi">2</span><span class="o">.</span><span class="n">hours</span><span class="o">.</span><span
class="n">ago</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-user_model_password_reset_expired"
                        class="hyperref">Listing&nbsp;<span class="ref">10.53</span></a>,
                      the <code>update</code> action in <a href="#code-password_reset_update_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.52</span></a>
                      should be working.<span class="intersentencespace"></span>
                      The results for invalid and valid submissions are shown in
                      <a href="#fig-password_reset_failure" class="hyperref">Figure&nbsp;<span
                          class="ref">10.18</span></a> and <a href="#fig-password_reset_success"
                        class="hyperref">Figure&nbsp;<span class="ref">10.19</span></a>,
                      respectively.<span class="intersentencespace"></span>
                      (Lacking the patience to wait two hours, we’ll cover the
                      third branch in a test, which is left as an exercise (<a href="#sec-activation_resets_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">10.5</span></a>).)</p>
                    <div class="center figure" id="_fig-password_reset_failure"
                      data-tralics-id="uid1098" data-number="10.18">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/password_reset_failure.png"
                          alt="images/figures/password_reset_failure"></div>
                      <div class="caption"><span class="header">Figure 10.18: </span><span
                          class="description">A failed password reset. </span></div>
                    </div>
                    <div class="center figure" id="_fig-password_reset_success"
                      data-tralics-id="uid1099" data-number="10.19">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/password_reset_success.png"
                          alt="images/figures/password_reset_success"></div>
                      <div class="caption"><span class="header">Figure 10.19: </span><span
                          class="description">A successful password reset. </span></div>
                    </div>
                  </div>
                  <div id="_sec-password_reset_test" data-tralics-id="uid1100" class="subsection"
                    data-number="10.2.5">
                    <h3><a href="#sec-password_reset_test" class="heading hyperref"><span
                          class="number">10.2.5 </span>Password reset test</a></h3>
                    <p>In this section, we’ll write an integration test covering
                      two of the three branches in <a href="#code-password_reset_update_action"
                        class="hyperref">Listing&nbsp;<span class="ref">10.52</span></a>,
                      invalid and valid submission.<span class="intersentencespace"></span>
                      (As noted above, testing the third branch is left as an
                      exercise.)<span class="intersentencespace"></span> We’ll
                      get started by generating a test file for password resets:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test password_resets
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/password_resets_test.rb</span>
</pre></div>
                    </div>
                    <p>The steps to test password resets broadly parallel the
                      test for account activation from <a href="#code-signup_with_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.31</span></a>,
                      though there is a difference at the outset: we first visit
                      the “forgot password” form and submit invalid and then
                      valid email addresses, the latter of which creates a
                      password reset token and sends the reset email.<span class="intersentencespace"></span>
                      We then visit the link from the email and again submit
                      invalid and valid information, verifying the correct
                      behavior in each case.<span class="intersentencespace"></span>
                      The resulting test, shown in <a href="#code-password_reset_integration_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.54</span></a>,
                      is an excellent exercise in reading code.</p>
                    <div class="codelisting" id="_code-password_reset_integration_test"
                      data-tralics-id="uid1101" data-number="10.54">
                      <div class="heading"><span class="number">Listing 10.54:</span>
                        <span class="description">An integration test for
                          password resets.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/integration/password_resets_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">PasswordResetsTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>
  <span class="k">def</span> <span class="nf">setup</span>
    <span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span
class="o">.</span><span class="n">deliveries</span><span class="o">.</span><span
class="n">clear</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"password resets"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">new_password_reset_path</span>
    <span class="n">assert_template</span> <span class="s1">'password_resets/new'</span>
    <span class="c1"># Invalid email</span>
    <span class="n">post</span> <span class="n">password_resets_path</span><span
class="p">,</span> <span class="ss">password_reset</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">""</span> <span
class="p">}</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_template</span> <span class="s1">'password_resets/new'</span>
    <span class="c1"># Valid email</span>
    <span class="n">post</span> <span class="n">password_resets_path</span><span
class="p">,</span> <span class="ss">password_reset</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span> <span class="p">}</span>
    <span class="n">assert_not_equal</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">reset_digest</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">reload</span><span class="o">.</span><span class="n">reset_digest</span>
    <span class="n">assert_equal</span> <span class="mi">1</span><span class="p">,</span> <span
class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span
class="o">.</span><span class="n">deliveries</span><span class="o">.</span><span
class="n">size</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
    <span class="c1"># Password reset form</span>
    <span class="n">user</span> <span class="o">=</span> <span class="n">assigns</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span>
    <span class="c1"># Wrong email</span>
    <span class="n">get</span> <span class="n">edit_password_reset_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="s2">""</span><span
class="p">)</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
    <span class="c1"># Inactive user</span>
    <span class="n">user</span><span class="o">.</span><span class="n">toggle!</span><span
class="p">(</span><span class="ss">:activated</span><span class="p">)</span>
    <span class="n">get</span> <span class="n">edit_password_reset_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
    <span class="n">user</span><span class="o">.</span><span class="n">toggle!</span><span
class="p">(</span><span class="ss">:activated</span><span class="p">)</span>
    <span class="c1"># Right email, wrong token</span>
    <span class="n">get</span> <span class="n">edit_password_reset_path</span><span
class="p">(</span><span class="s1">'wrong token'</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
    <span class="c1"># Right email, right token</span>
    <span class="n">get</span> <span class="n">edit_password_reset_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">,</span> <span class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">)</span>
    <span class="n">assert_template</span> <span class="s1">'password_resets/edit'</span>
    <span class="n">assert_select</span> <span class="s2">"input[name=email][type=hidden][value=?]"</span><span
class="p">,</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span>
    <span class="c1"># Invalid password &amp; confirmation</span>
    <span class="n">patch</span> <span class="n">password_reset_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">),</span>
          <span class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span>
          <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">password</span><span class="p">:</span>              <span class="s2">"foobaz"</span><span
class="p">,</span>
                  <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"barquux"</span> <span class="p">}</span>
    <span class="n">assert_select</span> <span class="s1">'div#error_explanation'</span>
    <span class="c1"># Blank password</span>
    <span class="n">patch</span> <span class="n">password_reset_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">),</span>
          <span class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span>
          <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">password</span><span class="p">:</span>              <span class="s2">"  "</span><span
class="p">,</span>
                  <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobar"</span> <span class="p">}</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_template</span> <span class="s1">'password_resets/edit'</span>
    <span class="c1"># Valid password &amp; confirmation</span>
    <span class="n">patch</span> <span class="n">password_reset_path</span><span
class="p">(</span><span class="n">user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">),</span>
          <span class="ss">email</span><span class="p">:</span> <span class="n">user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span>
          <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">password</span><span class="p">:</span>              <span class="s2">"foobaz"</span><span
class="p">,</span>
                  <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobaz"</span> <span class="p">}</span>
    <span class="n">assert</span> <span class="n">is_logged_in?</span>
    <span class="n">assert_not</span> <span class="n">flash</span><span class="o">.</span><span
class="n">empty?</span>
    <span class="n">assert_redirected_to</span> <span class="n">user</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Most of the ideas in <a href="#code-password_reset_integration_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.54</span></a>
                      have appeared previously in this tutorial; the only really
                      novel element is the test of the <code>input</code> tag:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_select</span> <span class="s2">"input[name=email][type=hidden][value=?]"</span><span
class="p">,</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span>
</pre></div>
                    </div>
                    <p>This makes sure that there is an <code>input</code> tag
                      with the right name, (hidden) type, and email address:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;input</span> <span class="na">id=</span><span
class="s">"email"</span> <span class="na">name=</span><span class="s">"email"</span> <span
class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span
class="s">"michael@example.com"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>With the code as in <a href="#code-password_reset_integration_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.54</span></a>,
                      our test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1102" data-tralics-id="uid1102"
                      data-number="10.55">
                      <div class="heading"><span class="number">Listing 10.55:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-email_in_production" data-tralics-id="cid68" class="section"
                  data-number="10.3">
                  <h2><a href="#sec-email_in_production" class="heading hyperref"><span
                        class="number">10.3 </span>Email in production</a></h2>
                  <p>As a capstone to our work on account activation and
                    password reminders, in this section we’ll configure our
                    application so that it can actually send email in
                    production.<span class="intersentencespace"></span> We’ll
                    first get set up with a free service to send email, and then
                    configure and deploy our application.</p>
                  <p>To send email in production, we’ll use SendGrid, which is
                    available as an add-on at Heroku for verified accounts.<span
                      class="intersentencespace"></span> (This requires adding
                    credit card information to your Heroku account, but there is
                    no charge when verifying an account.)<span class="intersentencespace"></span>
                    For our purposes, the “starter” tier (which is limited to
                    200 emails a day but costs nothing) is the best fit.<span class="intersentencespace"></span>
                    We can add it to our app as follows:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> heroku addons:add sendgrid:starter
</pre></div>
                  </div>
                  <p>To configure our application to use SendGrid, we need to
                    fill out the <a href="https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"
                      target="_blank">SMTP</a> settings for our production
                    environment.<span class="intersentencespace"></span> As
                    shown in <a href="#code-sendgrid_config" class="hyperref">Listing&nbsp;<span
                        class="ref">10.56</span></a>, you will also have to
                    define a <code>host</code> variable with the address of
                    your production website.</p>
                  <div class="codelisting" id="_code-sendgrid_config" data-tralics-id="uid1103"
                    data-number="10.56">
                    <div class="heading"><span class="number">Listing 10.56:</span>
                      <span class="description">Configuring Rails to use
                        SendGrid in production.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">config/environments/production.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">configure</span> <span
class="k">do</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">raise_delivery_errors</span> <span class="o">=</span> <span
class="kp">true</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">delivery_method</span> <span class="o">=</span> <span
class="ss">:smtp</span>
  <span class="n">host</span> <span class="o">=</span> <span class="s1">'&lt;your heroku app&gt;.herokuapp.com'</span>
  <span class="n">config</span><span class="o">.</span><span class="n">action_mailer</span><span
class="o">.</span><span class="n">default_url_options</span> <span class="o">=</span> <span
class="p">{</span> <span class="ss">host</span><span class="p">:</span> <span class="n">host</span> <span
class="p">}</span>
  <span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span
class="o">.</span><span class="n">smtp_settings</span> <span class="o">=</span> <span
class="p">{</span>
    <span class="ss">:address</span>        <span class="o">=&gt;</span> <span class="s1">'smtp.sendgrid.net'</span><span
class="p">,</span>
    <span class="ss">:port</span>           <span class="o">=&gt;</span> <span class="s1">'587'</span><span
class="p">,</span>
    <span class="ss">:authentication</span> <span class="o">=&gt;</span> <span class="ss">:plain</span><span
class="p">,</span>
    <span class="ss">:user_name</span>      <span class="o">=&gt;</span> <span class="no">ENV</span><span
class="o">[</span><span class="s1">'SENDGRID_USERNAME'</span><span class="o">]</span><span
class="p">,</span>
    <span class="ss">:password</span>       <span class="o">=&gt;</span> <span class="no">ENV</span><span
class="o">[</span><span class="s1">'SENDGRID_PASSWORD'</span><span class="o">]</span><span
class="p">,</span>
    <span class="ss">:domain</span>         <span class="o">=&gt;</span> <span class="s1">'heroku.com'</span><span
class="p">,</span>
    <span class="ss">:enable_starttls_auto</span> <span class="o">=&gt;</span> <span
class="kp">true</span>
  <span class="p">}</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <p>The email configuration in <a href="#code-sendgrid_config"
                      class="hyperref">Listing&nbsp;<span class="ref">10.56</span></a>
                    includes the <code>user_name</code> and <code>password</code>
                    of the SendGrid account, but note that they are accessed via
                    the <code>ENV</code> environment variable instead of being
                    hard-coded.<span class="intersentencespace"></span> This is
                    a best practice for production applications, which for
                    security reasons should never expose sensitive information
                    such as raw passwords in source code.<span class="intersentencespace"></span>
                    In the present case, these variables are configured
                    automatically via the SendGrid add-on, but we’ll see an
                    example in <a href="#sec-image_upload_in_production" class="hyperref">Section&nbsp;<span
                        class="ref">11.4.4</span></a> where we’ll have to define
                    them ourselves.<span class="intersentencespace"></span> In
                    case you’re curious, you can view the environment variables
                    used in <a href="#code-sendgrid_config" class="hyperref">Listing&nbsp;<span
                        class="ref">10.56</span></a> as follows:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> heroku config:get SENDGRID_USERNAME
<span class="gp">$</span> heroku config:get SENDGRID_PASSWORD
</pre></div>
                  </div>
                  <p>At this point, you should merge the topic branch into
                    master:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Add password resets &amp; email configuration"
$ git checkout master
$ git merge account-activation-password-reset
</pre></div>
                  </div>
                  <p>Then push up to the remote repository and deploy to Heroku:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git push
$ git push heroku
$ heroku run rake db:migrate
</pre></div>
                  </div>
                  <p>Once the Heroku deploy has finished, try signing up for the
                    sample application in production using an email address you
                    control.<span class="intersentencespace"></span> You should
                    get an activation email as implemented in <a href="#sec-account_activations_resource"
                      class="hyperref">Section&nbsp;<span class="ref">10.1.1</span></a>
                    (<a href="#fig-activation_email_production" class="hyperref">Figure&nbsp;<span
                        class="ref">10.20</span></a>).<span class="intersentencespace"></span>
                    If you then forget (or pretend to forget) your password, you
                    can reset it as developed in <a href="#sec-password_reset"
                      class="hyperref">Section&nbsp;<span class="ref">10.2</span></a>
                    (<a href="#fig-reset_email_production" class="hyperref">Figure&nbsp;<span
                        class="ref">10.21</span></a>).</p>
                  <div class="center figure" id="_fig-activation_email_production"
                    data-tralics-id="uid1104" data-number="10.20">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/activation_email_production.png"
                        alt="images/figures/activation_email_production"></div>
                    <div class="caption"><span class="header">Figure 10.20: </span><span
                        class="description">An account activation email sent in
                        production. </span></div>
                  </div>
                  <div class="center figure" id="_fig-reset_email_production" data-tralics-id="uid1105"
                    data-number="10.21">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/reset_email_production.png"
                        alt="images/figures/reset_email_production"></div>
                    <div class="caption"><span class="header">Figure 10.21: </span><span
                        class="description">A password reset email sent in
                        production. </span></div>
                  </div>
                </div>
                <div id="_sec-activation_resets_conclusion" data-tralics-id="cid69"
                  class="section" data-number="10.4">
                  <h2><a href="#sec-activation_resets_conclusion" class="heading hyperref"><span
                        class="number">10.4 </span>Висновок</a></h2>
                  <p>With the added account activation and password resets, our
                    sample application’s sign up, log in, and log out machinery
                    is complete and professional-grade.<span class="intersentencespace"></span>
                    The rest of the <em>Ruby on Rails Tutorial</em> builds on
                    this foundation to make a site with Twitter-like microposts
                    (<a href="#cha-user_microposts" class="hyperref">Chapter&nbsp;<span
                        class="ref">11</span></a>) and a status feed of posts
                    from followed users (<a href="#cha-following_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">12</span></a>).<span class="intersentencespace"></span>
                    In the process, we’ll learn about some of the most powerful
                    features of Rails, including image upload, custom database
                    queries, and advanced data modeling with <code>has_many</code>
                    and <code>has_many :through</code>.</p>
                  <div id="_sec-activation_resets_what_we_learned_in_this_chapter"
                    data-tralics-id="uid1106" class="subsection" data-number="10.4.1">
                    <h3><a href="#sec-activation_resets_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">10.4.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Like sessions, account activations can be modeled as a
                        resource despite not being Active Record objects. </li>
                      <li>Rails can generate Active Mailer actions and views to
                        send email. </li>
                      <li>Action Mailer supports both plain-text and HTML mail.
                      </li>
                      <li>As with ordinary actions and views, instance variables
                        defined in mailer actions are available in mailer views.
                      </li>
                      <li>Like sessions and account activations, password resets
                        can be modeled as a resource despite not being Active
                        Record objects. </li>
                      <li>Account activations and password resets use a
                        generated token to create a unique URL for activating
                        users or resetting passwords, respectively. </li>
                      <li>Both mailer tests and integration tests are useful for
                        verifying the behavior of the User mailer. </li>
                      <li>We can send email in production using SendGrid. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-activation_resets_exercises" data-tralics-id="cid70"
                  class="section" data-number="10.5">
                  <h2><a href="#sec-activation_resets_exercises" class="heading hyperref"><span
                        class="number">10.5 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>Write an integration test for the expired password reset
                      branch in <a href="#code-password_reset_update_action" class="hyperref">Listing&nbsp;<span
                          class="ref">10.52</span></a> by filling in the
                      template shown in <a href="#code-password_reset_expire_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.57</span></a>.<span
                        class="intersentencespace"></span> (This code introduces
                      <code>response.body</code>, which returns the full HTML
                      body of the page.)<span class="intersentencespace"></span>
                      There are many ways to test for the result of an
                      expiration, but the method suggested by <a href="#code-password_reset_expire_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.57</span></a>
                      is to (case-insensitively) check that the response body
                      includes the word “expired”. </li>
                    <li>Right now <em>all</em> users are displayed on the user
                      index page at /users and are visible via the URL
                      /users/:id, but it makes sense to show users only if they
                      are activated.<span class="intersentencespace"></span>
                      Arrange for this behavior by filling in the template shown
                      in <a href="#code-show_only_active_users_exercise" class="hyperref">Listing&nbsp;<span
                          class="ref">10.58</span></a>.<sup id="_cha-10_footnote-ref-9"
                        class="footnote"><a href="#cha-10_footnote-9">9</a></sup><span
                        class="intersentencespace"></span> (This uses the Active
                      Record <code>where</code> method, which we’ll learn more
                      about in <a href="#sec-a_proto_feed" class="hyperref">Section&nbsp;<span
                          class="ref">11.3.3</span></a>.)<span class="intersentencespace"></span>
                      <em>Extra credit</em>: Write integration tests for both
                      /users and /users/:id. </li>
                    <li>In <a href="#code-user_model_password_reset" class="hyperref">Listing&nbsp;<span
                          class="ref">10.42</span></a>, both the <code>activate</code>
                      and <code>create_reset_digest</code> methods make two
                      calls to <code>update_attribute</code>, each of which
                      requires a separate database transaction.<span class="intersentencespace"></span>
                      By filling in the template shown in <a href="#code-update_columns"
                        class="hyperref">Listing&nbsp;<span class="ref">10.59</span></a>,
                      replace each pair of <code>update_attribute</code> calls
                      with a single call to <code>update_columns</code>, which
                      hits the database only once.<span class="intersentencespace"></span>
                      After making the changes, verify that the test suite is
                      still <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>.
                    </li>
                  </ol>
                  <div class="codelisting" id="_code-password_reset_expire_test"
                    data-tralics-id="uid1119" data-number="10.57">
                    <div class="heading"><span class="number">Listing 10.57:</span>
                      <span class="description">A test for an expired password
                        reset.<span class="intersentencespace"></span> <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span><span class="break"></span>
                        <span class="filepath">test/integration/password_resets_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">PasswordResetsTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="no">ActionMailer</span><span class="o">::</span><span class="no">Base</span><span
class="o">.</span><span class="n">deliveries</span><span class="o">.</span><span
class="n">clear</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"expired token"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">new_password_reset_path</span>
    <span class="n">post</span> <span class="n">password_resets_path</span><span
class="p">,</span> <span class="ss">password_reset</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span> <span class="p">}</span>

    <span class="vi">@user</span> <span class="o">=</span> <span class="n">assigns</span><span
class="p">(</span><span class="ss">:user</span><span class="p">)</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">update_attribute</span><span
class="p">(</span><span class="ss">:reset_sent_at</span><span class="p">,</span> <span
class="mi">3</span><span class="o">.</span><span class="n">hours</span><span class="o">.</span><span
class="n">ago</span><span class="p">)</span>
    <span class="n">patch</span> <span class="n">password_reset_path</span><span
class="p">(</span><span class="vi">@user</span><span class="o">.</span><span class="n">reset_token</span><span
class="p">),</span>
          <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span><span class="p">,</span>
          <span class="ss">user</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">password</span><span class="p">:</span>              <span class="s2">"foobar"</span><span
class="p">,</span>
                  <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobar"</span> <span class="p">}</span>
    <span class="n">assert_response</span> <span class="ss">:redirect</span>
    <span class="n">follow_redirect!</span>
<span class="hll">    <span class="n">assert_match</span> <span class="sr">/FILL_IN/i</span><span
class="p">,</span> <span class="n">response</span><span class="o">.</span><span
class="n">body</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-show_only_active_users_exercise"
                    data-tralics-id="uid1120" data-number="10.58">
                    <div class="heading"><span class="number">Listing 10.58:</span>
                      <span class="description">A template for code to show only
                        active users.<span class="intersentencespace"></span> <span
                          class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span>
                      </span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">index</span>
<span class="hll">    <span class="vi">@users</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">where</span><span
class="p">(</span><span class="ss">activated</span><span class="p">:</span> <span
class="no">FILL_IN</span><span class="p">)</span><span class="o">.</span><span class="n">paginate</span><span
class="p">(</span><span class="ss">page</span><span class="p">:</span> <span class="n">params</span><span
class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="hll">    <span class="n">redirect_to</span> <span class="n">root_url</span> <span
class="ow">and</span> <span class="k">return</span> <span class="k">unless</span> <span
class="no">FILL_IN</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-update_columns" data-tralics-id="uid1121"
                    data-number="10.59">
                    <div class="heading"><span class="number">Listing 10.59:</span>
                      <span class="description">A template for using <code>update_columns</code>.<span
                          class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">app/models/user.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="kp">attr_accessor</span> <span class="ss">:remember_token</span><span
class="p">,</span> <span class="ss">:activation_token</span><span class="p">,</span> <span
class="ss">:reset_token</span>
  <span class="n">before_save</span>   <span class="ss">:downcase_email</span>
  <span class="n">before_create</span> <span class="ss">:create_activation_digest</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Activates an account.</span>
  <span class="k">def</span> <span class="nf">activate</span>
<span class="hll">    <span class="n">update_columns</span><span class="p">(</span><span
class="ss">activated</span><span class="p">:</span> <span class="no">FILL_IN</span><span
class="p">,</span> <span class="ss">activated_at</span><span class="p">:</span> <span
class="no">FILL_IN</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Sends activation email.</span>
  <span class="k">def</span> <span class="nf">send_activation_email</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">account_activation</span><span
class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span
class="n">deliver_now</span>
  <span class="k">end</span>

  <span class="c1"># Sets the password reset attributes.</span>
  <span class="k">def</span> <span class="nf">create_reset_digest</span>
    <span class="nb">self</span><span class="o">.</span><span class="n">reset_token</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
<span class="hll">    <span class="n">update_columns</span><span class="p">(</span><span
class="ss">reset_digest</span><span class="p">:</span>  <span class="no">FILL_IN</span><span
class="p">,</span>
</span><span class="hll">                   <span class="ss">reset_sent_at</span><span
class="p">:</span> <span class="no">FILL_IN</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Sends password reset email.</span>
  <span class="k">def</span> <span class="nf">send_password_reset_email</span>
    <span class="no">UserMailer</span><span class="o">.</span><span class="n">password_reset</span><span
class="p">(</span><span class="nb">self</span><span class="p">)</span><span class="o">.</span><span
class="n">deliver_now</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="c1"># Converts email to all lower-case.</span>
    <span class="k">def</span> <span class="nf">downcase_email</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">email</span> <span
class="o">=</span> <span class="n">email</span><span class="o">.</span><span class="n">downcase</span>
    <span class="k">end</span>

    <span class="c1"># Creates and assigns the activation token and digest.</span>
    <span class="k">def</span> <span class="nf">create_activation_digest</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">activation_token</span>  <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new_token</span>
      <span class="nb">self</span><span class="o">.</span><span class="n">activation_digest</span> <span
class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">digest</span><span
class="p">(</span><span class="n">activation_token</span><span class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-expiration_proof" data-tralics-id="cid71" class="section"
                  data-number="10.6">
                  <h2><a href="#sec-expiration_proof" class="heading hyperref"><span
                        class="number">10.6 </span>Proof of expiration
                      comparison</a></h2>
                  <p>In this section, we’ll prove that the comparison for
                    password expiration in <a href="#sec-resetting_the_password"
                      class="hyperref">Section&nbsp;<span class="ref">10.2.4</span></a>
                    is correct.<span class="intersentencespace"></span> We start
                    by defining two time intervals.<span class="intersentencespace"></span>
                    Let <span class="inline_math"><span class="MathJax_Preview"
                        style="color: inherit;"></span><span class="MathJax" id="MathJax-Element-3-Frame"><nobr><span
                            class="math" id="MathJax-Span-30" role="math" style="width: 1.68em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 1.575em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-31"><span class="mi"
                                    id="MathJax-Span-32" style="font-family: MathJax_Main;">Δ</span><span
                                    class="msubsup" id="MathJax-Span-33"><span style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                          class="mi" id="MathJax-Span-34" style="font-family: MathJax_Math-italic;">t</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                          class="mi" id="MathJax-Span-35" style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.058em; vertical-align: -0.219em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-3"> \Delta t_r </script></span>
                    be the time interval since sending the password reset and <span
                      class="inline_math"><span class="MathJax_Preview" style="color: inherit;"></span><span
                        class="MathJax" id="MathJax-Element-4-Frame"><nobr><span
                            class="math" id="MathJax-Span-36" role="math" style="width: 1.68em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 1.575em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-37"><span class="mi"
                                    id="MathJax-Span-38" style="font-family: MathJax_Main;">Δ</span><span
                                    class="msubsup" id="MathJax-Span-39"><span style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                          class="mi" id="MathJax-Span-40" style="font-family: MathJax_Math-italic;">t</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                          class="mi" id="MathJax-Span-41" style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.058em; vertical-align: -0.219em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-4"> \Delta t_e </script></span>
                    be the expiration time limit (e.g., two hours).<span class="intersentencespace"></span>
                    A password reset has expired if the time interval since the
                    reset was sent is greater than the expiration limit:</p>
                  <div id="_eq-time_delta" data-tralics-id="uid1122" data-number="10.1"
                    class="equation"><span class="MathJax_Preview" style="color: inherit;"></span>
                    <div class="MathJax_Display"><span class="MathJax" id="MathJax-Element-5-Frame"><nobr><span
                            class="math" id="MathJax-Span-42" role="math" style="width: 100%; display: inline-block; min-width: 18.504em;"><span
                              style="display: inline-block; position: relative; width: 100%; height: 0px; font-size: 106%; min-width: 18.504em;"><span
                                style="position: absolute; clip: rect(3.042em 1000.003em 4.405em -999.997em); top: -3.981em; left: 0.003em; width: 100%;"><span
                                  class="mrow" id="MathJax-Span-43"><span class="mtable"
                                    id="MathJax-Span-44" style="min-width: 19.604em;"><span
                                      style="display: inline-block; position: relative; width: 100%; height: 0px; min-width: 18.504em;"><span
                                        style="display: inline-block; position: absolute; width: 4.772em; height: 0px; clip: rect(-0.941em 1000.003em 0.422em -999.997em); top: 0.003em; left: 50%; margin-left: -2.408em;"><span
                                          style="position: absolute; clip: rect(3.147em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            style="display: inline-block; position: relative; width: 4.772em; height: 0px;"><span
                                              style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -3.981em; left: 50%; margin-left: -2.408em;"><span
                                                class="mtd" id="MathJax-Span-48"><span
                                                  class="mrow" id="MathJax-Span-49"><span
                                                    class="mi" id="MathJax-Span-50"
                                                    style="font-family: MathJax_Main;">Δ</span><span
                                                    class="msubsup" id="MathJax-Span-51"><span
                                                      style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-52"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-53"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-54"
                                                    style="font-family: MathJax_Main; padding-left: 0.265em;">&gt;</span><span
                                                    class="mi" id="MathJax-Span-55"
                                                    style="font-family: MathJax_Main; padding-left: 0.265em;">Δ</span><span
                                                    class="msubsup" id="MathJax-Span-56"><span
                                                      style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-57"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-58"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-59"
                                                    style="font-family: MathJax_Main;">.</span></span></span><span
                                                style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                        style="display: inline-block; position: absolute; width: 5.82em; height: 0px; clip: rect(-0.888em 1000.003em 0.422em -999.997em); top: 0.003em; right: 0.003em; margin-left: 0.789em; margin-right: 0.789em;"><span
                                          style="position: absolute; clip: rect(3.095em 1000.003em 4.405em -999.997em); top: -3.981em; right: 0.003em;"><span
                                            class="mtd" id="mjx-eqn-eqtime_delta"><span
                                              class="mrow" id="MathJax-Span-46"><span
                                                class="mtext" id="MathJax-Span-47"
                                                style="font-family: MathJax_Main;">(undefined.1)</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.225em; vertical-align: -0.331em;"></span></span></nobr></span></div>
                    <script type="math/tex; mode=display" id="MathJax-Element-5">\begin{equation}
\label{eq:time_delta}
\Delta t_r > \Delta t_e.
\end{equation}</script> </div>
                  <p>If we write the time now as <span class="inline_math"><span
                        class="MathJax_Preview" style="color: inherit;"></span><span
                        class="MathJax" id="MathJax-Element-6-Frame"><nobr><span
                            class="math" id="MathJax-Span-60" role="math" style="width: 1.103em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 1.051em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-61"><span class="msubsup"
                                    id="MathJax-Span-62"><span style="display: inline-block; position: relative; width: 1.051em; height: 0px;"><span
                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                          class="mi" id="MathJax-Span-63" style="font-family: MathJax_Math-italic;">t</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                          class="mi" id="MathJax-Span-64" style="font-size: 70.7%; font-family: MathJax_Math-italic;">N<span
                                            style="display: inline-block; overflow: hidden; height: 1px; width: 0.055em;"></span></span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.947em; vertical-align: -0.219em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-6"> t_N </script></span>,
                    the password reset sending time as <span class="inline_math"><span
                        class="MathJax_Preview" style="color: inherit;"></span><span
                        class="MathJax" id="MathJax-Element-7-Frame"><nobr><span
                            class="math" id="MathJax-Span-65" role="math" style="width: 0.789em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 0.736em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-66"><span class="msubsup"
                                    id="MathJax-Span-67"><span style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                          class="mi" id="MathJax-Span-68" style="font-family: MathJax_Math-italic;">t</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                          class="mi" id="MathJax-Span-69" style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.947em; vertical-align: -0.219em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-7"> t_r </script></span>,
                    and the expiration time as <span class="inline_math"><span
                        class="MathJax_Preview" style="color: inherit;"></span><span
                        class="MathJax" id="MathJax-Element-8-Frame"><nobr><span
                            class="math" id="MathJax-Span-70" role="math" style="width: 0.841em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 0.789em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-71"><span class="msubsup"
                                    id="MathJax-Span-72"><span style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                          class="mi" id="MathJax-Span-73" style="font-family: MathJax_Math-italic;">t</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                          class="mi" id="MathJax-Span-74" style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.947em; vertical-align: -0.219em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-8"> t_e </script></span>
                    (e.g., two hours ago), then we have</p>
                  <div id="_eq-delta_p" data-tralics-id="uid1123" data-number="10.2"
                    class="equation"><span class="MathJax_Preview" style="color: inherit;"></span>
                    <div class="MathJax_Display"><span class="MathJax" id="MathJax-Element-9-Frame"><nobr><span
                            class="math" id="MathJax-Span-75" role="math" style="width: 100%; display: inline-block; min-width: 19.552em;"><span
                              style="display: inline-block; position: relative; width: 100%; height: 0px; font-size: 106%; min-width: 19.552em;"><span
                                style="position: absolute; clip: rect(3.042em 1000.003em 4.405em -999.997em); top: -3.981em; left: 0.003em; width: 100%;"><span
                                  class="mrow" id="MathJax-Span-76"><span class="mtable"
                                    id="MathJax-Span-77" style="min-width: 20.757em;"><span
                                      style="display: inline-block; position: relative; width: 100%; height: 0px; min-width: 19.552em;"><span
                                        style="display: inline-block; position: absolute; width: 5.925em; height: 0px; clip: rect(-0.941em 1000.003em 0.422em -999.997em); top: 0.003em; left: 50%; margin-left: -2.932em;"><span
                                          style="position: absolute; clip: rect(3.147em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            style="display: inline-block; position: relative; width: 5.925em; height: 0px;"><span
                                              style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -3.981em; left: 50%; margin-left: -2.932em;"><span
                                                class="mtd" id="MathJax-Span-81"><span
                                                  class="mrow" id="MathJax-Span-82"><span
                                                    class="mi" id="MathJax-Span-83"
                                                    style="font-family: MathJax_Main;">Δ</span><span
                                                    class="msubsup" id="MathJax-Span-84"><span
                                                      style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-85"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-86"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-87"
                                                    style="font-family: MathJax_Main; padding-left: 0.265em;">=</span><span
                                                    class="msubsup" id="MathJax-Span-88"
                                                    style="padding-left: 0.265em;"><span
                                                      style="display: inline-block; position: relative; width: 1.051em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-89"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-90"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">N<span
                                                            style="display: inline-block; overflow: hidden; height: 1px; width: 0.055em;"></span></span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-91"
                                                    style="font-family: MathJax_Main; padding-left: 0.212em;">−</span><span
                                                    class="msubsup" id="MathJax-Span-92"
                                                    style="padding-left: 0.212em;"><span
                                                      style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-93"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-94"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                                style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                        style="display: inline-block; position: absolute; width: 5.82em; height: 0px; clip: rect(-0.888em 1000.003em 0.422em -999.997em); top: 0.003em; right: 0.003em; margin-left: 0.789em; margin-right: 0.789em;"><span
                                          style="position: absolute; clip: rect(3.095em 1000.003em 4.405em -999.997em); top: -3.981em; right: 0.003em;"><span
                                            class="mtd" id="mjx-eqn-eqdelta_p"><span
                                              class="mrow" id="MathJax-Span-79"><span
                                                class="mtext" id="MathJax-Span-80"
                                                style="font-family: MathJax_Main;">(undefined.2)</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.225em; vertical-align: -0.331em;"></span></span></nobr></span></div>
                    <script type="math/tex; mode=display" id="MathJax-Element-9">\begin{equation}
\label{eq:delta_p}
\Delta t_r = t_N - t_r
\end{equation}</script> </div>
                  <p>and</p>
                  <div id="_eq-delta_e" data-tralics-id="uid1124" data-number="10.3"
                    class="equation"><span class="MathJax_Preview" style="color: inherit;"></span>
                    <div class="MathJax_Display"><span class="MathJax" id="MathJax-Element-10-Frame"><nobr><span
                            class="math" id="MathJax-Span-95" role="math" style="width: 100%; display: inline-block; min-width: 19.866em;"><span
                              style="display: inline-block; position: relative; width: 100%; height: 0px; font-size: 106%; min-width: 19.866em;"><span
                                style="position: absolute; clip: rect(3.042em 1000.003em 4.405em -999.997em); top: -3.981em; left: 0.003em; width: 100%;"><span
                                  class="mrow" id="MathJax-Span-96"><span class="mtable"
                                    id="MathJax-Span-97" style="min-width: 21.019em;"><span
                                      style="display: inline-block; position: relative; width: 100%; height: 0px; min-width: 19.866em;"><span
                                        style="display: inline-block; position: absolute; width: 6.24em; height: 0px; clip: rect(-0.941em 1000.003em 0.422em -999.997em); top: 0.003em; left: 50%; margin-left: -3.09em;"><span
                                          style="position: absolute; clip: rect(3.147em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            style="display: inline-block; position: relative; width: 6.24em; height: 0px;"><span
                                              style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -3.981em; left: 50%; margin-left: -3.09em;"><span
                                                class="mtd" id="MathJax-Span-101"><span
                                                  class="mrow" id="MathJax-Span-102"><span
                                                    class="mi" id="MathJax-Span-103"
                                                    style="font-family: MathJax_Main;">Δ</span><span
                                                    class="msubsup" id="MathJax-Span-104"><span
                                                      style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-105"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-106"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-107"
                                                    style="font-family: MathJax_Main; padding-left: 0.265em;">=</span><span
                                                    class="msubsup" id="MathJax-Span-108"
                                                    style="padding-left: 0.265em;"><span
                                                      style="display: inline-block; position: relative; width: 1.051em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-109"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-110"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">N<span
                                                            style="display: inline-block; overflow: hidden; height: 1px; width: 0.055em;"></span></span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-111"
                                                    style="font-family: MathJax_Main; padding-left: 0.212em;">−</span><span
                                                    class="msubsup" id="MathJax-Span-112"
                                                    style="padding-left: 0.212em;"><span
                                                      style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-113"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-114"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-115"
                                                    style="font-family: MathJax_Main;">.</span></span></span><span
                                                style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                        style="display: inline-block; position: absolute; width: 5.82em; height: 0px; clip: rect(-0.888em 1000.003em 0.422em -999.997em); top: 0.003em; right: 0.003em; margin-left: 0.789em; margin-right: 0.789em;"><span
                                          style="position: absolute; clip: rect(3.095em 1000.003em 4.405em -999.997em); top: -3.981em; right: 0.003em;"><span
                                            class="mtd" id="mjx-eqn-eqdelta_e"><span
                                              class="mrow" id="MathJax-Span-99"><span
                                                class="mtext" id="MathJax-Span-100"
                                                style="font-family: MathJax_Main;">(undefined.3)</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.225em; vertical-align: -0.331em;"></span></span></nobr></span></div>
                    <script type="math/tex; mode=display" id="MathJax-Element-10">\begin{equation}
\label{eq:delta_e}
\Delta t_e = t_N - t_e.
\end{equation}</script> </div>
                  <p>Plugging <a href="#eq-delta_p" class="hyperref">Eq.&nbsp;(<span
                        class="ref">10.2</span>)</a> and <a href="#eq-delta_e"
                      class="hyperref">Eq.&nbsp;(<span class="ref">10.3</span>)</a>
                    into <a href="#eq-time_delta" class="hyperref">(<span class="ref">10.1</span>)</a>
                    then gives</p>
                  <div class="equation"><span class="MathJax_Preview" style="color: inherit;"></span>
                    <div class="MathJax_Display" style="text-align: center;"><span
                        class="MathJax" id="MathJax-Element-11-Frame"><nobr><span
                            class="math" id="MathJax-Span-116" role="math" style="width: 9.751em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 9.175em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(2.518em 1000.003em 6.606em -999.997em); top: -4.819em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-117"><span class="mtable"
                                    id="MathJax-Span-118" style="padding-right: 0.16em; padding-left: 0.16em;"><span
                                      style="display: inline-block; position: relative; width: 8.808em; height: 0px;"><span
                                        style="position: absolute; clip: rect(2.466em 1000.003em 6.449em -999.997em); top: -4.662em; left: 0.003em;"><span
                                          style="display: inline-block; position: relative; width: 3.042em; height: 0px;"><span
                                            style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -5.343em; right: 0.003em;"><span
                                              class="mtd" id="MathJax-Span-119"><span
                                                class="mrow" id="MathJax-Span-120"><span
                                                  class="mi" id="MathJax-Span-121"
                                                  style="font-family: MathJax_Main;">Δ</span><span
                                                  class="msubsup" id="MathJax-Span-122"><span
                                                    style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-123"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-124"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                            style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -3.928em; right: 0.003em;"><span
                                              class="mtd" id="MathJax-Span-134"><span
                                                class="mrow" id="MathJax-Span-135"><span
                                                  class="msubsup" id="MathJax-Span-136"><span
                                                    style="display: inline-block; position: relative; width: 1.051em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-137"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-138"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">N<span
                                                          style="display: inline-block; overflow: hidden; height: 1px; width: 0.055em;"></span></span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                  class="mo" id="MathJax-Span-139"
                                                  style="font-family: MathJax_Main; padding-left: 0.212em;">−</span><span
                                                  class="msubsup" id="MathJax-Span-140"
                                                  style="padding-left: 0.212em;"><span
                                                    style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-141"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-142"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                            style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -2.513em; right: 0.003em;"><span
                                              class="mtd" id="MathJax-Span-155"><span
                                                class="mrow" id="MathJax-Span-156"><span
                                                  class="mo" id="MathJax-Span-157"
                                                  style="font-family: MathJax_Main;">−</span><span
                                                  class="msubsup" id="MathJax-Span-158"><span
                                                    style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-159"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-160"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                          style="display: inline-block; width: 0px; height: 4.667em;"></span></span><span
                                        style="position: absolute; clip: rect(2.361em 1000.003em 6.03em -999.997em); top: -4.4em; left: 4.038em;"><span
                                          style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                            style="position: absolute; clip: rect(3.305em 1000.003em 4.195em -999.997em); top: -5.343em; left: 50%; margin-left: -0.364em;"><span
                                              class="mtd" id="MathJax-Span-125"><span
                                                class="mrow" id="MathJax-Span-126"><span
                                                  class="mo" id="MathJax-Span-127"
                                                  style="font-family: MathJax_Main;">&gt;</span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                            style="position: absolute; clip: rect(3.305em 1000.003em 4.195em -999.997em); top: -3.928em; left: 50%; margin-left: -0.364em;"><span
                                              class="mtd" id="MathJax-Span-143"><span
                                                class="mrow" id="MathJax-Span-144"><span
                                                  class="mo" id="MathJax-Span-145"
                                                  style="font-family: MathJax_Main;">&gt;</span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                            style="position: absolute; clip: rect(3.305em 1000.003em 4.195em -999.997em); top: -2.513em; left: 50%; margin-left: -0.364em;"><span
                                              class="mtd" id="MathJax-Span-161"><span
                                                class="mrow" id="MathJax-Span-162"><span
                                                  class="mo" id="MathJax-Span-163"
                                                  style="font-family: MathJax_Main;">&gt;</span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                          style="display: inline-block; width: 0px; height: 4.405em;"></span></span><span
                                        style="position: absolute; clip: rect(2.518em 1000.003em 6.502em -999.997em); top: -4.714em; left: 5.82em;"><span
                                          style="display: inline-block; position: relative; width: 3.042em; height: 0px;"><span
                                            style="position: absolute; clip: rect(3.095em 1000.003em 4.3em -999.997em); top: -5.343em; left: 0.003em;"><span
                                              class="mtd" id="MathJax-Span-128"><span
                                                class="mrow" id="MathJax-Span-129"><span
                                                  class="mi" id="MathJax-Span-130"
                                                  style="font-family: MathJax_Main;">Δ</span><span
                                                  class="msubsup" id="MathJax-Span-131"><span
                                                    style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-132"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-133"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                            style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -3.928em; left: 0.003em;"><span
                                              class="mtd" id="MathJax-Span-146"><span
                                                class="mrow" id="MathJax-Span-147"><span
                                                  class="msubsup" id="MathJax-Span-148"><span
                                                    style="display: inline-block; position: relative; width: 1.051em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-149"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-150"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">N<span
                                                          style="display: inline-block; overflow: hidden; height: 1px; width: 0.055em;"></span></span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                  class="mo" id="MathJax-Span-151"
                                                  style="font-family: MathJax_Main; padding-left: 0.212em;">−</span><span
                                                  class="msubsup" id="MathJax-Span-152"
                                                  style="padding-left: 0.212em;"><span
                                                    style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-153"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-154"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                            style="position: absolute; clip: rect(3.2em 1000.003em 4.353em -999.997em); top: -2.513em; left: 0.003em;"><span
                                              class="mtd" id="MathJax-Span-164"><span
                                                class="mrow" id="MathJax-Span-165"><span
                                                  class="mo" id="MathJax-Span-166"
                                                  style="font-family: MathJax_Main;">−</span><span
                                                  class="msubsup" id="MathJax-Span-167"><span
                                                    style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                      style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                        class="mi" id="MathJax-Span-168"
                                                        style="font-family: MathJax_Math-italic;">t</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                      style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                        class="mi" id="MathJax-Span-169"
                                                        style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                        style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                  class="mo" id="MathJax-Span-170"
                                                  style="font-family: MathJax_Main;">,</span></span></span><span
                                              style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                          style="display: inline-block; width: 0px; height: 4.72em;"></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 4.824em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 4.169em; vertical-align: -1.775em;"></span></span></nobr></span></div>
                    <script type="math/tex; mode=display" id="MathJax-Element-11"> 
\begin{array}{rcl}
\Delta t_r & > & \Delta t_e \\
t_N - t_r & > & t_N - t_e \\
-t_r & > & -t_e,
\end{array}
 </script> </div>
                  <p>which upon multiplying through by <span class="inline_math"><span
                        class="MathJax_Preview" style="color: inherit;"></span><span
                        class="MathJax" id="MathJax-Element-12-Frame"><nobr><span
                            class="math" id="MathJax-Span-171" role="math" style="width: 1.365em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 1.26em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.147em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-172"><span class="mo"
                                    id="MathJax-Span-173" style="font-family: MathJax_Main;">−</span><span
                                    class="mn" id="MathJax-Span-174" style="font-family: MathJax_Main;">1</span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 0.836em; vertical-align: -0.053em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-12"> -1 </script></span>
                    yields</p>
                  <div id="_eq-time_comparison" data-tralics-id="uid1125" data-number="10.4"
                    class="equation"><span class="MathJax_Preview" style="color: inherit;"></span>
                    <div class="MathJax_Display"><span class="MathJax" id="MathJax-Element-13-Frame"><nobr><span
                            class="math" id="MathJax-Span-175" role="math" style="width: 100%; display: inline-block; min-width: 16.931em;"><span
                              style="display: inline-block; position: relative; width: 100%; height: 0px; font-size: 106%; min-width: 16.931em;"><span
                                style="position: absolute; clip: rect(3.042em 1000.003em 4.405em -999.997em); top: -3.981em; left: 0.003em; width: 100%;"><span
                                  class="mrow" id="MathJax-Span-176"><span class="mtable"
                                    id="MathJax-Span-177" style="min-width: 17.927em;"><span
                                      style="display: inline-block; position: relative; width: 100%; height: 0px; min-width: 16.931em;"><span
                                        style="display: inline-block; position: absolute; width: 3.095em; height: 0px; clip: rect(-0.941em 1000.003em 0.422em -999.997em); top: 0.003em; left: 50%; margin-left: -1.57em;"><span
                                          style="position: absolute; clip: rect(3.252em 1000.003em 4.3em -999.997em); top: -3.981em; left: 0.003em;"><span
                                            style="display: inline-block; position: relative; width: 3.095em; height: 0px;"><span
                                              style="position: absolute; clip: rect(3.2em 1000.003em 4.3em -999.997em); top: -3.981em; left: 50%; margin-left: -1.57em;"><span
                                                class="mtd" id="MathJax-Span-181"><span
                                                  class="mrow" id="MathJax-Span-182"><span
                                                    class="msubsup" id="MathJax-Span-183"><span
                                                      style="display: inline-block; position: relative; width: 0.736em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-184"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-185"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">r</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-186"
                                                    style="font-family: MathJax_Main; padding-left: 0.265em;">&lt;</span><span
                                                    class="msubsup" id="MathJax-Span-187"
                                                    style="padding-left: 0.265em;"><span
                                                      style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                                          class="mi" id="MathJax-Span-188"
                                                          style="font-family: MathJax_Math-italic;">t</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                                          class="mi" id="MathJax-Span-189"
                                                          style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                                    class="mo" id="MathJax-Span-190"
                                                    style="font-family: MathJax_Main;">.</span></span></span><span
                                                style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                                        style="display: inline-block; position: absolute; width: 5.82em; height: 0px; clip: rect(-0.888em 1000.003em 0.422em -999.997em); top: 0.003em; right: 0.003em; margin-left: 0.789em; margin-right: 0.789em;"><span
                                          style="position: absolute; clip: rect(3.095em 1000.003em 4.405em -999.997em); top: -3.981em; right: 0.003em;"><span
                                            class="mtd" id="mjx-eqn-eqtime_comparison"><span
                                              class="mrow" id="MathJax-Span-179"><span
                                                class="mtext" id="MathJax-Span-180"
                                                style="font-family: MathJax_Main;">(undefined.4)</span></span></span><span
                                            style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.225em; vertical-align: -0.331em;"></span></span></nobr></span></div>
                    <script type="math/tex; mode=display" id="MathJax-Element-13">\begin{equation}
\label{eq:time_comparison}
t_r < t_e.
\end{equation}</script> </div>
                  <p>Converting <a href="#eq-time_comparison" class="hyperref">(<span
                        class="ref">10.4</span>)</a> to code with the value <span
                      class="inline_math"><span class="MathJax_Preview" style="color: inherit;"></span><span
                        class="MathJax" id="MathJax-Element-14-Frame"><nobr><span
                            class="math" id="MathJax-Span-191" role="math" style="width: 7.393em; display: inline-block;"><span
                              style="display: inline-block; position: relative; width: 6.973em; height: 0px; font-size: 106%;"><span
                                style="position: absolute; clip: rect(3.147em 1000.003em 4.353em -999.997em); top: -3.981em; left: 0.003em;"><span
                                  class="mrow" id="MathJax-Span-192"><span class="msubsup"
                                    id="MathJax-Span-193"><span style="display: inline-block; position: relative; width: 0.789em; height: 0px;"><span
                                        style="position: absolute; clip: rect(3.2em 1000.003em 4.143em -999.997em); top: -3.981em; left: 0.003em;"><span
                                          class="mi" id="MathJax-Span-194" style="font-family: MathJax_Math-italic;">t</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span><span
                                        style="position: absolute; top: -3.823em; left: 0.369em;"><span
                                          class="mi" id="MathJax-Span-195" style="font-size: 70.7%; font-family: MathJax_Math-italic;">e</span><span
                                          style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span></span><span
                                    class="mo" id="MathJax-Span-196" style="font-family: MathJax_Main; padding-left: 0.265em;">=</span><span
                                    class="texatom" id="MathJax-Span-197" style="padding-left: 0.265em;"><span
                                      class="mrow" id="MathJax-Span-198"><span class="mn"
                                        id="MathJax-Span-199" style="font-family: MathJax_Main;">2</span><span
                                        class="mtext" id="MathJax-Span-200" style="font-family: MathJax_Main;">&nbsp;</span><span
                                        class="mi" id="MathJax-Span-201" style="font-family: MathJax_Main;">h</span><span
                                        class="mi" id="MathJax-Span-202" style="font-family: MathJax_Main;">o</span><span
                                        class="mi" id="MathJax-Span-203" style="font-family: MathJax_Main;">u</span><span
                                        class="mi" id="MathJax-Span-204" style="font-family: MathJax_Main;">r</span><span
                                        class="mi" id="MathJax-Span-205" style="font-family: MathJax_Main;">s</span><span
                                        class="mtext" id="MathJax-Span-206" style="font-family: MathJax_Main;">&nbsp;</span><span
                                        class="mi" id="MathJax-Span-207" style="font-family: MathJax_Main;">a</span><span
                                        class="mi" id="MathJax-Span-208" style="font-family: MathJax_Main;">g</span><span
                                        class="mi" id="MathJax-Span-209" style="font-family: MathJax_Main;">o</span></span></span></span><span
                                  style="display: inline-block; width: 0px; height: 3.986em;"></span></span></span><span
                              style="border-left-width: 0.003em; border-left-style: solid; display: inline-block; overflow: hidden; width: 0px; height: 1.058em; vertical-align: -0.275em;"></span></span></nobr></span>
                      <script type="math/tex" id="MathJax-Element-14"> t_e = \mathrm{2\ hours\ ago} </script></span>
                    gives the <code>password_reset_expired?</code> method shown
                    in <a href="#code-user_model_password_reset_expired" class="hyperref">Listing&nbsp;<span
                        class="ref">10.53</span></a>:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="k">def</span> <span class="nf">password_reset_expired?</span>
  <span class="n">reset_sent_at</span> <span class="o">&lt;</span> <span class="mi">2</span><span
class="o">.</span><span class="n">hours</span><span class="o">.</span><span class="n">ago</span>
<span class="k">end</span>
</pre></div>
                  </div>
                  <p>As noted in <a href="#sec-resetting_the_password" class="hyperref">Section&nbsp;<span
                        class="ref">10.2.4</span></a>, if we read <code>&lt;</code>
                    as “earlier than” instead of “less than”, this code makes
                    sense as the English sentence “The password reset was sent
                    earlier than two hours ago.”</p>
                </div>
                <div id="cha-10_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-10_footnote-1">Technically, a user could update
                      their account with an erroneous email address using the
                      account settings update feature from <a href="#sec-updating_users"
                        class="hyperref">Section&nbsp;<span class="ref">9.1</span></a>,
                      but the current implementation gets us most of the benefit
                      of email verification without too much work.&nbsp;<a class="arrow"
                        href="#cha-10_footnote-ref-1">↑</a></li>
                    <li id="_cha-10_footnote-2">We could use the user’s id
                      instead, since it’s already exposed in the URLs of our
                      application, but using email addresses is more
                      future-proof in case we want to obfuscate user ids for any
                      reason (such as to prevent competitors from knowing how
                      many users our application has, for example).&nbsp;<a class="arrow"
                        href="#cha-10_footnote-ref-2">↑</a></li>
                    <li id="_cha-10_footnote-3">It might even make more sense to
                      use an <code>update</code> action, but the activation
                      link needs to be sent in an email and hence should involve
                      a regular browser click, which issues a <span class="tt">GET</span>
                      request instead of the <span class="tt">PATCH</span>
                      request required by the <code>update</code> action.&nbsp;<a
                        class="arrow" href="#cha-10_footnote-ref-3">↑</a></li>
                    <li id="_cha-10_footnote-4">Because we’ll be using an <code>edit</code>
                      action, we could include <code>edit</code> on the command
                      line, but this would also generate both an edit view and a
                      test, neither of which we’ll turn out to need.&nbsp;<a class="arrow"
                        href="#cha-10_footnote-ref-4">↑</a></li>
                    <li id="_cha-10_footnote-5">For example, an attacker with
                      access to the database could immediately activate newly
                      created accounts, thereby logging in as the user, and
                      could then change the password to gain control.&nbsp;<a class="arrow"
                        href="#cha-10_footnote-ref-5">↑</a></li>
                    <li id="_cha-10_footnote-6">URLs can contain multiple query
                      parameters, consisting of multiple key-value pairs
                      separated by the ampersand character&nbsp;<code>&amp;</code>,
                      as in <code>/edit?name=Foo%20Bar&amp;email=foo%40example.com</code>.&nbsp;<a
                        class="arrow" href="#cha-10_footnote-ref-6">↑</a></li>
                    <li id="_cha-10_footnote-7">The way to learn how to do
                      something like this is by <a href="http://lmgtfy.com/?q=ruby+rails+escape+url"
                        target="_blank">Googling “ruby rails escape url”</a>.<span
                        class="intersentencespace"></span> You will <a href="http://stackoverflow.com/questions/6714196/ruby-url-encoding-string"
                        target="_blank">find two main possibilities</a>, <code>URI::encode(str)</code>
                      and <code>CGI::escape(str)</code>.<span class="intersentencespace"></span>
                      Trying them both reveals that the latter works.<span class="intersentencespace"></span>
                      (Actually, there’s a third possibility as well: the <code>ERB::Util</code>
                      library supplies a <a href="http://apidock.com/ruby/ERB/Util/url_encode"
                        target="_blank">url_encode</a> method that has the same
                      effect.)&nbsp;<a class="arrow" href="#cha-10_footnote-ref-7">↑</a></li>
                    <li id="_cha-10_footnote-8">We need only handle the case
                      where the password is blank because if the confirmation is
                      blank, the confirmation validation (which is skipped if
                      the password is blank) will catch the problem and supply a
                      relevant error message.&nbsp;<a class="arrow" href="#cha-10_footnote-ref-8">↑</a></li>
                    <li id="_cha-10_footnote-9">Note that <a href="#code-show_only_active_users_exercise"
                        class="hyperref">Listing&nbsp;<span class="ref">10.58</span></a>
                      uses <code>and</code> in place of <code>&amp;&amp;</code>.<span
                        class="intersentencespace"></span> The two are nearly
                      identical, but the latter operator has a higher <a href="http://en.wikipedia.org/wiki/Order_of_operations#Programming_languages"
                        target="_blank"><em>precedence</em></a>, which binds too
                      tightly to <code>root_url</code> in this case.<span class="intersentencespace"></span>
                      We could fix the problem by putting <code>root_url</code>
                      in parentheses, but the idiomatically correct way to do it
                      is to use <code>and</code> instead.&nbsp;<a class="arrow"
                        href="#cha-10_footnote-ref-9">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-user_microposts" data-tralics-id="cid72" class="chapter"
                  data-number="11">
                  <h1><a name="cha-user_microposts" class="heading hyperref"><span
                        class="number">Chapter 11 </span>User microposts</a></h1>
                  <p>In the course of developing the core sample application,
                    we’ve now encountered four resources—users, sessions,
                    account activations, and password resets—but only the first
                    of these is backed by an Active Record model with a table in
                    the database.<span class="intersentencespace"></span> The
                    time has finally come to add a second such resource: user <em>microposts</em>,
                    which are short messages associated with a particular user.<sup
                      id="_cha-11_footnote-ref-1" class="footnote"><a href="#cha-11_footnote-1">1</a></sup><span
                      class="intersentencespace"></span> We first saw microposts
                    in larval form in <a href="#cha-a_toy_app" class="hyperref">Chapter&nbsp;<span
                        class="ref">2</span></a>, and in this chapter we will
                    make a full-strength version of the sketch from <a href="#sec-microposts_resource"
                      class="hyperref">Section&nbsp;<span class="ref">2.3</span></a>
                    by constructing the Micropost data model, associating it
                    with the User model using the <code>has_many</code> and <code>belongs_to</code>
                    methods, and then making the forms and partials needed to
                    manipulate and display the results (including, in <a href="#sec-micropost_images"
                      class="hyperref">Section&nbsp;<span class="ref">11.4</span></a>,
                    uploaded images).<span class="intersentencespace"></span> In
                    <a href="#cha-following_users" class="hyperref">Chapter&nbsp;<span
                        class="ref">12</span></a>, we’ll complete our tiny
                    Twitter clone by adding the notion of <em>following</em>
                    users in order to receive a <em>feed</em> of their
                    microposts.</p>
                </div>
                <div id="_sec-a_micropost_model" data-tralics-id="cid73" class="section"
                  data-number="11.1">
                  <h2><a href="#sec-a_micropost_model" class="heading hyperref"><span
                        class="number">11.1 </span>A Micropost model</a></h2>
                  <p>We begin the Microposts resource by creating a Micropost
                    model, which captures the essential characteristics of
                    microposts.<span class="intersentencespace"></span> What
                    follows builds on the work from <a href="#sec-microposts_resource"
                      class="hyperref">Section&nbsp;<span class="ref">2.3</span></a>;
                    as with the model in that section, our new Micropost model
                    will include data validations and an association with the
                    User model.<span class="intersentencespace"></span> Unlike
                    that model, the present Micropost model will be fully
                    tested, and will also have a default <em>ordering</em> and
                    automatic <em>destruction</em> if its parent user is
                    destroyed.</p>
                  <p>If you’re using Git for version control, I suggest making a
                    topic branch at this time:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b user-microposts
</pre></div>
                  </div>
                  <div id="_sec-the_basic_model" data-tralics-id="uid1127" class="subsection"
                    data-number="11.1.1">
                    <h3><a href="#sec-the_basic_model" class="heading hyperref"><span
                          class="number">11.1.1 </span>The basic model</a></h3>
                    <p>The Micropost model needs only two attributes: a <code>content</code>
                      attribute to hold the micropost’s content and a <code>user_id</code>
                      to associate a micropost with a particular user.<span class="intersentencespace"></span>
                      The result is a Micropost model with the structure shown
                      in <a href="#fig-micropost_model" class="hyperref">Figure&nbsp;<span
                          class="ref">11.1</span></a>.</p>
                    <div class="center figure" id="_fig-micropost_model" data-tralics-id="uid1128"
                      data-number="11.1">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_model_3rd_edition.png"
                          alt="images/figures/micropost_model_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.1: </span><span
                          class="description">The Micropost data model. </span></div>
                    </div>
                    <p>It’s worth noting that the model in <a href="#fig-micropost_model"
                        class="hyperref">Figure&nbsp;<span class="ref">11.1</span></a>
                      uses the <code>text</code> data type for micropost
                      content (instead of <code>string</code>), which is
                      capable of storing an arbitrary amount of text.<span class="intersentencespace"></span>
                      Even though the content will be restricted to fewer than
                      140 characters (<a href="#sec-micropost_validations" class="hyperref">Section&nbsp;<span
                          class="ref">11.1.2</span></a>) and hence would fit
                      inside the 255-character <code>string</code> type, using
                      <code>text</code> better expresses the nature of
                      microposts, which are more naturally thought of as blocks
                      of text.<span class="intersentencespace"></span> Indeed,
                      in <a href="#sec-creating_microposts" class="hyperref">Section&nbsp;<span
                          class="ref">11.3.2</span></a> we’ll use a text <em>area</em>
                      instead of a text field for submitting microposts.<span class="intersentencespace"></span>
                      In addition, using <code>text</code> gives us greater
                      flexibility should we wish to increase the length limit at
                      a future date (as part of internationalization, for
                      example).<span class="intersentencespace"></span> Finally,
                      using the <code>text</code> type results in <a href="http://www.postgresql.org/docs/9.1/static/datatype-character.html"
                        target="_blank">no performance difference</a> in
                      production,<sup id="_cha-11_footnote-ref-2" class="footnote"><a
                          href="#cha-11_footnote-2">2</a></sup></p>
                    <p>As with the case of the User model (<a href="#code-generate_user_model"
                        class="hyperref">Listing&nbsp;<span class="ref">6.1</span></a>),
                      we generate the Micropost model using <code>generate
                        model</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate model Micropost content:text user:references
</pre></div>
                    </div>
                    <p>The <code>generate</code> command produces a migration
                      to create a <code>microposts</code> table in the database
                      (<a href="#code-micropost_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">11.1</span></a>); compare it to the
                      analogous migration for the <code>users</code> table from
                      <a href="#code-users_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">6.2</span></a>.<span class="intersentencespace"></span>
                      The biggest difference is the use of <code>references</code>,
                      which automatically adds a <code>user_id</code> column
                      (along with an index and a foreign key reference)<sup id="_cha-11_footnote-ref-3"
                        class="footnote"><a href="#cha-11_footnote-3">3</a></sup>
                      for use in the user/micropost association.<span class="intersentencespace"></span>
                      As with the User model, the Micropost model migration
                      automatically includes the <code>t.timestamps</code>
                      line, which (as mentioned in <a href="#sec-database_migrations"
                        class="hyperref">Section&nbsp;<span class="ref">6.1.1</span></a>)
                      adds the magic <code>created_at</code> and <code>updated_at</code>
                      columns shown in <a href="#fig-micropost_model" class="hyperref">Figure&nbsp;<span
                          class="ref">11.1</span></a>.<span class="intersentencespace"></span>
                      (We’ll put the <code>created_at</code> column to work in
                      <a href="#sec-ordering_and_dependency" class="hyperref">Section&nbsp;<span
                          class="ref">11.1.4</span></a> and <a href="#sec-rendering_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">11.2.1</span></a>.)</p>
                    <div class="codelisting" id="_code-micropost_migration" data-tralics-id="uid1131"
                      data-number="11.1">
                      <div class="heading"><span class="number">Listing 11.1:</span>
                        <span class="description">The Micropost migration with
                          added index.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">db/migrate/[timestamp]_create_microposts.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">CreateMicroposts</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">create_table</span> <span class="ss">:microposts</span> <span
class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">text</span> <span
class="ss">:content</span>
      <span class="n">t</span><span class="o">.</span><span class="n">references</span> <span
class="ss">:user</span><span class="p">,</span> <span class="ss">index</span><span
class="p">:</span> <span class="kp">true</span>

      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span
class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
    <span class="k">end</span>
    <span class="n">add_foreign_key</span> <span class="ss">:microposts</span><span
class="p">,</span> <span class="ss">:users</span>
<span class="hll">    <span class="n">add_index</span> <span class="ss">:microposts</span><span
class="p">,</span> <span class="o">[</span><span class="ss">:user_id</span><span
class="p">,</span> <span class="ss">:created_at</span><span class="o">]</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because we expect to retrieve all the microposts
                      associated with a given user&nbsp;id in reverse order of
                      creation, <a href="#code-micropost_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">11.1</span></a> adds an index (<a href="#aside-database_indices"
                        class="hyperref">Box&nbsp;<span class="ref">6.2</span></a>)
                      on the <code>user_id</code> and <code>created_at</code>
                      columns:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">add_index</span> <span class="ss">:microposts</span><span
class="p">,</span> <span class="o">[</span><span class="ss">:user_id</span><span
class="p">,</span> <span class="ss">:created_at</span><span class="o">]</span>
</pre></div>
                    </div>
                    <p>By including both the <code>user_id</code> and <code>created_at</code>
                      columns as an array, we arrange for Rails to create a <em>multiple
                        key index</em>, which means that Active Record uses <em>both</em>
                      keys at the same time.</p>
                    <p>With the migration in <a href="#code-micropost_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">11.1</span></a>,
                      we can update the database as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-micropost_validations" data-tralics-id="uid1132"
                    class="subsection" data-number="11.1.2">
                    <h3><a href="#sec-micropost_validations" class="heading hyperref"><span
                          class="number">11.1.2 </span>Micropost validations</a></h3>
                    <p>Now that we’ve created the basic model, we’ll add some
                      validations to enforce the desired design constraints.<span
                        class="intersentencespace"></span> One of the necessary
                      aspects of the Micropost model is the presence of a user
                      id to indicate which user made the micropost.<span class="intersentencespace"></span>
                      The idiomatically correct way to do this is to use Active
                      Record <em>associations</em>, which we’ll implement in <a
                        href="#sec-user_micropost_associations" class="hyperref">Section&nbsp;<span
                          class="ref">11.1.3</span></a>, but for now we’ll work
                      with the <code>Micropost</code> model directly.</p>
                    <p>The initial micropost tests parallel those for the User
                      model (<a href="#code-name_presence_test" class="hyperref">Listing&nbsp;<span
                          class="ref">6.7</span></a>).<span class="intersentencespace"></span>
                      In the <code>setup</code> step, we create a new micropost
                      while associating it with a valid user from the fixtures,
                      and then check that the result is valid.<span class="intersentencespace"></span>
                      Because every micropost should have a user id, we’ll add a
                      test for a <code>user_id</code> presence validation.<span
                        class="intersentencespace"></span> Putting these
                      elements together yields the test in <a href="#code-micropost_validity_test"
                        class="hyperref">Listing&nbsp;<span class="ref">11.2</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_validity_test"
                      data-tralics-id="uid1133" data-number="11.2">
                      <div class="heading"><span class="number">Listing 11.2:</span>
                        <span class="description">Tests for the validity of a
                          new micropost.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/micropost_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
<span class="hll">    <span class="c1"># This code is not idiomatically correct.</span>
</span><span class="hll">    <span class="vi">@micropost</span> <span class="o">=</span> <span
class="no">Micropost</span><span class="o">.</span><span class="n">new</span><span
class="p">(</span><span class="ss">content</span><span class="p">:</span> <span
class="s2">"Lorem ipsum"</span><span class="p">,</span> <span class="ss">user_id</span><span
class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">id</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"user id should be present"</span> <span
class="k">do</span>
    <span class="vi">@micropost</span><span class="o">.</span><span class="n">user_id</span> <span
class="o">=</span> <span class="kp">nil</span>
    <span class="n">assert_not</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As indicated by the comment in the <code>setup</code>
                      method, the code to create the micropost is not
                      idiomatically correct, which we’ll fix in <a href="#sec-user_micropost_associations"
                        class="hyperref">Section&nbsp;<span class="ref">11.1.3</span></a>.</p>
                    <p>The validity test is already <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>, but the user id presence
                      test should be <span style="color: red"><span class="sc"></span><span
                          class="sc"><strong>red</strong></span><span class="sc"></span></span>
                      because there are not currently any validations on the
                      Micropost model:</p>
                    <div class="codelisting" id="_uid1134" data-tralics-id="uid1134"
                      data-number="11.3">
                      <div class="heading"><span class="number">Listing 11.3:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                    <p>To fix this, we just need to add the user id presence
                      validation shown in <a href="#code-micropost_user_id_validation"
                        class="hyperref">Listing&nbsp;<span class="ref">11.4</span></a>.<span
                        class="intersentencespace"></span> (Note the <code>belongs_to</code>
                      line in <a href="#code-micropost_user_id_validation" class="hyperref">Listing&nbsp;<span
                          class="ref">11.4</span></a>, which is generated
                      automatically by the migration in <a href="#code-micropost_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">11.1</span></a>.<span
                        class="intersentencespace"></span> <a href="#sec-user_micropost_associations"
                        class="hyperref">Section&nbsp;<span class="ref">11.1.3</span></a>
                      discusses the effects of this line in more depth.)</p>
                    <div class="codelisting" id="_code-micropost_user_id_validation"
                      data-tralics-id="uid1135" data-number="11.4">
                      <div class="heading"><span class="number">Listing 11.4:</span>
                        <span class="description">A validation for the
                          micropost’s <code>user_id</code>.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
   <span class="n">belongs_to</span> <span class="ss">:user</span>
<span class="hll">   <span class="n">validates</span> <span class="ss">:user_id</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The model tests should now be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1136" data-tralics-id="uid1136"
                      data-number="11.5">
                      <div class="heading"><span class="number">Listing 11.5:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test:models
</pre></div>
                      </div>
                    </div>
                    <p>Next, we’ll add validations for the micropost’s <code>content</code>
                      attribute (following the example from <a href="#sec-putting_the_micro_in_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">2.3.2</span></a>).<span
                        class="intersentencespace"></span> As with the <code>user_id</code>,
                      the <code>content</code> attribute must be present, and
                      it is further constrained to be no longer than 140
                      characters, making it an honest <em>micro</em>post.<span
                        class="intersentencespace"></span> We’ll first write
                      some simple tests, which generally follow the examples
                      from the User model validation tests in <a href="#sec-user_validations"
                        class="hyperref">Section&nbsp;<span class="ref">6.2</span></a>,
                      as shown in <a href="#code-micropost_validations_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">11.6</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_validations_tests"
                      data-tralics-id="uid1137" data-number="11.6">
                      <div class="heading"><span class="number">Listing 11.6:</span>
                        <span class="description">Tests for the Micropost model
                          validations.<span class="intersentencespace"></span> <span
                            style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/micropost_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="vi">@micropost</span> <span class="o">=</span> <span class="no">Micropost</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="s2">"Lorem ipsum"</span><span class="p">,</span> <span
class="ss">user_id</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">id</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"user id should be present"</span> <span
class="k">do</span>
    <span class="vi">@micropost</span><span class="o">.</span><span class="n">user_id</span> <span
class="o">=</span> <span class="kp">nil</span>
    <span class="n">assert_not</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"content should be present "</span> <span
class="k">do</span>
</span><span class="hll">    <span class="vi">@micropost</span><span class="o">.</span><span
class="n">content</span> <span class="o">=</span> <span class="s2">"   "</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@micropost</span><span
class="o">.</span><span class="n">valid?</span>
</span><span class="hll">  <span class="k">end</span>
</span>
<span class="hll">  <span class="nb">test</span> <span class="s2">"content should be at most 140 characters"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="vi">@micropost</span><span class="o">.</span><span
class="n">content</span> <span class="o">=</span> <span class="s2">"a"</span> <span
class="o">*</span> <span class="mi">141</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="vi">@micropost</span><span
class="o">.</span><span class="n">valid?</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As in <a href="#sec-user_validations" class="hyperref">Section&nbsp;<span
                          class="ref">6.2</span></a>, the code in <a href="#code-micropost_validations_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">11.6</span></a>
                      uses string multiplication to test the micropost length
                      validation:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails console
<span class="gp">&gt;</span>&gt; <span class="s2">"a"</span> * 10
<span class="go">=&gt; "aaaaaaaaaa"</span>
<span class="gp">&gt;</span>&gt; <span class="s2">"a"</span> * 141
<span class="go">=&gt; "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa</span>
<span class="go">aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>
</pre></div>
                    </div>
                    <p>The corresponding application code is virtually identical
                      to the <code>name</code> validation for users (<a href="#code-length_validation"
                        class="hyperref">Listing&nbsp;<span class="ref">6.16</span></a>),
                      as shown in <a href="#code-micropost_validations" class="hyperref">Listing&nbsp;<span
                          class="ref">11.7</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_validations" data-tralics-id="uid1138"
                      data-number="11.7">
                      <div class="heading"><span class="number">Listing 11.7:</span>
                        <span class="description">The Micropost model
                          validations.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="n">validates</span> <span class="ss">:user_id</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:content</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span><span class="p">,</span> <span class="ss">length</span><span
class="p">:</span> <span class="p">{</span> <span class="ss">maximum</span><span
class="p">:</span> <span class="mi">140</span> <span class="p">}</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the full test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1139" data-tralics-id="uid1139"
                      data-number="11.8">
                      <div class="heading"><span class="number">Listing 11.8:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-user_micropost_associations" data-tralics-id="uid1140"
                    class="subsection" data-number="11.1.3">
                    <h3><a href="#sec-user_micropost_associations" class="heading hyperref"><span
                          class="number">11.1.3 </span>User/Micropost
                        associations</a></h3>
                    <p>When constructing data models for web applications, it is
                      essential to be able to make <em>associations</em>
                      between individual models.<span class="intersentencespace"></span>
                      In the present case, each micropost is associated with one
                      user, and each user is associated with (potentially) many
                      microposts—a relationship seen briefly in <a href="#sec-demo_user_has_many_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">2.3.3</span></a>
                      and shown schematically in <a href="#fig-micropost_belongs_to_user"
                        class="hyperref">Figure&nbsp;<span class="ref">11.2</span></a>
                      and <a href="#fig-user_has_many_microposts" class="hyperref">Figure&nbsp;<span
                          class="ref">11.3</span></a>.<span class="intersentencespace"></span>
                      As part of implementing these associations, we’ll write
                      tests for the Micropost model and add a couple of tests to
                      the User model.</p>
                    <div class="center figure" id="_fig-micropost_belongs_to_user"
                      data-tralics-id="uid1141" data-number="11.2">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_belongs_to_user.png"
                          alt="images/figures/micropost_belongs_to_user"></div>
                      <div class="caption"><span class="header">Figure 11.2: </span><span
                          class="description">The <code>belongs_to</code>
                          relationship between a micropost and its associated
                          user. </span></div>
                    </div>
                    <div class="center figure" id="_fig-user_has_many_microposts"
                      data-tralics-id="uid1142" data-number="11.3">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_has_many_microposts.png"
                          alt="images/figures/user_has_many_microposts"></div>
                      <div class="caption"><span class="header">Figure 11.3: </span><span
                          class="description">The <code>has_many</code>
                          relationship between a user and its microposts. </span></div>
                    </div>
                    <p>Using the <code>belongs_to</code>/<code>has_many</code>
                      association defined in this section, Rails constructs the
                      methods shown in <a href="#table-association_methods" class="hyperref">Table&nbsp;<span
                          class="ref">11.1</span></a>.<span class="intersentencespace"></span>
                      Note from <a href="#table-association_methods" class="hyperref">Table&nbsp;<span
                          class="ref">11.1</span></a> that instead of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">create</span>
<span class="no">Micropost</span><span class="o">.</span><span class="n">create!</span>
<span class="no">Micropost</span><span class="o">.</span><span class="n">new</span>
</pre></div>
                    </div>
                    <p>we have</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">create</span>
<span class="n">user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">create!</span>
<span class="n">user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">build</span>
</pre></div>
                    </div>
                    <p>These latter methods constitute the idiomatically correct
                      way to make a micropost, namely, <em>through</em> its
                      association with a user.<span class="intersentencespace"></span>
                      When a new micropost is made in this way, its <code>user_id</code>
                      is automatically set to the right value.<span class="intersentencespace"></span>
                      In particular, we can replace the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:michael</span><span
class="p">)</span>
<span class="c1"># This code is not idiomatically correct.</span>
<span class="vi">@micropost</span> <span class="o">=</span> <span class="no">Micropost</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="s2">"Lorem ipsum"</span><span class="p">,</span> <span
class="ss">user_id</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>from <a href="#code-micropost_validity_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.2</span></a> with this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:michael</span><span
class="p">)</span>
<span class="vi">@micropost</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">build</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="s2">"Lorem ipsum"</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>(As with <code>new</code>, <code>build</code> returns
                      an object in memory but doesn’t modify the database.)<span
                        class="intersentencespace"></span> Once we define the
                      proper associations, the resulting <code>@micropost</code>
                      variable will automatically have a <code>user_id</code>
                      attribute equal to its associated user’s id.</p>
                    <div class="table" id="_table-association_methods" data-tralics-id="uid1143"
                      data-number="11.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>Method</strong></td>
                            <td class="align_left"><strong>Purpose</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>micropost.user</code></td>
                            <td class="align_left">Returns the User object
                              associated with the micropost</td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.microposts</code></td>
                            <td class="align_left">Returns a collection of the
                              user’s microposts</td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.microposts.create(arg)</code></td>
                            <td class="align_left">Creates a micropost
                              associated with <code>user</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.microposts.create!(arg)</code></td>
                            <td class="align_left">Creates a micropost
                              associated with <code>user</code> (exception on
                              failure)</td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.microposts.build(arg)</code></td>
                            <td class="align_left">Returns a new Micropost
                              object associated with <code>user</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.microposts.find_by(id:
                                1)</code></td>
                            <td class="align_left">Finds the micropost with
                              id&nbsp;<code>1</code> and <code>user_id</code>
                              equal to <code>user.id</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 11.1: </span><span
                          class="description">A summary of user/micropost
                          association methods. </span></div>
                    </div>
                    <p>To get code like <code>@user.microposts.build</code> to
                      work, we need to update the User and Micropost models with
                      code to associate them.<span class="intersentencespace"></span>
                      The first of these was included automatically by the
                      migration in <a href="#code-micropost_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">11.1</span></a> via <code>belongs_to
                        :user</code>, as shown in <a href="#code-micropost_belongs_to_user"
                        class="hyperref">Listing&nbsp;<span class="ref">11.9</span></a>.<span
                        class="intersentencespace"></span> The second half of
                      the association, <code>has_many :microposts</code>, needs
                      to be added by hand, as shown in (<a href="#code-user_has_many_microposts"
                        class="hyperref">Listing&nbsp;<span class="ref">11.10</span></a>).</p>
                    <div class="codelisting" id="_code-micropost_belongs_to_user"
                      data-tralics-id="uid1144" data-number="11.9">
                      <div class="heading"><span class="number">Listing 11.9:</span>
                        <span class="description">A micropost <code>belongs_to</code>
                          a user.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span>  <span class="n">validates</span> <span class="ss">:user_id</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">140</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-user_has_many_microposts"
                      data-tralics-id="uid1145" data-number="11.10">
                      <div class="heading"><span class="number">Listing 11.10:</span>
                        <span class="description">A user <code>has_many</code>
                          microposts.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:microposts</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the association thus made, we can update the <code>setup</code>
                      method in <a href="#code-micropost_validity_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.2</span></a> with the idiomatically
                      correct way to build a new micropost, as shown in <a href="#code-micropost_validity_test_idiomatic"
                        class="hyperref">Listing&nbsp;<span class="ref">11.11</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_validity_test_idiomatic"
                      data-tralics-id="uid1146" data-number="11.11">
                      <div class="heading"><span class="number">Listing 11.11:</span>
                        <span class="description">Using idiomatically correct
                          code to build a micropost.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/micropost_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
<span class="hll">    <span class="vi">@micropost</span> <span class="o">=</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">build</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="s2">"Lorem ipsum"</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"user id should be present"</span> <span
class="k">do</span>
    <span class="vi">@micropost</span><span class="o">.</span><span class="n">user_id</span> <span
class="o">=</span> <span class="kp">nil</span>
    <span class="n">assert_not</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Of course, after this minor refactoring the test suite
                      should still be <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1147" data-tralics-id="uid1147"
                      data-number="11.12">
                      <div class="heading"><span class="number">Listing 11.12:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-ordering_and_dependency" data-tralics-id="uid1148"
                    class="subsection" data-number="11.1.4">
                    <h3><a href="#sec-ordering_and_dependency" class="heading hyperref"><span
                          class="number">11.1.4 </span>Micropost refinements</a></h3>
                    <p>In this section, we’ll add a couple of refinements to the
                      user/micropost association.<span class="intersentencespace"></span>
                      In particular, we’ll arrange for a user’s microposts to be
                      retrieved in a specific <em>order</em>, and we’ll also
                      make microposts <em>dependent</em> on users so that they
                      will be automatically destroyed if their associated user
                      is destroyed.</p>
                    <div id="_sec-default_scope" data-tralics-id="uid1149" class="subsubsection"
                      data-number="11.1.4.1">
                      <h4><a href="#sec-default_scope" class="heading">Default
                          scope</a></h4>
                      <p>By default, the <code>user.microposts</code> method
                        makes no guarantees about the order of the posts, but
                        (following the convention of blogs and Twitter) we want
                        the microposts to come out in reverse order of when they
                        were created so that the most recent post is first.<sup
                          id="_cha-11_footnote-ref-4" class="footnote"><a href="#cha-11_footnote-4">4</a></sup><span
                          class="intersentencespace"></span> We’ll arrange for
                        this to happen using a <em>default scope</em>.</p>
                      <p>This is exactly the sort of feature that could easily
                        lead to a spurious passing test (i.e., a test that would
                        pass even if the application code were wrong), so we’ll
                        proceed using test-driven development to be sure we’re
                        testing the right thing.<span class="intersentencespace"></span>
                        In particular, let’s write a test to verify that the
                        first micropost in the database is the same as a fixture
                        micropost we’ll call <code>most_recent</code>, as shown
                        in <a href="#code-micropost_order_test" class="hyperref">Listing&nbsp;<span
                            class="ref">11.13</span></a>.</p>
                      <div class="codelisting" id="_code-micropost_order_test" data-tralics-id="uid1151"
                        data-number="11.13">
                        <div class="heading"><span class="number">Listing 11.13:</span>
                          <span class="description">Testing the micropost order.<span
                              class="intersentencespace"></span> <span style="color: red"><span
                                class="sc"></span><span class="sc"><strong>red</strong></span><span
                                class="sc"></span></span><span class="break"></span>
                            <span class="filepath">test/models/micropost_test.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"order should be most recent first"</span> <span
class="k">do</span>
    <span class="n">assert_equal</span> <span class="no">Micropost</span><span class="o">.</span><span
class="n">first</span><span class="p">,</span> <span class="n">microposts</span><span
class="p">(</span><span class="ss">:most_recent</span><span class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p><a href="#code-micropost_order_test" class="hyperref">Listing&nbsp;<span
                            class="ref">11.13</span></a> relies on having some
                        micropost fixtures, which we define as shown in <a href="#code-micropost_fixtures"
                          class="hyperref">Listing&nbsp;<span class="ref">11.14</span></a>.</p>
                      <div class="codelisting" id="_code-micropost_fixtures" data-tralics-id="uid1152"
                        data-number="11.14">
                        <div class="heading"><span class="number">Listing 11.14:</span>
                          <span class="description">Micropost fixtures.<span class="intersentencespace"></span>
                            <span class="break"></span> <span class="filepath">test/fixtures/microposts.yml</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="l-Scalar-Plain">orange</span><span
class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"I</span><span class="nv"> </span><span class="s">just</span><span class="nv"> </span><span
class="s">ate</span><span class="nv"> </span><span class="s">an</span><span class="nv"> </span><span
class="s">orange!"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 10.minutes.ago %&gt;</span>

<span class="l-Scalar-Plain">tau_manifesto</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Check</span><span class="nv"> </span><span class="s">out</span><span
class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">@tauday</span><span
class="nv"> </span><span class="s">site</span><span class="nv"> </span><span class="s">by</span><span
class="nv"> </span><span class="s">@mhartl:</span><span class="nv"> </span><span
class="s">http://tauday.com"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 3.years.ago %&gt;</span>

<span class="l-Scalar-Plain">cat_video</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Sad</span><span class="nv"> </span><span class="s">cats</span><span class="nv"> </span><span
class="s">are</span><span class="nv"> </span><span class="s">sad:</span><span class="nv"> </span><span
class="s">http://youtu.be/PKffm2uI4dk"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 2.hours.ago %&gt;</span>

<span class="l-Scalar-Plain">most_recent</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Writing</span><span class="nv"> </span><span class="s">a</span><span
class="nv"> </span><span class="s">short</span><span class="nv"> </span><span class="s">test"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
</pre></div>
                        </div>
                      </div>
                      <p>Note that we have explicitly set the <code>created_at</code>
                        column using embedded Ruby.<span class="intersentencespace"></span>
                        Because it’s a “magic” column automatically updated by
                        Rails, setting it by hand isn’t ordinarily possible, but
                        it is possible in fixtures.<span class="intersentencespace"></span>
                        In practice this might not be necessary, and in fact on
                        many systems the fixtures are created in order.<span class="intersentencespace"></span>
                        In this case, the final fixture in the file is created
                        last (and hence is most recent), but it would be foolish
                        to rely on this behavior, which is brittle and probably
                        system-dependent.</p>
                      <p>With the code in <a href="#code-micropost_order_test"
                          class="hyperref">Listing&nbsp;<span class="ref">11.13</span></a>
                        and <a href="#code-micropost_fixtures" class="hyperref">Listing&nbsp;<span
                            class="ref">11.14</span></a>, the test suite should
                        be <span style="color: red"><span class="sc"></span><span
                            class="sc"><strong>red</strong></span><span class="sc"></span></span>:</p>
                      <div class="codelisting" id="_uid1153" data-tralics-id="uid1153"
                        data-number="11.15">
                        <div class="heading"><span class="number">Listing 11.15:</span>
                          <span class="description"><span style="color: red"><span
                                class="sc"></span><span class="sc"><strong>red</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test TEST=test/models/micropost_test.rb \
&gt;                       TESTOPTS="--name test_order_should_be_most_recent_first"
</pre></div>
                        </div>
                      </div>
                      <p>We’ll get the test to pass using a Rails method called
                        <code>default_scope</code>, which among other things can
                        be used to set the default order in which elements are
                        retrieved from the database.<span class="intersentencespace"></span>
                        To enforce a particular order, we’ll include the <code>order</code>
                        argument in <code>default_scope</code>, which lets us
                        order by the <code>created_at</code> column as follows:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">order</span><span class="p">(</span><span
class="ss">:created_at</span><span class="p">)</span>
</pre></div>
                      </div>
                      <p>Unfortunately, this orders the results in <em>ascending</em>
                        order from smallest to biggest, which means that the
                        oldest microposts come out first.<span class="intersentencespace"></span>
                        To pull them out in reverse order, we can push down one
                        level deeper and include a string with some raw SQL:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">order</span><span class="p">(</span><span
class="s1">'created_at DESC'</span><span class="p">)</span>
</pre></div>
                      </div>
                      <p>Here <code>DESC</code> is SQL for “descending”, i.e.,
                        in descending order from newest to oldest.<sup id="_cha-11_footnote-ref-5"
                          class="footnote"><a href="#cha-11_footnote-5">5</a></sup><span
                          class="intersentencespace"></span> In older versions
                        of Rails, using this raw SQL used to be the only option
                        to get the desired behavior, but as of Rails&nbsp;4.0 we
                        can use a more natural pure-Ruby syntax as well:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">order</span><span class="p">(</span><span
class="ss">created_at</span><span class="p">:</span> <span class="ss">:desc</span><span
class="p">)</span>
</pre></div>
                      </div>
                      <p>Adding this in a default scope for the Micropost model
                        gives <a href="#code-micropost_ordering" class="hyperref">Listing&nbsp;<span
                            class="ref">11.16</span></a>.</p>
                      <div class="codelisting" id="_code-micropost_ordering" data-tralics-id="uid1155"
                        data-number="11.16">
                        <div class="heading"><span class="number">Listing 11.16:</span>
                          <span class="description">Ordering the microposts with
                            <code>default_scope</code>.<span class="intersentencespace"></span>
                            <span style="color: ForestGreen"><span class="sc"></span><span
                                class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                              class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
<span class="hll">  <span class="n">default_scope</span> <span class="o">-&gt;</span> <span
class="p">{</span> <span class="n">order</span><span class="p">(</span><span class="ss">created_at</span><span
class="p">:</span> <span class="ss">:desc</span><span class="p">)</span> <span class="p">}</span>
</span>  <span class="n">validates</span> <span class="ss">:user_id</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">140</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p><a href="#code-micropost_ordering" class="hyperref">Listing&nbsp;<span
                            class="ref">11.16</span></a> introduces the “stabby
                        lambda” syntax for an object called a <em>Proc</em>
                        (procedure) or <em>lambda</em>, which is an <em>anonymous
                          function</em> (a function created without a name).<span
                          class="intersentencespace"></span> The stabby lambda <code>-&gt;</code>
                        takes in a block (<a href="#sec-blocks" class="hyperref">Section&nbsp;<span
                            class="ref">4.3.2</span></a>) and returns a Proc,
                        which can then be evaluated with the <code>call</code>
                        method.<span class="intersentencespace"></span> We can
                        see how it works at the console:</p>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="gp">&gt;</span>&gt; -&gt; <span class="o">{</span> puts <span
class="s2">"foo"</span> <span class="o">}</span>
<span class="go">=&gt; #&lt;Proc:0x007fab938d0108@(irb):1 (lambda)&gt;</span>
<span class="gp">&gt;</span>&gt; -&gt; <span class="o">{</span> puts <span class="s2">"foo"</span> <span
class="o">}</span>.call
<span class="go">foo</span>
<span class="go">=&gt; nil</span>
</pre></div>
                      </div>
                      <p>(This is a somewhat advanced Ruby topic, so don’t worry
                        if it doesn’t make sense right away.)</p>
                      <p>With the code in <a href="#code-micropost_ordering" class="hyperref">Listing&nbsp;<span
                            class="ref">11.16</span></a>, the tests should be <span
                          style="color: ForestGreen"><span class="sc"></span><span
                            class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                      <div class="codelisting" id="_uid1156" data-tralics-id="uid1156"
                        data-number="11.17">
                        <div class="heading"><span class="number">Listing 11.17:</span>
                          <span class="description"><span style="color: ForestGreen"><span
                                class="sc"></span><span class="sc"><strong>green</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test
</pre></div>
                        </div>
                      </div>
                    </div>
                    <div id="_sec-dependent_destroy" data-tralics-id="uid1157" class="subsubsection"
                      data-number="11.1.4.2">
                      <h4><a href="#sec-dependent_destroy" class="heading">Dependent:
                          destroy</a></h4>
                      <p>Apart from proper ordering, there is a second
                        refinement we’d like to add to microposts.<span class="intersentencespace"></span>
                        Recall from <a href="#sec-deleting_users" class="hyperref">Section&nbsp;<span
                            class="ref">9.4</span></a> that site administrators
                        have the power to <em>destroy</em> users.<span class="intersentencespace"></span>
                        It stands to reason that, if a user is destroyed, the
                        user’s microposts should be destroyed as well.</p>
                      <p>We can arrange for this behavior by passing an option
                        to the <code>has_many</code> association method, as
                        shown in <a href="#code-micropost_dependency" class="hyperref">Listing&nbsp;<span
                            class="ref">11.18</span></a>.</p>
                      <div class="codelisting" id="_code-micropost_dependency" data-tralics-id="uid1158"
                        data-number="11.18">
                        <div class="heading"><span class="number">Listing 11.18:</span>
                          <span class="description">Ensuring that a user’s
                            microposts are destroyed along with the user.<span class="intersentencespace"></span>
                            <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:microposts</span><span
class="p">,</span> <span class="ss">dependent</span><span class="p">:</span> <span
class="ss">:destroy</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>Here the option <code>dependent: :destroy</code>
                        arranges for the dependent microposts to be destroyed
                        when the user itself is destroyed.<span class="intersentencespace"></span>
                        This prevents userless microposts from being stranded in
                        the database when admins choose to remove users from the
                        system.</p>
                      <p>We can verify that <a href="#code-micropost_dependency"
                          class="hyperref">Listing&nbsp;<span class="ref">11.18</span></a>
                        is working with a test for the User model.<span class="intersentencespace"></span>
                        All we need to do is save the user (so it gets an id)
                        and create an associated micropost.<span class="intersentencespace"></span>
                        Then we check that destroying the user reduces the
                        micropost count by 1.<span class="intersentencespace"></span>
                        The result appears in <a href="#code-dependent_destroy_test"
                          class="hyperref">Listing&nbsp;<span class="ref">11.19</span></a>.<span
                          class="intersentencespace"></span> (Compare to the
                        integration test for “delete” links in <a href="#code-delete_link_integration_test"
                          class="hyperref">Listing&nbsp;<span class="ref">9.57</span></a>.)</p>
                      <div class="codelisting" id="_code-dependent_destroy_test"
                        data-tralics-id="uid1159" data-number="11.19">
                        <div class="heading"><span class="number">Listing 11.19:</span>
                          <span class="description">A test of <code>dependent:
                              :destroy</code>.<span class="intersentencespace"></span>
                            <span style="color: ForestGreen"><span class="sc"></span><span
                                class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                              class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                        </div>
                        <div class="code">
                          <div class="highlight">
                            <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="nb">name</span><span
class="p">:</span> <span class="s2">"Example User"</span><span class="p">,</span> <span
class="ss">email</span><span class="p">:</span> <span class="s2">"user@example.com"</span><span
class="p">,</span>
                     <span class="ss">password</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span> <span class="ss">password_confirmation</span><span
class="p">:</span> <span class="s2">"foobar"</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"associated microposts should be destroyed"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">save</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="s2">"Lorem ipsum"</span><span class="p">)</span>
    <span class="n">assert_difference</span> <span class="s1">'Micropost.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
      <span class="vi">@user</span><span class="o">.</span><span class="n">destroy</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                        </div>
                      </div>
                      <p>If the code in <a href="#code-micropost_dependency" class="hyperref">Listing&nbsp;<span
                            class="ref">11.18</span></a> is working correctly,
                        the test suite should still be <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span>:</p>
                      <div class="codelisting" id="_uid1160" data-tralics-id="uid1160"
                        data-number="11.20">
                        <div class="heading"><span class="number">Listing 11.20:</span>
                          <span class="description"><span style="color: ForestGreen"><span
                                class="sc"></span><span class="sc"><strong>green</strong></span><span
                                class="sc"></span></span></span> </div>
                        <div class="code">
                          <div class="highlight">
                            <pre>$ bundle exec rake test
</pre></div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-showing_microposts" data-tralics-id="cid74" class="section"
                  data-number="11.2">
                  <h2><a href="#sec-showing_microposts" class="heading hyperref"><span
                        class="number">11.2 </span>Showing microposts</a></h2>
                  <p>Although we don’t yet have a way to create microposts
                    through the web—that comes in <a href="#sec-creating_microposts"
                      class="hyperref">Section&nbsp;<span class="ref">11.3.2</span></a>—this
                    won’t stop us from displaying them (and testing that
                    display).<span class="intersentencespace"></span> Following
                    Twitter’s lead, we’ll plan to display a user’s microposts
                    not on a separate microposts <code>index</code> page but
                    rather directly on the user <code>show</code> page itself,
                    as mocked up in <a href="#fig-user_microposts_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">11.4</span></a>.<span class="intersentencespace"></span>
                    We’ll start with fairly simple ERb templates for adding a
                    micropost display to the user profile, and then we’ll add
                    microposts to the seed data from <a href="#sec-sample_users"
                      class="hyperref">Section&nbsp;<span class="ref">9.3.2</span></a>
                    so that we have something to display.</p>
                  <div class="center figure" id="_fig-user_microposts_mockup" data-tralics-id="uid1161"
                    data-number="11.4">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_microposts_mockup_3rd_edition.png"
                        alt="images/figures/user_microposts_mockup_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 11.4: </span><span
                        class="description">A mockup of a profile page with
                        microposts. </span></div>
                  </div>
                  <div id="_sec-rendering_microposts" data-tralics-id="uid1162"
                    class="subsection" data-number="11.2.1">
                    <h3><a href="#sec-rendering_microposts" class="heading hyperref"><span
                          class="number">11.2.1 </span>Rendering microposts</a></h3>
                    <p>Our plan is to display the microposts for each user on
                      their respective profile page (<code>show.html.erb</code>),
                      together with a running count of how many microposts
                      they’ve made.<span class="intersentencespace"></span> As
                      we’ll see, many of the ideas are similar to our work in <a
                        href="#sec-showing_all_users" class="hyperref">Section&nbsp;<span
                          class="ref">9.3</span></a> on showing all users.</p>
                    <p>Although we won’t need the Microposts controller until <a
                        href="#sec-manipulating_microposts" class="hyperref">Section&nbsp;<span
                          class="ref">11.3</span></a>, we will need the views
                      directory in just a moment, so let’s generate the
                      controller now:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller Microposts
</pre></div>
                    </div>
                    <p>Our primary purpose in this section is to render all the
                      microposts for each user.<span class="intersentencespace"></span>
                      We saw in <a href="#sec-partial_refactoring" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.5</span></a> that the code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;ul</span> <span class="na">class=</span><span
class="s">"users"</span><span class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="vi">@users</span> <span
class="cp">%&gt;</span>
<span class="nt">&lt;/ul&gt;</span>
</pre></div>
                    </div>
                    <p>automatically renders each of the users in the <code>@users</code>
                      variable using the <code>_user.html.erb</code> partial.<span
                        class="intersentencespace"></span> We’ll define an
                      analogous <code>_micropost.html.erb</code> partial so
                      that we can use the same technique on a collection of
                      microposts as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;ol</span> <span class="na">class=</span><span
class="s">"microposts"</span><span class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="vi">@microposts</span> <span
class="cp">%&gt;</span>
<span class="nt">&lt;/ol&gt;</span>
</pre></div>
                    </div>
                    <p>Note that we’ve used the <em>ordered list</em> tag&nbsp;<code>ol</code>
                      (as opposed to an unordered list&nbsp;<code>ul</code>)
                      because microposts are listed in a particular order
                      (reverse-chronological).<span class="intersentencespace"></span>
                      The corresponding partial appears in <a href="#code-micropost_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">11.21</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_partial" data-tralics-id="uid1163"
                      data-number="11.21">
                      <div class="heading"><span class="number">Listing 11.21:</span>
                        <span class="description">A partial for showing a single
                          micropost.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/microposts/_micropost.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;li</span> <span class="na">id=</span><span
class="s">"micropost-</span><span class="cp">&lt;%=</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="s">"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">gravatar_for</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">user</span><span class="p">,</span> <span class="ss">size</span><span
class="p">:</span> <span class="mi">50</span><span class="p">),</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">user</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"user"</span><span
class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="n">micropost</span><span class="o">.</span><span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">user</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"content"</span><span
class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">content</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"timestamp"</span><span
class="nt">&gt;</span>
    Posted <span class="cp">&lt;%=</span> <span class="n">time_ago_in_words</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">created_at</span><span class="p">)</span> <span class="cp">%&gt;</span> ago.
  <span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/li&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>This uses the awesome <code>time_ago_in_words</code>
                      helper method, whose meaning is probably clear and whose
                      effect we will see in <a href="#sec-sample_microposts" class="hyperref">Section&nbsp;<span
                          class="ref">11.2.2</span></a>.<span class="intersentencespace"></span>
                      <a href="#code-micropost_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">11.21</span></a> also adds a CSS&nbsp;id
                      for each micropost using</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;li</span> <span class="na">id=</span><span
class="s">"micropost-</span><span class="cp">&lt;%=</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="s">"</span><span
class="nt">&gt;</span>
</pre></div>
                    </div>
                    <p>This is a generally good practice, as it opens up the
                      possibility of manipulating individual microposts at a
                      future date (using JavaScript, for example).</p>
                    <p>The next step is to address the difficulty of displaying
                      a potentially large number of microposts.<span class="intersentencespace"></span>
                      We’ll solve this problem the same way we solved it for
                      users in <a href="#sec-pagination" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.3</span></a>, namely, using
                      pagination.<span class="intersentencespace"></span> As
                      before, we’ll use the <code>will_paginate</code> method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="vi">@microposts</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>If you compare this with the analogous line on the user
                      index page, <a href="#code-will_paginate_index_view" class="hyperref">Listing&nbsp;<span
                          class="ref">9.41</span></a>, you’ll see that before we
                      had just</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>This worked because, in the context of the Users
                      controller, <code>will_paginate</code> <em>assumes</em>
                      the existence of an instance variable called <code>@users</code>
                      (which, as we saw in <a href="#sec-pagination" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.3</span></a>, should be of class <code>ActiveRecord::Relation</code>).<span
                        class="intersentencespace"></span> In the present case,
                      since we are still in the Users controller but want to
                      paginate <em>microposts</em> instead, we’ll pass an
                      explicit <code>@microposts</code> variable to <code>will_paginate</code>.<span
                        class="intersentencespace"></span> Of course, this means
                      that we will have to define such a variable in the user <code>show</code>
                      action (<a href="#code-user_show_microposts_instance" class="hyperref">Listing&nbsp;<span
                          class="ref">11.22</span></a>).</p>
                    <div class="codelisting" id="_code-user_show_microposts_instance"
                      data-tralics-id="uid1164" data-number="11.22">
                      <div class="heading"><span class="number">Listing 11.22:</span>
                        <span class="description">Adding an <code>@microposts</code>
                          instance variable to the user <code>show</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">show</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="hll">    <span class="vi">@microposts</span> <span class="o">=</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span
class="o">]</span><span class="p">)</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Notice here how clever <code>paginate</code> is—it even
                      works <em>through</em> the microposts association,
                      reaching into the <span class="tt">microposts</span>
                      table and pulling out the desired page of microposts.</p>
                    <p>Our final task is to display the number of microposts for
                      each user, which we can do with the <code>count</code>
                      method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span>
</pre></div>
                    </div>
                    <p>As with <code>paginate</code>, we can use the <code>count</code>
                      method through the association.<span class="intersentencespace"></span>
                      In particular, <code>count</code> does <em>not</em> pull
                      all the microposts out of the database and then call <code>length</code>
                      on the resulting array, as this would become inefficient
                      as the number of microposts grew.<span class="intersentencespace"></span>
                      Instead, it performs the calculation directly in the
                      database, asking the database to count the microposts with
                      the given <code>user_id</code> (an operation for which
                      all databases are highly optimized).<span class="intersentencespace"></span>
                      (In the unlikely event that finding the count is still a
                      bottleneck in your application, you can make it even
                      faster using a <a href="http://railscasts.com/episodes/23-counter-cache-column"
                        target="_blank"><em>counter cache</em></a>.)</p>
                    <p>Putting all the elements above together, we are now in a
                      position to add microposts to the profile page, as shown
                      in <a href="#code-user_show_microposts" class="hyperref">Listing&nbsp;<span
                          class="ref">11.23</span></a>.<span class="intersentencespace"></span>
                      Note the use of <code>if @user.microposts.any?</code> (a
                      construction we saw before in <a href="#code-errors_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">7.19</span></a>),
                      which makes sure that an empty list won’t be displayed
                      when the user has no microposts.</p>
                    <div class="codelisting" id="_code-user_show_microposts" data-tralics-id="uid1165"
                      data-number="11.23">
                      <div class="heading"><span class="number">Listing 11.23:</span>
                        <span class="description">Adding microposts to the user
                          <code>show</code> page.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/show.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"col-md-4"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"user_info"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;h1&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span
class="vi">@user</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
  <span class="nt">&lt;/aside&gt;</span>
<span class="hll">  <span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"col-md-8"</span><span class="nt">&gt;</span>
</span><span class="hll">    <span class="cp">&lt;%</span> <span class="k">if</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
</span><span class="hll">      <span class="nt">&lt;h3&gt;</span>Microposts (<span
class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span> <span
class="cp">%&gt;</span>)<span class="nt">&lt;/h3&gt;</span>
</span><span class="hll">      <span class="nt">&lt;ol</span> <span class="na">class=</span><span
class="s">"microposts"</span><span class="nt">&gt;</span>
</span><span class="hll">        <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="vi">@microposts</span> <span class="cp">%&gt;</span>
</span><span class="hll">      <span class="nt">&lt;/ol&gt;</span>
</span><span class="hll">      <span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="vi">@microposts</span> <span class="cp">%&gt;</span>
</span><span class="hll">    <span class="cp">&lt;%</span> <span class="k">end</span> <span
class="cp">%&gt;</span>
</span><span class="hll">  <span class="nt">&lt;/div&gt;</span>
</span><span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, we can get a look at our updated user
                      profile page in <a href="#fig-user_profile_no_microposts"
                        class="hyperref">Figure&nbsp;<span class="ref">11.5</span></a>.<span
                        class="intersentencespace"></span> It’s
                      rather…disappointing.<span class="intersentencespace"></span>
                      Of course, this is because there are not currently any
                      microposts.<span class="intersentencespace"></span> It’s
                      time to change that.</p>
                    <div class="center figure" id="_fig-user_profile_no_microposts"
                      data-tralics-id="uid1166" data-number="11.5">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_profile_no_microposts_3rd_edition.png"
                          alt="images/figures/user_profile_no_microposts_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.5: </span><span
                          class="description">The user profile page with code
                          for microposts—but no microposts. </span></div>
                    </div>
                  </div>
                  <div id="_sec-sample_microposts" data-tralics-id="uid1167" class="subsection"
                    data-number="11.2.2">
                    <h3><a href="#sec-sample_microposts" class="heading hyperref"><span
                          class="number">11.2.2 </span>Sample microposts</a></h3>
                    <p>With all the work making templates for user microposts in
                      <a href="#sec-rendering_microposts" class="hyperref">Section&nbsp;<span
                          class="ref">11.2.1</span></a>, the ending was rather
                      anticlimactic.<span class="intersentencespace"></span> We
                      can rectify this sad situation by adding microposts to the
                      seed data from <a href="#sec-sample_users" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.2</span></a>.</p>
                    <p>Adding sample microposts for <em>all</em> the users
                      actually takes a rather long time, so first we’ll select
                      just the first six users (i.e., the five users with custom
                      Gravatars, and one with the default Gravatar) using the <code>take</code>
                      method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">User</span><span class="o">.</span><span
class="n">order</span><span class="p">(</span><span class="ss">:created_at</span><span
class="p">)</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span
class="mi">6</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>The call to <code>order</code> ensures that we find the
                      first six users that were created.</p>
                    <p>For each of the selected users, we’ll make 50 microposts
                      (plenty to overflow the pagination limit of&nbsp;30).<span
                        class="intersentencespace"></span> To generate sample
                      content for each micropost, we’ll use the Faker gem’s
                      handy <a href="http://rubydoc.info/gems/faker/1.3.0/Faker/Lorem"
                        target="_blank"><span class="tt">Lorem.sentence</span></a>
                      method.<sup id="_cha-11_footnote-ref-6" class="footnote"><a
                          href="#cha-11_footnote-6">6</a></sup><span class="intersentencespace"></span>
                      The result is the new seed data method shown in <a href="#code-sample_microposts"
                        class="hyperref">Listing&nbsp;<span class="ref">11.24</span></a>.<span
                        class="intersentencespace"></span> (The reason for the
                      order of the loops in <a href="#code-sample_microposts" class="hyperref">Listing&nbsp;<span
                          class="ref">11.24</span></a> is to intermix the
                      microposts for use in the status feed (<a href="#sec-the_status_feed"
                        class="hyperref">Section&nbsp;<span class="ref">12.3</span></a>).<span
                        class="intersentencespace"></span> Looping over the
                      users first gives feeds with big runs of microposts from
                      the same user, which is visually unappealing.)</p>
                    <div class="codelisting" id="_code-sample_microposts" data-tralics-id="uid1169"
                      data-number="11.24">
                      <div class="heading"><span class="number">Listing 11.24:</span>
                        <span class="description">Adding microposts to the
                          sample data.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">db/seeds.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:created_at</span><span
class="p">)</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span
class="mi">6</span><span class="p">)</span>
<span class="mi">50</span><span class="o">.</span><span class="n">times</span> <span
class="k">do</span>
  <span class="n">content</span> <span class="o">=</span> <span class="no">Faker</span><span
class="o">::</span><span class="no">Lorem</span><span class="o">.</span><span class="n">sentence</span><span
class="p">(</span><span class="mi">5</span><span class="p">)</span>
  <span class="n">users</span><span class="o">.</span><span class="n">each</span> <span
class="p">{</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span> <span
class="n">user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="n">content</span><span class="p">)</span> <span
class="p">}</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, we can reseed the development database as
                      usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate:reset
$ bundle exec rake db:seed
</pre></div>
                    </div>
                    <p>You should also quit and restart the Rails development
                      server.</p>
                    <p>With that, we are in a position to enjoy the fruits of
                      our <a href="#sec-rendering_microposts" class="hyperref">Section&nbsp;<span
                          class="ref">11.2.1</span></a> labors by displaying
                      information for each micropost.<sup id="_cha-11_footnote-ref-7"
                        class="footnote"><a href="#cha-11_footnote-7">7</a></sup><span
                        class="intersentencespace"></span> The preliminary
                      results appear in <a href="#fig-user_profile_microposts_no_styling"
                        class="hyperref">Figure&nbsp;<span class="ref">11.6</span></a>.</p>
                    <div class="center figure" id="_fig-user_profile_microposts_no_styling"
                      data-tralics-id="uid1171" data-number="11.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_profile_microposts_no_styling_3rd_edition.png"
                          alt="images/figures/user_profile_microposts_no_styling_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.6: </span><span
                          class="description">The user profile with unstyled
                          microposts. </span></div>
                    </div>
                    <p>The page shown in <a href="#fig-user_profile_microposts_no_styling"
                        class="hyperref">Figure&nbsp;<span class="ref">11.6</span></a>
                      has no micropost-specific styling, so let’s add some (<a href="#code-micropost_css"
                        class="hyperref">Listing&nbsp;<span class="ref">11.25</span></a>)
                      and take a look at the resulting pages.<sup id="_cha-11_footnote-ref-8"
                        class="footnote"><a href="#cha-11_footnote-8">8</a></sup></p>
                    <div class="codelisting" id="_code-micropost_css" data-tralics-id="uid1173"
                      data-number="11.25">
                      <div class="heading"><span class="number">Listing 11.25:</span>
                        <span class="description">The CSS for microposts
                          (including all the CSS for this chapter).<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">microposts</span> <span class="o">*/</span>

<span class="nc">.microposts</span> <span class="p">{</span>
  <span class="na">list-style</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
  <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="nt">li</span> <span class="p">{</span>
    <span class="na">padding</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span> <span class="mi">0</span><span class="p">;</span>
    <span class="na">border-top</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="mh">#e8e8e8</span><span
class="p">;</span>
  <span class="p">}</span>
  <span class="nc">.user</span> <span class="p">{</span>
    <span class="na">margin-top</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">em</span><span class="p">;</span>
    <span class="na">padding-top</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="p">}</span>
  <span class="nc">.content</span> <span class="p">{</span>
    <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span
class="p">;</span>
    <span class="na">margin-left</span><span class="o">:</span> <span class="mi">60</span><span
class="kt">px</span><span class="p">;</span>
    <span class="nt">img</span> <span class="p">{</span>
      <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span
class="p">;</span>
      <span class="na">padding</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">px</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nc">.timestamp</span> <span class="p">{</span>
    <span class="na">color</span><span class="o">:</span> <span class="nv">$gray-light</span><span
class="p">;</span>
    <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span
class="p">;</span>
    <span class="na">margin-left</span><span class="o">:</span> <span class="mi">60</span><span
class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nc">.gravatar</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
    <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
    <span class="na">margin-top</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nt">aside</span> <span class="p">{</span>
  <span class="nt">textarea</span> <span class="p">{</span>
    <span class="na">height</span><span class="o">:</span> <span class="mi">100</span><span
class="kt">px</span><span class="p">;</span>
    <span class="na">margin-bottom</span><span class="o">:</span> <span class="mi">5</span><span
class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nt">span</span><span class="nc">.picture</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="nt">input</span> <span class="p">{</span>
    <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#fig-user_profile_with_microposts" class="hyperref">Figure&nbsp;<span
                          class="ref">11.7</span></a> shows the user profile
                      page for the first user, while <a href="#fig-other_profile_with_microposts"
                        class="hyperref">Figure&nbsp;<span class="ref">11.8</span></a>
                      shows the profile for a second user.<span class="intersentencespace"></span>
                      Finally, <a href="#fig-user_profile_microposts" class="hyperref">Figure&nbsp;<span
                          class="ref">11.9</span></a> shows the <em>second</em>
                      page of microposts for the first user, along with the
                      pagination links at the bottom of the display.<span class="intersentencespace"></span>
                      In all three cases, observe that each micropost display
                      indicates the time since it was created (e.g., “Posted 1
                      minute ago.”); this is the work of the <code>time_ago_in_words</code>
                      method from <a href="#code-micropost_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">11.21</span></a>.<span class="intersentencespace"></span>
                      If you wait a couple of minutes and reload the pages,
                      you’ll see how the text gets automatically updated based
                      on the new time.</p>
                    <div class="center figure" id="_fig-user_profile_with_microposts"
                      data-tralics-id="uid1174" data-number="11.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_profile_with_microposts_3rd_edition.png"
                          alt="images/figures/user_profile_with_microposts_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.7: </span><span
                          class="description">The user profile with microposts (<a
                            href="http://localhost:3000/users/1" target="_blank">/users/1</a>).
                          </span></div> </div>
                    <div class="center figure" id="_fig-other_profile_with_microposts"
                      data-tralics-id="uid1175" data-number="11.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/other_profile_with_microposts_3rd_edition.png"
                          alt="images/figures/other_profile_with_microposts_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.8: </span><span
                          class="description">The profile of a different user,
                          also with microposts (<a href="http://localhost:3000/users/5"
                            target="_blank">/users/5</a>). </span></div>
                    </div>
                    <div class="center figure" id="_fig-user_profile_microposts"
                      data-tralics-id="uid1176" data-number="11.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_profile_microposts_page_2_3rd_edition.png"
                          alt="images/figures/user_profile_microposts_page_2_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.9: </span><span
                          class="description">Micropost pagination links (<a href="http://localhost:3000/users/1?page=2"
                            target="_blank">/users/1?page=2</a>). </span></div>
                    </div>
                  </div>
                  <div id="_sec-profile_micropost_tests" data-tralics-id="uid1177"
                    class="subsection" data-number="11.2.3">
                    <h3><a href="#sec-profile_micropost_tests" class="heading hyperref"><span
                          class="number">11.2.3 </span>Profile micropost tests</a></h3>
                    <p>Because newly activated users get redirected to their
                      profile pages, we already have a test that the profile
                      page renders correctly (<a href="#code-signup_with_account_activation_test"
                        class="hyperref">Listing&nbsp;<span class="ref">10.31</span></a>).<span
                        class="intersentencespace"></span> In this section,
                      we’ll write a short integration test for some of the other
                      elements on the profile page, including the work from this
                      section.<span class="intersentencespace"></span> We’ll
                      start by generating an integration test for the profiles
                      of our site’s users:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test users_profile
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/users_profile_test.rb</span>
</pre></div>
                    </div>
                    <p>To test the micropost display on the profile, we need to
                      associate the fixture microposts with a user.<span class="intersentencespace"></span>
                      Rails includes a convenient way to build associations in
                      fixtures, like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="l-Scalar-Plain">orange</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"I</span><span class="nv"> </span><span class="s">just</span><span class="nv"> </span><span
class="s">ate</span><span class="nv"> </span><span class="s">an</span><span class="nv"> </span><span
class="s">orange!"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 10.minutes.ago %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</span></pre></div>
                    </div>
                    <p>By identifying the <code>user</code> as <code>michael</code>,
                      we tell Rails to associate this micropost with the
                      corresponding user in the users fixture:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="hll"><span class="l-Scalar-Plain">michael</span><span
class="p-Indicator">:</span>
</span>  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">Michael Example</span>
  <span class="l-Scalar-Plain">email</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael@example.com</span>
  <span class="l-Scalar-Plain">.</span>
  <span class="l-Scalar-Plain">.</span>
  <span class="l-Scalar-Plain">.</span>
</pre></div>
                    </div>
                    <p>To test micropost pagination, we’ll also generate some
                      additional micropost fixtures using the same embedded Ruby
                      technique we used to make additional users in <a href="#code-users_fixtures_extra_users"
                        class="hyperref">Listing&nbsp;<span class="ref">9.43</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="l-Scalar-Plain">&lt;% 30.times do |n| %&gt;</span>
<span class="l-Scalar-Plain">micropost_&lt;%= n %&gt;</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= Faker::Lorem.sentence(5) %&gt;</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 42.days.ago %&gt;</span>
  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
<span class="l-Scalar-Plain">&lt;% end %&gt;</span>
</pre></div>
                    </div>
                    <p>Putting all this together gives the updated micropost
                      fixtures in <a href="#code-updated_micropost_fixtures" class="hyperref">Listing&nbsp;<span
                          class="ref">11.26</span></a>.</p>
                    <div class="codelisting" id="_code-updated_micropost_fixtures"
                      data-tralics-id="uid1178" data-number="11.26">
                      <div class="heading"><span class="number">Listing 11.26:</span>
                        <span class="description">Micropost fixtures with user
                          associations.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/fixtures/microposts.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="l-Scalar-Plain">orange</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"I</span><span class="nv"> </span><span class="s">just</span><span class="nv"> </span><span
class="s">ate</span><span class="nv"> </span><span class="s">an</span><span class="nv"> </span><span
class="s">orange!"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 10.minutes.ago %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</span>
<span class="l-Scalar-Plain">tau_manifesto</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Check</span><span class="nv"> </span><span class="s">out</span><span
class="nv"> </span><span class="s">the</span><span class="nv"> </span><span class="s">@tauday</span><span
class="nv"> </span><span class="s">site</span><span class="nv"> </span><span class="s">by</span><span
class="nv"> </span><span class="s">@mhartl:</span><span class="nv"> </span><span
class="s">http://tauday.com"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 3.years.ago %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</span>
<span class="l-Scalar-Plain">cat_video</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Sad</span><span class="nv"> </span><span class="s">cats</span><span class="nv"> </span><span
class="s">are</span><span class="nv"> </span><span class="s">sad:</span><span class="nv"> </span><span
class="s">http://youtu.be/PKffm2uI4dk"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 2.hours.ago %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</span>
<span class="l-Scalar-Plain">most_recent</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Writing</span><span class="nv"> </span><span class="s">a</span><span
class="nv"> </span><span class="s">short</span><span class="nv"> </span><span class="s">test"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= Time.zone.now %&gt;</span>
<span class="hll">  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</span>
<span class="hll"><span class="l-Scalar-Plain">&lt;% 30.times do |n| %&gt;</span>
</span><span class="hll"><span class="l-Scalar-Plain">micropost_&lt;%= n %&gt;</span><span
class="p-Indicator">:</span>
</span><span class="hll">  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= Faker::Lorem.sentence(5) %&gt;</span>
</span><span class="hll">  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 42.days.ago %&gt;</span>
</span><span class="hll">  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</span><span class="hll"><span class="l-Scalar-Plain">&lt;% end %&gt;</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>With the test data thus prepared, the test itself is
                      fairly straightforward: we visit the user profile page and
                      check for the page title and the user’s name, Gravatar,
                      micropost count, and paginated microposts.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-user_profile_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.27</span></a>.<span class="intersentencespace"></span>
                      Note the use of the <code>full_title</code> helper from <a
                        href="#code-title_helper" class="hyperref">Listing&nbsp;<span
                          class="ref">4.2</span></a> to test the page’s title,
                      which we gain access to by including the Application
                      Helper module into the test.<sup id="_cha-11_footnote-ref-9"
                        class="footnote"><a href="#cha-11_footnote-9">9</a></sup></p>
                    <div class="codelisting" id="_code-user_profile_test" data-tralics-id="uid1180"
                      data-number="11.27">
                      <div class="heading"><span class="number">Listing 11.27:</span>
                        <span class="description">A test for the user profile.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/integration/users_profile_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersProfileTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>
<span class="hll">  <span class="kp">include</span> <span class="no">ApplicationHelper</span>
</span>
  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"profile display"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
    <span class="n">assert_template</span> <span class="s1">'users/show'</span>
    <span class="n">assert_select</span> <span class="s1">'title'</span><span class="p">,</span> <span
class="n">full_title</span><span class="p">(</span><span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">)</span>
    <span class="n">assert_select</span> <span class="s1">'h1'</span><span class="p">,</span> <span
class="ss">text</span><span class="p">:</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span>
    <span class="n">assert_select</span> <span class="s1">'h1&gt;img.gravatar'</span>
    <span class="n">assert_match</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span><span
class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">response</span><span
class="o">.</span><span class="n">body</span>
    <span class="n">assert_select</span> <span class="s1">'div.pagination'</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">micropost</span><span
class="o">|</span>
      <span class="n">assert_match</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">content</span><span class="p">,</span> <span class="n">response</span><span
class="o">.</span><span class="n">body</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The micropost count assertion in <a href="#code-user_profile_test"
                        class="hyperref">Listing&nbsp;<span class="ref">11.27</span></a>
                      uses <code>response.body</code>, which we saw briefly in
                      the <a href="#cha-account_activation_and_password_reset"
                        class="hyperref">Chapter&nbsp;<span class="ref">10</span></a>
                      Вправи (<a href="#sec-activation_resets_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">10.5</span></a>).<span class="intersentencespace"></span>
                      Despite its name, <code>response.body</code> contains the
                      full HTML source of the page (and not just the page’s
                      body).<span class="intersentencespace"></span> This means
                      that if all we care about is that the number of microposts
                      appears <em>somewhere</em> on the page, we can look for a
                      match as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_match</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">count</span><span class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span
class="n">response</span><span class="o">.</span><span class="n">body</span>
</pre></div>
                    </div>
                    <p>This is a much less specific assertion than <code>assert_select</code>;
                      in particular, unlike <code>assert_select</code>, using <code>assert_match</code>
                      in this context doesn’t require us to indicate which HTML
                      tag we’re looking for.</p>
                    <p><a href="#code-user_profile_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.27</span></a> also introduces the
                      nesting syntax for <code>assert_select</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_select</span> <span class="s1">'h1&gt;img.gravatar'</span>
</pre></div>
                    </div>
                    <p>This checks for an <code>img</code> tag with class <code>gravatar</code>
                      <em>inside</em> a top-level heading tag (<code>h1</code>).</p>
                    <p>Because the application code was working, the test suite
                      should be <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1181" data-tralics-id="uid1181"
                      data-number="11.28">
                      <div class="heading"><span class="number">Listing 11.28:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-manipulating_microposts" data-tralics-id="cid75" class="section"
                  data-number="11.3">
                  <h2><a href="#sec-manipulating_microposts" class="heading hyperref"><span
                        class="number">11.3 </span>Manipulating microposts</a></h2>
                  <p>Having finished both the data modeling and display
                    templates for microposts, we now turn our attention to the
                    interface for creating them through the web.<span class="intersentencespace"></span>
                    In this section, we’ll also see the first hint of a <em>status
                      feed</em>—a notion brought to full fruition in <a href="#cha-following_users"
                      class="hyperref">Chapter&nbsp;<span class="ref">12</span></a>.<span
                      class="intersentencespace"></span> Finally, as with users,
                    we’ll make it possible to destroy microposts through the
                    web.</p>
                  <p>There is one break with past convention worth noting: the
                    interface to the Microposts resource will run principally
                    through the Profile and Home pages, so we won’t need actions
                    like <code>new</code> or <code>edit</code> in the
                    Microposts controller; we’ll need only <code>create</code>
                    and <code>destroy</code>.<span class="intersentencespace"></span>
                    This leads to the routes for the Microposts resource shown
                    in <a href="#code-microposts_resource" class="hyperref">Listing&nbsp;<span
                        class="ref">11.29</span></a>.<span class="intersentencespace"></span>
                    The code in <a href="#code-microposts_resource" class="hyperref">Listing&nbsp;<span
                        class="ref">11.29</span></a> leads in turn to the
                    RESTful routes shown in <a href="#table-RESTful_microposts"
                      class="hyperref">Table&nbsp;<span class="ref">11.2</span></a>,
                    which is a small subset of the full set of routes seen in <a
                      href="#table-demo_RESTful_microposts" class="hyperref">Table&nbsp;<span
                        class="ref">2.3</span></a>.<span class="intersentencespace"></span>
                    Of course, this simplicity is a sign of being <em>more</em>
                    advanced, not less—we’ve come a long way since our reliance
                    on scaffolding in <a href="#cha-a_toy_app" class="hyperref">Chapter&nbsp;<span
                        class="ref">2</span></a>, and we no longer need most of
                    its complexity.</p>
                  <div class="codelisting" id="_code-microposts_resource" data-tralics-id="uid1182"
                    data-number="11.29">
                    <div class="heading"><span class="number">Listing 11.29:</span>
                      <span class="description">Routes for the Microposts
                        resource.<span class="intersentencespace"></span> <span
                          class="break"></span> <span class="filepath">config/routes.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>                <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>    <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span>    <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span>    <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span>    <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
  <span class="n">get</span>    <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#new'</span>
  <span class="n">post</span>   <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#create'</span>
  <span class="n">delete</span> <span class="s1">'logout'</span>  <span class="o">=&gt;</span> <span
class="s1">'sessions#destroy'</span>
  <span class="n">resources</span> <span class="ss">:users</span>
  <span class="n">resources</span> <span class="ss">:account_activations</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="o">]</span>
  <span class="n">resources</span> <span class="ss">:password_resets</span><span
class="p">,</span>     <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span
class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:microposts</span><span
class="p">,</span>          <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span
class="ss">:destroy</span><span class="o">]</span>
</span><span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="table" id="_table-RESTful_microposts" data-tralics-id="uid1183"
                    data-number="11.2">
                    <table class="tabular">
                      <tbody>
                        <tr class="bottom_border">
                          <td class="align_left"><strong>HTTP request</strong></td>
                          <td class="align_left"><strong>URL</strong></td>
                          <td class="align_left"><strong>Action</strong></td>
                          <td class="align_left"><strong>Purpose</strong></td>
                        </tr>
                        <tr>
                          <td class="align_left"><span class="tt">POST</span></td>
                          <td class="align_left">/microposts</td>
                          <td class="align_left"><code>create</code></td>
                          <td class="align_left">create a new micropost</td>
                        </tr>
                        <tr>
                          <td class="align_left"><span class="tt">DELETE</span></td>
                          <td class="align_left">/microposts/1</td>
                          <td class="align_left"><code>destroy</code></td>
                          <td class="align_left">delete micropost with id <code>1</code></td>
                        </tr>
                      </tbody>
                    </table>
                    <div class="caption"><span class="header">Table 11.2: </span><span
                        class="description">RESTful routes provided by the
                        Microposts resource in <a href="#code-microposts_resource"
                          class="hyperref">Listing&nbsp;<span class="ref">11.29</span></a>.
                      </span></div>
                  </div>
                  <div id="_sec-micropost_access_control" data-tralics-id="uid1184"
                    class="subsection" data-number="11.3.1">
                    <h3><a href="#sec-micropost_access_control" class="heading hyperref"><span
                          class="number">11.3.1 </span>Micropost access control</a></h3>
                    <p>We begin our development of the Microposts resource with
                      some access control in the Microposts controller.<span class="intersentencespace"></span>
                      In particular, because we access microposts through their
                      associated users, both the <code>create</code> and <code>destroy</code>
                      actions must require users to be logged in.</p>
                    <p>Tests to enforce logged-in status mirror those for the
                      Users controller (<a href="#code-edit_update_redirect_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">9.17</span></a>
                      and <a href="#code-action_tests_admin" class="hyperref">Listing&nbsp;<span
                          class="ref">9.56</span></a>).<span class="intersentencespace"></span>
                      We simply issue the correct request to each action and
                      confirm that the micropost count is unchanged and the
                      result is redirected to the login URL, as seen in <a href="#code-create_destroy_micropost_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">11.30</span></a>.</p>
                    <div class="codelisting" id="_code-create_destroy_micropost_tests"
                      data-tralics-id="uid1185" data-number="11.30">
                      <div class="heading"><span class="number">Listing 11.30:</span>
                        <span class="description">Authorization tests for the
                          Microposts controller.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/microposts_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostsControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@micropost</span> <span class="o">=</span> <span class="n">microposts</span><span
class="p">(</span><span class="ss">:orange</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect create when not logged in"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Micropost.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="ss">:create</span><span class="p">,</span> <span
class="ss">micropost</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">content</span><span class="p">:</span> <span class="s2">"Lorem ipsum"</span> <span
class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect destroy when not logged in"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Micropost.count'</span> <span
class="k">do</span>
      <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@micropost</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Writing the application code needed to get the tests in <a
                        href="#code-create_destroy_micropost_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">11.30</span></a> to pass requires a little
                      refactoring first.<span class="intersentencespace"></span>
                      Recall from <a href="#sec-requiring_logged_in_users" class="hyperref">Section&nbsp;<span
                          class="ref">9.2.1</span></a> that we enforced the
                      login requirement using a before filter that called the <code>logged_in_user</code>
                      method (<a href="#code-authorize_before_filter" class="hyperref">Listing&nbsp;<span
                          class="ref">9.12</span></a>).<span class="intersentencespace"></span>
                      At the time, we needed that method only in the Users
                      controller, but now we find that we need it in the
                      Microposts controller as well, so we’ll move it into the
                      Application controller, which is the base class of all
                      controllers (<a href="#sec-a_controller_class" class="hyperref">Section&nbsp;<span
                          class="ref">4.4.4</span></a>).<span class="intersentencespace"></span>
                      The result appears in <a href="#code-sessions_helper_authenticate"
                        class="hyperref">Listing&nbsp;<span class="ref">11.31</span></a>.</p>
                    <div class="codelisting" id="_code-sessions_helper_authenticate"
                      data-tralics-id="uid1186" data-number="11.31">
                      <div class="heading"><span class="number">Listing 11.31:</span>
                        <span class="description">Moving the <code>logged_in_user</code>
                          method into the Application controller.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/application_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">ApplicationController</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span
class="p">:</span> <span class="ss">:exception</span>
  <span class="kp">include</span> <span class="no">SessionsHelper</span>

  <span class="kp">private</span>

    <span class="c1"># Confirms a logged-in user.</span>
    <span class="k">def</span> <span class="nf">logged_in_user</span>
      <span class="k">unless</span> <span class="n">logged_in?</span>
        <span class="n">store_location</span>
        <span class="n">flash</span><span class="o">[</span><span class="ss">:danger</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Please log in."</span>
        <span class="n">redirect_to</span> <span class="n">login_url</span>
      <span class="k">end</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To avoid code repetition, you should also remove <code>logged_in_user</code>
                      from the Users controller at this time.</p>
                    <p>With the code in <a href="#code-sessions_helper_authenticate"
                        class="hyperref">Listing&nbsp;<span class="ref">11.31</span></a>,
                      the <code>logged_in_user</code> method is now available
                      in the Microposts controller, which means that we can add
                      <code>create</code> and <code>destroy</code> actions and
                      then restrict access to them using a before filter, as
                      shown in <a href="#code-microposts_controller_access_control"
                        class="hyperref">Listing&nbsp;<span class="ref">11.32</span></a>.</p>
                    <div class="codelisting" id="_code-microposts_controller_access_control"
                      data-tralics-id="uid1187" data-number="11.32">
                      <div class="heading"><span class="number">Listing 11.32:</span>
                        <span class="description">Adding authorization to the
                          Microposts controller actions.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">MicropostsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span
class="o">]</span>

  <span class="k">def</span> <span class="nf">create</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests should pass:</p>
                    <div class="codelisting" id="_uid1188" data-tralics-id="uid1188"
                      data-number="11.33">
                      <div class="heading"><span class="number">Listing 11.33:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-creating_microposts" data-tralics-id="uid1189" class="subsection"
                    data-number="11.3.2">
                    <h3><a href="#sec-creating_microposts" class="heading hyperref"><span
                          class="number">11.3.2 </span>Creating microposts</a></h3>
                    <p>In <a href="#cha-sign_up" class="hyperref">Chapter&nbsp;<span
                          class="ref">7</span></a>, we implemented user signup
                      by making an HTML form that issued an HTTP <span class="tt">POST</span>
                      request to the <code>create</code> action in the Users
                      controller.<span class="intersentencespace"></span> The
                      implementation of micropost creation is similar; the main
                      difference is that, rather than using a separate page at
                      /microposts/new, we will put the form on the Home page
                      itself (i.e., the root path&nbsp;/), as mocked up in <a href="#fig-home_page_with_micropost_form_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">11.10</span></a>.</p>
                    <div class="center figure" id="_fig-home_page_with_micropost_form_mockup"
                      data-tralics-id="uid1190" data-number="11.10">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_page_with_micropost_form_mockup_bootstrap.png"
                          alt="images/figures/home_page_with_micropost_form_mockup_bootstrap"></div>
                      <div class="caption"><span class="header">Figure 11.10: </span><span
                          class="description">A mockup of the Home page with a
                          form for creating microposts. </span></div>
                    </div>
                    <p>When we last left the Home page, it appeared as in <a href="#fig-sample_app_logo"
                        class="hyperref">Figure&nbsp;<span class="ref">5.6</span></a>—that
                      is, it had a “Sign up now!”<span class="intersentencespace"></span>
                      button in the middle.<span class="intersentencespace"></span>
                      Since a micropost creation form makes sense only in the
                      context of a particular logged-in user, one goal of this
                      section will be to serve different versions of the Home
                      page depending on a visitor’s login status.<span class="intersentencespace"></span>
                      We’ll implement this in <a href="#code-microposts_home_page"
                        class="hyperref">Listing&nbsp;<span class="ref">11.35</span></a>
                      below.</p>
                    <p>We’ll start with the <code>create</code> action for
                      microposts, which is similar to its user analogue (<a href="#code-user_create_action"
                        class="hyperref">Listing&nbsp;<span class="ref">7.23</span></a>);
                      the principal difference lies in using the user/micropost
                      association to <code>build</code> the new micropost, as
                      seen in <a href="#code-microposts_create_action" class="hyperref">Listing&nbsp;<span
                          class="ref">11.34</span></a>.<span class="intersentencespace"></span>
                      Note the use of strong parameters via <code>micropost_params</code>,
                      which permits only the micropost’s <code>content</code>
                      attribute to be modified through the web.</p>
                    <div class="codelisting" id="_code-microposts_create_action"
                      data-tralics-id="uid1191" data-number="11.34">
                      <div class="heading"><span class="number">Listing 11.34:</span>
                        <span class="description">The Microposts controller <code>create</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">MicropostsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span
class="o">]</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@micropost</span> <span class="o">=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">build</span><span class="p">(</span><span class="n">micropost_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">save</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Micropost created!"</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">else</span>
      <span class="n">render</span> <span class="s1">'static_pages/home'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">micropost_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:micropost</span><span class="p">)</span><span
class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:content</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To build a form for creating microposts, we use the code
                      in <a href="#code-microposts_home_page" class="hyperref">Listing&nbsp;<span
                          class="ref">11.35</span></a>, which serves up
                      different HTML based on whether the site visitor is logged
                      in or not.</p>
                    <div class="codelisting" id="_code-microposts_home_page" data-tralics-id="uid1192"
                      data-number="11.35">
                      <div class="heading"><span class="number">Listing 11.35:</span>
                        <span class="description">Adding microposts creation to
                          the Home page (<a href="http://localhost:3000/" target="_blank">/</a>).<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%</span> <span
class="k">if</span> <span class="n">logged_in?</span> <span class="cp">%&gt;</span>
</span><span class="hll">  <span class="nt">&lt;div</span> <span class="na">class=</span><span
class="s">"row"</span><span class="nt">&gt;</span>
</span><span class="hll">    <span class="nt">&lt;aside</span> <span class="na">class=</span><span
class="s">"col-md-4"</span><span class="nt">&gt;</span>
</span><span class="hll">      <span class="nt">&lt;section</span> <span class="na">class=</span><span
class="s">"user_info"</span><span class="nt">&gt;</span>
</span><span class="hll">        <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/user_info'</span> <span class="cp">%&gt;</span>
</span><span class="hll">      <span class="nt">&lt;/section&gt;</span>
</span><span class="hll">      <span class="nt">&lt;section</span> <span class="na">class=</span><span
class="s">"micropost_form"</span><span class="nt">&gt;</span>
</span><span class="hll">        <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/micropost_form'</span> <span class="cp">%&gt;</span>
</span><span class="hll">      <span class="nt">&lt;/section&gt;</span>
</span><span class="hll">    <span class="nt">&lt;/aside&gt;</span>
</span><span class="hll">  <span class="nt">&lt;/div&gt;</span>
</span><span class="hll"><span class="cp">&lt;%</span> <span class="k">else</span> <span
class="cp">%&gt;</span>
</span>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"center jumbotron"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;h1&gt;</span>Welcome to the Sample App<span class="nt">&lt;/h1&gt;</span>

    <span class="nt">&lt;h2&gt;</span>
      This is the home page for the
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://www.railstutorial.org/"</span><span
class="nt">&gt;</span>Ruby on Rails Tutorial<span class="nt">&lt;/a&gt;</span>
      sample application.
    <span class="nt">&lt;/h2&gt;</span>

    <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"Sign up now!"</span><span
class="p">,</span> <span class="n">signup_path</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-lg btn-primary"</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>

  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">image_tag</span><span
class="p">(</span><span class="s2">"rails.png"</span><span class="p">,</span> <span
class="ss">alt</span><span class="p">:</span> <span class="s2">"Rails logo"</span><span
class="p">),</span>
              <span class="s1">'http://rubyonrails.org/'</span> <span class="cp">%&gt;</span>
<span class="hll"><span class="cp">&lt;%</span> <span class="k">end</span> <span
class="cp">%&gt;</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>(Having so much code in each branch of the <code>if</code>-<code>else</code>
                      conditional is a bit messy, and cleaning it up using
                      partials is left as an exercise (<a href="#sec-micropost_exercises"
                        class="hyperref">Section&nbsp;<span class="ref">11.6</span></a>).)</p>
                    <p>To get the page defined in <a href="#code-microposts_home_page"
                        class="hyperref">Listing&nbsp;<span class="ref">11.35</span></a>
                      working, we need to create and fill in a couple of
                      partials.<span class="intersentencespace"></span> The
                      first is the new Home page sidebar, as shown in <a href="#code-user_info"
                        class="hyperref">Listing&nbsp;<span class="ref">11.36</span></a>.</p>
                    <div class="codelisting" id="_code-user_info" data-tralics-id="uid1193"
                      data-number="11.36">
                      <div class="heading"><span class="number">Listing 11.36:</span>
                        <span class="description">The partial for the user info
                          sidebar.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/shared/_user_info.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="n">gravatar_for</span><span class="p">(</span><span class="n">current_user</span><span
class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">50</span><span
class="p">),</span> <span class="n">current_user</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;span&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"view my profile"</span><span class="p">,</span> <span class="n">current_user</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;span&gt;</span><span class="cp">&lt;%=</span> <span class="n">pluralize</span><span
class="p">(</span><span class="n">current_user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span><span
class="p">,</span> <span class="s2">"micropost"</span><span class="p">)</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/span&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that, as in the profile sidebar (<a href="#code-user_show_microposts"
                        class="hyperref">Listing&nbsp;<span class="ref">11.23</span></a>),
                      the user info in <a href="#code-user_info" class="hyperref">Listing&nbsp;<span
                          class="ref">11.36</span></a> displays the total number
                      of microposts for the user.<span class="intersentencespace"></span>
                      There’s a slight difference in the display, though; in the
                      profile sidebar, “Microposts” is a label, and showing
                      “Microposts (1)” makes sense.<span class="intersentencespace"></span>
                      In the present case, though, saying “1 microposts” is
                      ungrammatical, so we arrange to display “1 micropost” and
                      “2 microposts” using the <code>pluralize</code> method we
                      saw in <a href="#sec-signup_error_messages" class="hyperref">Section&nbsp;<span
                          class="ref">7.3.3</span></a>.</p>
                    <p>We next define the form for creating microposts (<a href="#code-micropost_form"
                        class="hyperref">Listing&nbsp;<span class="ref">11.37</span></a>),
                      which is similar to the signup form in <a href="#code-signup_form"
                        class="hyperref">Listing&nbsp;<span class="ref">7.13</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_form" data-tralics-id="uid1194"
                      data-number="11.37">
                      <div class="heading"><span class="number">Listing 11.37:</span>
                        <span class="description">The form partial for creating
                          microposts.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/shared/_micropost_form.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="vi">@micropost</span><span class="p">)</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/error_messages'</span><span
class="p">,</span> <span class="ss">object</span><span class="p">:</span> <span
class="n">f</span><span class="o">.</span><span class="n">object</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"field"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_area</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">placeholder</span><span class="p">:</span> <span class="s2">"Compose new micropost..."</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Post"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>We need to make two changes before the form in <a href="#code-micropost_form"
                        class="hyperref">Listing&nbsp;<span class="ref">11.37</span></a>
                      will work.<span class="intersentencespace"></span> First,
                      we need to define <code>@micropost</code>, which (as
                      before) we do through the association:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@micropost</span> <span class="o">=</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">build</span>
</pre></div>
                    </div>
                    <p>The result appears in <a href="#code-micropost_instance_variable"
                        class="hyperref">Listing&nbsp;<span class="ref">11.38</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_instance_variable"
                      data-tralics-id="uid1195" data-number="11.38">
                      <div class="heading"><span class="number">Listing 11.38:</span>
                        <span class="description">Adding a micropost instance
                          variable to the <code>home</code> action.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/static_pages_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
<span class="hll">    <span class="vi">@micropost</span> <span class="o">=</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">build</span> <span class="k">if</span> <span class="n">logged_in?</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">help</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">about</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">contact</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Of course, <code>current_user</code> exists only if the
                      user is logged in, so the <code>@micropost</code>
                      variable should only be defined in this case.</p>
                    <p>The second change needed to get <a href="#code-micropost_form"
                        class="hyperref">Listing&nbsp;<span class="ref">11.37</span></a>
                      to work is to redefine the error-messages partial so the
                      following code from <a href="#code-micropost_form" class="hyperref">Listing&nbsp;<span
                          class="ref">11.37</span></a> works:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/error_messages'</span><span class="p">,</span> <span class="ss">object</span><span
class="p">:</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span> <span
class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>You may recall from <a href="#code-f_error_messages" class="hyperref">Listing&nbsp;<span
                          class="ref">7.18</span></a> that the error-messages
                      partial references the <code>@user</code> variable
                      explicitly, but in the present case we have an <code>@micropost</code>
                      variable instead.<span class="intersentencespace"></span>
                      To unify these cases, we can pass the form variable&nbsp;<code>f</code>
                      to the partial and access the associated object through <code>f.object</code>,
                      so that in</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span>
</pre></div>
                    </div>
                    <p><code>f.object</code> is <code>@user</code>, and in</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">form_for</span><span class="p">(</span><span
class="vi">@micropost</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span>
</pre></div>
                    </div>
                    <p><code>f.object</code> is <code>@micropost</code>, etc.</p>
                    <p>To pass the object to the partial, we use a hash with
                      value equal to the object and key equal to the desired
                      name of the variable in the partial, which is what the
                      second line in <a href="#code-micropost_form" class="hyperref">Listing&nbsp;<span
                          class="ref">11.37</span></a> accomplishes.<span class="intersentencespace"></span>
                      In other words, <code>object: f.object</code> creates a
                      variable called <code>object</code> in the <code>error_messages</code>
                      partial, and we can use it to construct a customized error
                      message, as shown in <a href="#code-updated_error_messages_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">11.39</span></a>.</p>
                    <div class="codelisting" id="_code-updated_error_messages_partial"
                      data-tralics-id="uid1196" data-number="11.39">
                      <div class="heading"><span class="number">Listing 11.39:</span>
                        <span class="description">Error messages that work with
                          other objects.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/shared/_error_messages.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%</span> <span
class="k">if</span> <span class="n">object</span><span class="o">.</span><span class="n">errors</span><span
class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
</span>  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"error_explanation"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"alert alert-danger"</span><span
class="nt">&gt;</span>
<span class="hll">      The form contains <span class="cp">&lt;%=</span> <span class="n">pluralize</span><span
class="p">(</span><span class="n">object</span><span class="o">.</span><span class="n">errors</span><span
class="o">.</span><span class="n">count</span><span class="p">,</span> <span class="s2">"error"</span><span
class="p">)</span> <span class="cp">%&gt;</span>.
</span>    <span class="nt">&lt;/div&gt;</span>
    <span class="nt">&lt;ul&gt;</span>
<span class="hll">    <span class="cp">&lt;%</span> <span class="n">object</span><span
class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">full_messages</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">msg</span><span class="o">|</span> <span class="cp">%&gt;</span>
</span>      <span class="nt">&lt;li&gt;</span><span class="cp">&lt;%=</span> <span
class="n">msg</span> <span class="cp">%&gt;</span><span class="nt">&lt;/li&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/ul&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, you should verify that the test suite is <span
                        style="color: red"><span class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1197" data-tralics-id="uid1197"
                      data-number="11.40">
                      <div class="heading"><span class="number">Listing 11.40:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>This is a hint that we need to update the other
                      occurrences of the error-messages partial, which we used
                      when signing up users (<a href="#code-f_error_messages" class="hyperref">Listing&nbsp;<span
                          class="ref">7.18</span></a>), resetting passwords (<a
                        href="#code-password_reset_form" class="hyperref">Listing&nbsp;<span
                          class="ref">10.50</span></a>), and editing users (<a href="#code-user_edit_view"
                        class="hyperref">Listing&nbsp;<span class="ref">9.2</span></a>).<span
                        class="intersentencespace"></span> The updated versions
                      are shown in <a href="#code-signup_errors_updated" class="hyperref">Listing&nbsp;<span
                          class="ref">11.41</span></a>, <a href="#code-password_reset_updated"
                        class="hyperref">Listing&nbsp;<span class="ref">11.43</span></a>,
                      and <a href="#code-edit_errors_updated" class="hyperref">Listing&nbsp;<span
                          class="ref">11.42</span></a>.</p>
                    <div class="codelisting" id="_code-signup_errors_updated" data-tralics-id="uid1198"
                      data-number="11.41">
                      <div class="heading"><span class="number">Listing 11.41:</span>
                        <span class="description">Updating the rendering of user
                          signup errors.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/new.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Sign up'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Sign up<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/error_messages'</span><span class="p">,</span> <span class="ss">object</span><span
class="p">:</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span> <span
class="cp">%&gt;</span>
</span>      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Create my account"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-edit_errors_updated" data-tralics-id="uid1199"
                      data-number="11.42">
                      <div class="heading"><span class="number">Listing 11.42:</span>
                        <span class="description">Updating the errors for
                          editing users.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/edit.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre> <span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s2">"Edit user"</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Update your profile<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/error_messages'</span><span class="p">,</span> <span class="ss">object</span><span
class="p">:</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:name</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_field</span> <span class="ss">:name</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:email</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">email_field</span> <span class="ss">:email</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Save changes"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"gravatar_edit"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="vi">@user</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"http://gravatar.com/emails"</span><span
class="nt">&gt;</span>change<span class="nt">&lt;/a&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-password_reset_updated" data-tralics-id="uid1200"
                      data-number="11.43">
                      <div class="heading"><span class="number">Listing 11.43:</span>
                        <span class="description">Updating the errors for
                          password resets.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/password_resets/edit.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="s1">'Reset password'</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;h1&gt;</span>Password reset<span class="nt">&lt;/h1&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-6 col-md-offset-3"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">form_for</span><span class="p">(</span><span
class="vi">@user</span><span class="p">,</span> <span class="ss">url</span><span
class="p">:</span> <span class="n">password_reset_path</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">))</span> <span class="k">do</span> <span class="o">|</span><span
class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/error_messages'</span><span class="p">,</span> <span class="ss">object</span><span
class="p">:</span> <span class="n">f</span><span class="o">.</span><span class="n">object</span> <span
class="cp">%&gt;</span>
</span>
      <span class="cp">&lt;%=</span> <span class="n">hidden_field_tag</span> <span
class="ss">:email</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">email</span> <span class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">label</span> <span class="ss">:password_confirmation</span><span class="p">,</span> <span
class="s2">"Confirmation"</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">password_field</span> <span class="ss">:password_confirmation</span><span
class="p">,</span> <span class="ss">class</span><span class="p">:</span> <span class="s1">'form-control'</span> <span
class="cp">%&gt;</span>

      <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Update password"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, all the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
</pre></div>
                    </div>
                    <p>Additionally, all the HTML in this section should render
                      properly, showing the form as in <a href="#fig-home_with_form"
                        class="hyperref">Figure&nbsp;<span class="ref">11.11</span></a>,
                      and a form with a submission error as in <a href="#fig-home_form_errors"
                        class="hyperref">Figure&nbsp;<span class="ref">11.12</span></a>.</p>
                    <div class="center figure" id="_fig-home_with_form" data-tralics-id="uid1201"
                      data-number="11.11">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_with_form_3rd_edition.png"
                          alt="images/figures/home_with_form_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.11: </span><span
                          class="description">The Home page with a new micropost
                          form. </span></div>
                    </div>
                    <div class="center figure" id="_fig-home_form_errors" data-tralics-id="uid1202"
                      data-number="11.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_form_errors_3rd_edition.png"
                          alt="images/figures/home_form_errors_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.12: </span><span
                          class="description">The Home page with a form error. </span></div>
                    </div>
                  </div>
                  <div id="_sec-a_proto_feed" data-tralics-id="uid1203" class="subsection"
                    data-number="11.3.3">
                    <h3><a href="#sec-a_proto_feed" class="heading hyperref"><span
                          class="number">11.3.3 </span>A proto-feed</a></h3>
                    <p>Although the micropost form is actually now working,
                      users can’t immediately see the results of a successful
                      submission because the current Home page doesn’t display
                      any microposts.<span class="intersentencespace"></span> If
                      you like, you can verify that the form shown in <a href="#fig-home_with_form"
                        class="hyperref">Figure&nbsp;<span class="ref">11.11</span></a>
                      is working by submitting a valid entry and then navigating
                      to the <a href="http://localhost:3000/users/1" target="_blank">profile
                        page</a> to see the post, but that’s rather cumbersome.<span
                        class="intersentencespace"></span> It would be far
                      better to have a <em>feed</em> of microposts that
                      includes the user’s own posts, as mocked up in <a href="#fig-proto_feed_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">11.13</span></a>.<span
                        class="intersentencespace"></span> (In <a href="#cha-following_users"
                        class="hyperref">Chapter&nbsp;<span class="ref">12</span></a>,
                      we’ll generalize this feed to include the microposts of
                      users being <em>followed</em> by the current user.)</p>
                    <div class="center figure" id="_fig-proto_feed_mockup" data-tralics-id="uid1204"
                      data-number="11.13">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/proto_feed_mockup_3rd_edition.png"
                          alt="images/figures/proto_feed_mockup_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.13: </span><span
                          class="description">A mockup of the Home page with a
                          proto-feed. </span></div>
                    </div>
                    <p>Since each user should have a feed, we are led naturally
                      to a <code>feed</code> method in the User model, which
                      will initially just select all the microposts belonging to
                      the current user.<span class="intersentencespace"></span>
                      We’ll accomplish this using the <code>where</code> method
                      on the <code>Micropost</code> model (seen briefly before
                      in <a href="#sec-activation_resets_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">10.5</span></a>), as shown in <a href="#code-proto_status_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">11.44</span></a>.<sup
                        id="_cha-11_footnote-ref-10" class="footnote"><a href="#cha-11_footnote-10">10</a></sup></p>
                    <div class="codelisting" id="_code-proto_status_feed" data-tralics-id="uid1206"
                      data-number="11.44">
                      <div class="heading"><span class="number">Listing 11.44:</span>
                        <span class="description">A preliminary implementation
                          for the micropost status feed.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Defines a proto-feed.</span>
  <span class="c1"># See "Following users" for the full implementation.</span>
  <span class="k">def</span> <span class="nf">feed</span>
<span class="hll">    <span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id = ?"</span><span
class="p">,</span> <span class="nb">id</span><span class="p">)</span>
</span>  <span class="k">end</span>

    <span class="kp">private</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The question mark in</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id = ?"</span><span
class="p">,</span> <span class="nb">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>ensures that <code>id</code>&nbsp;is properly <em>escaped</em>
                      before being included in the underlying SQL query, thereby
                      avoiding a serious security hole called <a href="http://en.wikipedia.org/wiki/SQL_injection"
                        target="_blank"><em>SQL injection</em></a>.<span class="intersentencespace"></span>
                      The <code>id</code> attribute here is just an integer
                      (i.e., <code>self.id</code>, the unique ID of the user),
                      so there is no danger of SQL injection in this case, but <em>always</em>
                      escaping variables injected into SQL statements is a good
                      habit to cultivate.</p>
                    <p>Alert readers might note at this point that the code in <a
                        href="#code-proto_status_feed" class="hyperref">Listing&nbsp;<span
                          class="ref">11.44</span></a> is essentially equivalent
                      to writing</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">def</span> <span class="nf">feed</span>
  <span class="n">microposts</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>We’ve used the code in <a href="#code-proto_status_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">11.44</span></a>
                      instead because it generalizes much more naturally to the
                      full status feed needed in <a href="#cha-following_users"
                        class="hyperref">Chapter&nbsp;<span class="ref">12</span></a>.</p>
                    <p>To use the feed in the sample application, we add an <code>@feed_items</code>
                      instance variable for the current user’s (paginated) feed,
                      as in <a href="#code-feed_instance_variable" class="hyperref">Listing&nbsp;<span
                          class="ref">11.45</span></a>, and then add a status
                      feed partial (<a href="#code-feed_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">11.46</span></a>) to the Home page (<a href="#code-home_with_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">11.47</span></a>).</p>
                    <div class="codelisting" id="_code-feed_instance_variable" data-tralics-id="uid1207"
                      data-number="11.45">
                      <div class="heading"><span class="number">Listing 11.45:</span>
                        <span class="description">Adding a feed instance
                          variable to the <code>home</code> action.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/static_pages_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
    <span class="k">if</span> <span class="n">logged_in?</span>
      <span class="vi">@micropost</span>  <span class="o">=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">build</span>
<span class="hll">      <span class="vi">@feed_items</span> <span class="o">=</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">feed</span><span
class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span
class="o">]</span><span class="p">)</span>
</span>    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">help</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">about</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">contact</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-feed_partial" data-tralics-id="uid1208"
                      data-number="11.46">
                      <div class="heading"><span class="number">Listing 11.46:</span>
                        <span class="description">The status feed partial.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/shared/_feed.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="k">if</span> <span
class="vi">@feed_items</span><span class="o">.</span><span class="n">any?</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;ol</span> <span class="na">class=</span><span class="s">"microposts"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="vi">@feed_items</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;/ol&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span class="vi">@feed_items</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The status feed partial defers the rendering to the
                      micropost partial defined in <a href="#code-micropost_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">11.21</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="vi">@feed_items</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>Here Rails knows to call the micropost partial because
                      each element of <code>@feed_items</code> has class <code>Micropost</code>.<span
                        class="intersentencespace"></span> This causes Rails to
                      look for a partial with the corresponding name in the
                      views directory of the given resource:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">app/views/microposts/_micropost.html.erb</span>
</pre></div>
                    </div>
                    <p>We can add the feed to the Home page by rendering the
                      feed partial as usual (<a href="#code-home_with_feed" class="hyperref">Listing&nbsp;<span
                          class="ref">11.47</span></a>).<span class="intersentencespace"></span>
                      The result is a display of the feed on the Home page, as
                      required (<a href="#fig-home_with_proto_feed" class="hyperref">Figure&nbsp;<span
                          class="ref">11.14</span></a>).</p>
                    <div class="codelisting" id="_code-home_with_feed" data-tralics-id="uid1209"
                      data-number="11.47">
                      <div class="heading"><span class="number">Listing 11.47:</span>
                        <span class="description">Adding a status feed to the
                          Home page.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="k">if</span> <span
class="n">logged_in?</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"col-md-4"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"user_info"</span><span
class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/user_info'</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
      <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"micropost_form"</span><span
class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/micropost_form'</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
    <span class="nt">&lt;/aside&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-8"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;h3&gt;</span>Micropost Feed<span class="nt">&lt;/h3&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/feed'</span> <span class="cp">%&gt;</span>
</span>    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
  .
  .
  .
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-home_with_proto_feed" data-tralics-id="uid1210"
                      data-number="11.14">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_with_proto_feed_3rd_edition.png"
                          alt="images/figures/home_with_proto_feed_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.14: </span><span
                          class="description">The Home page with a proto-feed. </span></div>
                    </div>
                    <p>At this point, creating a new micropost works as
                      expected, as seen in <a href="#fig-micropost_created" class="hyperref">Figure&nbsp;<span
                          class="ref">11.15</span></a>.<span class="intersentencespace"></span>
                      There is one subtlety, though: on <em>failed</em>
                      micropost submission, the Home page expects an <code>@feed_items</code>
                      instance variable, so failed submissions currently break.<span
                        class="intersentencespace"></span> The easiest solution
                      is to suppress the feed entirely by assigning it an empty
                      array, as shown in <a href="#code-microposts_create_action_with_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">11.48</span></a>.<span
                        class="intersentencespace"></span> (Unfortunately,
                      returning a paginated feed doesn’t work in this case.<span
                        class="intersentencespace"></span> Implement it and
                      click on a pagination link to see why.)</p>
                    <div class="center figure" id="_fig-micropost_created" data-tralics-id="uid1211"
                      data-number="11.15">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_created_3rd_edition.png"
                          alt="images/figures/micropost_created_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.15: </span><span
                          class="description">The Home page after creating a new
                          micropost. </span></div>
                    </div>
                    <div class="codelisting" id="_code-microposts_create_action_with_feed"
                      data-tralics-id="uid1212" data-number="11.48">
                      <div class="heading"><span class="number">Listing 11.48:</span>
                        <span class="description">Adding an (empty) <code>@feed_items</code>
                          instance variable to the <code>create</code> action.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">MicropostsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span
class="o">]</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@micropost</span> <span class="o">=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">build</span><span class="p">(</span><span class="n">micropost_params</span><span
class="p">)</span>
    <span class="k">if</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">save</span>
      <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span
class="o">]</span> <span class="o">=</span> <span class="s2">"Micropost created!"</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span>
    <span class="k">else</span>
<span class="hll">      <span class="vi">@feed_items</span> <span class="o">=</span> <span
class="o">[]</span>
</span>      <span class="n">render</span> <span class="s1">'static_pages/home'</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">micropost_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:micropost</span><span class="p">)</span><span
class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:content</span><span
class="p">)</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-destroying_microposts" data-tralics-id="uid1213"
                    class="subsection" data-number="11.3.4">
                    <h3><a href="#sec-destroying_microposts" class="heading hyperref"><span
                          class="number">11.3.4 </span>Destroying microposts</a></h3>
                    <p>The last piece of functionality to add to the Microposts
                      resource is the ability to destroy posts.<span class="intersentencespace"></span>
                      As with user deletion (<a href="#sec-the_destroy_action" class="hyperref">Section&nbsp;<span
                          class="ref">9.4.2</span></a>), we accomplish this with
                      “delete” links, as mocked up in <a href="#fig-micropost_delete_links_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">11.16</span></a>.<span
                        class="intersentencespace"></span> Unlike that case,
                      which restricted user destruction to admin users, the
                      delete links will work only for microposts created by the
                      current user.</p>
                    <div class="center figure" id="_fig-micropost_delete_links_mockup"
                      data-tralics-id="uid1214" data-number="11.16">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_delete_links_mockup_3rd_edition.png"
                          alt="images/figures/micropost_delete_links_mockup_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.16: </span><span
                          class="description">A mockup of the proto-feed with
                          micropost delete links. </span></div>
                    </div>
                    <p>Our first step is to add a delete link to the micropost
                      partial as in <a href="#code-micropost_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">11.21</span></a>.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-micropost_partial_with_delete"
                        class="hyperref">Listing&nbsp;<span class="ref">11.49</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_partial_with_delete"
                      data-tralics-id="uid1215" data-number="11.49">
                      <div class="heading"><span class="number">Listing 11.49:</span>
                        <span class="description">Adding a delete link to the
                          micropost partial.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/microposts/_micropost.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;li</span> <span class="na">id=</span><span
class="s">"</span><span class="cp">&lt;%=</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="s">"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">gravatar_for</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">user</span><span class="p">,</span> <span class="ss">size</span><span
class="p">:</span> <span class="mi">50</span><span class="p">),</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">user</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"user"</span><span
class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="n">micropost</span><span class="o">.</span><span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">user</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"content"</span><span
class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">content</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"timestamp"</span><span
class="nt">&gt;</span>
    Posted <span class="cp">&lt;%=</span> <span class="n">time_ago_in_words</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">created_at</span><span class="p">)</span> <span class="cp">%&gt;</span> ago.
    <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_user?</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">user</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="hll">      <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"delete"</span><span class="p">,</span> <span class="n">micropost</span><span
class="p">,</span> <span class="nb">method</span><span class="p">:</span> <span
class="ss">:delete</span><span class="p">,</span>
</span><span class="hll">                                       <span class="ss">data</span><span
class="p">:</span> <span class="p">{</span> <span class="ss">confirm</span><span
class="p">:</span> <span class="s2">"You sure?"</span> <span class="p">}</span> <span
class="cp">%&gt;</span>
</span>    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/li&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The next step is to define a <code>destroy</code> action
                      in the Microposts controller, which is analogous to the
                      user case in <a href="#code-admin_destroy_before_filter"
                        class="hyperref">Listing&nbsp;<span class="ref">9.54</span></a>.<span
                        class="intersentencespace"></span> The main difference
                      is that, rather than using an <code>@user</code> variable
                      with an <code>admin_user</code> before filter, we’ll find
                      the micropost through the association, which will
                      automatically fail if a user tries to delete another
                      user’s micropost.<span class="intersentencespace"></span>
                      We’ll put the resulting <code>find</code> inside a <code>correct_user</code>
                      before filter, which checks that the current user actually
                      has a micropost with the given id.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-microposts_destroy_action"
                        class="hyperref">Listing&nbsp;<span class="ref">11.50</span></a>.</p>
                    <div class="codelisting" id="_code-microposts_destroy_action"
                      data-tralics-id="uid1216" data-number="11.50">
                      <div class="heading"><span class="number">Listing 11.50:</span>
                        <span class="description">The Microposts controller <code>destroy</code>
                          action.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">MicropostsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span
class="o">]</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="ss">:destroy</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">destroy</span>
<span class="hll">    <span class="vi">@micropost</span><span class="o">.</span><span
class="n">destroy</span>
</span><span class="hll">    <span class="n">flash</span><span class="o">[</span><span
class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span
class="s2">"Micropost deleted"</span>
</span><span class="hll">    <span class="n">redirect_to</span> <span class="n">request</span><span
class="o">.</span><span class="n">referrer</span> <span class="o">||</span> <span
class="n">root_url</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">micropost_params</span>
      <span class="n">params</span><span class="o">.</span><span class="n">require</span><span
class="p">(</span><span class="ss">:micropost</span><span class="p">)</span><span
class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:content</span><span
class="p">)</span>
    <span class="k">end</span>

     <span class="k">def</span> <span class="nf">correct_user</span>
<span class="hll">      <span class="vi">@micropost</span> <span class="o">=</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
</span><span class="hll">      <span class="n">redirect_to</span> <span class="n">root_url</span> <span
class="k">if</span> <span class="vi">@micropost</span><span class="o">.</span><span
class="n">nil?</span>
</span>    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note that the <code>destroy</code> method in <a href="#code-microposts_destroy_action"
                        class="hyperref">Listing&nbsp;<span class="ref">11.50</span></a>
                      redirects to the URL</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">request</span><span class="o">.</span><span
class="n">referrer</span> <span class="o">||</span> <span class="n">root_url</span>
</pre></div>
                    </div>
                    <p>This uses the <code>request.referrer</code> method,<sup
                        id="_cha-11_footnote-ref-11" class="footnote"><a href="#cha-11_footnote-11">11</a></sup>
                      which is closely related to the <code>request.url</code>
                      variable used in friendly forwarding (<a href="#sec-friendly_forwarding"
                        class="hyperref">Section&nbsp;<span class="ref">9.2.3</span></a>),
                      and is just the previous URL (in this case, the Home
                      page).<sup id="_cha-11_footnote-ref-12" class="footnote"><a
                          href="#cha-11_footnote-12">12</a></sup><span class="intersentencespace"></span>
                      This is convenient because microposts appear on both the
                      Home page and on the user’s profile page, so by using <code>request.referrer</code>
                      we arrange to redirect back to the page issuing the delete
                      request in both cases.<span class="intersentencespace"></span>
                      If the referring URL is <code>nil</code> (as is the case
                      inside some tests), <a href="#code-microposts_destroy_action"
                        class="hyperref">Listing&nbsp;<span class="ref">11.50</span></a>
                      sets the <code>root_url</code> as the default using the <code>||</code>
                      operator.<span class="intersentencespace"></span> (Compare
                      to the default options defined in <a href="#code-test_helper_log_in"
                        class="hyperref">Listing&nbsp;<span class="ref">8.50</span></a>.)</p>
                    <p>With the code as above, the result of destroying the
                      second-most recent post appears in <a href="#fig-home_post_delete"
                        class="hyperref">Figure&nbsp;<span class="ref">11.17</span></a>.</p>
                    <div class="center figure" id="_fig-home_post_delete" data-tralics-id="uid1219"
                      data-number="11.17">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_post_delete_3rd_edition.png"
                          alt="images/figures/home_post_delete_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 11.17: </span><span
                          class="description">The Home page after deleting the
                          second-most-recent micropost. </span></div>
                    </div>
                  </div>
                  <div id="_sec-micropost_tests" data-tralics-id="uid1220" class="subsection"
                    data-number="11.3.5">
                    <h3><a href="#sec-micropost_tests" class="heading hyperref"><span
                          class="number">11.3.5 </span>Micropost tests</a></h3>
                    <p>With the code in <a href="#sec-destroying_microposts" class="hyperref">Section&nbsp;<span
                          class="ref">11.3.4</span></a>, the Micropost model and
                      interface are complete.<span class="intersentencespace"></span>
                      All that’s left is writing a short Microposts controller
                      test to check authorization and a micropost integration
                      test to tie it all together.</p>
                    <p>We’ll start by adding a few microposts with different
                      owners to the micropost fixtures, as shown in <a href="#code-add_micropost_different_owner"
                        class="hyperref">Listing&nbsp;<span class="ref">11.51</span></a>.<span
                        class="intersentencespace"></span> (We’ll be using only
                      one for now, but we’ve put in the others for future
                      reference.)</p>
                    <div class="codelisting" id="_code-add_micropost_different_owner"
                      data-tralics-id="uid1221" data-number="11.51">
                      <div class="heading"><span class="number">Listing 11.51:</span>
                        <span class="description">Adding a micropost with a
                          different owner.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/fixtures/microposts.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="l-Scalar-Plain">.</span>
<span class="l-Scalar-Plain">.</span>
<span class="l-Scalar-Plain">.</span>
<span class="l-Scalar-Plain">ants</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Oh,</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span
class="s">that</span><span class="nv"> </span><span class="s">what</span><span class="nv"> </span><span
class="s">you</span><span class="nv"> </span><span class="s">want?</span><span class="nv"> </span><span
class="s">Because</span><span class="nv"> </span><span class="s">that's</span><span
class="nv"> </span><span class="s">how</span><span class="nv"> </span><span class="s">you</span><span
class="nv"> </span><span class="s">get</span><span class="nv"> </span><span class="s">ants!"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 2.years.ago %&gt;</span>
  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">archer</span>

<span class="l-Scalar-Plain">zone</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Danger</span><span class="nv"> </span><span class="s">zone!"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 3.days.ago %&gt;</span>
  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">archer</span>

<span class="l-Scalar-Plain">tone</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"I'm</span><span class="nv"> </span><span class="s">sorry.</span><span
class="nv"> </span><span class="s">Your</span><span class="nv"> </span><span class="s">words</span><span
class="nv"> </span><span class="s">made</span><span class="nv"> </span><span class="s">sense,</span><span
class="nv"> </span><span class="s">but</span><span class="nv"> </span><span class="s">your</span><span
class="nv"> </span><span class="s">sarcastic</span><span class="nv"> </span><span
class="s">tone</span><span class="nv"> </span><span class="s">did</span><span class="nv"> </span><span
class="s">not."</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 10.minutes.ago %&gt;</span>
  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">lana</span>

<span class="l-Scalar-Plain">van</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"Dude,</span><span class="nv"> </span><span class="s">this</span><span
class="nv"> </span><span class="s">van's,</span><span class="nv"> </span><span class="s">like,</span><span
class="nv"> </span><span class="s">rolling</span><span class="nv"> </span><span
class="s">probable</span><span class="nv"> </span><span class="s">cause."</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 4.hours.ago %&gt;</span>
  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">lana</span>
</pre></div>
                      </div>
                    </div>
                    <p>We next write a short test to make sure one user can’t
                      delete the microposts of a different user, and we also
                      check for the proper redirect, as seen in <a href="#code-micropost_user_mismatch_test"
                        class="hyperref">Listing&nbsp;<span class="ref">11.52</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_user_mismatch_test"
                      data-tralics-id="uid1222" data-number="11.52">
                      <div class="heading"><span class="number">Listing 11.52:</span>
                        <span class="description">Testing micropost deletion
                          with a user mismatch.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/microposts_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostsControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@micropost</span> <span class="o">=</span> <span class="n">microposts</span><span
class="p">(</span><span class="ss">:orange</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect create when not logged in"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Micropost.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="ss">:create</span><span class="p">,</span> <span
class="ss">micropost</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">content</span><span class="p">:</span> <span class="s2">"Lorem ipsum"</span> <span
class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect destroy when not logged in"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Micropost.count'</span> <span
class="k">do</span>
      <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@micropost</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

<span class="hll">  <span class="nb">test</span> <span class="s2">"should redirect destroy for wrong micropost"</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">log_in_as</span><span class="p">(</span><span
class="n">users</span><span class="p">(</span><span class="ss">:michael</span><span
class="p">))</span>
</span><span class="hll">    <span class="n">micropost</span> <span class="o">=</span> <span
class="n">microposts</span><span class="p">(</span><span class="ss">:ants</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">assert_no_difference</span> <span class="s1">'Micropost.count'</span> <span
class="k">do</span>
</span><span class="hll">      <span class="n">delete</span> <span class="ss">:destroy</span><span
class="p">,</span> <span class="nb">id</span><span class="p">:</span> <span class="n">micropost</span>
</span><span class="hll">    <span class="k">end</span>
</span><span class="hll">    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
</span><span class="hll">  <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Finally, we’ll write an integration test to log in, check
                      the micropost pagination, make an invalid submission, make
                      a valid submission, delete a post, and then visit a second
                      user’s page to make sure there are no “delete” links.<span
                        class="intersentencespace"></span> We start by
                      generating a test as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test microposts_interface
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/microposts_interface_test.rb</span>
</pre></div>
                    </div>
                    <p>The test appears in <a href="#code-microposts_interface_test"
                        class="hyperref">Listing&nbsp;<span class="ref">11.53</span></a>.<span
                        class="intersentencespace"></span> See if you can
                      connect the lines in <a href="#code-micropost_validity_test_idiomatic"
                        class="hyperref">Listing&nbsp;<span class="ref">11.11</span></a>
                      to the steps mentioned above.<span class="intersentencespace"></span>
                      (<a href="#code-microposts_interface_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.53</span></a> uses <code>post</code>
                      followed by <code>follow_redirect!</code> in place of the
                      equivalent <code>post_via_redirect</code> in anticipation
                      of the image upload test in the Вправи (<a href="#code-image_upload_test"
                        class="hyperref">Listing&nbsp;<span class="ref">11.68</span></a>).)</p>
                    <div class="codelisting" id="_code-microposts_interface_test"
                      data-tralics-id="uid1223" data-number="11.53">
                      <div class="heading"><span class="number">Listing 11.53:</span>
                        <span class="description">An integration test for the
                          micropost interface.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/microposts_interface_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostsInterfaceTest</span> <span
class="o">&lt;</span> <span class="no">ActionDispatch</span><span class="o">::</span><span
class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"micropost interface"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_select</span> <span class="s1">'div.pagination'</span>
    <span class="c1"># Invalid submission</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Micropost.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="n">microposts_path</span><span class="p">,</span> <span
class="ss">micropost</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">content</span><span class="p">:</span> <span class="s2">""</span> <span
class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_select</span> <span class="s1">'div#error_explanation'</span>
    <span class="c1"># Valid submission</span>
    <span class="n">content</span> <span class="o">=</span> <span class="s2">"This micropost really ties the room together"</span>
    <span class="n">assert_difference</span> <span class="s1">'Micropost.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">post</span> <span class="n">microposts_path</span><span class="p">,</span> <span
class="ss">micropost</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">content</span><span class="p">:</span> <span class="n">content</span> <span
class="p">}</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">root_url</span>
    <span class="n">follow_redirect!</span>
    <span class="n">assert_match</span> <span class="n">content</span><span class="p">,</span> <span
class="n">response</span><span class="o">.</span><span class="n">body</span>
    <span class="c1"># Delete a post.</span>
    <span class="n">assert_select</span> <span class="s1">'a'</span><span class="p">,</span> <span
class="ss">text</span><span class="p">:</span> <span class="s1">'delete'</span>
    <span class="n">first_micropost</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span
class="n">first</span>
    <span class="n">assert_difference</span> <span class="s1">'Micropost.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
      <span class="n">delete</span> <span class="n">micropost_path</span><span class="p">(</span><span
class="n">first_micropost</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="c1"># Visit a different user.</span>
    <span class="n">get</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">users</span><span class="p">(</span><span class="ss">:archer</span><span
class="p">))</span>
    <span class="n">assert_select</span> <span class="s1">'a'</span><span class="p">,</span> <span
class="ss">text</span><span class="p">:</span> <span class="s1">'delete'</span><span
class="p">,</span> <span class="ss">count</span><span class="p">:</span> <span class="mi">0</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Because we wrote working application code first, the test
                      suite should be <span style="color: ForestGreen"><span class="sc"></span><span
                          class="sc"><strong>green</strong></span><span class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1224" data-tralics-id="uid1224"
                      data-number="11.54">
                      <div class="heading"><span class="number">Listing 11.54:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-micropost_images" data-tralics-id="cid76" class="section"
                  data-number="11.4">
                  <h2><a href="#sec-micropost_images" class="heading hyperref"><span
                        class="number">11.4 </span>Micropost images</a></h2>
                  <p>Now that we’ve added support for all relevant micropost
                    actions, in this section we’ll make it possible for
                    microposts to include images as well as text.<span class="intersentencespace"></span>
                    We’ll start with a basic version good enough for development
                    use, and then add a series of enhancements to make image
                    upload production-ready.</p>
                  <p>Adding image upload involves two main visible elements: a
                    form field for uploading an image and the micropost images
                    themselves.<span class="intersentencespace"></span> A mockup
                    of the resulting “Upload image” button and micropost photo
                    appears in <a href="#fig-micropost_image_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">11.18</span></a>.<sup id="_cha-11_footnote-ref-13"
                      class="footnote"><a href="#cha-11_footnote-13">13</a></sup></p>
                  <div class="center figure" id="_fig-micropost_image_mockup" data-tralics-id="uid1226"
                    data-number="11.18">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_image_mockup.png"
                        alt="images/figures/micropost_image_mockup"></div>
                    <div class="caption"><span class="header">Figure 11.18: </span><span
                        class="description">A mockup of micropost image upload
                        (with an uploaded image). </span></div>
                  </div>
                  <div id="_sec-basic_image_upload" data-tralics-id="uid1227" class="subsection"
                    data-number="11.4.1">
                    <h3><a href="#sec-basic_image_upload" class="heading hyperref"><span
                          class="number">11.4.1 </span>Basic image upload</a></h3>
                    <p>To handle an uploaded image and associate it with the
                      Micropost model, we’ll use the <a href="https://github.com/carrierwaveuploader/carrierwave"
                        target="_blank">CarrierWave</a> image uploader.<span class="intersentencespace"></span>
                      To get started, we need to include the <span class="tt">carrierwave</span>
                      gem in the <code>Gemfile</code> (<a href="#code-gemfile_carrierwave"
                        class="hyperref">Listing&nbsp;<span class="ref">11.55</span></a>).<span
                        class="intersentencespace"></span> For completeness, <a
                        href="#code-gemfile_carrierwave" class="hyperref">Listing&nbsp;<span
                          class="ref">11.55</span></a> also includes the <span
                        class="tt">mini_magick</span> and <span class="tt">fog</span>
                      gems needed for image resizing (<a href="#sec-image_resizing"
                        class="hyperref">Section&nbsp;<span class="ref">11.4.3</span></a>)
                      and image upload in production (<a href="#sec-image_upload_in_production"
                        class="hyperref">Section&nbsp;<span class="ref">11.4.4</span></a>).</p>
                    <div class="codelisting" id="_code-gemfile_carrierwave" data-tralics-id="uid1228"
                      data-number="11.55">
                      <div class="heading"><span class="number">Listing 11.55:</span>
                        <span class="description">Adding CarrierWave to the <code>Gemfile</code>.</span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                   <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'bcrypt'</span><span class="p">,</span>                  <span
class="s1">'3.1.7'</span>
<span class="n">gem</span> <span class="s1">'faker'</span><span class="p">,</span>                   <span
class="s1">'1.4.2'</span>
<span class="hll"><span class="n">gem</span> <span class="s1">'carrierwave'</span><span
class="p">,</span>             <span class="s1">'0.10.0'</span>
</span><span class="hll"><span class="n">gem</span> <span class="s1">'mini_magick'</span><span
class="p">,</span>             <span class="s1">'3.8.0'</span>
</span><span class="hll"><span class="n">gem</span> <span class="s1">'fog'</span><span
class="p">,</span>                     <span class="s1">'1.23.0'</span>
</span><span class="n">gem</span> <span class="s1">'will_paginate'</span><span class="p">,</span>           <span
class="s1">'3.0.7'</span>
<span class="n">gem</span> <span class="s1">'bootstrap-will_paginate'</span><span
class="p">,</span> <span class="s1">'0.0.10'</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
</pre></div>
                      </div>
                    </div>
                    <p>Then we install as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> bundle install
</pre></div>
                    </div>
                    <p>CarrierWave adds a Rails generator for creating an image
                      uploader, which we’ll use to make an uploader for an image
                      called <code>picture</code>:<sup id="_cha-11_footnote-ref-14"
                        class="footnote"><a href="#cha-11_footnote-14">14</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate uploader Picture
</pre></div>
                    </div>
                    <p>Images uploaded with CarrierWave should be associated
                      with a corresponding attribute in an Active Record model,
                      which simply contains the name of the image file in a
                      string field.<span class="intersentencespace"></span> The
                      resulting augmented data model for microposts appears in <a
                        href="#fig-micropost_model_picture" class="hyperref">Figure&nbsp;<span
                          class="ref">11.19</span></a>.</p>
                    <div class="center figure" id="_fig-micropost_model_picture"
                      data-tralics-id="uid1230" data-number="11.19">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/micropost_model_picture.png"
                          alt="images/figures/micropost_model_picture"></div>
                      <div class="caption"><span class="header">Figure 11.19: </span><span
                          class="description">The Micropost data model with a <code>picture</code>
                          attribute. </span></div>
                    </div>
                    <p>To add the required <code>picture</code> attribute to
                      the Micropost model, we generate a migration and migrate
                      the development database:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate migration add_picture_to_microposts picture:string
<span class="gp">$</span> bundle <span class="nb">exec </span>rake db:migrate
</pre></div>
                    </div>
                    <p>The way to tell CarrierWave to associate the image with a
                      model is to use the <code>mount_uploader</code> method,
                      which takes as arguments a symbol representing the
                      attribute and the class name of the generated uploader:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">mount_uploader</span> <span class="ss">:picture</span><span
class="p">,</span> <span class="no">PictureUploader</span>
</pre></div>
                    </div>
                    <p>(Here <code>PictureUploader</code> is defined in the
                      file <code>picture_uploader.rb</code>, which we’ll start
                      editing in <a href="#sec-image_validation" class="hyperref">Section&nbsp;<span
                          class="ref">11.4.2</span></a>, but for now the
                      generated default is fine.)<span class="intersentencespace"></span>
                      Adding the uploader to the Micropost model gives the code
                      shown in <a href="#code-micropost_model_picture" class="hyperref">Listing&nbsp;<span
                          class="ref">11.56</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_model_picture"
                      data-tralics-id="uid1231" data-number="11.56">
                      <div class="heading"><span class="number">Listing 11.56:</span>
                        <span class="description">Adding an image to the
                          Micropost model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="n">default_scope</span> <span class="o">-&gt;</span> <span class="p">{</span> <span
class="n">order</span><span class="p">(</span><span class="ss">created_at</span><span
class="p">:</span> <span class="ss">:desc</span><span class="p">)</span> <span class="p">}</span>
<span class="hll">  <span class="n">mount_uploader</span> <span class="ss">:picture</span><span
class="p">,</span> <span class="no">PictureUploader</span>
</span>  <span class="n">validates</span> <span class="ss">:user_id</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">140</span> <span class="p">}</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>On some systems, you may need to restart the Rails server
                      at this point to keep the test suite <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>.<span class="intersentencespace"></span>
                      (If you’re using Guard as described in <a href="#sec-guard"
                        class="hyperref">Section&nbsp;<span class="ref">3.7.3</span></a>,
                      you may need to restart that as well, and it may even be
                      necessary to exit the terminal shell and re-run Guard in a
                      new one.)</p>
                    <p>To include the uploader on the Home page as in <a href="#fig-micropost_image_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">11.18</span></a>,
                      we need to include a <code>file_field</code> tag in the
                      micropost form, as shown in <a href="#code-micropost_create_image_upload"
                        class="hyperref">Listing&nbsp;<span class="ref">11.57</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_create_image_upload"
                      data-tralics-id="uid1232" data-number="11.57">
                      <div class="heading"><span class="number">Listing 11.57:</span>
                        <span class="description">Adding image upload to the
                          micropost create form.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/shared/_micropost_form.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%=</span> <span
class="n">form_for</span><span class="p">(</span><span class="vi">@micropost</span><span
class="p">,</span> <span class="ss">html</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">multipart</span><span class="p">:</span> <span class="kp">true</span> <span
class="p">})</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span
class="o">|</span> <span class="cp">%&gt;</span>
</span>  <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/error_messages'</span><span
class="p">,</span> <span class="ss">object</span><span class="p">:</span> <span
class="n">f</span><span class="o">.</span><span class="n">object</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"field"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_area</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">placeholder</span><span class="p">:</span> <span class="s2">"Compose new micropost..."</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Post"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"picture"</span><span
class="nt">&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">file_field</span> <span class="ss">:picture</span> <span
class="cp">%&gt;</span>
</span>  <span class="nt">&lt;/span&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Note the inclusion of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>html: { multipart: true }
</pre></div>
                    </div>
                    <p>in the arguments to <code>form_for</code>, which is
                      necessary for file uploads.</p>
                    <p>Finally, we need to add <code>picture</code> to the list
                      of attributes permitted to be modified through the web.<span
                        class="intersentencespace"></span> This involves editing
                      the <code>micropost_params</code> method, as shown in <a
                        href="#code-micropost_params_picture" class="hyperref">Listing&nbsp;<span
                          class="ref">11.58</span></a>.</p>
                    <div class="codelisting" id="_code-micropost_params_picture"
                      data-tralics-id="uid1233" data-number="11.58">
                      <div class="heading"><span class="number">Listing 11.58:</span>
                        <span class="description">Adding <code>picture</code>
                          to the list of permitted attributes.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/microposts_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">MicropostsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:create</span><span class="p">,</span> <span class="ss">:destroy</span><span
class="o">]</span>
  <span class="n">before_action</span> <span class="ss">:correct_user</span><span
class="p">,</span>   <span class="ss">only</span><span class="p">:</span> <span
class="ss">:destroy</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="kp">private</span>

    <span class="k">def</span> <span class="nf">micropost_params</span>
<span class="hll">      <span class="n">params</span><span class="o">.</span><span
class="n">require</span><span class="p">(</span><span class="ss">:micropost</span><span
class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span
class="ss">:content</span><span class="p">,</span> <span class="ss">:picture</span><span
class="p">)</span>
</span>    <span class="k">end</span>

     <span class="k">def</span> <span class="nf">correct_user</span>
      <span class="vi">@micropost</span> <span class="o">=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="nb">id</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span>
      <span class="n">redirect_to</span> <span class="n">root_url</span> <span class="k">if</span> <span
class="vi">@micropost</span><span class="o">.</span><span class="n">nil?</span>
    <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Once the image has been uploaded, we can render it using
                      the <code>image_tag</code> helper in the micropost
                      partial, as shown in <a href="#code-micropost_partial_image_display"
                        class="hyperref">Listing&nbsp;<span class="ref">11.59</span></a>.<span
                        class="intersentencespace"></span> Notice the use of the
                      <code>picture?</code> boolean method to prevent displaying
                      an image tag when there isn’t an image.<span class="intersentencespace"></span>
                      This method is created automatically by CarrierWave based
                      on the name of the image attribute.<span class="intersentencespace"></span>
                      The result of making a successful submission by hand
                      appears in <a href="#fig-micropost_with_image" class="hyperref">Figure&nbsp;<span
                          class="ref">11.20</span></a>.<span class="intersentencespace"></span>
                      Writing an automated test for image upload is left as an
                      exercise (<a href="#sec-micropost_exercises" class="hyperref">Section&nbsp;<span
                          class="ref">11.6</span></a>).</p>
                    <div class="codelisting" id="_code-micropost_partial_image_display"
                      data-tralics-id="uid1234" data-number="11.59">
                      <div class="heading"><span class="number">Listing 11.59:</span>
                        <span class="description">Adding image display to
                          microposts.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/microposts/_micropost.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nt">&lt;li</span> <span class="na">id=</span><span
class="s">"micropost-</span><span class="cp">&lt;%=</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="s">"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="n">gravatar_for</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">user</span><span class="p">,</span> <span class="ss">size</span><span
class="p">:</span> <span class="mi">50</span><span class="p">),</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">user</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"user"</span><span
class="nt">&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="n">micropost</span><span class="o">.</span><span class="n">user</span><span
class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">user</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"content"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">micropost</span><span class="o">.</span><span
class="n">content</span> <span class="cp">%&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">image_tag</span> <span
class="n">micropost</span><span class="o">.</span><span class="n">picture</span><span
class="o">.</span><span class="n">url</span> <span class="k">if</span> <span class="n">micropost</span><span
class="o">.</span><span class="n">picture?</span> <span class="cp">%&gt;</span>
</span>  <span class="nt">&lt;/span&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"timestamp"</span><span
class="nt">&gt;</span>
    Posted <span class="cp">&lt;%=</span> <span class="n">time_ago_in_words</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">created_at</span><span class="p">)</span> <span class="cp">%&gt;</span> ago.
    <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_user?</span><span
class="p">(</span><span class="n">micropost</span><span class="o">.</span><span
class="n">user</span><span class="p">)</span> <span class="cp">%&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">"delete"</span><span
class="p">,</span> <span class="n">micropost</span><span class="p">,</span> <span
class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span><span
class="p">,</span>
                                       <span class="ss">data</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">confirm</span><span class="p">:</span> <span
class="s2">"You sure?"</span> <span class="p">}</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/li&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-micropost_with_image" data-tralics-id="uid1235"
                      data-number="11.20">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/microposts_with_image.png"
                          alt="images/figures/microposts_with_image"></div>
                      <div class="caption"><span class="header">Figure 11.20: </span><span
                          class="description">The result of submitting a
                          micropost with an image. </span></div>
                    </div>
                  </div>
                  <div id="_sec-image_validation" data-tralics-id="uid1236" class="subsection"
                    data-number="11.4.2">
                    <h3><a href="#sec-image_validation" class="heading hyperref"><span
                          class="number">11.4.2 </span>Image validation</a></h3>
                    <p>The uploader in <a href="#sec-basic_image_upload" class="hyperref">Section&nbsp;<span
                          class="ref">11.4.1</span></a> is a good start, but it
                      has significant limitations.<span class="intersentencespace"></span>
                      In particular, it doesn’t enforce any constraints on the
                      uploaded file, which can cause problems if users try to
                      upload large files of invalid file types.<span class="intersentencespace"></span>
                      To remedy this defect, we’ll add validations for the image
                      size and format, both on the server and on the client
                      (i.e., in the browser).</p>
                    <p>The first image validation, which restricts uploads to
                      valid image types, appears in the CarrierWave uploader
                      itself.<span class="intersentencespace"></span> The
                      resulting code (which appears as a commented-out
                      suggestion in the generated uploader) verifies that the
                      image filename ends with a valid image extension (PNG,
                      GIF, and both variants of JPEG), as shown in <a href="#code-validate_picture_format"
                        class="hyperref">Listing&nbsp;<span class="ref">11.60</span></a>.</p>
                    <div class="codelisting" id="_code-validate_picture_format"
                      data-tralics-id="uid1237" data-number="11.60">
                      <div class="heading"><span class="number">Listing 11.60:</span>
                        <span class="description">The picture format validation.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/uploaders/picture_uploader.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">PictureUploader</span> <span
class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span
class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
  <span class="n">storage</span> <span class="ss">:file</span>

  <span class="c1"># Override the directory where uploaded files will be stored.</span>
  <span class="c1"># This is a sensible default for uploaders that are meant to be mounted:</span>
  <span class="k">def</span> <span class="nf">store_dir</span>
    <span class="s2">"uploads/</span><span class="si">#{</span><span class="n">model</span><span
class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span
class="o">.</span><span class="n">underscore</span><span class="si">}</span><span
class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span
class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span
class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
  <span class="k">end</span>

  <span class="c1"># Add a white list of extensions which are allowed to be uploaded.</span>
  <span class="k">def</span> <span class="nf">extension_white_list</span>
<span class="hll">    <span class="sx">%w(jpg jpeg gif png)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The second validation, which controls the size of the
                      image, appears in the Micropost model itself.<span class="intersentencespace"></span>
                      In contrast to previous model validations, file size
                      validation doesn’t correspond to a built-in Rails
                      validator.<span class="intersentencespace"></span> As a
                      result, validating images requires defining a custom
                      validation, which we’ll call <code>picture_size</code>
                      and define as shown in <a href="#code-micropost_model_image_validation"
                        class="hyperref">Listing&nbsp;<span class="ref">11.61</span></a>.<span
                        class="intersentencespace"></span> Note the use of <code>validate</code>
                      (as opposed to <code>validates</code>) to call a custom
                      validation.</p>
                    <div class="codelisting" id="_code-micropost_model_image_validation"
                      data-tralics-id="uid1238" data-number="11.61">
                      <div class="heading"><span class="number">Listing 11.61:</span>
                        <span class="description">Adding validations to images.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/models/micropost.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="n">default_scope</span> <span class="o">-&gt;</span> <span class="p">{</span> <span
class="n">order</span><span class="p">(</span><span class="ss">created_at</span><span
class="p">:</span> <span class="ss">:desc</span><span class="p">)</span> <span class="p">}</span>
  <span class="n">mount_uploader</span> <span class="ss">:picture</span><span class="p">,</span> <span
class="no">PictureUploader</span>
  <span class="n">validates</span> <span class="ss">:user_id</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
  <span class="n">validates</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span
class="mi">140</span> <span class="p">}</span>
<span class="hll">  <span class="n">validate</span>  <span class="ss">:picture_size</span>
</span>
  <span class="kp">private</span>

<span class="hll">    <span class="c1"># Validates the size of an uploaded picture.</span>
</span><span class="hll">    <span class="k">def</span> <span class="nf">picture_size</span>
</span><span class="hll">      <span class="k">if</span> <span class="n">picture</span><span
class="o">.</span><span class="n">size</span> <span class="o">&gt;</span> <span
class="mi">5</span><span class="o">.</span><span class="n">megabytes</span>
</span><span class="hll">        <span class="n">errors</span><span class="o">.</span><span
class="n">add</span><span class="p">(</span><span class="ss">:picture</span><span
class="p">,</span> <span class="s2">"should be less than 5MB"</span><span class="p">)</span>
</span><span class="hll">      <span class="k">end</span>
</span><span class="hll">    <span class="k">end</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>This custom validation arranges to call the method
                      corresponding to the given symbol (<code>:picture_size</code>).<span
                        class="intersentencespace"></span> In <code>picture_size</code>
                      itself, we add a custom error message to the <code>errors</code>
                      collection (seen before briefly in <a href="#sec-presence_validation"
                        class="hyperref">Section&nbsp;<span class="ref">6.2.2</span></a>),
                      in this case a limit of 5&nbsp;megabytes (using a syntax
                      seen before in <a href="#aside-time_helpers" class="hyperref">Box&nbsp;<span
                          class="ref">8.2</span></a>).</p>
                    <p>To go along with the validations in <a href="#code-validate_picture_format"
                        class="hyperref">Listing&nbsp;<span class="ref">11.60</span></a>
                      and <a href="#code-micropost_model_image_validation" class="hyperref">Listing&nbsp;<span
                          class="ref">11.61</span></a>, we’ll add two
                      client-side checks on the uploaded image.<span class="intersentencespace"></span>
                      We’ll first mirror the format validation by using the <code>accept</code>
                      parameter in the <code>file_field</code> input tag:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">file_field</span> <span class="ss">:picture</span><span
class="p">,</span> <span class="ss">accept</span><span class="p">:</span> <span
class="s1">'image/jpeg,image/gif,image/png'</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>The valid formats consist of the <a href="https://en.wikipedia.org/wiki/Internet_media_type"
                        target="_blank">MIME types</a> accepted by the
                      validation in <a href="#code-validate_picture_format" class="hyperref">Listing&nbsp;<span
                          class="ref">11.60</span></a>.</p>
                    <p>Next, we’ll include a little JavaScript (or, more
                      specifically, <a href="http://jquery.com/" target="_blank">jQuery</a>)
                      to issue an alert if a user tries to upload an image
                      that’s too big (which prevents accidental time-consuming
                      uploads and lightens the load on the server):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nx">$</span><span class="p">(</span><span
class="s1">'#micropost_picture'</span><span class="p">).</span><span class="nx">bind</span><span
class="p">(</span><span class="s1">'change'</span><span class="p">,</span> <span
class="kd">function</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">size_in_megabytes</span> <span class="o">=</span> <span class="k">this</span><span
class="p">.</span><span class="nx">files</span><span class="p">[</span><span class="mi">0</span><span
class="p">].</span><span class="nx">size</span><span class="o">/</span><span class="mi">1024</span><span
class="o">/</span><span class="mi">1024</span><span class="p">;</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">size_in_megabytes</span> <span
class="o">&gt;</span> <span class="mi">5</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">alert</span><span class="p">(</span><span class="s1">'Maximum file size is 5MB. Please choose a smaller file.'</span><span
class="p">);</span>
  <span class="p">}</span>
<span class="p">});</span>
</pre></div>
                    </div>
                    <p>Although jQuery isn’t the focus of this book, you might
                      be able to figure out that the code above monitors the
                      page element containing the CSS&nbsp;id <code>micropost_picture</code>
                      (as indicated by the hash mark&nbsp;<code>#</code>), which
                      is the id of the micropost form in <a href="#code-micropost_create_image_upload"
                        class="hyperref">Listing&nbsp;<span class="ref">11.57</span></a>.<span
                        class="intersentencespace"></span> (The way to figure
                      this out is to Ctrl-click and use your browser’s web
                      inspector.)<span class="intersentencespace"></span> When
                      the element with that CSS&nbsp;id changes, the jQuery
                      function fires and issues the <code>alert</code> method
                      if the file is too big.<sup id="_cha-11_footnote-ref-15" class="footnote"><a
                          href="#cha-11_footnote-15">15</a></sup></p>
                    <p>The result of adding these additional checks appears in <a
                        href="#code-_format_jquery_file_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.62</span></a>.</p>
                    <div class="codelisting" id="_code-_format_jquery_file_test"
                      data-tralics-id="uid1240" data-number="11.62">
                      <div class="heading"><span class="number">Listing 11.62:</span>
                        <span class="description">Checking the file size with
                          jQuery.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/shared/_micropost_form.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="vi">@micropost</span><span class="p">,</span> <span
class="ss">html</span><span class="p">:</span> <span class="p">{</span> <span class="ss">multipart</span><span
class="p">:</span> <span class="kp">true</span> <span class="p">})</span> <span
class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/error_messages'</span><span
class="p">,</span> <span class="ss">object</span><span class="p">:</span> <span
class="n">f</span><span class="o">.</span><span class="n">object</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"field"</span><span
class="nt">&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">text_area</span> <span class="ss">:content</span><span class="p">,</span> <span
class="ss">placeholder</span><span class="p">:</span> <span class="s2">"Compose new micropost..."</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Post"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"picture"</span><span
class="nt">&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">f</span><span
class="o">.</span><span class="n">file_field</span> <span class="ss">:picture</span><span
class="p">,</span> <span class="ss">accept</span><span class="p">:</span> <span
class="s1">'image/jpeg,image/gif,image/png'</span> <span class="cp">%&gt;</span>
</span>  <span class="nt">&lt;/span&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>

<span class="hll"><span class="nt">&lt;script </span><span class="na">type=</span><span
class="s">"text/javascript"</span><span class="nt">&gt;</span>
</span><span class="hll">  <span class="nx">$</span><span class="p">(</span><span
class="s1">'#micropost_picture'</span><span class="p">).</span><span class="nx">bind</span><span
class="p">(</span><span class="s1">'change'</span><span class="p">,</span> <span
class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class="hll">    <span class="nx">size_in_megabytes</span> <span class="o">=</span> <span
class="k">this</span><span class="p">.</span><span class="nx">files</span><span
class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">size</span><span
class="o">/</span><span class="mi">1024</span><span class="o">/</span><span class="mi">1024</span><span
class="p">;</span>
</span><span class="hll">    <span class="k">if</span> <span class="p">(</span><span
class="nx">size_in_megabytes</span> <span class="o">&gt;</span> <span class="mi">5</span><span
class="p">)</span> <span class="p">{</span>
</span><span class="hll">      <span class="nx">alert</span><span class="p">(</span><span
class="s1">'Maximum file size is 5MB. Please choose a smaller file.'</span><span
class="p">);</span>
</span><span class="hll">    <span class="p">}</span>
</span><span class="hll">  <span class="p">});</span>
</span><span class="hll"><span class="nt">&lt;/script&gt;</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>It’s important to understand that code like that shown in
                      <a href="#code-_format_jquery_file_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.62</span></a> can’t actually prevent a
                      user from trying to upload a file that’s too big.<span class="intersentencespace"></span>
                      Even if our code prevents them from submitting it through
                      the web, they could always edit the JavaScript with a web
                      inspector or issue a direct <span class="tt">POST</span>
                      request using, e.g., <code>curl</code>.<span class="intersentencespace"></span>
                      To prevent users from uploading arbitrarily large files,
                      it is thus essential to include a server-side validation,
                      as in <a href="#code-micropost_model_image_validation" class="hyperref">Listing&nbsp;<span
                          class="ref">11.61</span></a>.</p>
                  </div>
                  <div id="_sec-image_resizing" data-tralics-id="uid1241" class="subsection"
                    data-number="11.4.3">
                    <h3><a href="#sec-image_resizing" class="heading hyperref"><span
                          class="number">11.4.3 </span>Image resizing</a></h3>
                    <p>The image size validations in <a href="#sec-image_validation"
                        class="hyperref">Section&nbsp;<span class="ref">11.4.2</span></a>
                      are a good start, but they still allow the uploading of
                      images large enough to break our site’s layout, sometimes
                      with frightening results (<a href="#fig-large_uploaded_image"
                        class="hyperref">Figure&nbsp;<span class="ref">11.21</span></a>).<span
                        class="intersentencespace"></span> Thus, while it’s
                      convenient to allow users to select fairly large images
                      from their local disk, it’s also a good idea to resize the
                      images before displaying them.<sup id="_cha-11_footnote-ref-16"
                        class="footnote"><a href="#cha-11_footnote-16">16</a></sup></p>
                    <div class="center figure" id="_fig-large_uploaded_image" data-tralics-id="uid1243"
                      data-number="11.21">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/large_uploaded_image.png"
                          alt="images/figures/large_uploaded_image"></div>
                      <div class="caption"><span class="header">Figure 11.21: </span><span
                          class="description">A frighteningly large uploaded
                          image. </span></div>
                    </div>
                    <p>We’ll be resizing images using the image manipulation
                      program <a href="http://www.imagemagick.org/" target="_blank">ImageMagick</a>,
                      which we need to install on the development environment.<span
                        class="intersentencespace"></span> (As we’ll see in <a
                        href="#sec-image_upload_in_production" class="hyperref">Section&nbsp;<span
                          class="ref">11.4.4</span></a>, when using Heroku for
                      deployment ImageMagick comes pre-installed in production.)<span
                        class="intersentencespace"></span> On the cloud IDE, we
                      can do this as follows:<sup id="_cha-11_footnote-ref-17" class="footnote"><a
                          href="#cha-11_footnote-17">17</a></sup></p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> sudo apt-get update
<span class="gp">$</span> sudo apt-get install imagemagick --fix-missing
</pre></div>
                    </div>
                    <p>Next, we need to include CarrierWave’s <a href="https://github.com/minimagick/minimagick"
                        target="_blank">MiniMagick</a> interface for
                      ImageMagick, together with a resizing command.<span class="intersentencespace"></span>
                      For the resizing command, there are several possibilities
                      listed in the <a href="http://www.rdoc.info/github/jnicklas/carrierwave/CarrierWave/MiniMagick"
                        target="_blank">MiniMagick documentation</a>, but the
                      one we want is <code>resize_to_limit: [400, 400]</code>,
                      which resizes large images so that they aren’t any bigger
                      than 400px in either dimension, while simultaneously
                      leaving smaller images alone.<span class="intersentencespace"></span>
                      (The other main possibilities listed in the <a href="https://github.com/carrierwaveuploader/carrierwave#using-minimagick"
                        target="_blank">CarrierWave documentation on MiniMagick</a>
                      <em>stretch</em> images if they’re too small, which isn’t
                      what we want in this case.)<span class="intersentencespace"></span>
                      With the code as shown in <a href="#code-image_uploader_resizing"
                        class="hyperref">Listing&nbsp;<span class="ref">11.63</span></a>,
                      large images are now resized nicely (<a href="#fig-resized_image"
                        class="hyperref">Figure&nbsp;<span class="ref">11.22</span></a>).</p>
                    <div class="codelisting" id="_code-image_uploader_resizing"
                      data-tralics-id="uid1245" data-number="11.63">
                      <div class="heading"><span class="number">Listing 11.63:</span>
                        <span class="description">Configuring the image uploader
                          for image resizing.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/uploaders/picture_uploader.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">PictureUploader</span> <span
class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span
class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
<span class="hll">  <span class="kp">include</span> <span class="no">CarrierWave</span><span
class="o">::</span><span class="no">MiniMagick</span>
</span><span class="hll">  <span class="n">process</span> <span class="ss">resize_to_limit</span><span
class="p">:</span> <span class="o">[</span><span class="mi">400</span><span class="p">,</span> <span
class="mi">400</span><span class="o">]</span>
</span>
  <span class="n">storage</span> <span class="ss">:file</span>

  <span class="c1"># Override the directory where uploaded files will be stored.</span>
  <span class="c1"># This is a sensible default for uploaders that are meant to be mounted:</span>
  <span class="k">def</span> <span class="nf">store_dir</span>
    <span class="s2">"uploads/</span><span class="si">#{</span><span class="n">model</span><span
class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span
class="o">.</span><span class="n">underscore</span><span class="si">}</span><span
class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span
class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span
class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
  <span class="k">end</span>

  <span class="c1"># Add a white list of extensions which are allowed to be uploaded.</span>
  <span class="k">def</span> <span class="nf">extension_white_list</span>
    <span class="sx">%w(jpg jpeg gif png)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-resized_image" data-tralics-id="uid1246"
                      data-number="11.22">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/resized_image.png"
                          alt="images/figures/resized_image"></div>
                      <div class="caption"><span class="header">Figure 11.22: </span><span
                          class="description">A nicely resized image. </span></div>
                    </div>
                  </div>
                  <div id="_sec-image_upload_in_production" data-tralics-id="uid1247"
                    class="subsection" data-number="11.4.4">
                    <h3><a href="#sec-image_upload_in_production" class="heading hyperref"><span
                          class="number">11.4.4 </span>Image upload in
                        production</a></h3>
                    <p>The image uploader developed in <a href="#sec-image_resizing"
                        class="hyperref">Section&nbsp;<span class="ref">11.4.3</span></a>
                      is good enough for development, but (as seen in the <code>storage
                        :file</code> line in <a href="#code-image_uploader_resizing"
                        class="hyperref">Listing&nbsp;<span class="ref">11.63</span></a>)
                      it uses the local filesystem for storing the images, which
                      isn’t a good practice in production.<sup id="_cha-11_footnote-ref-18"
                        class="footnote"><a href="#cha-11_footnote-18">18</a></sup><span
                        class="intersentencespace"></span> Instead, we’ll use a
                      cloud storage service to store images separately from our
                      application.<sup id="_cha-11_footnote-ref-19" class="footnote"><a
                          href="#cha-11_footnote-19">19</a></sup></p>
                    <p>To configure our application to use cloud storage in
                      production, we’ll use the <span class="tt">fog</span>
                      gem, as shown in <a href="#code-image_uploader_production"
                        class="hyperref">Listing&nbsp;<span class="ref">11.64</span></a>.</p>
                    <div class="codelisting" id="_code-image_uploader_production"
                      data-tralics-id="uid1250" data-number="11.64">
                      <div class="heading"><span class="number">Listing 11.64:</span>
                        <span class="description">Configuring the image uploader
                          for production.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/uploaders/picture_uploader.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">PictureUploader</span> <span
class="o">&lt;</span> <span class="no">CarrierWave</span><span class="o">::</span><span
class="no">Uploader</span><span class="o">::</span><span class="no">Base</span>
  <span class="kp">include</span> <span class="no">CarrierWave</span><span class="o">::</span><span
class="no">MiniMagick</span>
  <span class="n">process</span> <span class="ss">resize_to_limit</span><span class="p">:</span> <span
class="o">[</span><span class="mi">400</span><span class="p">,</span> <span class="mi">400</span><span
class="o">]</span>

<span class="hll">  <span class="k">if</span> <span class="no">Rails</span><span
class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span>
</span><span class="hll">    <span class="n">storage</span> <span class="ss">:fog</span>
</span><span class="hll">  <span class="k">else</span>
</span><span class="hll">    <span class="n">storage</span> <span class="ss">:file</span>
</span><span class="hll">  <span class="k">end</span>
</span>
  <span class="c1"># Override the directory where uploaded files will be stored.</span>
  <span class="c1"># This is a sensible default for uploaders that are meant to be mounted:</span>
  <span class="k">def</span> <span class="nf">store_dir</span>
    <span class="s2">"uploads/</span><span class="si">#{</span><span class="n">model</span><span
class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">to_s</span><span
class="o">.</span><span class="n">underscore</span><span class="si">}</span><span
class="s2">/</span><span class="si">#{</span><span class="n">mounted_as</span><span
class="si">}</span><span class="s2">/</span><span class="si">#{</span><span class="n">model</span><span
class="o">.</span><span class="n">id</span><span class="si">}</span><span class="s2">"</span>
  <span class="k">end</span>

  <span class="c1"># Add a white list of extensions which are allowed to be uploaded.</span>
  <span class="k">def</span> <span class="nf">extension_white_list</span>
    <span class="sx">%w(jpg jpeg gif png)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-image_uploader_production" class="hyperref">Listing&nbsp;<span
                          class="ref">11.64</span></a> uses the <code>production?</code>
                      boolean from <a href="#aside-rails_environments" class="hyperref">Box&nbsp;<span
                          class="ref">7.1</span></a> to switch storage method
                      based on the environment:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="no">Rails</span><span
class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span>
  <span class="n">storage</span> <span class="ss">:fog</span>
<span class="k">else</span>
  <span class="n">storage</span> <span class="ss">:file</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>There are many choices for cloud storage, but we’ll use
                      one of the most popular and well-supported, Amazon.com’s <a
                        href="http://aws.amazon.com/s3/" target="_blank">Simple
                        Storage Service (S3)</a>.<sup id="_cha-11_footnote-ref-20"
                        class="footnote"><a href="#cha-11_footnote-20">20</a></sup><span
                        class="intersentencespace"></span> Here are the
                      essential steps to getting set up:</p>
                    <ol>
                      <li>Sign up for an <a href="http://aws.amazon.com/" target="_blank">Amazon
                          Web Services</a> account.<span class="intersentencespace"></span>
                      </li>
                      <li>Create a user via <a href="http://aws.amazon.com/iam/"
                          target="_blank">AWS Identity and Access Management
                          (IAM)</a> and record the access key and secret key.<span
                          class="intersentencespace"></span> </li>
                      <li>Create an S3 bucket (with a name of your choice) using
                        the <a href="https://console.aws.amazon.com/s3" target="_blank">AWS
                          Console</a>, and then grant read and write permission
                        to the user created in the previous step.<span class="intersentencespace"></span>
                      </li>
                    </ol>
                    <p>For further details on these steps, consult the <a href="http://aws.amazon.com/documentation/s3/"
                        target="_blank">S3 documentation</a><sup id="_cha-11_footnote-ref-21"
                        class="footnote"><a href="#cha-11_footnote-21">21</a></sup></p>
                    <p>Once you’ve created and configured your S3 account, you
                      should create and fill the CarrierWave configuration file
                      as shown in <a href="#code-carrier_wave_configuration" class="hyperref">Listing&nbsp;<span
                          class="ref">11.65</span></a>.</p>
                    <div class="codelisting" id="_code-carrier_wave_configuration"
                      data-tralics-id="uid1256" data-number="11.65">
                      <div class="heading"><span class="number">Listing 11.65:</span>
                        <span class="description">Configuring CarrierWave to use
                          S3.<span class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">config/initializers/carrier_wave.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">if</span> <span class="no">Rails</span><span
class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">production?</span>
  <span class="no">CarrierWave</span><span class="o">.</span><span class="n">configure</span> <span
class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
    <span class="n">config</span><span class="o">.</span><span class="n">fog_credentials</span> <span
class="o">=</span> <span class="p">{</span>
      <span class="c1"># Configuration for Amazon S3</span>
      <span class="ss">:provider</span>              <span class="o">=&gt;</span> <span
class="s1">'AWS'</span><span class="p">,</span>
      <span class="ss">:aws_access_key_id</span>     <span class="o">=&gt;</span> <span
class="no">ENV</span><span class="o">[</span><span class="s1">'S3_ACCESS_KEY'</span><span
class="o">]</span><span class="p">,</span>
      <span class="ss">:aws_secret_access_key</span> <span class="o">=&gt;</span> <span
class="no">ENV</span><span class="o">[</span><span class="s1">'S3_SECRET_KEY'</span><span
class="o">]</span>
    <span class="p">}</span>
    <span class="n">config</span><span class="o">.</span><span class="n">fog_directory</span>     <span
class="o">=</span>  <span class="no">ENV</span><span class="o">[</span><span class="s1">'S3_BUCKET'</span><span
class="o">]</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As with production email configuration (<a href="#code-sendgrid_config"
                        class="hyperref">Listing&nbsp;<span class="ref">10.56</span></a>),
                      <a href="#code-carrier_wave_configuration" class="hyperref">Listing&nbsp;<span
                          class="ref">11.65</span></a> uses Heroku <code>ENV</code>
                      variables to avoid hard-coding sensitive information.<span
                        class="intersentencespace"></span> In <a href="#sec-email_in_production"
                        class="hyperref">Section&nbsp;<span class="ref">10.3</span></a>,
                      these variables were defined automatically via the
                      SendGrid add-on, but in this case we need to define them
                      explicitly, which we can accomplish using <code>heroku
                        config:set</code> as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> heroku config:set <span class="nv">S3_ACCESS_KEY</span><span
class="o">=</span>&lt;access key&gt;
<span class="gp">$</span> heroku config:set <span class="nv">S3_SECRET_KEY</span><span
class="o">=</span>&lt;secret key&gt;
<span class="gp">$</span> heroku config:set <span class="nv">S3_BUCKET</span><span
class="o">=</span>&lt;bucket name&gt;
</pre></div>
                    </div>
                    <p>With the configuration above, we are ready to commit our
                      changes and deploy.<span class="intersentencespace"></span>
                      We start by committing the changes on our topic branch and
                      merging back to master:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Add user microposts"
$ git checkout master
$ git merge user-microposts
$ git push
</pre></div>
                    </div>
                    <p>Then we deploy, reset the database, and reseed the sample
                      data:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ git push heroku
$ heroku pg:reset DATABASE
$ heroku run rake db:migrate
$ heroku run rake db:seed
</pre></div>
                    </div>
                    <p>Because Heroku comes with an installation of ImageMagick,
                      the result is successful image resizing and upload in
                      production, as seen in <a href="#fig-image_upload_production"
                        class="hyperref">Figure&nbsp;<span class="ref">11.23</span></a>.</p>
                    <div class="center figure" id="_fig-image_upload_production"
                      data-tralics-id="uid1257" data-number="11.23">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/image_upload_production.png"
                          alt="images/figures/image_upload_production"></div>
                      <div class="caption"><span class="header">Figure 11.23: </span><span
                          class="description">Image upload in production. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_cid77" data-tralics-id="cid77" class="section" data-number="11.5">
                  <h2><a href="#cid77" class="heading hyperref"><span class="number">11.5
                        </span>Висновок</a></h2>
                  <p>With the addition of the Microposts resource, we are nearly
                    finished with our sample application.<span class="intersentencespace"></span>
                    All that remains is to add a social layer by letting users
                    follow each other.<span class="intersentencespace"></span>
                    We’ll learn how to model such user relationships, and see
                    the implications for the microposts feed, in <a href="#cha-following_users"
                      class="hyperref">Chapter&nbsp;<span class="ref">12</span></a>.</p>
                  <p>If you skipped <a href="#sec-image_upload_in_production" class="hyperref">Section&nbsp;<span
                        class="ref">11.4.4</span></a>, be sure to commit and
                    merge your changes:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Add user microposts"
$ git checkout master
$ git merge user-microposts
$ git push
</pre></div>
                  </div>
                  <p>Then deploy to production:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre>$ git push heroku
$ heroku pg:reset DATABASE
$ heroku run rake db:migrate
$ heroku run rake db:seed
</pre></div>
                  </div>
                  <p>It’s worth noting that this chapter saw the last of the
                    necessary gem installations.<span class="intersentencespace"></span>
                    For reference, the final <code>Gemfile</code> is shown in <a
                      href="#code-final_gemfile" class="hyperref">Listing&nbsp;<span
                        class="ref">11.66</span></a>.</p>
                  <div class="codelisting" id="_code-final_gemfile" data-tralics-id="uid1258"
                    data-number="11.66">
                    <div class="heading"><span class="number">Listing 11.66:</span>
                      <span class="description">The final <code>Gemfile</code>
                        for the sample application.</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">source</span> <span class="s1">'https://rubygems.org'</span>

<span class="n">gem</span> <span class="s1">'rails'</span><span class="p">,</span>                   <span
class="s1">'4.2.0'</span>
<span class="n">gem</span> <span class="s1">'bcrypt'</span><span class="p">,</span>                  <span
class="s1">'3.1.7'</span>
<span class="n">gem</span> <span class="s1">'faker'</span><span class="p">,</span>                   <span
class="s1">'1.4.2'</span>
<span class="n">gem</span> <span class="s1">'carrierwave'</span><span class="p">,</span>             <span
class="s1">'0.10.0'</span>
<span class="n">gem</span> <span class="s1">'mini_magick'</span><span class="p">,</span>             <span
class="s1">'3.8.0'</span>
<span class="n">gem</span> <span class="s1">'fog'</span><span class="p">,</span>                     <span
class="s1">'1.23.0'</span>
<span class="n">gem</span> <span class="s1">'will_paginate'</span><span class="p">,</span>           <span
class="s1">'3.0.7'</span>
<span class="n">gem</span> <span class="s1">'bootstrap-will_paginate'</span><span
class="p">,</span> <span class="s1">'0.0.10'</span>
<span class="n">gem</span> <span class="s1">'bootstrap-sass'</span><span class="p">,</span>          <span
class="s1">'3.2.0.0'</span>
<span class="n">gem</span> <span class="s1">'sass-rails'</span><span class="p">,</span>              <span
class="s1">'5.0.1'</span>
<span class="n">gem</span> <span class="s1">'uglifier'</span><span class="p">,</span>                <span
class="s1">'2.5.3'</span>
<span class="n">gem</span> <span class="s1">'coffee-rails'</span><span class="p">,</span>            <span
class="s1">'4.1.0'</span>
<span class="n">gem</span> <span class="s1">'jquery-rails'</span><span class="p">,</span>            <span
class="s1">'4.0.3'</span>
<span class="n">gem</span> <span class="s1">'turbolinks'</span><span class="p">,</span>              <span
class="s1">'2.3.0'</span>
<span class="n">gem</span> <span class="s1">'jbuilder'</span><span class="p">,</span>                <span
class="s1">'2.2.3'</span>
<span class="n">gem</span> <span class="s1">'sdoc'</span><span class="p">,</span>                    <span
class="s1">'0.4.0'</span><span class="p">,</span> <span class="ss">group</span><span
class="p">:</span> <span class="ss">:doc</span>

<span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span
class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'sqlite3'</span><span class="p">,</span>     <span
class="s1">'1.3.9'</span>
  <span class="n">gem</span> <span class="s1">'byebug'</span><span class="p">,</span>      <span
class="s1">'3.4.0'</span>
  <span class="n">gem</span> <span class="s1">'web-console'</span><span class="p">,</span> <span
class="s1">'2.0.0.beta3'</span>
  <span class="n">gem</span> <span class="s1">'spring'</span><span class="p">,</span>      <span
class="s1">'1.1.3'</span>
<span class="k">end</span>

<span class="n">group</span> <span class="ss">:test</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'minitest-reporters'</span><span class="p">,</span> <span
class="s1">'1.0.5'</span>
  <span class="n">gem</span> <span class="s1">'mini_backtrace'</span><span class="p">,</span>     <span
class="s1">'0.1.3'</span>
  <span class="n">gem</span> <span class="s1">'guard-minitest'</span><span class="p">,</span>     <span
class="s1">'2.3.1'</span>
<span class="k">end</span>

<span class="n">group</span> <span class="ss">:production</span> <span class="k">do</span>
  <span class="n">gem</span> <span class="s1">'pg'</span><span class="p">,</span>             <span
class="s1">'0.17.1'</span>
  <span class="n">gem</span> <span class="s1">'rails_12factor'</span><span class="p">,</span> <span
class="s1">'0.0.2'</span>
  <span class="n">gem</span> <span class="s1">'puma'</span><span class="p">,</span>           <span
class="s1">'2.11.1'</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-user_microposts_what_we_learned_in_this_chapter"
                    data-tralics-id="uid1259" class="subsection" data-number="11.5.1">
                    <h3><a href="#sec-user_microposts_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">11.5.1 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Microposts, like Users, are modeled as a resource
                        backed by an Active Record model. </li>
                      <li>Rails supports multiple-key indices. </li>
                      <li>We can model a user having many microposts using the <code>has_many</code>
                        and <code>belongs_to</code> methods in the User and
                        Micropost models, respectively. </li>
                      <li>The <code>has_many</code>/<code>belongs_to</code>
                        combination gives rise to methods that work through the
                        association. </li>
                      <li>The code <code>user.microposts.build(...)</code><span
                          class="intersentencespace"></span> returns a new
                        Micropost object automatically associated with the given
                        user. </li>
                      <li>Rails supports default ordering via <code>default_scope</code>.
                      </li>
                      <li>Scopes take anonymous functions as arguments. </li>
                      <li>The <code>dependent: :destroy</code> option causes
                        objects to be destroyed at the same time as associated
                        objects. </li>
                      <li>Pagination and object counts can both be performed
                        through associations, leading to automatically efficient
                        code. </li>
                      <li>Fixtures support the creation of associations. </li>
                      <li>It is possible to pass variables to Rails partials. </li>
                      <li>The <code>where</code> method can be used to perform
                        Active Record selections. </li>
                      <li>We can enforce secure operations by always creating
                        and destroying dependent objects through their
                        association. </li>
                      <li>We can upload and resize images using CarrierWave. </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-micropost_exercises" data-tralics-id="cid78" class="section"
                  data-number="11.6">
                  <h2><a href="#sec-micropost_exercises" class="heading hyperref"><span
                        class="number">11.6 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>Refactor the Home page to use separate partials for the
                      two branches of the <code>if</code>-<code>else</code>
                      statement. </li>
                    <li>Add tests for the sidebar micropost count (including
                      proper pluralization).<span class="intersentencespace"></span>
                      <a href="#code-sidebar_micropost_count" class="hyperref">Listing&nbsp;<span
                          class="ref">11.67</span></a> will help get you
                      started. </li>
                    <li>Following the template in <a href="#code-image_upload_test"
                        class="hyperref">Listing&nbsp;<span class="ref">11.68</span></a>,
                      write a test of the image uploader in <a href="#sec-micropost_images"
                        class="hyperref">Section&nbsp;<span class="ref">11.4</span></a>.<span
                        class="intersentencespace"></span> As preparation, you
                      should add an image to the fixtures directory (using, e.g,
                      <code>cp app/assets/images/rails.png</code> <code>test/fixtures/</code>).<span
                        class="intersentencespace"></span> (If you’re using Git,
                      I also recommend updating your <code>.gitignore</code>
                      file as shown in <a href="#code-gitignore_uploads" class="hyperref">Listing&nbsp;<span
                          class="ref">11.69</span></a>.)<span class="intersentencespace"></span>
                      To avoid a confusing error, you will also need to
                      configure CarrierWave to skip image resizing in tests by
                      creating an initializer file as shown in <a href="#code-skip_resize_initializer"
                        class="hyperref">Listing&nbsp;<span class="ref">11.70</span></a>.<span
                        class="intersentencespace"></span> The additional
                      assertions in <a href="#code-image_upload_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.68</span></a> check both for a file
                      upload field on the Home page and for a valid image
                      attribute on the micropost resulting from valid
                      submission.<span class="intersentencespace"></span> Note
                      the use of the special <code>fixture_file_upload</code>
                      method for uploading files as fixtures inside tests.<sup id="_cha-11_footnote-ref-22"
                        class="footnote"><a href="#cha-11_footnote-22">22</a></sup><span
                        class="intersentencespace"></span> <em>Hint</em>: To
                      check for a valid <code>picture</code> attribute, use the
                      <code>assigns</code> method mentioned in <a href="#sec-activation_test_and_refactoring"
                        class="hyperref">Section&nbsp;<span class="ref">10.1.4</span></a>
                      to access the micropost in the <code>create</code> action
                      after valid submission. </li>
                  </ol>
                  <div class="codelisting" id="_code-sidebar_micropost_count" data-tralics-id="uid1278"
                    data-number="11.67">
                    <div class="heading"><span class="number">Listing 11.67:</span>
                      <span class="description">A template for the sidebar
                        micropost count test.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">test/integration/microposts_interface_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostInterfaceTest</span> <span
class="o">&lt;</span> <span class="no">ActionDispatch</span><span class="o">::</span><span
class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"micropost sidebar count"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_match</span> <span class="s2">"</span><span class="si">#{</span><span
class="no">FILL_IN</span><span class="si">}</span><span class="s2"> microposts"</span><span
class="p">,</span> <span class="n">response</span><span class="o">.</span><span
class="n">body</span>
    <span class="c1"># User with zero microposts</span>
    <span class="n">other_user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:mallory</span><span class="p">)</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="n">other_user</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_match</span> <span class="s2">"0 microposts"</span><span
class="p">,</span> <span class="n">response</span><span class="o">.</span><span
class="n">body</span>
    <span class="n">other_user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="s2">"A micropost"</span><span class="p">)</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_match</span> <span class="no">FILL_IN</span><span class="p">,</span> <span
class="n">response</span><span class="o">.</span><span class="n">body</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-image_upload_test" data-tralics-id="uid1279"
                    data-number="11.68">
                    <div class="heading"><span class="number">Listing 11.68:</span>
                      <span class="description">A template for testing image
                        upload.<span class="intersentencespace"></span> <span class="break"></span>
                        <span class="filepath">test/integration/microposts_interface_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">MicropostInterfaceTest</span> <span
class="o">&lt;</span> <span class="no">ActionDispatch</span><span class="o">::</span><span
class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"micropost interface"</span> <span
class="k">do</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="n">assert_select</span> <span class="s1">'div.pagination'</span>
<span class="hll">    <span class="n">assert_select</span> <span class="s1">'input[type=FILL_IN]'</span>
</span>    <span class="c1"># Invalid submission</span>
    <span class="n">post</span> <span class="n">microposts_path</span><span class="p">,</span> <span
class="ss">micropost</span><span class="p">:</span> <span class="p">{</span> <span
class="ss">content</span><span class="p">:</span> <span class="s2">""</span> <span
class="p">}</span>
    <span class="n">assert_select</span> <span class="s1">'div#error_explanation'</span>
    <span class="c1"># Valid submission</span>
    <span class="n">content</span> <span class="o">=</span> <span class="s2">"This micropost really ties the room together"</span>
<span class="hll">    <span class="n">picture</span> <span class="o">=</span> <span
class="n">fixture_file_upload</span><span class="p">(</span><span class="s1">'test/fixtures/rails.png'</span><span
class="p">,</span> <span class="s1">'image/png'</span><span class="p">)</span>
</span>    <span class="n">assert_difference</span> <span class="s1">'Micropost.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
<span class="hll">      <span class="n">post</span> <span class="n">microposts_path</span><span
class="p">,</span> <span class="ss">micropost</span><span class="p">:</span> <span
class="p">{</span> <span class="ss">content</span><span class="p">:</span> <span
class="n">content</span><span class="p">,</span> <span class="ss">picture</span><span
class="p">:</span> <span class="no">FILL_IN</span> <span class="p">}</span>
</span>    <span class="k">end</span>
<span class="hll">    <span class="n">assert</span> <span class="no">FILL_IN</span><span
class="o">.</span><span class="n">picture?</span>
</span>    <span class="n">follow_redirect!</span>
    <span class="n">assert_match</span> <span class="n">content</span><span class="p">,</span> <span
class="n">response</span><span class="o">.</span><span class="n">body</span>
    <span class="c1"># Delete a post.</span>
    <span class="n">assert_select</span> <span class="s1">'a'</span><span class="p">,</span> <span
class="s1">'delete'</span>
    <span class="n">first_micropost</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span
class="n">first</span>
    <span class="n">assert_difference</span> <span class="s1">'Micropost.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
      <span class="n">delete</span> <span class="n">micropost_path</span><span class="p">(</span><span
class="n">first_micropost</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="c1"># Visit a different user.</span>
    <span class="n">get</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">users</span><span class="p">(</span><span class="ss">:archer</span><span
class="p">))</span>
    <span class="n">assert_select</span> <span class="s1">'a'</span><span class="p">,</span> <span
class="p">{</span> <span class="ss">text</span><span class="p">:</span> <span class="s1">'delete'</span><span
class="p">,</span> <span class="ss">count</span><span class="p">:</span> <span class="mi">0</span> <span
class="p">}</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-gitignore_uploads" data-tralics-id="uid1280"
                    data-number="11.69">
                    <div class="heading"><span class="number">Listing 11.69:</span>
                      <span class="description">Adding the uploads directory to
                        the <code>.gitignore</code> file.</span> </div>
                    <div class="code">
                      <div class="highlight">
                        <pre># See https://help.github.com/articles/ignoring-files for more about ignoring
# files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*.log
/tmp

# Ignore Spring files.
/spring/*.pid

<span class="hll"># Ignore uploaded test images.
</span><span class="hll">/public/uploads
</span></pre></div>
                    </div>
                  </div>
                  <div class="codelisting" id="_code-skip_resize_initializer" data-tralics-id="uid1281"
                    data-number="11.70">
                    <div class="heading"><span class="number">Listing 11.70:</span>
                      <span class="description">An initializer to skip image
                        resizing in tests.<span class="intersentencespace"></span>
                        <span class="break"></span> <span class="filepath">config/initializers/skip_image_resizing.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">if</span> <span class="no">Rails</span><span
class="o">.</span><span class="n">env</span><span class="o">.</span><span class="n">test?</span>
  <span class="no">CarrierWave</span><span class="o">.</span><span class="n">configure</span> <span
class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
    <span class="n">config</span><span class="o">.</span><span class="n">enable_processing</span> <span
class="o">=</span> <span class="kp">false</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-11_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-11_footnote-1">The name is motivated by the
                      common description of Twitter as a <em>microblog</em>;
                      since blogs have posts, microblogs should have
                      microposts.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-1">↑</a></li>
                    <li id="_cha-11_footnote-2">http://www.postgresql.org/docs/9.1/static/datatype-character.html&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-2">↑</a></li>
                    <li id="_cha-11_footnote-3">The foreign key reference is a
                      database-level constraint indicating that the user id in
                      the microposts table refers to the id column in the users
                      table.<span class="intersentencespace"></span> This detail
                      will never be important in this tutorial, and the foreign
                      key constraint isn’t even supported by all databases.<span
                        class="intersentencespace"></span> (It’s supported by
                      PostgreSQL, which we use in production, but not by the
                      development SQLite database adapter.)<span class="intersentencespace"></span>
                      We’ll learn more about foreign keys in <a href="#sec-relationship_user_associations"
                        class="hyperref">Section&nbsp;<span class="ref">12.1.2</span></a>.&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-3">↑</a></li>
                    <li id="_cha-11_footnote-4">We briefly encountered a similar
                      issue in <a href="#sec-updating_and_deleting_users_conclusion"
                        class="hyperref">Section&nbsp;<span class="ref">9.5</span></a>
                      in the context of the users index.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-4">↑</a></li>
                    <li id="_cha-11_footnote-5">SQL is case-insensitive, but it
                      is conventional to write SQL keywords (such as <code>DESC</code>)
                      in all-caps.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-5">↑</a></li>
                    <li id="_cha-11_footnote-6"><code>Faker::Lorem.sentence</code>
                      returns <em>lorem ipsum</em> text; as noted in <a href="#cha-modeling_users"
                        class="hyperref">Chapter&nbsp;<span class="ref">6</span></a>,
                      <em>lorem ipsum</em> has a <a href="http://www.straightdope.com/columns/read/2290/what-does-the-filler-text-lorem-ipsum-mean"
                        target="_blank">fascinating back story</a>.&nbsp;<a class="arrow"
                        href="#cha-11_footnote-ref-6">↑</a></li>
                    <li id="_cha-11_footnote-7">By design, the Faker gem’s <em>lorem
                        ipsum</em> text is randomized, so the contents of your
                      sample microposts will differ.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-7">↑</a></li>
                    <li id="_cha-11_footnote-8">For convenience, <a href="#code-micropost_css"
                        class="hyperref">Listing&nbsp;<span class="ref">11.25</span></a>
                      actually has <em>all</em> the CSS needed for this
                      chapter.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-8">↑</a></li>
                    <li id="_cha-11_footnote-9">If you’d like to refactor other
                      tests to use <code>full_title</code> (such as those in <a
                        href="#code-base_title_test" class="hyperref">Listing&nbsp;<span
                          class="ref">3.38</span></a>), you should include the
                      Application Helper in <code>test_helper.rb</code>
                      instead.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-9">↑</a></li>
                    <li id="_cha-11_footnote-10">See the Rails Guide on the <a
                        href="http://guides.rubyonrails.org/active_record_querying.html"
                        target="_blank">Active Record Query Interface</a> for
                      more on <code>where</code> and related methods.&nbsp;<a class="arrow"
                        href="#cha-11_footnote-ref-10">↑</a></li>
                    <li id="_cha-11_footnote-11">This corresponds to <span class="tt">HTTP_REFERER</span>,
                      as defined by the specification for HTTP. Note that
                      “referer” is not a typo—the word is actually misspelled in
                      the spec.<span class="intersentencespace"></span> Rails
                      corrects this error by writing “referrer” instead.&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-11">↑</a></li>
                    <li id="_cha-11_footnote-12">I didn’t remember offhand how
                      to get this URL inside a Rails application, so I Googled
                      “rails request previous url” and found a <a href="http://stackoverflow.com/questions/4652084/ruby-on-rails-how-do-you-get-the-previous-url"
                        target="_blank">Stack Overflow thread</a> with the
                      answer.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-12">↑</a></li>
                    <li id="_cha-11_footnote-13">Beach photo from
                      https://www.flickr.com/photos/grungepunk/14026922186&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-13">↑</a></li>
                    <li id="_cha-11_footnote-14">Initially, I called the new
                      attribute <code>image</code>, but that name was so
                      generic it ended up being confusing.&nbsp;<a class="arrow"
                        href="#cha-11_footnote-ref-14">↑</a></li>
                    <li id="_cha-11_footnote-15">To learn how to do things like
                      this, you can do what I did: Google around for things like
                      “javascript maximum file size” until you find something on
                      Stack Overflow.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-15">↑</a></li>
                    <li id="_cha-11_footnote-16">It’s possible to constrain the
                      <em>display</em> size with CSS, but this doesn’t change
                      the image size.<span class="intersentencespace"></span> In
                      particular, large images would still take a while to load.<span
                        class="intersentencespace"></span> (You’ve probably
                      visited websites where “small” images seemingly take
                      forever to load.<span class="intersentencespace"></span>
                      This is why.)&nbsp;<a class="arrow" href="#cha-11_footnote-ref-16">↑</a></li>
                    <li id="_cha-11_footnote-17">I got this from the <a href="https://help.ubuntu.com/community/ImageMagick"
                        target="_blank">official Ubuntu documentation</a>.<span
                        class="intersentencespace"></span> If you’re not using
                      the cloud IDE or an equivalent Linux system, do a Google
                      search for “imagemagick &lt;your platform&gt;”.<span class="intersentencespace"></span>
                      On OS&nbsp;X, <code>brew install imagemagick</code>
                      should work if you have <a href="http://brew.sh/" target="_blank">Homebrew</a>
                      installed.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-17">↑</a></li>
                    <li id="_cha-11_footnote-18">Among other things, file
                      storage on Heroku is temporary, so uploaded images will be
                      deleted every time you deploy.&nbsp;<a class="arrow" href="#cha-11_footnote-ref-18">↑</a></li>
                    <li id="_cha-11_footnote-19">This is a challenging section
                      and can be skipped without loss of continuity.&nbsp;<a class="arrow"
                        href="#cha-11_footnote-ref-19">↑</a></li>
                    <li id="_cha-11_footnote-20">S3 is a paid service, but the
                      storage needed to set up and test the Rails Tutorial
                      sample application costs less than a cent per month.&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-20">↑</a></li>
                    <li id="_cha-11_footnote-21">http://aws.amazon.com/documentation/s3/&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-21">↑</a></li>
                    <li id="_cha-11_footnote-22">Windows users should add a <code>:binary</code>
                      parameter: <code>fixture_file_upload(file, type, :binary)</code>.&nbsp;<a
                        class="arrow" href="#cha-11_footnote-ref-22">↑</a></li>
                  </ol>
                </div>
                <div id="_cha-following_users" data-tralics-id="cid79" class="chapter"
                  data-number="12">
                  <h1><a name="cha-following_users" class="heading hyperref"><span
                        class="number">Chapter 12 </span>Following users</a></h1>
                  <p>In this chapter, we will complete the sample application by
                    adding a social layer that allows users to follow (and
                    unfollow) other users, resulting in each user’s Home page
                    displaying a status feed of the followed users’ microposts.<span
                      class="intersentencespace"></span> We’ll start by learning
                    how to model relationships between users in <a href="#sec-the_relationship_model"
                      class="hyperref">Section&nbsp;<span class="ref">12.1</span></a>,
                    and we’ll build the corresponding web interface in <a href="#sec-a_web_interface_for_following_and_followers"
                      class="hyperref">Section&nbsp;<span class="ref">12.2</span></a>
                    (including an introduction to Ajax).<span class="intersentencespace"></span>
                    We’ll end by developing a fully functional status feed in <a
                      href="#sec-the_status_feed" class="hyperref">Section&nbsp;<span
                        class="ref">12.3</span></a>.</p>
                  <p>This final chapter contains some of the most challenging
                    material in the tutorial, including some Ruby/SQL trickery
                    to make the status feed.<span class="intersentencespace"></span>
                    Through these examples, you will see how Rails can handle
                    even rather intricate data models, which should serve you
                    well as you go on to develop your own applications with
                    their own specific requirements.<span class="intersentencespace"></span>
                    To help with the transition from tutorial to independent
                    development, <a href="#sec-following_conclusion" class="hyperref">Section&nbsp;<span
                        class="ref">12.4</span></a> offers some pointers to more
                    advanced resources.</p>
                  <p>Because the material in this chapter is particularly
                    challenging, before writing any code we’ll pause for a
                    moment and take a tour of the interface.<span class="intersentencespace"></span>
                    As in previous chapters, at this early stage we’ll represent
                    pages using mockups.<sup id="_cha-12_footnote-ref-1" class="footnote"><a
                        href="#cha-12_footnote-1">1</a></sup><span class="intersentencespace"></span>
                    The full page flow runs as follows: a user (John Calvin)
                    starts at his profile page (<a href="#fig-page_flow_profile_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">12.1</span></a>)
                    and navigates to the Users page (<a href="#fig-page_flow_user_index_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">12.2</span></a>)
                    to select a user to follow.<span class="intersentencespace"></span>
                    Calvin navigates to the profile of a second user, Thomas
                    Hobbes (<a href="#fig-page_flow_other_profile_follow_button"
                      class="hyperref">Figure&nbsp;<span class="ref">12.3</span></a>),
                    clicking on the “Follow” button to follow that user.<span class="intersentencespace"></span>
                    This changes the “Follow” button to “Unfollow” and
                    increments Hobbes’s “followers” count by one (<a href="#fig-page_flow_other_profile_unfollow_button_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">12.4</span></a>).<span
                      class="intersentencespace"></span> Navigating to his home
                    page, Calvin now sees an incremented “following” count and
                    finds Hobbes’s microposts in his status feed (<a href="#fig-page_flow_home_page_feed_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">12.5</span></a>).<span
                      class="intersentencespace"></span> The rest of this
                    chapter is dedicated to making this page flow actually work.</p>
                  <div class="center figure" id="_fig-page_flow_profile_mockup"
                    data-tralics-id="uid1283" data-number="12.1">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/page_flow_profile_mockup_3rd_edition.png"
                        alt="images/figures/page_flow_profile_mockup_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 12.1: </span><span
                        class="description">A current user’s profile. </span></div>
                  </div>
                  <div class="center figure" id="_fig-page_flow_user_index_mockup"
                    data-tralics-id="uid1284" data-number="12.2">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/page_flow_user_index_mockup_bootstrap.png"
                        alt="images/figures/page_flow_user_index_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 12.2: </span><span
                        class="description">Finding a user to follow. </span></div>
                  </div>
                  <div class="center figure" id="_fig-page_flow_other_profile_follow_button"
                    data-tralics-id="uid1285" data-number="12.3">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/page_flow_other_profile_follow_button_mockup_3rd_edition.png"
                        alt="images/figures/page_flow_other_profile_follow_button_mockup_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 12.3: </span><span
                        class="description">The profile of a user to follow,
                        with a follow button. </span></div>
                  </div>
                  <div class="center figure" id="_fig-page_flow_other_profile_unfollow_button_mockup"
                    data-tralics-id="uid1286" data-number="12.4">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/page_flow_other_profile_unfollow_button_mockup_3rd_edition.png"
                        alt="images/figures/page_flow_other_profile_unfollow_button_mockup_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 12.4: </span><span
                        class="description">A profile with an unfollow button
                        and incremented followers count. </span></div>
                  </div>
                  <div class="center figure" id="_fig-page_flow_home_page_feed_mockup"
                    data-tralics-id="uid1287" data-number="12.5">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/page_flow_home_page_feed_mockup_3rd_edition.png"
                        alt="images/figures/page_flow_home_page_feed_mockup_3rd_edition"></div>
                    <div class="caption"><span class="header">Figure 12.5: </span><span
                        class="description">The Home page with status feed and
                        incremented following count. </span></div>
                  </div>
                </div>
                <div id="_sec-the_relationship_model" data-tralics-id="cid80" class="section"
                  data-number="12.1">
                  <h2><a href="#sec-the_relationship_model" class="heading hyperref"><span
                        class="number">12.1 </span>The Relationship model</a></h2>
                  <p>Our first step in implementing following users is to
                    construct a data model, which is not as straightforward as
                    it seems.<span class="intersentencespace"></span> Naïvely,
                    it seems that a <code>has_many</code> relationship would
                    do: a user <code>has_many</code> followed users and <code>has_many</code>
                    followers.<span class="intersentencespace"></span> As we
                    will see, there is a problem with this approach, and we’ll
                    learn how to fix it using <code>has_many :through</code>.</p>
                  <p>As usual, Git users should create a new topic branch:</p>
                  <div class="code">
                    <div class="highlight">
                      <pre><span class="gp">$</span> git checkout master
<span class="gp">$</span> git checkout -b following-users
</pre></div>
                  </div>
                  <div id="_sec-a_problem_with_the_data_model" data-tralics-id="uid1288"
                    class="subsection" data-number="12.1.1">
                    <h3><a href="#sec-a_problem_with_the_data_model" class="heading hyperref"><span
                          class="number">12.1.1 </span>A problem with the data
                        model (and a solution)</a></h3>
                    <p>As a first step toward constructing a data model for
                      following users, let’s examine a typical case.<span class="intersentencespace"></span>
                      For instance, consider a user who follows a second user:
                      we could say that, e.g., Calvin is following Hobbes, and
                      Hobbes is followed by Calvin, so that Calvin is the <em>follower</em>
                      and Hobbes is <em>followed</em>.<span class="intersentencespace"></span>
                      Using Rails’ default pluralization convention, the set of
                      all users following a given user is that user’s <em>followers</em>,
                      and <code>hobbes.followers</code> is an array of those
                      users.<span class="intersentencespace"></span>
                      Unfortunately, the reverse doesn’t work: by default, the
                      set of all followed users would be called the <em>followeds</em>,
                      which is ungrammatical and clumsy.<span class="intersentencespace"></span>
                      We’ll adopt Twitter’s convention and call them <em>following</em>
                      (as in “50 following, 75 followers”), with a corresponding
                      <code>calvin.following</code> array.</p>
                    <p>This discussion suggests modeling the followed users as
                      in <a href="#fig-naive_user_has_many_following" class="hyperref">Figure&nbsp;<span
                          class="ref">12.6</span></a>, with a <code>following</code>
                      table and a <code>has_many</code> association.<span class="intersentencespace"></span>
                      Since <code>user.following</code> should be a collection
                      of users, each row of the <code>following</code> table
                      would need to be a user, as identified by the <code>followed_id</code>,
                      together with the <code>follower_id</code> to establish
                      the association.<sup id="_cha-12_footnote-ref-2" class="footnote"><a
                          href="#cha-12_footnote-2">2</a></sup><span class="intersentencespace"></span>
                      In addition, since each row is a user, we would need to
                      include the user’s other attributes, including the name,
                      email, password, etc.</p>
                    <div class="center figure" id="_fig-naive_user_has_many_following"
                      data-tralics-id="uid1290" data-number="12.6">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/naive_user_has_many_following.png"
                          alt="images/figures/naive_user_has_many_following"></div>
                      <div class="caption"><span class="header">Figure 12.6: </span><span
                          class="description">A naïve implementation of user
                          following. </span></div>
                    </div>
                    <p>The problem with the data model in <a href="#fig-naive_user_has_many_following"
                        class="hyperref">Figure&nbsp;<span class="ref">12.6</span></a>
                      is that it is terribly redundant: each row contains not
                      only each followed user’s id, but all their other
                      information as well—all of which is <em>already</em> in
                      the <code>users</code> table.<span class="intersentencespace"></span>
                      Even worse, to model user <em>followers</em> we would
                      need a separate, similarly redundant <code>followers</code>
                      table.<span class="intersentencespace"></span> Finally,
                      this data model is a maintainability nightmare: each time
                      a user changed (say) their name, we would need to update
                      not just the user’s record in the <code>users</code>
                      table but also <em>every row containing that user</em> in
                      both the <code>following</code> and <code>followers</code>
                      tables.</p>
                    <p>The problem here is that we are missing an underlying
                      abstraction.<span class="intersentencespace"></span> One
                      way to find the proper model is to consider how we might
                      implement the act of <em>following</em> in a web
                      application.<span class="intersentencespace"></span>
                      Recall from <a href="#sec-a_users_resource" class="hyperref">Section&nbsp;<span
                          class="ref">7.1.2</span></a> that the REST
                      architecture involves <em>resources</em> that are created
                      and destroyed.<span class="intersentencespace"></span>
                      This leads us to ask two questions: When a user follows
                      another user, what is being created?<span class="intersentencespace"></span>
                      When a user <em>un</em>follows another user, what is
                      being destroyed?<span class="intersentencespace"></span>
                      Upon reflection, we see that in these cases the
                      application should either create or destroy a <em>relationship</em>
                      between two users.<span class="intersentencespace"></span>
                      A user then has many relationships, and has many <code>following</code>
                      (or <code>followers</code>) <em>through</em> these
                      relationships.</p>
                    <p>There’s an additional detail we need to address regarding
                      our application’s data model: unlike symmetric
                      Facebook-style friendships, which are always reciprocal
                      (at least at the data-model level), Twitter-style
                      following relationships are potentially <em>asymmetric</em>—Calvin
                      can follow Hobbes without Hobbes following Calvin.<span class="intersentencespace"></span>
                      To distinguish between these two cases, we’ll adopt the
                      terminology of <em>active</em> and <em>passive</em>
                      relationships: if Calvin is following Hobbes but not vice
                      versa, Calvin has an active relationship with Hobbes and
                      Hobbes has a passive relationship with Calvin.<sup id="_cha-12_footnote-ref-3"
                        class="footnote"><a href="#cha-12_footnote-3">3</a></sup></p>
                    <p>We’ll focus now on using active relationships to generate
                      a list of followed users, and consider the passive case in
                      <a href="#sec-followers" class="hyperref">Section&nbsp;<span
                          class="ref">12.1.5</span></a>.<span class="intersentencespace"></span>
                      <a href="#fig-naive_user_has_many_following" class="hyperref">Figure&nbsp;<span
                          class="ref">12.6</span></a> suggests how to implement
                      it: since each followed user is uniquely identified by <code>followed_id</code>,
                      we could convert <code>following</code> to an <code>active_relationships</code>
                      table, omit the user details, and use <code>followed_id</code>
                      to retrieve the followed user from the <code>users</code>
                      table.<span class="intersentencespace"></span> A diagram
                      of the data model appears in <a href="#fig-user_has_many_following"
                        class="hyperref">Figure&nbsp;<span class="ref">12.7</span></a>.</p>
                    <div class="center figure" id="_fig-user_has_many_following"
                      data-tralics-id="uid1292" data-number="12.7">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_has_many_following_3rd_edition.png"
                          alt="images/figures/user_has_many_following_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.7: </span><span
                          class="description">A model of followed users through
                          active relationships. </span></div>
                    </div>
                    <p>Because we’ll end up using the same database table for
                      both active and passive relationships, we’ll use the
                      generic term <em>relationship</em> for the table name,
                      with a corresponding Relationship model.<span class="intersentencespace"></span>
                      The result is the Relationship data model shown in <a href="#fig-relationship_model"
                        class="hyperref">Figure&nbsp;<span class="ref">12.8</span></a>.<span
                        class="intersentencespace"></span> We’ll see starting in
                      <a href="#sec-following" class="hyperref">Section&nbsp;<span
                          class="ref">12.1.4</span></a> how to use the
                      Relationship model to simulate both Active Relationship
                      and Passive Relationship models.</p>
                    <div class="center figure" id="_fig-relationship_model" data-tralics-id="uid1293"
                      data-number="12.8">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/relationship_model.png"
                          alt="images/figures/relationship_model"></div>
                      <div class="caption"><span class="header">Figure 12.8: </span><span
                          class="description">The Relationship data model. </span></div>
                    </div>
                    <p>To get started with the implementation, we first generate
                      a migration corresponding to <a href="#fig-relationship_model"
                        class="hyperref">Figure&nbsp;<span class="ref">12.8</span></a>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate model Relationship follower_id:integer followed_id:integer
</pre></div>
                    </div>
                    <p>Because we will be finding relationships by <code>follower_id</code>
                      and by <code>followed_id</code>, we should add an index
                      on each column for efficiency, as shown in <a href="#code-relationships_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">12.1</span></a>.</p>
                    <div class="codelisting" id="_code-relationships_migration"
                      data-tralics-id="uid1294" data-number="12.1">
                      <div class="heading"><span class="number">Listing 12.1:</span>
                        <span class="description">Adding indices for the <code>relationships</code>
                          table.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">db/migrate/[timestamp]_create_relationships.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">CreateRelationships</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Migration</span>
  <span class="k">def</span> <span class="nf">change</span>
    <span class="n">create_table</span> <span class="ss">:relationships</span> <span
class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span
class="ss">:follower_id</span>
      <span class="n">t</span><span class="o">.</span><span class="n">integer</span> <span
class="ss">:followed_id</span>

      <span class="n">t</span><span class="o">.</span><span class="n">timestamps</span> <span
class="ss">null</span><span class="p">:</span> <span class="kp">false</span>
    <span class="k">end</span>
<span class="hll">    <span class="n">add_index</span> <span class="ss">:relationships</span><span
class="p">,</span> <span class="ss">:follower_id</span>
</span><span class="hll">    <span class="n">add_index</span> <span class="ss">:relationships</span><span
class="p">,</span> <span class="ss">:followed_id</span>
</span><span class="hll">    <span class="n">add_index</span> <span class="ss">:relationships</span><span
class="p">,</span> <span class="o">[</span><span class="ss">:follower_id</span><span
class="p">,</span> <span class="ss">:followed_id</span><span class="o">]</span><span
class="p">,</span> <span class="ss">unique</span><span class="p">:</span> <span
class="kp">true</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-relationships_migration" class="hyperref">Listing&nbsp;<span
                          class="ref">12.1</span></a> also includes a
                      multiple-key index that enforces uniqueness on (<code>follower_id</code>,
                      <code>followed_id</code>) pairs, so that a user can’t
                      follow another user more than once.<span class="intersentencespace"></span>
                      (Compare to the email uniqueness index from <a href="#code-email_uniqueness_index"
                        class="hyperref">Listing&nbsp;<span class="ref">6.28</span></a>
                      and the multiple-key index in <a href="#code-micropost_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">11.1</span></a>.)<span
                        class="intersentencespace"></span> As we’ll see starting
                      in <a href="#sec-following" class="hyperref">Section&nbsp;<span
                          class="ref">12.1.4</span></a>, our user interface
                      won’t allow this to happen, but adding a unique index
                      arranges to raise an error if a user tries to create
                      duplicate relationships anyway (for example, by using a
                      command-line tool such as <code>curl</code>).</p>
                    <p>To create the <code>relationships</code> table, we
                      migrate the database as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-relationship_user_associations" data-tralics-id="uid1295"
                    class="subsection" data-number="12.1.2">
                    <h3><a href="#sec-relationship_user_associations" class="heading hyperref"><span
                          class="number">12.1.2 </span>User/relationship
                        associations</a></h3>
                    <p>Before implementing user following and followers, we
                      first need to establish the association between users and
                      relationships.<span class="intersentencespace"></span> A
                      user <code>has_many</code> relationships, and—since
                      relationships involve <em>two</em> users—a relationship <code>belongs_to</code>
                      both a follower and a followed user.</p>
                    <p>As with microposts in <a href="#sec-user_micropost_associations"
                        class="hyperref">Section&nbsp;<span class="ref">11.1.3</span></a>,
                      we will create new relationships using the user
                      association, with code such as</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">active_relationships</span><span class="o">.</span><span class="n">build</span><span
class="p">(</span><span class="ss">followed_id</span><span class="p">:</span> <span
class="o">.</span><span class="n">.</span><span class="o">.</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>At this point, you might expect application code as in <a
                        href="#sec-user_micropost_associations" class="hyperref">Section&nbsp;<span
                          class="ref">11.1.3</span></a>, and it’s similar, but
                      there are two key differences.</p>
                    <p>First, in the case of the user/micropost association we
                      could write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>This works because by convention Rails looks for a
                      Micropost model corresponding to the <code>:microposts</code>
                      symbols.<sup id="_cha-12_footnote-ref-4" class="footnote"><a
                          href="#cha-12_footnote-4">4</a></sup><span class="intersentencespace"></span>
                      In the present case, though, we want to write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">has_many</span> <span class="ss">:active_relationships</span>
</pre></div>
                    </div>
                    <p>even though the underlying model is called Relationship.<span
                        class="intersentencespace"></span> We will thus have to
                      tell Rails the model class name to look for.</p>
                    <p>Second, before we wrote</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">class</span> <span class="nc">Micropost</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:user</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>in the Micropost model.<span class="intersentencespace"></span>
                      This works because the <code>microposts</code> table has
                      a <code>user_id</code> attribute to identify the user (<a
                        href="#sec-the_basic_model" class="hyperref">Section&nbsp;<span
                          class="ref">11.1.1</span></a>).<span class="intersentencespace"></span>
                      An id used in this manner to connect two database tables
                      is known as a <em>foreign key</em>, and when the foreign
                      key for a User model object is <code>user_id</code>,
                      Rails infers the association automatically: by default,
                      Rails expects a foreign key of the form <code>&lt;class&gt;_id</code>,
                      where <code>&lt;class&gt;</code> is the lower-case
                      version of the class name.<sup id="_cha-12_footnote-ref-5"
                        class="footnote"><a href="#cha-12_footnote-5">5</a></sup><span
                        class="intersentencespace"></span> In the present case,
                      although we are still dealing with users, the user
                      following another user is now identified with the foreign
                      key <code>follower_id</code>, so we have to tell that to
                      Rails.</p>
                    <p>The result of the above discussion is the
                      user/relationship association shown in <a href="#code-user_relationships_association"
                        class="hyperref">Listing&nbsp;<span class="ref">12.2</span></a>
                      and <a href="#code-relationship_belongs_to" class="hyperref">Listing&nbsp;<span
                          class="ref">12.3</span></a>.</p>
                    <div class="codelisting" id="_code-user_relationships_association"
                      data-tralics-id="uid1298" data-number="12.2">
                      <div class="heading"><span class="number">Listing 12.2:</span>
                        <span class="description">Implementing the active
                          relationships <code>has_many</code> association.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span><span class="p">,</span> <span
class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:active_relationships</span><span
class="p">,</span> <span class="ss">class_name</span><span class="p">:</span>  <span
class="s2">"Relationship"</span><span class="p">,</span>
</span><span class="hll">                                  <span class="ss">foreign_key</span><span
class="p">:</span> <span class="s2">"follower_id"</span><span class="p">,</span>
</span><span class="hll">                                  <span class="ss">dependent</span><span
class="p">:</span>   <span class="ss">:destroy</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>(Since destroying a user should also destroy that user’s
                      relationships, we’ve added <code>dependent: :destroy</code>
                      to the association.)</p>
                    <div class="codelisting" id="_code-relationship_belongs_to"
                      data-tralics-id="uid1299" data-number="12.3">
                      <div class="heading"><span class="number">Listing 12.3:</span>
                        <span class="description">Adding the follower <code>belongs_to</code>
                          association to the Relationship model.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/relationship.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Relationship</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
<span class="hll">  <span class="n">belongs_to</span> <span class="ss">:follower</span><span
class="p">,</span> <span class="ss">class_name</span><span class="p">:</span> <span
class="s2">"User"</span>
</span><span class="hll">  <span class="n">belongs_to</span> <span class="ss">:followed</span><span
class="p">,</span> <span class="ss">class_name</span><span class="p">:</span> <span
class="s2">"User"</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The <code>followed</code> association isn’t actually
                      needed until <a href="#sec-followers" class="hyperref">Section&nbsp;<span
                          class="ref">12.1.5</span></a>, but the parallel
                      follower/followed structure is clearer if we implement
                      them both at the same time.</p>
                    <p>The relationships in <a href="#code-user_relationships_association"
                        class="hyperref">Listing&nbsp;<span class="ref">12.2</span></a>
                      and <a href="#code-relationship_belongs_to" class="hyperref">Listing&nbsp;<span
                          class="ref">12.3</span></a> give rise to methods
                      analogous to the ones we saw in <a href="#table-association_methods"
                        class="hyperref">Table&nbsp;<span class="ref">11.1</span></a>,
                      as shown in <a href="#table-association_methods_relationships"
                        class="hyperref">Table&nbsp;<span class="ref">12.1</span></a>.</p>
                    <div class="table" id="_table-association_methods_relationships"
                      data-tralics-id="uid1300" data-number="12.1">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>Method</strong></td>
                            <td class="align_left"><strong>Purpose</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>active_relationship.follower</code></td>
                            <td class="align_left">Returns the follower</td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>active_relationship.followed</code></td>
                            <td class="align_left">Returns the followed user</td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.active_relationships.create(followed_id:
                                user.id)</code></td>
                            <td class="align_left">Creates an active
                              relationship associated with <code>user</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.active_relationships.create!(followed_id:
                                user.id)</code></td>
                            <td class="align_left">Creates an active
                              relationship associated with <code>user</code>
                              (exception on failure)</td>
                          </tr>
                          <tr>
                            <td class="align_left"><code>user.active_relationships.build(followed_id:
                                user.id)</code></td>
                            <td class="align_left">Returns a new Relationship
                              object associated with <code>user</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 12.1: </span><span
                          class="description">A summary of user/active
                          relationship association methods. </span></div>
                    </div>
                  </div>
                  <div id="_sec-relationship_validations" data-tralics-id="uid1301"
                    class="subsection" data-number="12.1.3">
                    <h3><a href="#sec-relationship_validations" class="heading hyperref"><span
                          class="number">12.1.3 </span>Relationship validations</a></h3>
                    <p>Before moving on, we’ll add a couple of Relationship
                      model validations for completeness.<span class="intersentencespace"></span>
                      The tests (<a href="#code-relationship_validation_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">12.4</span></a>) and application code (<a
                        href="#code-relationship_validations" class="hyperref">Listing&nbsp;<span
                          class="ref">12.5</span></a>) are straightforward.<span
                        class="intersentencespace"></span> As with the generated
                      user fixture (<a href="#code-default_fixtures" class="hyperref">Listing&nbsp;<span
                          class="ref">6.29</span></a>), the generated
                      relationship fixture also violates the uniqueness
                      constraint imposed by the corresponding migration (<a href="#code-relationships_migration"
                        class="hyperref">Listing&nbsp;<span class="ref">12.1</span></a>).<span
                        class="intersentencespace"></span> The solution
                      (removing the fixture contents as in <a href="#code-empty_fixtures"
                        class="hyperref">Listing&nbsp;<span class="ref">6.30</span></a>)
                      is also the same (<a href="#code-empty_relationship_fixture"
                        class="hyperref">Listing&nbsp;<span class="ref">12.6</span></a>).</p>
                    <div class="codelisting" id="_code-relationship_validation_tests"
                      data-tralics-id="uid1302" data-number="12.4">
                      <div class="heading"><span class="number">Listing 12.4:</span>
                        <span class="description">Testing the Relationship model
                          validations.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">test/models/relationship_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">RelationshipTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@relationship</span> <span class="o">=</span> <span class="no">Relationship</span><span
class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">follower_id</span><span
class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">followed_id</span><span
class="p">:</span> <span class="mi">2</span><span class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should be valid"</span> <span class="k">do</span>
    <span class="n">assert</span> <span class="vi">@relationship</span><span class="o">.</span><span
class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should require a follower_id"</span> <span
class="k">do</span>
    <span class="vi">@relationship</span><span class="o">.</span><span class="n">follower_id</span> <span
class="o">=</span> <span class="kp">nil</span>
    <span class="n">assert_not</span> <span class="vi">@relationship</span><span
class="o">.</span><span class="n">valid?</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should require a followed_id"</span> <span
class="k">do</span>
    <span class="vi">@relationship</span><span class="o">.</span><span class="n">followed_id</span> <span
class="o">=</span> <span class="kp">nil</span>
    <span class="n">assert_not</span> <span class="vi">@relationship</span><span
class="o">.</span><span class="n">valid?</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-relationship_validations"
                      data-tralics-id="uid1303" data-number="12.5">
                      <div class="heading"><span class="number">Listing 12.5:</span>
                        <span class="description">Adding the Relationship model
                          validations.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/models/relationship.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">Relationship</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">belongs_to</span> <span class="ss">:follower</span><span class="p">,</span> <span
class="ss">class_name</span><span class="p">:</span> <span class="s2">"User"</span>
  <span class="n">belongs_to</span> <span class="ss">:followed</span><span class="p">,</span> <span
class="ss">class_name</span><span class="p">:</span> <span class="s2">"User"</span>
<span class="hll">  <span class="n">validates</span> <span class="ss">:follower_id</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="hll">  <span class="n">validates</span> <span class="ss">:followed_id</span><span
class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span
class="kp">true</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-empty_relationship_fixture"
                      data-tralics-id="uid1304" data-number="12.6">
                      <div class="heading"><span class="number">Listing 12.6:</span>
                        <span class="description">Removing the contents of the
                          relationship fixture.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/fixtures/relationships.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># empty</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1305" data-tralics-id="uid1305"
                      data-number="12.7">
                      <div class="heading"><span class="number">Listing 12.7:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-following" data-tralics-id="uid1306" class="subsection"
                    data-number="12.1.4">
                    <h3><a href="#sec-following" class="heading hyperref"><span
                          class="number">12.1.4 </span>Followed users</a></h3>
                    <p>We come now to the heart of the Relationship
                      associations: <code>following</code> and <code>followers</code>.<span
                        class="intersentencespace"></span> Here we will use <code>has_many
                        :through</code> for the first time: a user has many
                      following <em>through</em> relationships, as illustrated
                      in <a href="#fig-user_has_many_following" class="hyperref">Figure&nbsp;<span
                          class="ref">12.7</span></a>.<span class="intersentencespace"></span>
                      By default, in a <code>has_many :through</code>
                      association Rails looks for a foreign key corresponding to
                      the singular version of the association.<span class="intersentencespace"></span>
                      In other words, with code like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">has_many</span> <span class="ss">:followeds</span><span
class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span
class="ss">:active_relationships</span>
</pre></div>
                    </div>
                    <p>Rails would see “followeds” and use the singular
                      “followed”, assembling a collection using the <code>followed_id</code>
                      in the <code>relationships</code> table.<span class="intersentencespace"></span>
                      But, as noted in <a href="#sec-a_problem_with_the_data_model"
                        class="hyperref">Section&nbsp;<span class="ref">12.1.1</span></a>,
                      <code>user.followeds</code> is rather awkward, so we’ll
                      write <code>user.following</code> instead.<span class="intersentencespace"></span>
                      Naturally, Rails allows us to override the default, in
                      this case using the <code>source</code> parameter (as
                      shown in <a href="#code-has_many_following_through_active_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.8</span></a>),
                      which explicitly tells Rails that the source of the <code>following</code>
                      array is the set of <code>followed</code>&nbsp;ids.</p>
                    <div class="codelisting" id="_code-has_many_following_through_active_relationships"
                      data-tralics-id="uid1307" data-number="12.8">
                      <div class="heading"><span class="number">Listing 12.8:</span>
                        <span class="description">Adding the User model <code>following</code>
                          association.<span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span><span class="p">,</span> <span
class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
  <span class="n">has_many</span> <span class="ss">:active_relationships</span><span
class="p">,</span> <span class="ss">class_name</span><span class="p">:</span>  <span
class="s2">"Relationship"</span><span class="p">,</span>
                                  <span class="ss">foreign_key</span><span class="p">:</span> <span
class="s2">"follower_id"</span><span class="p">,</span>
                                  <span class="ss">dependent</span><span class="p">:</span>   <span
class="ss">:destroy</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:following</span><span
class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span
class="ss">:active_relationships</span><span class="p">,</span> <span class="ss">source</span><span
class="p">:</span> <span class="ss">:followed</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The association defined in <a href="#code-has_many_following_through_active_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.8</span></a>
                      leads to a powerful combination of Active Record and
                      array-like behavior.<span class="intersentencespace"></span>
                      For example, we can check if the followed users collection
                      includes another user with the <code>include?</code>
                      method (<a href="#sec-arrays_and_ranges" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.1</span></a>), or find objects through
                      the association:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">following</span><span class="o">.</span><span class="n">include?</span><span
class="p">(</span><span class="n">other_user</span><span class="p">)</span>
<span class="n">user</span><span class="o">.</span><span class="n">following</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">other_user</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>Although in many contexts we can effectively treat <code>following</code>
                      as an array, Rails is smart about how it handles things
                      under the hood.<span class="intersentencespace"></span>
                      For example, code like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">following</span><span class="o">.</span><span
class="n">include?</span><span class="p">(</span><span class="n">other_user</span><span
class="p">)</span>
</pre></div>
                    </div>
                    <p>looks like it might have to pull all the followed users
                      out of the database to apply the <code>include?</code>
                      method, but in fact for efficiency Rails arranges for the
                      comparison to happen directly in the database.<span class="intersentencespace"></span>
                      (Compare to the code in <a href="#sec-rendering_microposts"
                        class="hyperref">Section&nbsp;<span class="ref">11.2.1</span></a>,
                      where we saw that</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span>
</pre></div>
                    </div>
                    <p>performs the count directly in the database.)</p>
                    <p>To manipulate following relationships, we’ll introduce <code>follow</code>
                      and <code>unfollow</code> utility methods so that we can
                      write, e.g., <code>user.follow(other_user)</code>.<span class="intersentencespace"></span>
                      We’ll also add an associated <code>following?</code>
                      boolean method to test if one user is following another.<sup
                        id="_cha-12_footnote-ref-6" class="footnote"><a href="#cha-12_footnote-6">6</a></sup></p>
                    <p>This is exactly the kind of situation where I like to
                      write some tests first.<span class="intersentencespace"></span>
                      The reason is that we are quite far from writing a working
                      web interface for following users, but it’s hard to
                      proceed without some sort of <em>client</em> for the code
                      we’re developing.<span class="intersentencespace"></span>
                      In this case, it’s easy to write a short test for the User
                      model, in which we use <code>following?</code> to make
                      sure the user isn’t following the other user, use <code>follow</code>
                      to follow another user, use <code>following?</code> to
                      verify that the operation succeeded, and finally <code>unfollow</code>
                      and verify that it worked.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-utility_method_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">12.9</span></a>.</p>
                    <div class="codelisting" id="_code-utility_method_tests" data-tralics-id="uid1309"
                      data-number="12.9">
                      <div class="heading"><span class="number">Listing 12.9:</span>
                        <span class="description">Tests for some “following”
                          utility methods.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"should follow and unfollow a user"</span> <span
class="k">do</span>
    <span class="n">michael</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">archer</span>  <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
<span class="hll">    <span class="n">assert_not</span> <span class="n">michael</span><span
class="o">.</span><span class="n">following?</span><span class="p">(</span><span
class="n">archer</span><span class="p">)</span>
</span><span class="hll">    <span class="n">michael</span><span class="o">.</span><span
class="n">follow</span><span class="p">(</span><span class="n">archer</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">assert</span> <span class="n">michael</span><span
class="o">.</span><span class="n">following?</span><span class="p">(</span><span
class="n">archer</span><span class="p">)</span>
</span><span class="hll">    <span class="n">michael</span><span class="o">.</span><span
class="n">unfollow</span><span class="p">(</span><span class="n">archer</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">assert_not</span> <span class="n">michael</span><span
class="o">.</span><span class="n">following?</span><span class="p">(</span><span
class="n">archer</span><span class="p">)</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>By referring to the methods in <a href="#table-association_methods_relationships"
                        class="hyperref">Table&nbsp;<span class="ref">12.1</span></a>,
                      we can write the <code>follow</code>, <code>unfollow</code>,
                      and <code>following?</code> methods using the association
                      with <code>following</code>, as shown in <a href="#code-follow_unfollow_following"
                        class="hyperref">Listing&nbsp;<span class="ref">12.10</span></a>.<span
                        class="intersentencespace"></span> (Note that we have
                      omitted the user <code>self</code> variable whenever
                      possible.)</p>
                    <div class="codelisting" id="_code-follow_unfollow_following"
                      data-tralics-id="uid1310" data-number="12.10">
                      <div class="heading"><span class="number">Listing 12.10:</span>
                        <span class="description">Utility methods for following.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">feed</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
  <span class="k">end</span>

  <span class="c1"># Follows a user.</span>
  <span class="k">def</span> <span class="nf">follow</span><span class="p">(</span><span
class="n">other_user</span><span class="p">)</span>
<span class="hll">    <span class="n">active_relationships</span><span class="o">.</span><span
class="n">create</span><span class="p">(</span><span class="ss">followed_id</span><span
class="p">:</span> <span class="n">other_user</span><span class="o">.</span><span
class="n">id</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Unfollows a user.</span>
  <span class="k">def</span> <span class="nf">unfollow</span><span class="p">(</span><span
class="n">other_user</span><span class="p">)</span>
<span class="hll">    <span class="n">active_relationships</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="ss">followed_id</span><span
class="p">:</span> <span class="n">other_user</span><span class="o">.</span><span
class="n">id</span><span class="p">)</span><span class="o">.</span><span class="n">destroy</span>
</span>  <span class="k">end</span>

  <span class="c1"># Returns true if the current user is following the other user.</span>
  <span class="k">def</span> <span class="nf">following?</span><span class="p">(</span><span
class="n">other_user</span><span class="p">)</span>
<span class="hll">    <span class="n">following</span><span class="o">.</span><span
class="n">include?</span><span class="p">(</span><span class="n">other_user</span><span
class="p">)</span>
</span>  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>With the code in <a href="#code-follow_unfollow_following"
                        class="hyperref">Listing&nbsp;<span class="ref">12.10</span></a>,
                      the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1311" data-tralics-id="uid1311"
                      data-number="12.11">
                      <div class="heading"><span class="number">Listing 12.11:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-followers" data-tralics-id="uid1312" class="subsection"
                    data-number="12.1.5">
                    <h3><a href="#sec-followers" class="heading hyperref"><span
                          class="number">12.1.5 </span>Followers</a></h3>
                    <p>The final piece of the relationships puzzle is to add a <code>user.followers</code>
                      method to go with <code>user.following</code>.<span class="intersentencespace"></span>
                      You may have noticed from <a href="#fig-user_has_many_following"
                        class="hyperref">Figure&nbsp;<span class="ref">12.7</span></a>
                      that all the information needed to extract an array of
                      followers is already present in the <code>relationships</code>
                      table (which we are treating as the <code>active_relationships</code>
                      table via the code in <a href="#code-user_relationships_association"
                        class="hyperref">Listing&nbsp;<span class="ref">12.2</span></a>).<span
                        class="intersentencespace"></span> Indeed, the technique
                      is exactly the same as for followed users, with the roles
                      of <code>follower_id</code> and <code>followed_id</code>
                      reversed, and with <code>passive_relationships</code> in
                      place of <code>active_relationships</code>.<span class="intersentencespace"></span>
                      The data model then appears as in <a href="#fig-user_has_many_followers"
                        class="hyperref">Figure&nbsp;<span class="ref">12.9</span></a>.</p>
                    <div class="center figure" id="_fig-user_has_many_followers"
                      data-tralics-id="uid1313" data-number="12.9">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_has_many_followers_3rd_edition.png"
                          alt="images/figures/user_has_many_followers_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.9: </span><span
                          class="description">A model for user followers through
                          passive relationships. </span></div>
                    </div>
                    <p>The implementation of the data model in <a href="#fig-user_has_many_followers"
                        class="hyperref">Figure&nbsp;<span class="ref">12.9</span></a>
                      parallels <a href="#code-has_many_following_through_active_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.8</span></a>
                      exactly, as seen in <a href="#code-has_many_following_through_passive_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.12</span></a>.</p>
                    <div class="codelisting" id="_code-has_many_following_through_passive_relationships"
                      data-tralics-id="uid1314" data-number="12.12">
                      <div class="heading"><span class="number">Listing 12.12:</span>
                        <span class="description">Implementing <code>user.followers</code>
                          using passive relationships.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="n">has_many</span> <span class="ss">:microposts</span><span class="p">,</span> <span
class="ss">dependent</span><span class="p">:</span> <span class="ss">:destroy</span>
  <span class="n">has_many</span> <span class="ss">:active_relationships</span><span
class="p">,</span>  <span class="ss">class_name</span><span class="p">:</span>  <span
class="s2">"Relationship"</span><span class="p">,</span>
                                   <span class="ss">foreign_key</span><span class="p">:</span> <span
class="s2">"follower_id"</span><span class="p">,</span>
                                   <span class="ss">dependent</span><span class="p">:</span>   <span
class="ss">:destroy</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:passive_relationships</span><span
class="p">,</span> <span class="ss">class_name</span><span class="p">:</span>  <span
class="s2">"Relationship"</span><span class="p">,</span>
</span><span class="hll">                                   <span class="ss">foreign_key</span><span
class="p">:</span> <span class="s2">"followed_id"</span><span class="p">,</span>
</span><span class="hll">                                   <span class="ss">dependent</span><span
class="p">:</span>   <span class="ss">:destroy</span>
</span>  <span class="n">has_many</span> <span class="ss">:following</span><span
class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span
class="ss">:active_relationships</span><span class="p">,</span>  <span class="ss">source</span><span
class="p">:</span> <span class="ss">:followed</span>
<span class="hll">  <span class="n">has_many</span> <span class="ss">:followers</span><span
class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span
class="ss">:passive_relationships</span><span class="p">,</span> <span class="ss">source</span><span
class="p">:</span> <span class="ss">:follower</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>It’s worth noting that we could actually omit the <code>:source</code>
                      key for <code>followers</code> in <a href="#code-has_many_following_through_passive_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.12</span></a>,
                      using simply</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">has_many</span> <span class="ss">:followers</span><span
class="p">,</span> <span class="ss">through</span><span class="p">:</span> <span
class="ss">:passive_relationships</span>
</pre></div>
                    </div>
                    <p>This is because, in the case of a <code>:followers</code>
                      attribute, Rails will singularize “followers” and
                      automatically look for the foreign key <code>follower_id</code>
                      in this case.<span class="intersentencespace"></span> <a
                        href="#code-has_many_following_through_active_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.8</span></a>
                      keeps the <code>:source</code> key to emphasize the
                      parallel structure with the <code>has_many :following</code>
                      association.</p>
                    <p>We can conveniently test the data model above using the <code>followers.include?</code>
                      method, as shown in <a href="#code-followers_test" class="hyperref">Listing&nbsp;<span
                          class="ref">12.13</span></a>.<span class="intersentencespace"></span>
                      (<a href="#code-followers_test" class="hyperref">Listing&nbsp;<span
                          class="ref">12.13</span></a> might have used a <code>followed_by?</code>
                      method to complement the <code>following?</code> method,
                      but it turns out we won’t need it in our application.)</p>
                    <div class="codelisting" id="_code-followers_test" data-tralics-id="uid1315"
                      data-number="12.13">
                      <div class="heading"><span class="number">Listing 12.13:</span>
                        <span class="description">A test for <code>followers</code>.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"should follow and unfollow a user"</span> <span
class="k">do</span>
    <span class="n">michael</span>  <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">archer</span>   <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
    <span class="n">assert_not</span> <span class="n">michael</span><span class="o">.</span><span
class="n">following?</span><span class="p">(</span><span class="n">archer</span><span
class="p">)</span>
    <span class="n">michael</span><span class="o">.</span><span class="n">follow</span><span
class="p">(</span><span class="n">archer</span><span class="p">)</span>
    <span class="n">assert</span> <span class="n">michael</span><span class="o">.</span><span
class="n">following?</span><span class="p">(</span><span class="n">archer</span><span
class="p">)</span>
<span class="hll">    <span class="n">assert</span> <span class="n">archer</span><span
class="o">.</span><span class="n">followers</span><span class="o">.</span><span
class="n">include?</span><span class="p">(</span><span class="n">michael</span><span
class="p">)</span>
</span>    <span class="n">michael</span><span class="o">.</span><span class="n">unfollow</span><span
class="p">(</span><span class="n">archer</span><span class="p">)</span>
    <span class="n">assert_not</span> <span class="n">michael</span><span class="o">.</span><span
class="n">following?</span><span class="p">(</span><span class="n">archer</span><span
class="p">)</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p><a href="#code-followers_test" class="hyperref">Listing&nbsp;<span
                          class="ref">12.13</span></a> adds only one line to the
                      test from <a href="#code-utility_method_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">12.9</span></a>, but so many things have
                      to go right to get it to pass that it’s a very sensitive
                      test of the code in <a href="#code-has_many_following_through_passive_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.12</span></a>.</p>
                    <p>At this point, the full test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-a_web_interface_for_following_and_followers" data-tralics-id="cid81"
                  class="section" data-number="12.2">
                  <h2><a href="#sec-a_web_interface_for_following_and_followers"
                      class="heading hyperref"><span class="number">12.2 </span>A
                      web interface for following users</a></h2>
                  <p><a href="#sec-the_relationship_model" class="hyperref">Section&nbsp;<span
                        class="ref">12.1</span></a> placed rather heavy demands
                    on our data modeling skills, and it’s fine if it takes a
                    while to soak in.<span class="intersentencespace"></span> In
                    fact, one of the best ways to understand the associations is
                    to use them in the web interface.</p>
                  <p>In the introduction to this chapter, we saw a preview of
                    the page flow for user following.<span class="intersentencespace"></span>
                    In this section, we will implement the basic interface and
                    following/unfollowing functionality shown in those mockups.<span
                      class="intersentencespace"></span> We will also make
                    separate pages to show the user following and followers
                    arrays.<span class="intersentencespace"></span> In <a href="#sec-the_status_feed"
                      class="hyperref">Section&nbsp;<span class="ref">12.3</span></a>,
                    we’ll complete our sample application by adding the user’s
                    status feed.</p>
                  <div id="_sec-sample_following_data" data-tralics-id="uid1316"
                    class="subsection" data-number="12.2.1">
                    <h3><a href="#sec-sample_following_data" class="heading hyperref"><span
                          class="number">12.2.1 </span>Sample following data</a></h3>
                    <p>As in previous chapters, we will find it convenient to
                      use the seed data Rake task to fill the database with
                      sample relationships.<span class="intersentencespace"></span>
                      This will allow us to design the look and feel of the web
                      pages first, deferring the back-end functionality until
                      later in this section.</p>
                    <p>Code to seed the following relationships appear in <a href="#code-sample_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.14</span></a>.<span
                        class="intersentencespace"></span> Here we somewhat
                      arbitrarily arrange for the first user to follow
                      users&nbsp;3 through 51, and then have users 4 through 41
                      follow that user back.<span class="intersentencespace"></span>
                      The resulting relationships will be sufficient for
                      developing the application interface.</p>
                    <div class="codelisting" id="_code-sample_relationships" data-tralics-id="uid1317"
                      data-number="12.14">
                      <div class="heading"><span class="number">Listing 12.14:</span>
                        <span class="description">Adding following/follower
                          relationships to the sample data.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">db/seeds.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="c1"># Users</span>
<span class="no">User</span><span class="o">.</span><span class="n">create!</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span>  <span class="s2">"Example User"</span><span
class="p">,</span>
             <span class="ss">email</span><span class="p">:</span> <span class="s2">"example@railstutorial.org"</span><span
class="p">,</span>
             <span class="ss">password</span><span class="p">:</span>              <span
class="s2">"foobar"</span><span class="p">,</span>
             <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="s2">"foobar"</span><span class="p">,</span>
             <span class="ss">admin</span><span class="p">:</span>     <span class="kp">true</span><span
class="p">,</span>
             <span class="ss">activated</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span>
             <span class="ss">activated_at</span><span class="p">:</span> <span
class="no">Time</span><span class="o">.</span><span class="n">zone</span><span class="o">.</span><span
class="n">now</span><span class="p">)</span>

<span class="mi">99</span><span class="o">.</span><span class="n">times</span> <span
class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
  <span class="nb">name</span>  <span class="o">=</span> <span class="no">Faker</span><span
class="o">::</span><span class="no">Name</span><span class="o">.</span><span class="n">name</span>
  <span class="n">email</span> <span class="o">=</span> <span class="s2">"example-</span><span
class="si">#{</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span
class="si">}</span><span class="s2">@railstutorial.org"</span>
  <span class="n">password</span> <span class="o">=</span> <span class="s2">"password"</span>
  <span class="no">User</span><span class="o">.</span><span class="n">create!</span><span
class="p">(</span><span class="nb">name</span><span class="p">:</span> <span class="nb">name</span><span
class="p">,</span>
              <span class="ss">email</span><span class="p">:</span> <span class="n">email</span><span
class="p">,</span>
              <span class="ss">password</span><span class="p">:</span>              <span
class="n">password</span><span class="p">,</span>
              <span class="ss">password_confirmation</span><span class="p">:</span> <span
class="n">password</span><span class="p">,</span>
              <span class="ss">activated</span><span class="p">:</span> <span class="kp">true</span><span
class="p">,</span>
              <span class="ss">activated_at</span><span class="p">:</span> <span
class="no">Time</span><span class="o">.</span><span class="n">zone</span><span class="o">.</span><span
class="n">now</span><span class="p">)</span>
<span class="k">end</span>

<span class="c1"># Microposts</span>
<span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:created_at</span><span
class="p">)</span><span class="o">.</span><span class="n">take</span><span class="p">(</span><span
class="mi">6</span><span class="p">)</span>
<span class="mi">50</span><span class="o">.</span><span class="n">times</span> <span
class="k">do</span>
  <span class="n">content</span> <span class="o">=</span> <span class="no">Faker</span><span
class="o">::</span><span class="no">Lorem</span><span class="o">.</span><span class="n">sentence</span><span
class="p">(</span><span class="mi">5</span><span class="p">)</span>
  <span class="n">users</span><span class="o">.</span><span class="n">each</span> <span
class="p">{</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span> <span
class="n">user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">content</span><span
class="p">:</span> <span class="n">content</span><span class="p">)</span> <span
class="p">}</span>
<span class="k">end</span>

<span class="hll"><span class="c1"># Following relationships</span>
</span><span class="hll"><span class="n">users</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">all</span>
</span><span class="hll"><span class="n">user</span>  <span class="o">=</span> <span
class="n">users</span><span class="o">.</span><span class="n">first</span>
</span><span class="hll"><span class="n">following</span> <span class="o">=</span> <span
class="n">users</span><span class="o">[</span><span class="mi">2</span><span class="o">.</span><span
class="n">.</span><span class="mi">50</span><span class="o">]</span>
</span><span class="hll"><span class="n">followers</span> <span class="o">=</span> <span
class="n">users</span><span class="o">[</span><span class="mi">3</span><span class="o">.</span><span
class="n">.</span><span class="mi">40</span><span class="o">]</span>
</span><span class="hll"><span class="n">following</span><span class="o">.</span><span
class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">followed</span><span
class="o">|</span> <span class="n">user</span><span class="o">.</span><span class="n">follow</span><span
class="p">(</span><span class="n">followed</span><span class="p">)</span> <span
class="p">}</span>
</span><span class="hll"><span class="n">followers</span><span class="o">.</span><span
class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">follower</span><span
class="o">|</span> <span class="n">follower</span><span class="o">.</span><span
class="n">follow</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span> <span class="p">}</span>
</span></pre></div>
                      </div>
                    </div>
                    <p>To execute the code in <a href="#code-sample_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.14</span></a>,
                      we reseed the database as usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake db:migrate:reset
$ bundle exec rake db:seed
</pre></div>
                    </div>
                  </div>
                  <div id="_sec-stats_and_a_follow_form" data-tralics-id="uid1318"
                    class="subsection" data-number="12.2.2">
                    <h3><a href="#sec-stats_and_a_follow_form" class="heading hyperref"><span
                          class="number">12.2.2 </span>Stats and a follow form</a></h3>
                    <p>Now that our sample users have both followed users and
                      followers, we need to update the profile page and Home
                      page to reflect this.<span class="intersentencespace"></span>
                      We’ll start by making a partial to display the following
                      and follower statistics on the profile and home pages.<span
                        class="intersentencespace"></span> We’ll next add a
                      follow/unfollow form, and then make dedicated pages for
                      showing “following” (followed users) and “followers”.</p>
                    <p>As noted in <a href="#sec-a_problem_with_the_data_model"
                        class="hyperref">Section&nbsp;<span class="ref">12.1.1</span></a>,
                      we’ll adopt Twitter’s convention of using “following” as a
                      label for followed users, as in “50 following”.<span class="intersentencespace"></span>
                      This usage is reflected in the mockup sequence starting in
                      <a href="#fig-page_flow_profile_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">12.1</span></a> and shown in close-up in <a
                        href="#fig-stats_partial_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">12.10</span></a>.</p>
                    <div class="center figure" id="_fig-stats_partial_mockup" data-tralics-id="uid1319"
                      data-number="12.10"><span class="graphics"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/stats_partial_mockup.png"
                          alt="stats_partial_mockup"></span>
                      <div class="caption"><span class="header">Figure 12.10: </span><span
                          class="description">A mockup of the stats partial. </span></div>
                    </div>
                    <p>The stats in <a href="#fig-stats_partial_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">12.10</span></a> consist of the number of
                      users the current user is following and the number of
                      followers, each of which should be a link to its
                      respective dedicated display page.<span class="intersentencespace"></span>
                      In <a href="#cha-filling_in_the_layout" class="hyperref">Chapter&nbsp;<span
                          class="ref">5</span></a>, we stubbed out such links
                      with the dummy text&nbsp;<code>’#’</code>, but that was
                      before we had much experience with routes.<span class="intersentencespace"></span>
                      This time, although we’ll defer the actual pages to <a href="#sec-following_and_followers_pages"
                        class="hyperref">Section&nbsp;<span class="ref">12.2.3</span></a>,
                      we’ll make the routes now, as seen in <a href="#code-following_followers_actions_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">12.15</span></a>.<span
                        class="intersentencespace"></span> This code uses the <code>:member</code>
                      method inside a <code>resources</code> <em>block</em>,
                      which we haven’t seen before, but see if you can guess
                      what it does.</p>
                    <div class="codelisting" id="_code-following_followers_actions_routes"
                      data-tralics-id="uid1320" data-number="12.15">
                      <div class="heading"><span class="number">Listing 12.15:</span>
                        <span class="description">Adding <code>following</code>
                          and <code>followers</code> actions to the Users
                          controller.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>                <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>    <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span>    <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span>    <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span>    <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
  <span class="n">get</span>    <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#new'</span>
  <span class="n">post</span>   <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#create'</span>
  <span class="n">delete</span> <span class="s1">'logout'</span>  <span class="o">=&gt;</span> <span
class="s1">'sessions#destroy'</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:users</span> <span
class="k">do</span>
</span><span class="hll">    <span class="n">member</span> <span class="k">do</span>
</span><span class="hll">      <span class="n">get</span> <span class="ss">:following</span><span
class="p">,</span> <span class="ss">:followers</span>
</span><span class="hll">    <span class="k">end</span>
</span><span class="hll">  <span class="k">end</span>
</span>  <span class="n">resources</span> <span class="ss">:account_activations</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="o">]</span>
  <span class="n">resources</span> <span class="ss">:password_resets</span><span
class="p">,</span>     <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span
class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="n">resources</span> <span class="ss">:microposts</span><span class="p">,</span>          <span
class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:create</span><span
class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>You might suspect that the URLs for following and
                      followers will look like /users/1/following and
                      /users/1/followers, and that is exactly what the code in <a
                        href="#code-following_followers_actions_routes" class="hyperref">Listing&nbsp;<span
                          class="ref">12.15</span></a> arranges.<span class="intersentencespace"></span>
                      Since both pages will be <em>showing</em> data, the
                      proper HTTP verb is a <span class="tt">GET</span>
                      request, so we use the <code>get</code> method to arrange
                      for the URLs to respond appropriately.<span class="intersentencespace"></span>
                      Meanwhile, the <code>member</code> method arranges for
                      the routes to respond to URLs containing the user id.<span
                        class="intersentencespace"></span> The other
                      possibility, <code>collection</code>, works without the
                      id, so that</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">resources</span> <span class="ss">:users</span> <span
class="k">do</span>
  <span class="n">collection</span> <span class="k">do</span>
    <span class="n">get</span> <span class="ss">:tigers</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>would respond to the URL /users/tigers (presumably to
                      display all the tigers in our application).<sup id="_cha-12_footnote-ref-7"
                        class="footnote"><a href="#cha-12_footnote-7">7</a></sup></p>
                    <p>A table of the routes generated by <a href="#code-following_followers_actions_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">12.15</span></a>
                      appears in <a href="#table-following_routes" class="hyperref">Table&nbsp;<span
                          class="ref">12.2</span></a>.<span class="intersentencespace"></span>
                      Note the named routes for the followed user and followers
                      pages, which we’ll put to use shortly.</p>
                    <div class="table" id="_table-following_routes" data-tralics-id="uid1322"
                      data-number="12.2">
                      <table class="tabular">
                        <tbody>
                          <tr class="bottom_border">
                            <td class="align_left"><strong>HTTP request</strong></td>
                            <td class="align_left"><strong>URL</strong></td>
                            <td class="align_left"><strong>Action</strong></td>
                            <td class="align_left"><strong>Named route</strong></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/1/following</td>
                            <td class="align_left"><code>following</code></td>
                            <td class="align_left"><code>following_user_path(1)</code></td>
                          </tr>
                          <tr>
                            <td class="align_left"><span class="tt">GET</span></td>
                            <td class="align_left">/users/1/followers</td>
                            <td class="align_left"><code>followers</code></td>
                            <td class="align_left"><code>followers_user_path(1)</code></td>
                          </tr>
                        </tbody>
                      </table>
                      <div class="caption"><span class="header">Table 12.2: </span><span
                          class="description">RESTful routes provided by the
                          custom rules in resource in <a href="#code-following_followers_actions_routes"
                            class="hyperref">Listing&nbsp;<span class="ref">12.15</span></a>.
                        </span></div>
                    </div>
                    <p>With the routes defined, we are now in a position to
                      define the stats partial, which involves a couple of links
                      inside a div, as shown in <a href="#code-stats_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">12.16</span></a>.</p>
                    <div class="codelisting" id="_code-stats_partial" data-tralics-id="uid1323"
                      data-number="12.16">
                      <div class="heading"><span class="number">Listing 12.16:</span>
                        <span class="description">A partial for displaying
                          follower stats.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/shared/_stats.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="vi">@user</span> <span
class="o">||=</span> <span class="n">current_user</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"stats"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"</span><span
class="cp">&lt;%=</span> <span class="n">following_user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span><span
class="s">"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;strong</span> <span class="na">id=</span><span class="s">"following"</span> <span
class="na">class=</span><span class="s">"stat"</span><span class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">following</span><span class="o">.</span><span class="n">count</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;/strong&gt;</span>
    following
  <span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"</span><span
class="cp">&lt;%=</span> <span class="n">followers_user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span><span
class="s">"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;strong</span> <span class="na">id=</span><span class="s">"followers"</span> <span
class="na">class=</span><span class="s">"stat"</span><span class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">followers</span><span class="o">.</span><span class="n">count</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;/strong&gt;</span>
    followers
  <span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>Since we will be including the stats on both the user
                      show pages and the home page, the first line of <a href="#code-stats_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">12.16</span></a>
                      picks the right one using</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="cp">&lt;%</span> <span class="vi">@user</span> <span
class="o">||=</span> <span class="n">current_user</span> <span class="cp">%&gt;</span>
</pre></div>
                    </div>
                    <p>As discussed in <a href="#aside-or_equals" class="hyperref">Box&nbsp;<span
                          class="ref">8.1</span></a>, this does nothing when <code>@user</code>
                      is not <code>nil</code> (as on a profile page), but when
                      it is (as on the Home page) it sets <code>@user</code> to
                      the current user.<span class="intersentencespace"></span>
                      Note also that the following/follower counts are
                      calculated through the associations using</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span><span class="o">.</span><span
class="n">following</span><span class="o">.</span><span class="n">count</span>
</pre></div>
                    </div>
                    <p>and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span><span class="o">.</span><span
class="n">followers</span><span class="o">.</span><span class="n">count</span>
</pre></div>
                    </div>
                    <p>Compare these to the microposts count from <a href="#code-user_show_microposts"
                        class="hyperref">Listing&nbsp;<span class="ref">11.23</span></a>,
                      where we wrote</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span>
</pre></div>
                    </div>
                    <p>to count the microposts.<span class="intersentencespace"></span>
                      As in that case, Rails calculates the count directly in
                      the database for efficiency.</p>
                    <p>One final detail worth noting is the presence of CSS ids
                      on some elements, as in</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;strong</span> <span class="na">id=</span><span
class="s">"following"</span> <span class="na">class=</span><span class="s">"stat"</span><span
class="nt">&gt;</span>
...
<span class="nt">&lt;/strong&gt;</span>
</pre></div>
                    </div>
                    <p>This is for the benefit of the Ajax implementation in <a
                        href="#sec-a_working_follow_button_with_ajax" class="hyperref">Section&nbsp;<span
                          class="ref">12.2.5</span></a>, which accesses elements
                      on the page using their unique ids.</p>
                    <p>With the partial in hand, including the stats on the Home
                      page is easy, as shown in <a href="#code-home_page_stats"
                        class="hyperref">Listing&nbsp;<span class="ref">12.17</span></a>.</p>
                    <div class="codelisting" id="_code-home_page_stats" data-tralics-id="uid1324"
                      data-number="12.17">
                      <div class="heading"><span class="number">Listing 12.17:</span>
                        <span class="description">Adding follower stats to the
                          Home page.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/static_pages/home.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="k">if</span> <span
class="n">logged_in?</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"col-md-4"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"user_info"</span><span
class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/user_info'</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
<span class="hll">      <span class="nt">&lt;section</span> <span class="na">class=</span><span
class="s">"stats"</span><span class="nt">&gt;</span>
</span><span class="hll">        <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/stats'</span> <span class="cp">%&gt;</span>
</span><span class="hll">      <span class="nt">&lt;/section&gt;</span>
</span>      <span class="nt">&lt;section</span> <span class="na">class=</span><span
class="s">"micropost_form"</span><span class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/micropost_form'</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;/section&gt;</span>
    <span class="nt">&lt;/aside&gt;</span>
    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-8"</span><span
class="nt">&gt;</span>
      <span class="nt">&lt;h3&gt;</span>Micropost Feed<span class="nt">&lt;/h3&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/feed'</span> <span
class="cp">%&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
  .
  .
  .
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>To style the stats, we’ll add some SCSS, as shown in <a
                        href="#code-stats_css" class="hyperref">Listing&nbsp;<span
                          class="ref">12.18</span></a> (which contains all the
                      stylesheet code needed in this chapter).<span class="intersentencespace"></span>
                      The resulting Home page appears in <a href="#fig-home_page_follow_stats"
                        class="hyperref">Figure&nbsp;<span class="ref">12.11</span></a>.</p>
                    <div class="codelisting" id="_code-stats_css" data-tralics-id="uid1325"
                      data-number="12.18">
                      <div class="heading"><span class="number">Listing 12.18:</span>
                        <span class="description">SCSS for the Home page
                          sidebar.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/assets/stylesheets/custom.css.scss</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="o">/*</span> <span class="nt">sidebar</span> <span class="o">*/</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.gravatar</span> <span class="p">{</span>
  <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
  <span class="na">margin-right</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>

<span class="nc">.gravatar_edit</span> <span class="p">{</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">15</span><span
class="kt">px</span><span class="p">;</span>
<span class="p">}</span>

<span class="hll"><span class="nc">.stats</span> <span class="p">{</span>
</span>  <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span
class="p">;</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="nt">a</span> <span class="p">{</span>
    <span class="na">float</span><span class="o">:</span> <span class="no">left</span><span
class="p">;</span>
    <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span> <span
class="mi">10</span><span class="kt">px</span><span class="p">;</span>
    <span class="na">border-left</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="no">solid</span> <span class="nv">$gray-lighter</span><span
class="p">;</span>
    <span class="na">color</span><span class="o">:</span> <span class="nb">gray</span><span
class="p">;</span>
    <span class="k">&amp;</span><span class="nd">:first-child</span> <span class="p">{</span>
      <span class="na">padding-left</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
      <span class="na">border</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
    <span class="p">}</span>
    <span class="k">&amp;</span><span class="nd">:hover</span> <span class="p">{</span>
      <span class="na">text-decoration</span><span class="o">:</span> <span class="no">none</span><span
class="p">;</span>
      <span class="na">color</span><span class="o">:</span> <span class="nb">blue</span><span
class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="nt">strong</span> <span class="p">{</span>
    <span class="na">display</span><span class="o">:</span> <span class="no">block</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="hll"><span class="nc">.user_avatars</span> <span class="p">{</span>
</span>  <span class="na">overflow</span><span class="o">:</span> <span class="no">auto</span><span
class="p">;</span>
  <span class="na">margin-top</span><span class="o">:</span> <span class="mi">10</span><span
class="kt">px</span><span class="p">;</span>
  <span class="nc">.gravatar</span> <span class="p">{</span>
    <span class="na">margin</span><span class="o">:</span> <span class="mi">1</span><span
class="kt">px</span> <span class="mi">1</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nt">a</span> <span class="p">{</span>
    <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="hll"><span class="nc">.users.follow</span> <span class="p">{</span>
</span>  <span class="na">padding</span><span class="o">:</span> <span class="mi">0</span><span
class="p">;</span>
<span class="p">}</span>

<span class="cm">/* forms */</span>
<span class="nc">.</span>
<span class="nc">.</span>
<span class="nc">.</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-home_page_follow_stats"
                      data-tralics-id="uid1326" data-number="12.11">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_page_follow_stats_3rd_edition.png"
                          alt="images/figures/home_page_follow_stats_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.11: </span><span
                          class="description">The Home page with follow stats. </span></div>
                    </div>
                    <p>We’ll render the stats partial on the profile page in a
                      moment, but first let’s make a partial for the
                      follow/unfollow button, as shown in <a href="#code-follow_form_partial"
                        class="hyperref">Listing&nbsp;<span class="ref">12.19</span></a>.</p>
                    <div class="codelisting" id="_code-follow_form_partial" data-tralics-id="uid1327"
                      data-number="12.19">
                      <div class="heading"><span class="number">Listing 12.19:</span>
                        <span class="description">A partial for a
                          follow/unfollow form.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/_follow_form.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="k">unless</span> <span
class="n">current_user?</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"follow_form"</span><span
class="nt">&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">following?</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'unfollow'</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'follow'</span> <span
class="cp">%&gt;</span>
  <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>This does nothing but defer the real work to <code>follow</code>
                      and <code>unfollow</code> partials, which need new routes
                      for the Relationships resource, which follows the
                      Microposts resource example (<a href="#code-microposts_resource"
                        class="hyperref">Listing&nbsp;<span class="ref">11.29</span></a>),
                      as seen in <a href="#code-relationships_resource" class="hyperref">Listing&nbsp;<span
                          class="ref">12.20</span></a>.</p>
                    <div class="codelisting" id="_code-relationships_resource" data-tralics-id="uid1328"
                      data-number="12.20">
                      <div class="heading"><span class="number">Listing 12.20:</span>
                        <span class="description">Adding the routes for user
                          relationships.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/routes.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="no">Rails</span><span class="o">.</span><span
class="n">application</span><span class="o">.</span><span class="n">routes</span><span
class="o">.</span><span class="n">draw</span> <span class="k">do</span>
  <span class="n">root</span>                <span class="s1">'static_pages#home'</span>
  <span class="n">get</span>    <span class="s1">'help'</span>    <span class="o">=&gt;</span> <span
class="s1">'static_pages#help'</span>
  <span class="n">get</span>    <span class="s1">'about'</span>   <span class="o">=&gt;</span> <span
class="s1">'static_pages#about'</span>
  <span class="n">get</span>    <span class="s1">'contact'</span> <span class="o">=&gt;</span> <span
class="s1">'static_pages#contact'</span>
  <span class="n">get</span>    <span class="s1">'signup'</span>  <span class="o">=&gt;</span> <span
class="s1">'users#new'</span>
  <span class="n">get</span>    <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#new'</span>
  <span class="n">post</span>   <span class="s1">'login'</span>   <span class="o">=&gt;</span> <span
class="s1">'sessions#create'</span>
  <span class="n">delete</span> <span class="s1">'logout'</span>  <span class="o">=&gt;</span> <span
class="s1">'sessions#destroy'</span>
  <span class="n">resources</span> <span class="ss">:users</span> <span class="k">do</span>
    <span class="n">member</span> <span class="k">do</span>
      <span class="n">get</span> <span class="ss">:following</span><span class="p">,</span> <span
class="ss">:followers</span>
    <span class="k">end</span>
  <span class="k">end</span>
  <span class="n">resources</span> <span class="ss">:account_activations</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:edit</span><span class="o">]</span>
  <span class="n">resources</span> <span class="ss">:password_resets</span><span
class="p">,</span>     <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span><span
class="p">,</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span><span
class="o">]</span>
  <span class="n">resources</span> <span class="ss">:microposts</span><span class="p">,</span>          <span
class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:create</span><span
class="p">,</span> <span class="ss">:destroy</span><span class="o">]</span>
<span class="hll">  <span class="n">resources</span> <span class="ss">:relationships</span><span
class="p">,</span>       <span class="ss">only</span><span class="p">:</span> <span
class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span
class="ss">:destroy</span><span class="o">]</span>
</span><span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The follow/unfollow partials themselves are shown in <a
                        href="#code-follow_form" class="hyperref">Listing&nbsp;<span
                          class="ref">12.21</span></a> and <a href="#code-unfollow_form"
                        class="hyperref">Listing&nbsp;<span class="ref">12.22</span></a>.</p>
                    <div class="codelisting" id="_code-follow_form" data-tralics-id="uid1329"
                      data-number="12.21">
                      <div class="heading"><span class="number">Listing 12.21:</span>
                        <span class="description">A form for following a user.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/users/_follow.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="n">current_user</span><span class="o">.</span><span
class="n">active_relationships</span><span class="o">.</span><span class="n">build</span><span
class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span
class="o">|</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;div&gt;</span><span class="cp">&lt;%=</span> <span class="n">hidden_field_tag</span> <span
class="ss">:followed_id</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Follow"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-unfollow_form" data-tralics-id="uid1330"
                      data-number="12.22">
                      <div class="heading"><span class="number">Listing 12.22:</span>
                        <span class="description">A form for unfollowing a user.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/views/users/_unfollow.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="n">current_user</span><span class="o">.</span><span
class="n">active_relationships</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">followed_id</span><span class="p">:</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">),</span>
             <span class="ss">html</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span> <span
class="p">})</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span
class="o">|</span> <span class="cp">%&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Unfollow"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn"</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>These two forms both use <code>form_for</code> to
                      manipulate a Relationship model object; the main
                      difference between the two is that <a href="#code-follow_form"
                        class="hyperref">Listing&nbsp;<span class="ref">12.21</span></a>
                      builds a <em>new</em> relationship, whereas <a href="#code-unfollow_form"
                        class="hyperref">Listing&nbsp;<span class="ref">12.22</span></a>
                      finds the existing relationship.<span class="intersentencespace"></span>
                      Naturally, the former sends a <span class="tt">POST</span>
                      request to the Relationships controller to <code>create</code>
                      a relationship, while the latter sends a <span class="tt">DELETE</span>
                      request to <code>destroy</code> a relationship.<span class="intersentencespace"></span>
                      (We’ll write these actions in <a href="#sec-a_working_follow_button_the_standard_way"
                        class="hyperref">Section&nbsp;<span class="ref">12.2.4</span></a>.)<span
                        class="intersentencespace"></span> Finally, you’ll note
                      that the follow form doesn’t have any content other than
                      the button, but it still needs to send the <code>followed_id</code>
                      to the controller.<span class="intersentencespace"></span>
                      We accomplish this with the <code>hidden_field_tag</code>
                      method in <a href="#code-follow_form" class="hyperref">Listing&nbsp;<span
                          class="ref">12.21</span></a>, which produces HTML of
                      the form</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;input</span> <span class="na">id=</span><span
class="s">"followed_id"</span> <span class="na">name=</span><span class="s">"followed_id"</span> <span
class="na">type=</span><span class="s">"hidden"</span> <span class="na">value=</span><span
class="s">"3"</span> <span class="nt">/&gt;</span>
</pre></div>
                    </div>
                    <p>As we saw in <a href="#sec-resetting_the_password" class="hyperref">Section&nbsp;<span
                          class="ref">10.2.4</span></a> (<a href="#code-password_reset_form"
                        class="hyperref">Listing&nbsp;<span class="ref">10.50</span></a>),
                      the hidden <code>input</code> tag puts the relevant
                      information on the page without displaying it in the
                      browser.</p>
                    <p>We can now include the follow form and the following
                      statistics on the user profile page simply by rendering
                      the partials, as shown in <a href="#code-user_follow_form_profile_stats"
                        class="hyperref">Listing&nbsp;<span class="ref">12.23</span></a>.<span
                        class="intersentencespace"></span> Profiles with follow
                      and unfollow buttons, respectively, appear in <a href="#fig-profile_follow_button"
                        class="hyperref">Figure&nbsp;<span class="ref">12.12</span></a>
                      and <a href="#fig-profile_unfollow_button" class="hyperref">Figure&nbsp;<span
                          class="ref">12.13</span></a>.</p>
                    <div class="codelisting" id="_code-user_follow_form_profile_stats"
                      data-tralics-id="uid1331" data-number="12.23">
                      <div class="heading"><span class="number">Listing 12.23:</span>
                        <span class="description">Adding the follow form and
                          follower stats to the user profile page.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/users/show.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span><span class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"col-md-4"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;section&gt;</span>
      <span class="nt">&lt;h1&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span
class="vi">@user</span> <span class="cp">%&gt;</span>
        <span class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">name</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;/h1&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
<span class="hll">    <span class="nt">&lt;section</span> <span class="na">class=</span><span
class="s">"stats"</span><span class="nt">&gt;</span>
</span><span class="hll">      <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'shared/stats'</span> <span class="cp">%&gt;</span>
</span><span class="hll">    <span class="nt">&lt;/section&gt;</span>
</span>  <span class="nt">&lt;/aside&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-8"</span><span
class="nt">&gt;</span>
<span class="hll">    <span class="cp">&lt;%=</span> <span class="n">render</span> <span
class="s1">'follow_form'</span> <span class="k">if</span> <span class="n">logged_in?</span> <span
class="cp">%&gt;</span>
</span>    <span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">any?</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;h3&gt;</span>Microposts (<span class="cp">&lt;%=</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">count</span> <span class="cp">%&gt;</span>)<span
class="nt">&lt;/h3&gt;</span>
      <span class="nt">&lt;ol</span> <span class="na">class=</span><span class="s">"microposts"</span><span
class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="vi">@microposts</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;/ol&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="vi">@microposts</span> <span class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-profile_follow_button" data-tralics-id="uid1332"
                      data-number="12.12">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_follow_button_3rd_edition.png"
                          alt="images/figures/profile_follow_button_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.12: </span><span
                          class="description">A user profile with a follow
                          button (<a href="http://localhost:3000/users/2" target="_blank">/users/2</a>).
                          </span></div> </div>
                    <div class="center figure" id="_fig-profile_unfollow_button"
                      data-tralics-id="uid1333" data-number="12.13">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/profile_unfollow_button_3rd_edition.png"
                          alt="images/figures/profile_unfollow_button_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.13: </span><span
                          class="description">A user profile with an unfollow
                          button (<a href="http://localhost:3000/users/5" target="_blank">/users/5</a>).
                          </span></div> </div>
                    <p>We’ll get these buttons working soon enough—in fact,
                      we’ll do it two ways, the standard way (<a href="#sec-a_working_follow_button_the_standard_way"
                        class="hyperref">Section&nbsp;<span class="ref">12.2.4</span></a>)
                      and using Ajax (<a href="#sec-a_working_follow_button_with_ajax"
                        class="hyperref">Section&nbsp;<span class="ref">12.2.5</span></a>)—but
                      first we’ll finish the HTML interface by making the
                      following and followers pages.</p>
                  </div>
                  <div id="_sec-following_and_followers_pages" data-tralics-id="uid1334"
                    class="subsection" data-number="12.2.3">
                    <h3><a href="#sec-following_and_followers_pages" class="heading hyperref"><span
                          class="number">12.2.3 </span>Following and followers
                        pages</a></h3>
                    <p>Pages to display followed users and followers will
                      resemble a hybrid of the user profile page and the user
                      index page (<a href="#sec-users_index" class="hyperref">Section&nbsp;<span
                          class="ref">9.3.1</span></a>), with a sidebar of user
                      information (including the following stats) and a list of
                      users.<span class="intersentencespace"></span> In
                      addition, we’ll include a raster of smaller user profile
                      image links in the sidebar.<span class="intersentencespace"></span>
                      Mockups matching these requirements appear in <a href="#fig-following_mockup"
                        class="hyperref">Figure&nbsp;<span class="ref">12.14</span></a>
                      (following) and <a href="#fig-followers_mockup" class="hyperref">Figure&nbsp;<span
                          class="ref">12.15</span></a> (followers).</p>
                    <div class="center figure" id="_fig-following_mockup" data-tralics-id="uid1335"
                      data-number="12.14">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/following_mockup_bootstrap.png"
                          alt="images/figures/following_mockup_bootstrap"></div>
                      <div class="caption"><span class="header">Figure 12.14: </span><span
                          class="description">A mockup of the user following
                          page. </span></div>
                    </div>
                    <div class="center figure" id="_fig-followers_mockup" data-tralics-id="uid1336"
                      data-number="12.15">
                      <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/followers_mockup_bootstrap.png"
                          alt="images/figures/followers_mockup_bootstrap"></div>
                      <div class="caption"><span class="header">Figure 12.15: </span><span
                          class="description">A mockup of the user followers
                          page. </span></div>
                    </div>
                    <p>Our first step is to get the following and followers
                      links to work.<span class="intersentencespace"></span>
                      We’ll follow Twitter’s lead and have both pages require
                      user login.<span class="intersentencespace"></span> As
                      with most previous examples of access control, we’ll write
                      the tests first, as shown in <a href="#code-following_followers_authorization_test"
                        class="hyperref">Listing&nbsp;<span class="ref">12.24</span></a>.</p>
                    <div class="codelisting" id="_code-following_followers_authorization_test"
                      data-tralics-id="uid1337" data-number="12.24">
                      <div class="heading"><span class="number">Listing 12.24:</span>
                        <span class="description">Tests for the authorization of
                          the following and followers pages.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/users_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UsersControllerTest</span> <span class="o">&lt;</span> <span
class="no">ActionController</span><span class="o">::</span><span class="no">TestCase</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="vi">@other_user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"should redirect following when not logged in"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:following</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should redirect followers when not logged in"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="ss">:followers</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="vi">@user</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The only tricky part of the implementation is realizing
                      that we need to add two new actions to the Users
                      controller.<span class="intersentencespace"></span> Based
                      on the routes defined in <a href="#code-following_followers_actions_routes"
                        class="hyperref">Listing&nbsp;<span class="ref">12.15</span></a>,
                      we need to call them <code>following</code> and <code>followers</code>.<span
                        class="intersentencespace"></span> Each action needs to
                      set a title, find the user, retrieve either <code>@user.following</code>
                      or <code>@user.followers</code> (in paginated form), and
                      then render the page.<span class="intersentencespace"></span>
                      The result appears in <a href="#code-following_followers_actions"
                        class="hyperref">Listing&nbsp;<span class="ref">12.25</span></a>.</p>
                    <div class="codelisting" id="_code-following_followers_actions"
                      data-tralics-id="uid1338" data-number="12.25">
                      <div class="heading"><span class="number">Listing 12.25:</span>
                        <span class="description">The <code>following</code>
                          and <code>followers</code> actions.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/users_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">UsersController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
<span class="hll">  <span class="n">before_action</span> <span class="ss">:logged_in_user</span><span
class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span
class="ss">:index</span><span class="p">,</span> <span class="ss">:edit</span><span
class="p">,</span> <span class="ss">:update</span><span class="p">,</span> <span
class="ss">:destroy</span><span class="p">,</span>
</span><span class="hll">                                        <span class="ss">:following</span><span
class="p">,</span> <span class="ss">:followers</span><span class="o">]</span>
</span>  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="k">def</span> <span class="nf">following</span>
    <span class="vi">@title</span> <span class="o">=</span> <span class="s2">"Following"</span>
    <span class="vi">@user</span>  <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
    <span class="vi">@users</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">following</span><span class="o">.</span><span
class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span
class="o">]</span><span class="p">)</span>
    <span class="n">render</span> <span class="s1">'show_follow'</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">followers</span>
    <span class="vi">@title</span> <span class="o">=</span> <span class="s2">"Followers"</span>
    <span class="vi">@user</span>  <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
    <span class="vi">@users</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">followers</span><span class="o">.</span><span
class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span
class="o">]</span><span class="p">)</span>
    <span class="n">render</span> <span class="s1">'show_follow'</span>
  <span class="k">end</span>

  <span class="kp">private</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As we’ve seen throughout this tutorial, the usual Rails
                      convention is to implicitly render the template
                      corresponding to an action, such as rendering <code>show.html.erb</code>
                      at the end of the <code>show</code> action.<span class="intersentencespace"></span>
                      In contrast, both actions in <a href="#code-following_followers_actions"
                        class="hyperref">Listing&nbsp;<span class="ref">12.25</span></a>
                      make an <em>explicit</em> call to <code>render</code>,
                      in this case rendering a view called <code>show_follow</code>,
                      which we must create.<span class="intersentencespace"></span>
                      The reason for the common view is that the ERb is nearly
                      identical for the two cases, and <a href="#code-show_follow_view"
                        class="hyperref">Listing&nbsp;<span class="ref">12.26</span></a>
                      covers them both.</p>
                    <div class="codelisting" id="_code-show_follow_view" data-tralics-id="uid1339"
                      data-number="12.26">
                      <div class="heading"><span class="number">Listing 12.26:</span>
                        <span class="description">The <code>show_follow</code>
                          view used to render following and followers.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/views/users/show_follow.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%</span> <span class="n">provide</span><span
class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="vi">@title</span><span
class="p">)</span> <span class="cp">%&gt;</span>
<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"row"</span><span
class="nt">&gt;</span>
  <span class="nt">&lt;aside</span> <span class="na">class=</span><span class="s">"col-md-4"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"user_info"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">gravatar_for</span> <span class="vi">@user</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;h1&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">name</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/h1&gt;</span>
      <span class="nt">&lt;span&gt;</span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="s2">"view my profile"</span><span class="p">,</span> <span class="vi">@user</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/span&gt;</span>
      <span class="nt">&lt;span&gt;&lt;b&gt;</span>Microposts:<span class="nt">&lt;/b&gt;</span> <span
class="cp">&lt;%=</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">microposts</span><span class="o">.</span><span class="n">count</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/span&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
    <span class="nt">&lt;section</span> <span class="na">class=</span><span class="s">"stats"</span><span
class="nt">&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="s1">'shared/stats'</span> <span
class="cp">%&gt;</span>
      <span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@users</span><span
class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"user_avatars"</span><span
class="nt">&gt;</span>
          <span class="cp">&lt;%</span> <span class="vi">@users</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">user</span><span
class="o">|</span> <span class="cp">%&gt;</span>
            <span class="cp">&lt;%=</span> <span class="n">link_to</span> <span
class="n">gravatar_for</span><span class="p">(</span><span class="n">user</span><span
class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">30</span><span
class="p">),</span> <span class="n">user</span> <span class="cp">%&gt;</span>
          <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
        <span class="nt">&lt;/div&gt;</span>
      <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
    <span class="nt">&lt;/section&gt;</span>
  <span class="nt">&lt;/aside&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"col-md-8"</span><span
class="nt">&gt;</span>
    <span class="nt">&lt;h3&gt;</span><span class="cp">&lt;%=</span> <span class="vi">@title</span> <span
class="cp">%&gt;</span><span class="nt">&lt;/h3&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">if</span> <span class="vi">@users</span><span
class="o">.</span><span class="n">any?</span> <span class="cp">%&gt;</span>
      <span class="nt">&lt;ul</span> <span class="na">class=</span><span class="s">"users follow"</span><span
class="nt">&gt;</span>
        <span class="cp">&lt;%=</span> <span class="n">render</span> <span class="vi">@users</span> <span
class="cp">%&gt;</span>
      <span class="nt">&lt;/ul&gt;</span>
      <span class="cp">&lt;%=</span> <span class="n">will_paginate</span> <span
class="cp">%&gt;</span>
    <span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;/div&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The actions in <a href="#code-following_followers_actions"
                        class="hyperref">Listing&nbsp;<span class="ref">12.25</span></a>
                      render the view from <a href="#code-show_follow_view" class="hyperref">Listing&nbsp;<span
                          class="ref">12.26</span></a> in two contexts,
                      “following” and “followers”, with the results shown in <a
                        href="#fig-user_following" class="hyperref">Figure&nbsp;<span
                          class="ref">12.16</span></a> and <a href="#fig-user_followers"
                        class="hyperref">Figure&nbsp;<span class="ref">12.17</span></a>.<span
                        class="intersentencespace"></span> Note that nothing in
                      the above code uses the current user, so the same links
                      work for other users, as shown in <a href="#fig-different_user_followers"
                        class="hyperref">Figure&nbsp;<span class="ref">12.18</span></a>.</p>
                    <div class="center figure" id="_fig-user_following" data-tralics-id="uid1340"
                      data-number="12.16">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_following_3rd_edition.png"
                          alt="images/figures/user_following_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.16: </span><span
                          class="description">Showing the users the given user
                          is following. </span></div>
                    </div>
                    <div class="center figure" id="_fig-user_followers" data-tralics-id="uid1341"
                      data-number="12.17">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_followers_3rd_edition.png"
                          alt="images/figures/user_followers_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.17: </span><span
                          class="description">Showing the given user’s
                          followers. </span></div>
                    </div>
                    <div class="center figure" id="_fig-different_user_followers"
                      data-tralics-id="uid1342" data-number="12.18">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/diferent_user_followers_3rd_edition.png"
                          alt="images/figures/diferent_user_followers_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.18: </span><span
                          class="description">Showing a different user’s
                          followers. </span></div>
                    </div>
                    <p>Now that we have working following and followers pages,
                      we’ll write a couple of short integration tests to verify
                      their behavior.<span class="intersentencespace"></span>
                      They are designed to be a sanity check, not to be
                      comprehensive.<span class="intersentencespace"></span>
                      Indeed, as noted in <a href="#sec-layout_link_tests" class="hyperref">Section&nbsp;<span
                          class="ref">5.3.4</span></a>, comprehensive tests of
                      things like HTML structure are likely to be brittle and
                      thus counter-productive.<span class="intersentencespace"></span>
                      Our plan in the case of following/followers pages is to
                      check the number is correctly displayed and that links
                      with the right URLs appear on the page.</p>
                    <p>To get started, we’ll generate an integration test as
                      usual:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate integration_test following
<span class="go">      invoke  test_unit</span>
<span class="go">      create    test/integration/following_test.rb</span>
</pre></div>
                    </div>
                    <p>Next, we need to assemble some test data, which we can do
                      by adding some relationships fixtures to create
                      following/follower relationships.<span class="intersentencespace"></span>
                      Recall from <a href="#sec-profile_micropost_tests" class="hyperref">Section&nbsp;<span
                          class="ref">11.2.3</span></a> that we can use code
                      like</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="l-Scalar-Plain">orange</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">content</span><span class="p-Indicator">:</span> <span
class="s">"I</span><span class="nv"> </span><span class="s">just</span><span class="nv"> </span><span
class="s">ate</span><span class="nv"> </span><span class="s">an</span><span class="nv"> </span><span
class="s">orange!"</span>
  <span class="l-Scalar-Plain">created_at</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">&lt;%= 10.minutes.ago %&gt;</span>
  <span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</pre></div>
                    </div>
                    <p>to associate a micropost with a given user.<span class="intersentencespace"></span>
                      In particular, we can write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="l-Scalar-Plain">user</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</pre></div>
                    </div>
                    <p>instead of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="l-Scalar-Plain">user_id</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">1</span>
</pre></div>
                    </div>
                    <p>Applying this idea to the relationships fixtures gives
                      the associations in <a href="#code-relationships_fixtures"
                        class="hyperref">Listing&nbsp;<span class="ref">12.27</span></a>.</p>
                    <div class="codelisting" id="_code-relationships_fixtures" data-tralics-id="uid1343"
                      data-number="12.27">
                      <div class="heading"><span class="number">Listing 12.27:</span>
                        <span class="description">Relationships fixtures for use
                          in following/follower tests.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">test/fixtures/relationships.yml</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="l-Scalar-Plain">one</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">follower</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
  <span class="l-Scalar-Plain">followed</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">lana</span>

<span class="l-Scalar-Plain">two</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">follower</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
  <span class="l-Scalar-Plain">followed</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">mallory</span>

<span class="l-Scalar-Plain">three</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">follower</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">lana</span>
  <span class="l-Scalar-Plain">followed</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>

<span class="l-Scalar-Plain">four</span><span class="p-Indicator">:</span>
  <span class="l-Scalar-Plain">follower</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">archer</span>
  <span class="l-Scalar-Plain">followed</span><span class="p-Indicator">:</span> <span
class="l-Scalar-Plain">michael</span>
</pre></div>
                      </div>
                    </div>
                    <p>The fixtures in <a href="#code-relationships_fixtures" class="hyperref">Listing&nbsp;<span
                          class="ref">12.27</span></a> first arrange for Michael
                      to follow Lana and Mallory, and then arrange for Michael
                      to be followed by Lana and Archer.<span class="intersentencespace"></span>
                      To test for the right count, we can use the same <code>assert_match</code>
                      method we used in <a href="#code-user_profile_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.27</span></a> to test for the display
                      of the number of microposts on the user profile page.<span
                        class="intersentencespace"></span> Adding in assertions
                      for the right links yields the tests shown in <a href="#code-following_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">12.28</span></a>.</p>
                    <div class="codelisting" id="_code-following_tests" data-tralics-id="uid1344"
                      data-number="12.28">
                      <div class="heading"><span class="number">Listing 12.28:</span>
                        <span class="description">Tests for following/follower
                          pages.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/following_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">FollowingTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"following page"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">following_user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">following</span><span class="o">.</span><span class="n">empty?</span>
    <span class="n">assert_match</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">following</span><span class="o">.</span><span class="n">count</span><span
class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">response</span><span
class="o">.</span><span class="n">body</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">following</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">user</span><span class="o">|</span>
      <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"followers page"</span> <span class="k">do</span>
    <span class="n">get</span> <span class="n">followers_user_path</span><span class="p">(</span><span
class="vi">@user</span><span class="p">)</span>
    <span class="n">assert_not</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">followers</span><span class="o">.</span><span class="n">empty?</span>
    <span class="n">assert_match</span> <span class="vi">@user</span><span class="o">.</span><span
class="n">followers</span><span class="o">.</span><span class="n">count</span><span
class="o">.</span><span class="n">to_s</span><span class="p">,</span> <span class="n">response</span><span
class="o">.</span><span class="n">body</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">followers</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">user</span><span class="o">|</span>
      <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>In <a href="#code-following_tests" class="hyperref">Listing&nbsp;<span
                          class="ref">12.28</span></a>, note that we include the
                      assertion</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_not</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">following</span><span class="o">.</span><span
class="n">empty?</span>
</pre></div>
                    </div>
                    <p>which is included to make sure that</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="vi">@user</span><span class="o">.</span><span
class="n">following</span><span class="o">.</span><span class="n">each</span> <span
class="k">do</span> <span class="o">|</span><span class="n">user</span><span class="o">|</span>
  <span class="n">assert_select</span> <span class="s2">"a[href=?]"</span><span
class="p">,</span> <span class="n">user_path</span><span class="p">(</span><span
class="n">user</span><span class="p">)</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>isn’t <a href="https://en.wikipedia.org/wiki/Vacuous_truth"
                        target="_blank">vacuously true</a> (and similarly for <code>followers</code>).</p>
                    <p>The test suite should now be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1345" data-tralics-id="uid1345"
                      data-number="12.29">
                      <div class="heading"><span class="number">Listing 12.29:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-a_working_follow_button_the_standard_way" data-tralics-id="uid1346"
                    class="subsection" data-number="12.2.4">
                    <h3><a href="#sec-a_working_follow_button_the_standard_way"
                        class="heading hyperref"><span class="number">12.2.4 </span>A
                        working follow button the standard way</a></h3>
                    <p>Now that our views are in order, it’s time to get the
                      follow/unfollow buttons working.<span class="intersentencespace"></span>
                      Because following and unfollowing involve creating and
                      destroying relationships, we need a Relationships
                      controller, which we generate as usual</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">$</span> rails generate controller Relationships
</pre></div>
                    </div>
                    <p>As we’ll see in <a href="#code-relationships_controller"
                        class="hyperref">Listing&nbsp;<span class="ref">12.31</span></a>,
                      enforcing access control on the Relationships controller
                      actions won’t much matter, but we’ll still follow our
                      previous practice of enforcing the security model as early
                      as possible.<span class="intersentencespace"></span> In
                      particular, we’ll check that attempts to access actions in
                      the Relationships controller require a logged-in user (and
                      thus get redirected to the login page), while also not
                      changing the Relationship count, as shown in <a href="#code-relationships_access_control"
                        class="hyperref">Listing&nbsp;<span class="ref">12.30</span></a>.</p>
                    <div class="codelisting" id="_code-relationships_access_control"
                      data-tralics-id="uid1347" data-number="12.30">
                      <div class="heading"><span class="number">Listing 12.30:</span>
                        <span class="description">Basic access control tests for
                          relationships.<span class="intersentencespace"></span>
                          <span style="color: red"><span class="sc"></span><span
                              class="sc"><strong>red</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/controllers/relationships_controller_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">RelationshipsControllerTest</span> <span
class="o">&lt;</span> <span class="no">ActionController</span><span class="o">::</span><span
class="no">TestCase</span>

  <span class="nb">test</span> <span class="s2">"create should require logged-in user"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Relationship.count'</span> <span
class="k">do</span>
      <span class="n">post</span> <span class="ss">:create</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"destroy should require logged-in user"</span> <span
class="k">do</span>
    <span class="n">assert_no_difference</span> <span class="s1">'Relationship.count'</span> <span
class="k">do</span>
      <span class="n">delete</span> <span class="ss">:destroy</span><span class="p">,</span> <span
class="nb">id</span><span class="p">:</span> <span class="n">relationships</span><span
class="p">(</span><span class="ss">:one</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="n">assert_redirected_to</span> <span class="n">login_url</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We can get the tests in <a href="#code-relationships_access_control"
                        class="hyperref">Listing&nbsp;<span class="ref">12.30</span></a>
                      to pass by adding the <code>logged_in_user</code> before
                      filter (<a href="#code-relationships_controller" class="hyperref">Listing&nbsp;<span
                          class="ref">12.31</span></a>).</p>
                    <div class="codelisting" id="_code-relationships_controller"
                      data-tralics-id="uid1348" data-number="12.31">
                      <div class="heading"><span class="number">Listing 12.31:</span>
                        <span class="description">Access control for
                          relationships.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/controllers/relationships_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">RelationshipsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span>

  <span class="k">def</span> <span class="nf">create</span>
  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>To get the follow and unfollow buttons to work, all we
                      need to do is find the user associated with the <code>followed_id</code>
                      in the corresponding form (i.e., <a href="#code-follow_form"
                        class="hyperref">Listing&nbsp;<span class="ref">12.21</span></a>
                      or <a href="#code-unfollow_form" class="hyperref">Listing&nbsp;<span
                          class="ref">12.22</span></a>), and then use the
                      appropriate <code>follow</code> or <code>unfollow</code>
                      method from <a href="#code-follow_unfollow_following" class="hyperref">Listing&nbsp;<span
                          class="ref">12.10</span></a>.<span class="intersentencespace"></span>
                      The full implementation appears in <a href="#code-relationships_controller_following"
                        class="hyperref">Listing&nbsp;<span class="ref">12.32</span></a>.</p>
                    <div class="codelisting" id="_code-relationships_controller_following"
                      data-tralics-id="uid1349" data-number="12.32">
                      <div class="heading"><span class="number">Listing 12.32:</span>
                        <span class="description">The Relationships controller.<span
                            class="intersentencespace"></span> <span class="break"></span>
                          <span class="filepath">app/controllers/relationships_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">RelationshipsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span>

  <span class="k">def</span> <span class="nf">create</span>
<span class="hll">    <span class="n">user</span> <span class="o">=</span> <span
class="no">User</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span
class="n">params</span><span class="o">[</span><span class="ss">:followed_id</span><span
class="o">]</span><span class="p">)</span>
</span><span class="hll">    <span class="n">current_user</span><span class="o">.</span><span
class="n">follow</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">redirect_to</span> <span class="n">user</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
<span class="hll">    <span class="n">user</span> <span class="o">=</span> <span
class="no">Relationship</span><span class="o">.</span><span class="n">find</span><span
class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span
class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">followed</span>
</span><span class="hll">    <span class="n">current_user</span><span class="o">.</span><span
class="n">unfollow</span><span class="p">(</span><span class="n">user</span><span
class="p">)</span>
</span><span class="hll">    <span class="n">redirect_to</span> <span class="n">user</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>We can see from <a href="#code-relationships_controller_following"
                        class="hyperref">Listing&nbsp;<span class="ref">12.32</span></a>
                      why the security issue mentioned above is minor: if an
                      unlogged-in user were to hit either action directly (e.g.,
                      using a command-line tool like <code>curl</code>), <code>current_user</code>
                      would be <code>nil</code>, and in both cases the action’s
                      second line would raise an exception, resulting in an
                      error but no harm to the application or its data.<span class="intersentencespace"></span>
                      It’s best not to rely on that, though, so we’ve taken the
                      extra step and added an additional layer of security.</p>
                    <p>With that, the core follow/unfollow functionality is
                      complete, and any user can follow or unfollow any other
                      user, as you can verify by clicking the corresponding
                      buttons in your browser.<span class="intersentencespace"></span>
                      (We’ll write integration tests to verify this behavior in
                      <a href="#sec-following_tests" class="hyperref">Section&nbsp;<span
                          class="ref">12.2.6</span></a>.)<span class="intersentencespace"></span>
                      The result of following user #2 is shown in <a href="#fig-unfollowed_user"
                        class="hyperref">Figure&nbsp;<span class="ref">12.19</span></a>
                      and <a href="#fig-followed_user" class="hyperref">Figure&nbsp;<span
                          class="ref">12.20</span></a>.</p>
                    <div class="center figure" id="_fig-unfollowed_user" data-tralics-id="uid1350"
                      data-number="12.19">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/unfollowed_user.png"
                          alt="images/figures/unfollowed_user"></div>
                      <div class="caption"><span class="header">Figure 12.19: </span><span
                          class="description">An unfollowed user. </span></div>
                    </div>
                    <div class="center figure" id="_fig-followed_user" data-tralics-id="uid1351"
                      data-number="12.20">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/followed_user.png"
                          alt="images/figures/followed_user"></div>
                      <div class="caption"><span class="header">Figure 12.20: </span><span
                          class="description">The result of following an
                          unfollowed user. </span></div>
                    </div>
                  </div>
                  <div id="_sec-a_working_follow_button_with_ajax" data-tralics-id="uid1352"
                    class="subsection" data-number="12.2.5">
                    <h3><a href="#sec-a_working_follow_button_with_ajax" class="heading hyperref"><span
                          class="number">12.2.5 </span>A working follow button
                        with Ajax</a></h3>
                    <p>Although our user following implementation is complete as
                      it stands, we have one bit of polish left to add before
                      starting work on the status feed.<span class="intersentencespace"></span>
                      You may have noticed in <a href="#sec-a_working_follow_button_the_standard_way"
                        class="hyperref">Section&nbsp;<span class="ref">12.2.4</span></a>
                      that both the <code>create</code> and <code>destroy</code>
                      actions in the Relationships controller simply redirect <em>back</em>
                      to the original profile.<span class="intersentencespace"></span>
                      In other words, a user starts on another user’s profile
                      page, follows the other user, and is immediately
                      redirected back to the original page.<span class="intersentencespace"></span>
                      It is reasonable to ask why the user needs to leave that
                      page at all.</p>
                    <p>This is exactly the problem solved by <em>Ajax</em>,
                      which allows web pages to send requests asynchronously to
                      the server without leaving the page.<sup id="_cha-12_footnote-ref-8"
                        class="footnote"><a href="#cha-12_footnote-8">8</a></sup><span
                        class="intersentencespace"></span> Because adding Ajax
                      to web forms is a common practice, Rails makes Ajax easy
                      to implement.<span class="intersentencespace"></span>
                      Indeed, updating the follow/unfollow form partials is
                      trivial: just change</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">form_for</span>
</pre></div>
                    </div>
                    <p>to</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">form_for</span> <span class="o">.</span><span
class="n">.</span><span class="o">.</span><span class="n">,</span> <span class="ss">remote</span><span
class="p">:</span> <span class="kp">true</span>
</pre></div>
                    </div>
                    <p>and Rails <a href="http://catb.org/jargon/html/A/automagically.html"
                        target="_blank">automagically</a> uses Ajax.<span class="intersentencespace"></span>
                      The updated partials appear in <a href="#code-follow_form_ajax"
                        class="hyperref">Listing <span class="ref">12.33</span></a>
                      and <a href="#code-unfollow_form_ajax" class="hyperref">Listing&nbsp;<span
                          class="ref">12.34</span></a>.</p>
                    <div class="codelisting" id="_code-follow_form_ajax" data-tralics-id="uid1354"
                      data-number="12.33">
                      <div class="heading"><span class="number">Listing 12.33:</span>
                        <span class="description">A form for following a user
                          using Ajax.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/users/_follow.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="hll"><span class="cp">&lt;%=</span> <span
class="n">form_for</span><span class="p">(</span><span class="n">current_user</span><span
class="o">.</span><span class="n">active_relationships</span><span class="o">.</span><span
class="n">build</span><span class="p">,</span> <span class="ss">remote</span><span
class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="k">do</span> <span
class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
</span>  <span class="nt">&lt;div&gt;</span><span class="cp">&lt;%=</span> <span
class="n">hidden_field_tag</span> <span class="ss">:followed_id</span><span class="p">,</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">id</span> <span class="cp">%&gt;</span><span
class="nt">&lt;/div&gt;</span>
  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Follow"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn btn-primary"</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <div class="codelisting" id="_code-unfollow_form_ajax" data-tralics-id="uid1355"
                      data-number="12.34">
                      <div class="heading"><span class="number">Listing 12.34:</span>
                        <span class="description">A form for unfollowing a user
                          using Ajax.<span class="intersentencespace"></span> <span
                            class="break"></span> <span class="filepath">app/views/users/_unfollow.html.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="cp">&lt;%=</span> <span class="n">form_for</span><span
class="p">(</span><span class="n">current_user</span><span class="o">.</span><span
class="n">active_relationships</span><span class="o">.</span><span class="n">find_by</span><span
class="p">(</span><span class="ss">followed_id</span><span class="p">:</span> <span
class="vi">@user</span><span class="o">.</span><span class="n">id</span><span class="p">),</span>
             <span class="ss">html</span><span class="p">:</span> <span class="p">{</span> <span
class="nb">method</span><span class="p">:</span> <span class="ss">:delete</span> <span
class="p">},</span>
<span class="hll">             <span class="ss">remote</span><span class="p">:</span> <span
class="kp">true</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span
class="n">f</span><span class="o">|</span> <span class="cp">%&gt;</span>
</span>  <span class="cp">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span
class="n">submit</span> <span class="s2">"Unfollow"</span><span class="p">,</span> <span
class="ss">class</span><span class="p">:</span> <span class="s2">"btn"</span> <span
class="cp">%&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</pre></div>
                      </div>
                    </div>
                    <p>The actual HTML generated by this ERb isn’t particularly
                      relevant, but you might be curious, so here’s a peek at a
                      schematic view (details may differ):</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nt">&lt;form</span> <span class="na">action=</span><span
class="s">"/relationships/117"</span> <span class="na">class=</span><span class="s">"edit_relationship"</span> <span
class="na">data-remote=</span><span class="s">"true"</span>
      <span class="na">id=</span><span class="s">"edit_relationship_117"</span> <span
class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>
  .
  .
  .
<span class="nt">&lt;/form&gt;</span>
</pre></div>
                    </div>
                    <p>This sets the variable <code>data-remote="true"</code>
                      inside the form tag, which tells Rails to allow the form
                      to be handled by JavaScript.<span class="intersentencespace"></span>
                      By using a simple HTML property instead of inserting the
                      full JavaScript code (as in previous versions of Rails),
                      Rails follows the philosophy of <a href="http://railscasts.com/episodes/205-unobtrusive-javascript"
                        target="_blank"><em>unobtrusive JavaScript</em></a>.</p>
                    <p>Having updated the form, we now need to arrange for the
                      Relationships controller to respond to Ajax requests.<span
                        class="intersentencespace"></span> We can do this using
                      the <code>respond_to</code> method, responding
                      appropriately depending on the type of request.<span class="intersentencespace"></span>
                      The general pattern looks like this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">respond_to</span> <span class="k">do</span> <span
class="o">|</span><span class="nb">format</span><span class="o">|</span>
  <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span
class="p">{</span> <span class="n">redirect_to</span> <span class="n">user</span> <span
class="p">}</span>
  <span class="nb">format</span><span class="o">.</span><span class="n">js</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>The syntax is potentially confusing, and it’s important
                      to understand that in the code above only <em>one</em> of
                      the lines gets executed.<span class="intersentencespace"></span>
                      (In this sense, <code>respond_to</code> is more like an
                      if-then-else statement than a series of sequential lines.)<span
                        class="intersentencespace"></span> Adapting the
                      Relationships controller to respond to Ajax involves
                      adding <code>respond_to</code> as above to the <code>create</code>
                      and <code>destroy</code> actions from <a href="#code-relationships_controller_following"
                        class="hyperref">Listing&nbsp;<span class="ref">12.32</span></a>.<span
                        class="intersentencespace"></span> The result appears as
                      in <a href="#code-relationships_controller_ajax" class="hyperref">Listing&nbsp;<span
                          class="ref">12.35</span></a>.<span class="intersentencespace"></span>
                      Note the change from the local variable <code>user</code>
                      to the instance variable <code>@user</code>; in <a href="#code-relationships_controller_following"
                        class="hyperref">Listing&nbsp;<span class="ref">12.32</span></a>
                      there was no need for an instance variable, but now such a
                      variable is necessary for use in <a href="#code-follow_form_ajax"
                        class="hyperref">Listing&nbsp;<span class="ref">12.33</span></a>
                      and <a href="#code-unfollow_form_ajax" class="hyperref">Listing&nbsp;<span
                          class="ref">12.34</span></a>.</p>
                    <div class="codelisting" id="_code-relationships_controller_ajax"
                      data-tralics-id="uid1356" data-number="12.35">
                      <div class="heading"><span class="number">Listing 12.35:</span>
                        <span class="description">Responding to Ajax requests in
                          the Relationships controller.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/relationships_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">RelationshipsController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>
  <span class="n">before_action</span> <span class="ss">:logged_in_user</span>

  <span class="k">def</span> <span class="nf">create</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:followed_id</span><span class="o">]</span><span
class="p">)</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">follow</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
<span class="hll">    <span class="n">respond_to</span> <span class="k">do</span> <span
class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class="hll">      <span class="nb">format</span><span class="o">.</span><span
class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span
class="vi">@user</span> <span class="p">}</span>
</span><span class="hll">      <span class="nb">format</span><span class="o">.</span><span
class="n">js</span>
</span><span class="hll">    <span class="k">end</span>
</span>  <span class="k">end</span>

  <span class="k">def</span> <span class="nf">destroy</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="no">Relationship</span><span
class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span
class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span
class="o">.</span><span class="n">followed</span>
    <span class="n">current_user</span><span class="o">.</span><span class="n">unfollow</span><span
class="p">(</span><span class="vi">@user</span><span class="p">)</span>
<span class="hll">    <span class="n">respond_to</span> <span class="k">do</span> <span
class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class="hll">      <span class="nb">format</span><span class="o">.</span><span
class="n">html</span> <span class="p">{</span> <span class="n">redirect_to</span> <span
class="vi">@user</span> <span class="p">}</span>
</span><span class="hll">      <span class="nb">format</span><span class="o">.</span><span
class="n">js</span>
</span><span class="hll">    <span class="k">end</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The actions in <a href="#code-relationships_controller_ajax"
                        class="hyperref">Listing&nbsp;<span class="ref">12.35</span></a>
                      degrade gracefully, which means that they work fine in
                      browsers that have JavaScript disabled (although a small
                      amount of configuration is necessary, as shown in <a href="#code-degrade_gracefully"
                        class="hyperref">Listing&nbsp;<span class="ref">12.36</span></a>).</p>
                    <div class="codelisting" id="_code-degrade_gracefully" data-tralics-id="uid1357"
                      data-number="12.36">
                      <div class="heading"><span class="number">Listing 12.36:</span>
                        <span class="description">Configuration needed for
                          graceful degradation of form submission.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">config/application.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="no">File</span><span
class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span
class="s1">'../boot'</span><span class="p">,</span> <span class="bp">__FILE__</span><span
class="p">)</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="o">.</span>
<span class="k">module</span> <span class="nn">SampleApp</span>
  <span class="k">class</span> <span class="nc">Application</span> <span class="o">&lt;</span> <span
class="no">Rails</span><span class="o">::</span><span class="no">Application</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="o">.</span>
    <span class="c1"># Include the authenticity token in remote forms.</span>
<span class="hll">    <span class="n">config</span><span class="o">.</span><span
class="n">action_view</span><span class="o">.</span><span class="n">embed_authenticity_token_in_remote_forms</span> <span
class="o">=</span> <span class="kp">true</span>
</span>  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>On the other hand, we have yet to respond properly when
                      JavaScript is enabled.<span class="intersentencespace"></span>
                      In the case of an Ajax request, Rails automatically calls
                      a <em>JavaScript embedded Ruby</em> (<code>.js.erb</code>)
                      file with the same name as the action, i.e., <code>create.js.erb</code>
                      or <code>destroy.js.erb</code>.<span class="intersentencespace"></span>
                      As you might guess, such files allow us to mix JavaScript
                      and embedded Ruby to perform actions on the current page.<span
                        class="intersentencespace"></span> It is these files
                      that we need to create and edit in order to update the
                      user profile page upon being followed or unfollowed.</p>
                    <p>Inside a JS-ERb file, Rails automatically provides the <a
                        href="http://jquery.com/" target="_blank">jQuery</a>
                      JavaScript helpers to manipulate the page using the <a href="http://www.w3.org/DOM/"
                        target="_blank">Document Object Model (DOM)</a>.<span class="intersentencespace"></span>
                      The jQuery library (which we saw briefly in <a href="#sec-image_validation"
                        class="hyperref">Section&nbsp;<span class="ref">11.4.2</span></a>)
                      provides a large number of methods for manipulating the
                      DOM, but here we will need only two.<span class="intersentencespace"></span>
                      First, we will need to know about the dollar-sign syntax
                      to access a DOM element based on its unique CSS&nbsp;id.<span
                        class="intersentencespace"></span> For example, to
                      manipulate the <code>follow_form</code> element, we will
                      use the syntax</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nx">$</span><span class="p">(</span><span
class="s2">"#follow_form"</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>(Recall from <a href="#code-follow_form_partial" class="hyperref">Listing&nbsp;<span
                          class="ref">12.19</span></a> that this is a <code>div</code>
                      that wraps the form, not the form itself.)<span class="intersentencespace"></span>
                      This syntax, inspired by CSS, uses the&nbsp;<code>#</code>
                      symbol to indicate a CSS&nbsp;id.<span class="intersentencespace"></span>
                      As you might guess, jQuery, like CSS, uses a dot&nbsp;<code>.</code>
                      to manipulate CSS classes.</p>
                    <p>The second method we’ll need is <code>html</code>, which
                      updates the HTML inside the relevant element with the
                      contents of its argument.<span class="intersentencespace"></span>
                      For example, to replace the entire follow form with the
                      string <code>"foobar"</code>, we would write</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nx">$</span><span class="p">(</span><span
class="s2">"#follow_form"</span><span class="p">).</span><span class="nx">html</span><span
class="p">(</span><span class="s2">"foobar"</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Unlike plain JavaScript files, JS-ERb files also allow
                      the use of embedded Ruby, which we apply in the <code>create.js.erb</code>
                      file to update the follow form with the <code>unfollow</code>
                      partial (which is what should show after a successful
                      following) and update the follower count.<span class="intersentencespace"></span>
                      The result is shown in <a href="#code-create_js_erb" class="hyperref">Listing&nbsp;<span
                          class="ref">12.37</span></a>.<span class="intersentencespace"></span>
                      This uses the <code>escape_javascript</code> method,
                      which is needed to escape out the result when inserting
                      HTML in a JavaScript file.</p>
                    <div class="codelisting" id="_code-create_js_erb" data-tralics-id="uid1358"
                      data-number="12.37">
                      <div class="heading"><span class="number">Listing 12.37:</span>
                        <span class="description">The JavaScript embedded Ruby
                          to create a following relationship.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/relationships/create.js.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nx">$</span><span class="p">(</span><span
class="s2">"#follow_form"</span><span class="p">).</span><span class="nx">html</span><span
class="p">(</span><span class="s2">"&lt;%= escape_javascript(render('users/unfollow')) %&gt;"</span><span
class="p">)</span>
<span class="nx">$</span><span class="p">(</span><span class="s2">"#followers"</span><span
class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s1">'&lt;%= @user.followers.count %&gt;'</span><span
class="p">)</span>
</pre></div>
                      </div>
                    </div>
                    <p>The <code>destroy.js.erb</code> file is analogous (<a href="#code-destroy_js_erb"
                        class="hyperref">Listing&nbsp;<span class="ref">12.38</span></a>).</p>
                    <div class="codelisting" id="_code-destroy_js_erb" data-tralics-id="uid1359"
                      data-number="12.38">
                      <div class="heading"><span class="number">Listing 12.38:</span>
                        <span class="description">The Ruby JavaScript (RJS) to
                          destroy a following relationship.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/views/relationships/destroy.js.erb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nx">$</span><span class="p">(</span><span
class="s2">"#follow_form"</span><span class="p">).</span><span class="nx">html</span><span
class="p">(</span><span class="s2">"&lt;%= escape_javascript(render('users/follow')) %&gt;"</span><span
class="p">)</span>
<span class="nx">$</span><span class="p">(</span><span class="s2">"#followers"</span><span
class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s1">'&lt;%= @user.followers.count %&gt;'</span><span
class="p">)</span>
</pre></div>
                      </div>
                    </div>
                    <p>With that, you should navigate to a user profile page and
                      verify that you can follow and unfollow without a page
                      refresh.</p>
                  </div>
                  <div id="_sec-following_tests" data-tralics-id="uid1360" class="subsection"
                    data-number="12.2.6">
                    <h3><a href="#sec-following_tests" class="heading hyperref"><span
                          class="number">12.2.6 </span>Following tests</a></h3>
                    <p>Now that the follow buttons are working, we’ll write some
                      simple tests to prevent regressions.<span class="intersentencespace"></span>
                      To follow a user, we post to the relationships path and
                      verify that the number of followed users increases
                      by&nbsp;1:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
  <span class="n">post</span> <span class="n">relationships_path</span><span class="p">,</span> <span
class="ss">followed_id</span><span class="p">:</span> <span class="vi">@other</span><span
class="o">.</span><span class="n">id</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>This tests the standard implementation, but testing the
                      Ajax version is almost the same, with <code>xhr :post</code>
                      in place of plain <code>post</code>:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
  <span class="n">xhr</span> <span class="ss">:post</span><span class="p">,</span> <span
class="n">relationships_path</span><span class="p">,</span> <span class="ss">followed_id</span><span
class="p">:</span> <span class="vi">@other</span><span class="o">.</span><span class="n">id</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>This uses the <code>xhr</code> method (for
                      XmlHttpRequest) to issue an Ajax request, which causes the
                      <code>respond_to</code> block in <a href="#code-relationships_controller_ajax"
                        class="hyperref">Listing&nbsp;<span class="ref">12.35</span></a>
                      to execute the proper JavaScript method.</p>
                    <p>The same parallel structure applies to deleting users,
                      with <code>delete</code> instead of <code>post</code>.<span
                        class="intersentencespace"></span> Here we check that
                      the followed user count goes down by&nbsp;1 and include
                      the relationship and followed user’s id:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
  <span class="n">delete</span> <span class="n">relationship_path</span><span class="p">(</span><span
class="n">relationship</span><span class="p">),</span>
         <span class="ss">relationship</span><span class="p">:</span> <span class="n">relationship</span><span
class="o">.</span><span class="n">id</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>and</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
  <span class="n">xhr</span> <span class="ss">:delete</span><span class="p">,</span> <span
class="n">relationship_path</span><span class="p">(</span><span class="n">relationship</span><span
class="p">),</span>
               <span class="ss">relationship</span><span class="p">:</span> <span
class="n">relationship</span><span class="o">.</span><span class="n">id</span>
<span class="k">end</span>
</pre></div>
                    </div>
                    <p>Putting the two cases together gives the tests in <a href="#code-follow_button_tests"
                        class="hyperref">Listing&nbsp;<span class="ref">12.39</span></a>.</p>
                    <div class="codelisting" id="_code-follow_button_tests" data-tralics-id="uid1361"
                      data-number="12.39">
                      <div class="heading"><span class="number">Listing 12.39:</span>
                        <span class="description">Tests for the follow and
                          unfollow buttons.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">test/integration/following_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">FollowingTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span>  <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
<span class="hll">    <span class="vi">@other</span> <span class="o">=</span> <span
class="n">users</span><span class="p">(</span><span class="ss">:archer</span><span
class="p">)</span>
</span>    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"should follow a user the standard way"</span> <span
class="k">do</span>
    <span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">post</span> <span class="n">relationships_path</span><span
class="p">,</span> <span class="ss">followed_id</span><span class="p">:</span> <span
class="vi">@other</span><span class="o">.</span><span class="n">id</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should follow a user with Ajax"</span> <span
class="k">do</span>
    <span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="mi">1</span> <span class="k">do</span>
      <span class="n">xhr</span> <span class="ss">:post</span><span class="p">,</span> <span
class="n">relationships_path</span><span class="p">,</span> <span class="ss">followed_id</span><span
class="p">:</span> <span class="vi">@other</span><span class="o">.</span><span class="n">id</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should unfollow a user the standard way"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">follow</span><span
class="p">(</span><span class="vi">@other</span><span class="p">)</span>
    <span class="n">relationship</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">active_relationships</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="ss">followed_id</span><span
class="p">:</span> <span class="vi">@other</span><span class="o">.</span><span class="n">id</span><span
class="p">)</span>
    <span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
      <span class="n">delete</span> <span class="n">relationship_path</span><span
class="p">(</span><span class="n">relationship</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>

  <span class="nb">test</span> <span class="s2">"should unfollow a user with Ajax"</span> <span
class="k">do</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">follow</span><span
class="p">(</span><span class="vi">@other</span><span class="p">)</span>
    <span class="n">relationship</span> <span class="o">=</span> <span class="vi">@user</span><span
class="o">.</span><span class="n">active_relationships</span><span class="o">.</span><span
class="n">find_by</span><span class="p">(</span><span class="ss">followed_id</span><span
class="p">:</span> <span class="vi">@other</span><span class="o">.</span><span class="n">id</span><span
class="p">)</span>
    <span class="n">assert_difference</span> <span class="s1">'@user.following.count'</span><span
class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="k">do</span>
      <span class="n">xhr</span> <span class="ss">:delete</span><span class="p">,</span> <span
class="n">relationship_path</span><span class="p">(</span><span class="n">relationship</span><span
class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>At this point, the tests should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1362" data-tralics-id="uid1362"
                      data-number="12.40">
                      <div class="heading"><span class="number">Listing 12.40:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                </div>
                <div id="_sec-the_status_feed" data-tralics-id="cid82" class="section"
                  data-number="12.3">
                  <h2><a href="#sec-the_status_feed" class="heading hyperref"><span
                        class="number">12.3 </span>The status feed</a></h2>
                  <p>We come now to the pinnacle of our sample application: the
                    status feed of microposts.<span class="intersentencespace"></span>
                    Appropriately, this section contains some of the most
                    advanced material in the entire tutorial.<span class="intersentencespace"></span>
                    The full status feed builds on the proto-feed from <a href="#sec-a_proto_feed"
                      class="hyperref">Section&nbsp;<span class="ref">11.3.3</span></a>
                    by assembling an array of the microposts from the users
                    being followed by the current user, along with the current
                    user’s own microposts.<span class="intersentencespace"></span>
                    Throughout this section, we’ll proceed through a series of
                    feed implementations of increasing sophistication.<span class="intersentencespace"></span>
                    To accomplish this, we will need some fairly advanced Rails,
                    Ruby, and even SQL programming techniques.</p>
                  <p>Because of the heavy lifting ahead, it’s especially
                    important to review where we’re going.<span class="intersentencespace"></span>
                    A recap of the final status feed, shown in <a href="#fig-page_flow_home_page_feed_mockup"
                      class="hyperref">Figure&nbsp;<span class="ref">12.5</span></a>,
                    appears again in <a href="#fig-home_page_feed_mockup" class="hyperref">Figure&nbsp;<span
                        class="ref">12.21</span></a>.</p>
                  <div class="center figure" id="_fig-home_page_feed_mockup" data-tralics-id="uid1363"
                    data-number="12.21">
                    <div class="graphics image box"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/page_flow_home_page_feed_mockup_bootstrap.png"
                        alt="images/figures/page_flow_home_page_feed_mockup_bootstrap"></div>
                    <div class="caption"><span class="header">Figure 12.21: </span><span
                        class="description">A mockup of a user’s Home page with
                        a status feed. </span></div>
                  </div>
                  <div id="_sec-motivation_and_strategy" data-tralics-id="uid1364"
                    class="subsection" data-number="12.3.1">
                    <h3><a href="#sec-motivation_and_strategy" class="heading hyperref"><span
                          class="number">12.3.1 </span>Motivation and strategy</a></h3>
                    <p>The basic idea behind the feed is simple.<span class="intersentencespace"></span>
                      <a href="#fig-user_feed" class="hyperref">Figure&nbsp;<span
                          class="ref">12.22</span></a> shows a sample <code>microposts</code>
                      database table and the resulting feed.<span class="intersentencespace"></span>
                      The purpose of a feed is to pull out the microposts whose
                      user ids correspond to the users being followed by the
                      current user (and the current user itself), as indicated
                      by the arrows in the diagram.</p>
                    <div class="center figure" id="_fig-user_feed" data-tralics-id="uid1365"
                      data-number="12.22">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/user_feed.png"
                          alt="images/figures/user_feed"></div>
                      <div class="caption"><span class="header">Figure 12.22: </span><span
                          class="description">The feed for a user (id 1)
                          following users with ids 2, 7, 8, and 10. </span></div>
                    </div>
                    <p>Although we don’t yet know how to implement the feed, the
                      tests are relatively straightforward, so (following the
                      guidelines in <a href="#aside-when_to_test" class="hyperref">Box&nbsp;<span
                          class="ref">3.3</span></a>) we’ll write them first.<span
                        class="intersentencespace"></span> The key is to check
                      all three requirements for the feed: microposts for both
                      followed users and the user itself should be included in
                      the feed, but a post from an <em>unfollowed</em> user
                      should not be included.<span class="intersentencespace"></span>
                      Based on the fixtures in <a href="#code-users_fixtures_extra_users"
                        class="hyperref">Listing&nbsp;<span class="ref">9.43</span></a>
                      and <a href="#code-add_micropost_different_owner" class="hyperref">Listing&nbsp;<span
                          class="ref">11.51</span></a>, this means that Michael
                      should see Lana’s posts and his own posts, but not
                      Archer’s posts.<span class="intersentencespace"></span>
                      Converting these requirements to assertions and recalling
                      that the <code>feed</code> is in the User model (<a href="#code-proto_status_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">11.44</span></a>)
                      gives the updated User model test shown in <a href="#code-full_feed_test"
                        class="hyperref">Listing&nbsp;<span class="ref">12.41</span></a>.</p>
                    <div class="codelisting" id="_code-full_feed_test" data-tralics-id="uid1366"
                      data-number="12.41">
                      <div class="heading"><span class="number">Listing 12.41:</span>
                        <span class="description">A test for the status feed.<span
                            class="intersentencespace"></span> <span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">test/models/user_test.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">UserTest</span> <span class="o">&lt;</span> <span
class="no">ActiveSupport</span><span class="o">::</span><span class="no">TestCase</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"feed should have the right posts"</span> <span
class="k">do</span>
    <span class="n">michael</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">archer</span>  <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:archer</span><span class="p">)</span>
    <span class="n">lana</span>    <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:lana</span><span class="p">)</span>
    <span class="c1"># Posts from followed user</span>
    <span class="n">lana</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">post_following</span><span class="o">|</span>
      <span class="n">assert</span> <span class="n">michael</span><span class="o">.</span><span
class="n">feed</span><span class="o">.</span><span class="n">include?</span><span
class="p">(</span><span class="n">post_following</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="c1"># Posts from self</span>
    <span class="n">michael</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">post_self</span><span class="o">|</span>
      <span class="n">assert</span> <span class="n">michael</span><span class="o">.</span><span
class="n">feed</span><span class="o">.</span><span class="n">include?</span><span
class="p">(</span><span class="n">post_self</span><span class="p">)</span>
    <span class="k">end</span>
    <span class="c1"># Posts from unfollowed user</span>
    <span class="n">archer</span><span class="o">.</span><span class="n">microposts</span><span
class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span
class="n">post_unfollowed</span><span class="o">|</span>
      <span class="n">assert_not</span> <span class="n">michael</span><span class="o">.</span><span
class="n">feed</span><span class="o">.</span><span class="n">include?</span><span
class="p">(</span><span class="n">post_unfollowed</span><span class="p">)</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>Of course, the current implementation is just a
                      proto-feed, so the new test is initially <span style="color: red"><span
                          class="sc"></span><span class="sc"><strong>red</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1367" data-tralics-id="uid1367"
                      data-number="12.42">
                      <div class="heading"><span class="number">Listing 12.42:</span>
                        <span class="description"><span style="color: red"><span
                              class="sc"></span><span class="sc"><strong>red</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                  </div>
                  <div id="_sec-a_first_feed_implementation" data-tralics-id="uid1368"
                    class="subsection" data-number="12.3.2">
                    <h3><a href="#sec-a_first_feed_implementation" class="heading hyperref"><span
                          class="number">12.3.2 </span>A first feed
                        implementation</a></h3>
                    <p>With the status feed design requirements captured in the
                      test from <a href="#code-full_feed_test" class="hyperref">Listing
                        <span class="ref">12.41</span></a>, we’re ready to start
                      writing the feed.<span class="intersentencespace"></span>
                      Since the final feed implementation is rather intricate,
                      we’ll build up to it by introducing one piece at a time.<span
                        class="intersentencespace"></span> The first step is to
                      think of the kind of query we’ll need.<span class="intersentencespace"></span>
                      We need to select all the microposts from the <code>microposts</code>
                      table with ids corresponding to the users being followed
                      by a given user (or the user itself).<span class="intersentencespace"></span>
                      We might write this schematically as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">SELECT</span> <span class="o">*</span> <span
class="k">FROM</span> <span class="n">microposts</span>
<span class="k">WHERE</span> <span class="n">user_id</span> <span class="k">IN</span> <span
class="p">(</span><span class="o">&lt;</span><span class="n">list</span> <span class="k">of</span> <span
class="n">ids</span><span class="o">&gt;</span><span class="p">)</span> <span class="k">OR</span> <span
class="n">user_id</span> <span class="o">=</span> <span class="o">&lt;</span><span
class="k">user</span> <span class="n">id</span><span class="o">&gt;</span>
</pre></div>
                    </div>
                    <p>In writing this code, we’ve guessed that SQL supports an
                      <code>IN</code> keyword that allows us to test for set
                      inclusion.<span class="intersentencespace"></span>
                      (Happily, it does.)</p>
                    <p>Recall from the proto-feed in <a href="#sec-a_proto_feed"
                        class="hyperref">Section&nbsp;<span class="ref">11.3.3</span></a>
                      that Active Record uses the <code>where</code> method to
                      accomplish the kind of select shown above, as illustrated
                      in <a href="#code-proto_status_feed" class="hyperref">Listing&nbsp;<span
                          class="ref">11.44</span></a>.<span class="intersentencespace"></span>
                      There, our select was very simple; we just picked out all
                      the microposts with user id corresponding to the current
                      user:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id = ?"</span><span
class="p">,</span> <span class="nb">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>Here, we expect it to be more complicated, something like
                      this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id IN (?) OR user_id = ?"</span><span
class="p">,</span> <span class="n">following_ids</span><span class="p">,</span> <span
class="nb">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>We see from these conditions that we’ll need an array of
                      ids corresponding to the users being followed.<span class="intersentencespace"></span>
                      One way to do this is to use Ruby’s <code>map</code>
                      method, available on any “enumerable” object, i.e., any
                      object (such as an Array or a Hash) that consists of a
                      collection of elements.<sup id="_cha-12_footnote-ref-9" class="footnote"><a
                          href="#cha-12_footnote-9">9</a></sup><span class="intersentencespace"></span>
                      We saw an example of this method in <a href="#sec-blocks"
                        class="hyperref">Section&nbsp;<span class="ref">4.3.2</span></a>;
                      as another example, we’ll use <code>map</code> to convert
                      an array of integers to an array of strings:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="go">$ rails console</span>
<span class="gp">&gt;&gt; </span><span class="o">[</span><span class="mi">1</span><span
class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span
class="p">,</span> <span class="mi">4</span><span class="o">].</span><span class="n">map</span> <span
class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span
class="n">i</span><span class="o">.</span><span class="n">to_s</span> <span class="p">}</span>
<span class="go">=&gt; ["1", "2", "3", "4"]</span>
</pre></div>
                    </div>
                    <p>Situations like the one illustrated above, where the same
                      method gets called on each element in the collection, are
                      common enough that there’s a shorthand notation for it
                      (seen briefly in <a href="#sec-blocks" class="hyperref">Section&nbsp;<span
                          class="ref">4.3.2</span></a>) that uses an <em>ampersand</em>&nbsp;<code>&amp;</code>
                      and a symbol corresponding to the method:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="o">[</span><span
class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span
class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">].</span><span
class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span
class="p">)</span>
<span class="go">=&gt; ["1", "2", "3", "4"]</span>
</pre></div>
                    </div>
                    <p>Using the <code>join</code> method (<a href="#sec-arrays_and_ranges"
                        class="hyperref">Section&nbsp;<span class="ref">4.3.1</span></a>),
                      we can create a string composed of the ids by joining them
                      on comma-space :</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="o">[</span><span
class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span
class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="o">].</span><span
class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span
class="p">)</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span
class="s1">', '</span><span class="p">)</span>
<span class="go">=&gt; "1, 2, 3, 4"</span>
</pre></div>
                    </div>
                    <p>We can use the above method to construct the necessary
                      array of followed user ids by calling&nbsp;<code>id</code>
                      on each element in <code>user.following</code>.<span class="intersentencespace"></span>
                      For example, for the first user in the database this array
                      appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">following</span><span
class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span
class="ss">:id</span><span class="p">)</span>
<span class="go">=&gt; [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,</span>
<span class="go">24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,</span>
<span class="go">43, 44, 45, 46, 47, 48, 49, 50, 51]</span>
</pre></div>
                    </div>
                    <p>In fact, because this sort of construction is so useful,
                      Active Record provides it by default:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">following_ids</span>
<span class="go">=&gt; [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,</span>
<span class="go">24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,</span>
<span class="go">43, 44, 45, 46, 47, 48, 49, 50, 51]</span>
</pre></div>
                    </div>
                    <p>Here the <code>following_ids</code> method is
                      synthesized by Active Record based on the <code>has_many
                        :following</code> association (<a href="#code-has_many_following_through_active_relationships"
                        class="hyperref">Listing&nbsp;<span class="ref">12.8</span></a>);
                      the result is that we need only append <code>_ids</code>
                      to the association name to get the ids corresponding to
                      the <code>user.following</code> collection.<span class="intersentencespace"></span>
                      A string of followed user ids then appears as follows:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="gp">&gt;&gt; </span><span class="no">User</span><span
class="o">.</span><span class="n">first</span><span class="o">.</span><span class="n">following_ids</span><span
class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">', '</span><span
class="p">)</span>
<span class="go">=&gt; "4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,</span>
<span class="go">24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42,</span>
<span class="go">43, 44, 45, 46, 47, 48, 49, 50, 51"</span>
</pre></div>
                    </div>
                    <p>When inserting into an SQL string, though, you don’t need
                      to do this; the <code>?</code> interpolation takes care
                      of it for you (and in fact eliminates some
                      database-dependent incompatibilities).<span class="intersentencespace"></span>
                      This means we can use <code>following_ids</code> by
                      itself.</p>
                    <p>As a result, the initial guess of</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id IN (?) OR user_id = ?"</span><span
class="p">,</span> <span class="n">following_ids</span><span class="p">,</span> <span
class="nb">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>actually works!<span class="intersentencespace"></span>
                      The result appears in <a href="#code-initial_working_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">12.43</span></a>.</p>
                    <div class="codelisting" id="_code-initial_working_feed" data-tralics-id="uid1370"
                      data-number="12.43">
                      <div class="heading"><span class="number">Listing 12.43:</span>
                        <span class="description">The initial working feed.<span
                            class="intersentencespace"></span> <span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span><span class="break"></span>
                          <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns true if a password reset has expired.</span>
  <span class="k">def</span> <span class="nf">password_reset_expired?</span>
    <span class="n">reset_sent_at</span> <span class="o">&lt;</span> <span class="mi">2</span><span
class="o">.</span><span class="n">hours</span><span class="o">.</span><span class="n">ago</span>
  <span class="k">end</span>

  <span class="c1"># Returns a user's status feed.</span>
  <span class="k">def</span> <span class="nf">feed</span>
<span class="hll">    <span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id IN (?) OR user_id = ?"</span><span
class="p">,</span> <span class="n">following_ids</span><span class="p">,</span> <span
class="nb">id</span><span class="p">)</span>
</span>  <span class="k">end</span>

  <span class="c1"># Follows a user.</span>
  <span class="k">def</span> <span class="nf">follow</span><span class="p">(</span><span
class="n">other_user</span><span class="p">)</span>
    <span class="n">active_relationships</span><span class="o">.</span><span class="n">create</span><span
class="p">(</span><span class="ss">followed_id</span><span class="p">:</span> <span
class="n">other_user</span><span class="o">.</span><span class="n">id</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>The test suite should be <span style="color: ForestGreen"><span
                          class="sc"></span><span class="sc"><strong>green</strong></span><span
                          class="sc"></span></span>:</p>
                    <div class="codelisting" id="_uid1371" data-tralics-id="uid1371"
                      data-number="12.44">
                      <div class="heading"><span class="number">Listing 12.44:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>In some applications, this initial implementation might
                      be good enough for most practical purposes, but <a href="#code-initial_working_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">12.43</span></a>
                      isn’t the final implementation; see if you can make a
                      guess about why not before moving on to the next section.<span
                        class="intersentencespace"></span> (<em>Hint</em>: What
                      if a user is following 5000 other users?)</p>
                  </div>
                  <div id="_sec-scopes_subselects_and_a_lambda" data-tralics-id="uid1372"
                    class="subsection" data-number="12.3.3">
                    <h3><a href="#sec-scopes_subselects_and_a_lambda" class="heading hyperref"><span
                          class="number">12.3.3 </span>Subselects</a></h3>
                    <p>As hinted at in the last section, the feed implementation
                      in <a href="#sec-a_first_feed_implementation" class="hyperref">Section&nbsp;<span
                          class="ref">12.3.2</span></a> doesn’t scale well when
                      the number of microposts in the feed is large, as would
                      likely happen if a user were following, say, 5000 other
                      users.<span class="intersentencespace"></span> In this
                      section, we’ll reimplement the status feed in a way that
                      scales better with the number of followed users.</p>
                    <p>The problem with the code in <a href="#sec-a_first_feed_implementation"
                        class="hyperref">Section&nbsp;<span class="ref">12.3.2</span></a>
                      is that <code>following_ids</code> pulls <em>all</em>
                      the followed users’ ids into memory, and creates an array
                      the full length of the followed users array.<span class="intersentencespace"></span>
                      Since the condition in <a href="#code-initial_working_feed"
                        class="hyperref">Listing&nbsp;<span class="ref">12.43</span></a>
                      actually just checks inclusion in a set, there must be a
                      more efficient way to do this, and indeed SQL is optimized
                      for just such set operations.<span class="intersentencespace"></span>
                      The solution involves pushing the finding of followed user
                      ids into the database using a <em>subselect</em>.</p>
                    <p>We’ll start by refactoring the feed with the slightly
                      modified code in <a href="#code-feed_second_cut" class="hyperref">Listing&nbsp;<span
                          class="ref">12.45</span></a>.</p>
                    <div class="codelisting" id="_code-feed_second_cut" data-tralics-id="uid1373"
                      data-number="12.45">
                      <div class="heading"><span class="number">Listing 12.45:</span>
                        <span class="description">Using key-value pairs in the
                          feed’s <code>where</code> method.<span class="intersentencespace"></span>
                          <span style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns a user's status feed.</span>
  <span class="k">def</span> <span class="nf">feed</span>
<span class="hll">    <span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id IN (:following_ids) OR user_id = :user_id"</span><span
class="p">,</span>
</span><span class="hll">                    <span class="ss">following_ids</span><span
class="p">:</span> <span class="n">following_ids</span><span class="p">,</span> <span
class="ss">user_id</span><span class="p">:</span> <span class="nb">id</span><span
class="p">)</span>
</span>  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>As preparation for the next step, we have replaced</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id IN (?) OR user_id = ?"</span><span
class="p">,</span> <span class="n">following_ids</span><span class="p">,</span> <span
class="nb">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>with the equivalent</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="no">Micropost</span><span class="o">.</span><span
class="n">where</span><span class="p">(</span><span class="s2">"user_id IN (:following_ids) OR user_id = :user_id"</span><span
class="p">,</span>
                <span class="ss">following_ids</span><span class="p">:</span> <span
class="n">following_ids</span><span class="p">,</span> <span class="ss">user_id</span><span
class="p">:</span> <span class="nb">id</span><span class="p">)</span>
</pre></div>
                    </div>
                    <p>The question mark syntax is fine, but when we want the <em>same</em>
                      variable inserted in more than one place, the second
                      syntax is more convenient.</p>
                    <p>The above discussion implies that we will be adding a <em>second</em>
                      occurrence of <code>user_id</code> in the SQL query.<span
                        class="intersentencespace"></span> In particular, we can
                      replace the Ruby code</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">following_ids</span>
</pre></div>
                    </div>
                    <p>with the SQL snippet</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="n">following_ids</span> <span class="o">=</span> <span
class="s2">"SELECT followed_id FROM relationships</span>
<span class="s2">                 WHERE  follower_id = :user_id"</span>
</pre></div>
                    </div>
                    <p>This code contains an SQL subselect, and internally the
                      entire select for user&nbsp;1 would look something like
                      this:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="k">SELECT</span> <span class="o">*</span> <span
class="k">FROM</span> <span class="n">microposts</span>
<span class="k">WHERE</span> <span class="n">user_id</span> <span class="k">IN</span> <span
class="p">(</span><span class="k">SELECT</span> <span class="n">followed_id</span> <span
class="k">FROM</span> <span class="n">relationships</span>
                  <span class="k">WHERE</span>  <span class="n">follower_id</span> <span
class="o">=</span> <span class="mi">1</span><span class="p">)</span>
      <span class="k">OR</span> <span class="n">user_id</span> <span class="o">=</span> <span
class="mi">1</span>
</pre></div>
                    </div>
                    <p>This subselect arranges for all the set logic to be
                      pushed into the database, which is more efficient.</p>
                    <p>With this foundation, we are ready for a more efficient
                      feed implementation, as seen in <a href="#code-feed_final"
                        class="hyperref">Listing&nbsp;<span class="ref">12.46</span></a>.<span
                        class="intersentencespace"></span> Note that, because it
                      is now raw SQL, the <code>following_ids</code> string is
                      <em>interpolated</em>, not escaped.</p>
                    <div class="codelisting" id="_code-feed_final" data-tralics-id="uid1374"
                      data-number="12.46">
                      <div class="heading"><span class="number">Listing 12.46:</span>
                        <span class="description">The final implementation of
                          the feed.<span class="intersentencespace"></span> <span
                            style="color: ForestGreen"><span class="sc"></span><span
                              class="sc"><strong>green</strong></span><span class="sc"></span></span><span
                            class="break"></span> <span class="filepath">app/models/user.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">User</span> <span
class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span
class="no">Base</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="c1"># Returns a user's status feed.</span>
  <span class="k">def</span> <span class="nf">feed</span>
    <span class="n">following_ids</span> <span class="o">=</span> <span class="s2">"SELECT followed_id FROM relationships</span>
<span class="s2">                     WHERE  follower_id = :user_id"</span>
    <span class="no">Micropost</span><span class="o">.</span><span class="n">where</span><span
class="p">(</span><span class="s2">"user_id IN (</span><span class="si">#{</span><span
class="n">following_ids</span><span class="si">}</span><span class="s2">)</span>
<span class="s2">                     OR user_id = :user_id"</span><span class="p">,</span> <span
class="ss">user_id</span><span class="p">:</span> <span class="nb">id</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <p>This code has a formidable combination of Rails, Ruby,
                      and SQL, but it does the job, and does it well:</p>
                    <div class="codelisting" id="_uid1375" data-tralics-id="uid1375"
                      data-number="12.47">
                      <div class="heading"><span class="number">Listing 12.47:</span>
                        <span class="description"><span style="color: ForestGreen"><span
                              class="sc"></span><span class="sc"><strong>green</strong></span><span
                              class="sc"></span></span></span> </div>
                      <div class="code">
                        <div class="highlight">
                          <pre>$ bundle exec rake test
</pre></div>
                      </div>
                    </div>
                    <p>Of course, even the subselect won’t scale forever.<span class="intersentencespace"></span>
                      For bigger sites, you would probably need to generate the
                      feed asynchronously using a background job, but such
                      scaling subtleties are beyond the scope of this tutorial.</p>
                    <p>With the code in <a href="#code-feed_final" class="hyperref">Listing&nbsp;<span
                          class="ref">12.46</span></a>, our status feed is now
                      complete.<span class="intersentencespace"></span> Recall
                      from <a href="#sec-a_proto_feed" class="hyperref">Section&nbsp;<span
                          class="ref">11.3.3</span></a> that the Home page
                      already includes the feed; as a reminder, the <code>home</code>
                      action appears again in <a href="#code-real_feed_instance_variable"
                        class="hyperref">Listing&nbsp;<span class="ref">12.48</span></a>.<span
                        class="intersentencespace"></span> In <a href="#cha-user_microposts"
                        class="hyperref">Chapter&nbsp;<span class="ref">11</span></a>,
                      the result was only a proto-feed (<a href="#fig-home_with_proto_feed"
                        class="hyperref">Figure&nbsp;<span class="ref">11.14</span></a>),
                      but with the implementation in <a href="#code-feed_final"
                        class="hyperref">Listing&nbsp;<span class="ref">12.46</span></a>
                      as seen in <a href="#fig-home_page_with_feed" class="hyperref">Figure&nbsp;<span
                          class="ref">12.23</span></a> the Home page now shows
                      the full feed.</p>
                    <div class="codelisting" id="_code-real_feed_instance_variable"
                      data-tralics-id="uid1376" data-number="12.48">
                      <div class="heading"><span class="number">Listing 12.48:</span>
                        <span class="description">The <code>home</code> action
                          with a paginated feed.<span class="intersentencespace"></span>
                          <span class="break"></span> <span class="filepath">app/controllers/static_pages_controller.rb</span></span>
                      </div>
                      <div class="code">
                        <div class="highlight">
                          <pre><span class="k">class</span> <span class="nc">StaticPagesController</span> <span
class="o">&lt;</span> <span class="no">ApplicationController</span>

  <span class="k">def</span> <span class="nf">home</span>
    <span class="k">if</span> <span class="n">logged_in?</span>
      <span class="vi">@micropost</span>  <span class="o">=</span> <span class="n">current_user</span><span
class="o">.</span><span class="n">microposts</span><span class="o">.</span><span
class="n">build</span>
<span class="hll">      <span class="vi">@feed_items</span> <span class="o">=</span> <span
class="n">current_user</span><span class="o">.</span><span class="n">feed</span><span
class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span
class="o">]</span><span class="p">)</span>
</span>    <span class="k">end</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
<span class="k">end</span>
</pre></div>
                      </div>
                    </div>
                    <div class="center figure" id="_fig-home_page_with_feed" data-tralics-id="uid1377"
                      data-number="12.23">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/home_page_with_feed_3rd_edition.png"
                          alt="images/figures/home_page_with_feed_3rd_edition"></div>
                      <div class="caption"><span class="header">Figure 12.23: </span><span
                          class="description">The Home page with a working
                          status feed. </span></div>
                    </div>
                    <p>At this point, we’re ready to merge our changes into the
                      master branch:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ bundle exec rake test
$ git add -A
$ git commit -m "Add user following"
$ git checkout master
$ git merge following-users
</pre></div>
                    </div>
                    <p>We can then push the code to the remote repository and
                      deploy the application to production:</p>
                    <div class="code">
                      <div class="highlight">
                        <pre>$ git push
$ git push heroku
$ heroku pg:reset DATABASE
$ heroku run rake db:migrate
$ heroku run rake db:seed
</pre></div>
                    </div>
                    <p>The result is a working status feed on the live Web (<a href="#fig-live_status_feed"
                        class="hyperref">Figure&nbsp;<span class="ref">12.24</span></a>).</p>
                    <div class="center figure" id="_fig-live_status_feed" data-tralics-id="uid1378"
                      data-number="12.24">
                      <div class="graphics image"><img src="./Single%20Page%20%20%20Ruby%20on%20Rails%20Tutorial%20%283rd%20Ed.%29%20%20%20Softcover.io_files/live_status_feed.png"
                          alt="images/figures/live_status_feed"></div>
                      <div class="caption"><span class="header">Figure 12.24: </span><span
                          class="description">A working status feed on the live
                          Web. </span></div>
                    </div>
                  </div>
                </div>
                <div id="_sec-following_conclusion" data-tralics-id="cid83" class="section"
                  data-number="12.4">
                  <h2><a href="#sec-following_conclusion" class="heading hyperref"><span
                        class="number">12.4 </span>Висновок</a></h2>
                  <p>With the addition of the status feed, we’ve finished the
                    sample application for the <em>Ruby on Rails Tutorial</em>.<span
                      class="intersentencespace"></span> This application
                    includes examples of all the major features of Rails,
                    including models, views, controllers, templates, partials,
                    filters, validations, callbacks, <code>has_many</code>/<code>belongs_to</code>
                    and <code>has_many :through</code> associations, security,
                    testing, and deployment.</p>
                  <p>Despite this impressive list, there is still much to learn
                    about web development.<span class="intersentencespace"></span>
                    As a first step in this process, this section contains some
                    suggestions for further learning.</p>
                  <div id="_sec-guide_to_further_resources" data-tralics-id="uid1379"
                    class="subsection" data-number="12.4.1">
                    <h3><a href="#sec-guide_to_further_resources" class="heading hyperref"><span
                          class="number">12.4.1 </span>Guide to further
                        resources</a></h3>
                    <p>There is a wealth of Rails resources in stores and on the
                      web—indeed, the supply is so rich that it can be
                      overwhelming.<span class="intersentencespace"></span> The
                      good news is that, having gotten this far, you’re ready
                      for almost anything else out there.<span class="intersentencespace"></span>
                      Here are some suggestions for further learning:</p>
                    <ul>
                      <li><a href="http://screencasts.railstutorial.org/" target="_blank">The
                          Ruby on Rails Tutorial screencasts</a>: I offer a
                        full-length screencast course based on this book.<span class="intersentencespace"></span>
                        In addition to covering all the material in the book,
                        the screencasts are filled with tips, tricks, and the
                        kind of see-how-it’s-done demos that are hard to capture
                        in print.<span class="intersentencespace"></span> They
                        are available for purchase through the <a href="http://www.railstutorial.org/"
                          target="_blank">Ruby on Rails Tutorial website</a>. </li>
                      <li><a href="http://railscasts.com/" target="_blank">RailsCasts</a>:
                        I suggest starting by visiting the <a href="http://railscasts.com/episodes/archive"
                          target="_blank">RailsCasts episode archive</a> and
                        clicking on subjects that catch your eye. </li>
                      <li><a href="http://www.gotealeaf.com/railstutorial" target="_blank">Tealeaf
                          Academy</a>: Lots of in-person developer bootcamps
                        have sprung up in recent years, and I recommend looking
                        for one in your area, but <a href="http://www.gotealeaf.com/railstutorial"
                          target="_blank">Tealeaf Academy</a> is available
                        online and so can be taken from anywhere.<span class="intersentencespace"></span>
                        Tealeaf is an especially good choice if you want
                        instructor feedback within the context of a structured
                        curriculum. </li>
                      <li>The <a href="http://turing.io/friends/tutorial" target="_blank">Turing
                          School of Software &amp; Design</a>: a full-time,
                        27-week Ruby/Rails/JavaScript training program in
                        Denver, Colorado.<span class="intersentencespace"></span>
                        Most of their students start with limited programming
                        experience but have the determination and drive needed
                        to pick it up quickly.<span class="intersentencespace"></span>
                        Turing guarantees its students will find a job after
                        graduating or they’ll refund the cost of tuition.<span class="intersentencespace"></span>
                        Rails Tutorial readers can get a <a href="http://turing.io/friends/tutorial"
                          target="_blank">$500 discount</a> using the code <span
                          class="sc">RAILSTUTORIAL500</span>. </li>
                      <li><a href="http://www.thinkful.com/a/railstutorial" target="_blank">Thinkful</a>:
                        An online class that pairs you with a professional
                        engineer as you work through a project-based curriculum.<span
                          class="intersentencespace"></span> Subjects include
                        Ruby on Rails, front-end development, web design, and
                        data science. </li>
                      <li><a href="https://pragmaticstudio.com/refs/railstutorial"
                          target="_blank">Pragmatic Studio</a>: Online Ruby and
                        Rails courses from Mike and Nicole Clark. </li>
                      <li><a href="https://tutorials.railsapps.org/hartl" target="_blank">RailsApps</a>:
                        Instructive sample Rails apps </li>
                      <li><a href="http://mbsy.co/6VQ8l" target="_blank">Code
                          School</a>: A large variety of interactive programming
                        courses </li>
                      <li><a href="https://www.udemy.com/learn-test-driven-development-in-ruby/couponCode=hartl"
                          target="_blank">Bala Paranj’s Test Driven Development
                          in Ruby</a>: A more advanced online course focusing on
                        TDD in pure Ruby </li>
                      <li>Ruby and Rails books: For further Ruby learning, I
                        recommend <a href="http://www.amazon.com/gp/product/1430223634"
                          target="_blank"><em>Beginning Ruby</em></a> by Peter
                        Cooper, <a href="http://www.amazon.com/gp/product/1933988657"
                          target="_blank"><em>The Well-Grounded Rubyist</em></a>
                        by David&nbsp;A. Black, <a href="http://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional-Series/dp/0321584104/"
                          target="_blank"><em>Eloquent Ruby</em></a> by Russ
                        Olsen, and <a href="http://www.amazon.com/gp/product/0672328844"
                          target="_blank"><em>The Ruby Way</em></a> by Hal
                        Fulton.<span class="intersentencespace"></span> For
                        further Rails learning, I recommend <a href="https://pragprog.com/book/rails4/agile-web-development-with-rails-4"
                          target="_blank">Agile Web Development with Rails</a>
                        by Sam Ruby, Dave Thomas, and David Heinemeier Hansson,
                        <a href="http://www.amazon.com/Rails-Edition-Addison-Wesley-Professional-Series/dp/0321944275"
                          target="_blank"><em>The Rails&nbsp;4 Way</em></a> by
                        Obie Fernandez and Kevin Faustino, and <a href="http://www.amazon.com/Rails-4-Action-Ryan-Bigg/dp/1617291099"
                          target="_blank"><em>Rails&nbsp;4 in Action</em></a> by
                        Ryan Bigg and Yehuda Katz. </li>
                    </ul>
                  </div>
                  <div id="_sec-following_users_what_we_learned_in_this_chapter"
                    data-tralics-id="uid1390" class="subsection" data-number="12.4.2">
                    <h3><a href="#sec-following_users_what_we_learned_in_this_chapter"
                        class="heading hyperref"><span class="number">12.4.2 </span>Що
                        ми вивчили в цій главі</a></h3>
                    <ul>
                      <li>Rails’ <code>has_many :through</code> allows the
                        modeling of complicated data relationships.<span class="intersentencespace"></span>
                      </li>
                      <li>The <code>has_many</code> method takes several
                        optional arguments, including the object class name and
                        the foreign key.<span class="intersentencespace"></span>
                      </li>
                      <li>Using <code>has_many</code> and <code>has_many
                          :through</code> with properly chosen class names and
                        foreign keys, we can model both active (following) and
                        passive (being followed) relationships.<span class="intersentencespace"></span>
                      </li>
                      <li>Rails routing supports nested routes.<span class="intersentencespace"></span>
                      </li>
                      <li>The <code>where</code> method is a flexible and
                        powerful way to create database queries.<span class="intersentencespace"></span>
                      </li>
                      <li>Rails supports issuing lower-level SQL queries if
                        needed.<span class="intersentencespace"></span> </li>
                      <li>By putting together everything we’ve learned in this
                        book, we’ve successfully implemented user following with
                        a status feed of microposts from followed users.<span class="intersentencespace"></span>
                      </li>
                    </ul>
                  </div>
                </div>
                <div id="_sec-following_exercises" data-tralics-id="cid84" class="section"
                  data-number="12.5">
                  <h2><a href="#sec-following_exercises" class="heading hyperref"><span
                        class="number">12.5 </span>Вправи</a></h2>
                  <p><em>Note</em>: The <em>Solutions Manual for Вправи</em>,
                    with solutions to every exercise in the <em>Ruby on Rails
                      Tutorial</em> book, is included for free with every
                    purchase at <a href="http://www.railstutorial.org/" target="_blank">www.railstutorial.org</a>.</p>
                  <p>For a suggestion on how to avoid conflicts between Вправи
                    and the main tutorial, see the note on exercise topic
                    branches in <a href="#sec-static_pages_exercises" class="hyperref">Section&nbsp;<span
                        class="ref">3.6</span></a>.</p>
                  <ol>
                    <li>Write tests for the stats on the Home and profile pages.<span
                        class="intersentencespace"></span> <em>Hint</em>: Add
                      to the test in <a href="#code-user_profile_test" class="hyperref">Listing&nbsp;<span
                          class="ref">11.27</span></a>.<span class="intersentencespace"></span>
                      (Why don’t we have to test the stats on the Home page
                      separately?)<span class="intersentencespace"></span> </li>
                    <li>Write a test to verify that the first page of the feed
                      appears on the Home page as required.<span class="intersentencespace"></span>
                      A template appears in <a href="#code-home_feed_test" class="hyperref">Listing&nbsp;<span
                          class="ref">12.49</span></a>.<span class="intersentencespace"></span>
                      Note the use of HTML escaping via <code>CGI.escapeHTML</code>;
                      see if you can figure out why this is necessary.<span class="intersentencespace"></span>
                      (Try removing the escaping and carefully inspect the page
                      source for the micropost content that doesn’t match.)<span
                        class="intersentencespace"></span> </li>
                  </ol>
                  <div class="codelisting" id="_code-home_feed_test" data-tralics-id="uid1400"
                    data-number="12.49">
                    <div class="heading"><span class="number">Listing 12.49:</span>
                      <span class="description">Testing the feed HTML. <span style="color: ForestGreen"><span
                            class="sc"></span><span class="sc"><strong>green</strong></span><span
                            class="sc"></span></span><span class="break"></span>
                        <span class="filepath">test/integration/following_test.rb</span></span>
                    </div>
                    <div class="code">
                      <div class="highlight">
                        <pre><span class="nb">require</span> <span class="s1">'test_helper'</span>

<span class="k">class</span> <span class="nc">FollowingTest</span> <span class="o">&lt;</span> <span
class="no">ActionDispatch</span><span class="o">::</span><span class="no">IntegrationTest</span>

  <span class="k">def</span> <span class="nf">setup</span>
    <span class="vi">@user</span> <span class="o">=</span> <span class="n">users</span><span
class="p">(</span><span class="ss">:michael</span><span class="p">)</span>
    <span class="n">log_in_as</span><span class="p">(</span><span class="vi">@user</span><span
class="p">)</span>
  <span class="k">end</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="o">.</span>
  <span class="nb">test</span> <span class="s2">"feed on Home page"</span> <span
class="k">do</span>
    <span class="n">get</span> <span class="n">root_path</span>
    <span class="vi">@user</span><span class="o">.</span><span class="n">feed</span><span
class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">page</span><span
class="p">:</span> <span class="mi">1</span><span class="p">)</span><span class="o">.</span><span
class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">micropost</span><span
class="o">|</span>
      <span class="n">assert_match</span> <span class="no">CGI</span><span class="o">.</span><span
class="n">escapeHTML</span><span class="p">(</span><span class="no">FILL_IN</span><span
class="p">),</span> <span class="no">FILL_IN</span>
    <span class="k">end</span>
  <span class="k">end</span>
<span class="k">end</span>
</pre></div>
                    </div>
                  </div>
                </div>
                <div id="cha-12_footnotes">
                  <ol class="footnotes">
                    <li id="_cha-12_footnote-1">The new photographs in the
                      mockup tour are from
                      http://www.flickr.com/photos/john_lustig/2518452221/ and
                      https://www.flickr.com/photos/renemensen/9187111340.&nbsp;<a
                        class="arrow" href="#cha-12_footnote-ref-1">↑</a></li>
                    <li id="_cha-12_footnote-2">For simplicity, <a href="#fig-naive_user_has_many_following"
                        class="hyperref">Figure&nbsp;<span class="ref">12.6</span></a>
                      omits the <code>following</code> table’s&nbsp;<code>id</code>
                      column.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-2">↑</a></li>
                    <li id="_cha-12_footnote-3">Thanks to reader Paul Fioravanti
                      for suggesting this terminology.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-3">↑</a></li>
                    <li id="_cha-12_footnote-4">Technically, Rails converts the
                      argument of <code>has_many</code> to a class name using
                      the <code>classify</code> method, which converts <code>"foo_bars"</code>
                      to <code>"FooBar"</code>.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-4">↑</a></li>
                    <li id="_cha-12_footnote-5">Technically, Rails uses the <code>underscore</code>
                      method to convert the class name to an id.<span class="intersentencespace"></span>
                      For example, <code>"FooBar".underscore</code> is <code>"foo_bar"</code>,
                      so the foreign key for a <code>FooBar</code> object would
                      be <code>foo_bar_id</code>.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-5">↑</a></li>
                    <li id="_cha-12_footnote-6">Once you have a lot of
                      experience modeling a particular domain, you can often
                      guess such utility methods in advance, and even when you
                      can’t you’ll often find yourself writing them to make the
                      tests cleaner.<span class="intersentencespace"></span> In
                      this case, though, it’s OK if you wouldn’t have guessed
                      them.<span class="intersentencespace"></span> Software
                      development is usually an iterative process—you write code
                      until it starts getting ugly, and then you refactor it—but
                      for brevity the tutorial presentation is streamlined a
                      bit.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-6">↑</a></li>
                    <li id="_cha-12_footnote-7">For more details on such routing
                      options, see the <a href="http://guides.rubyonrails.org/routing.html"
                        target="_blank">Rails Guides article on “Rails Routing
                        from the Outside In”</a>.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-7">↑</a></li>
                    <li id="_cha-12_footnote-8">Because it is nominally an
                      acronym for <em>asynchronous JavaScript and XML</em>,
                      Ajax is sometimes misspelled “AJAX”, even though the <a href="http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications/"
                        target="_blank">original Ajax article</a> spells it as
                      “Ajax” throughout.&nbsp;<a class="arrow" href="#cha-12_footnote-ref-8">↑</a></li>
                    <li id="_cha-12_footnote-9">The main requirement is that
                      enumerable objects must implement an <code>each</code>
                      method to iterate through the collection.&nbsp;<a class="arrow"
                        href="#cha-12_footnote-ref-9">↑</a></li>
                  </ol>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
