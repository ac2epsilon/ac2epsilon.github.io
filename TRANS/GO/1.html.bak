<!DOCTYPE html>
<!-- saved from url=(0038)http://www.golang-book.com/1/index.htm -->
<html lang="uk">
  <head>
    <meta content="text/html; charset=UTF-8" http-equiv="content-type">
    <title>Вступ до Go | Починаємо Переклад українською - Арсеній Чеботарьов
      - Ніжин 2016</title>
  </head>
  <body>
    <address> Переклад українською - <a href="mailto:ac2epsilon@gmail.com">Арсеній
        Чеботарьов</a> - Ніжин 2016</address>
    <div id="container">
      <div id="book">
        <h1>Починаємо</h1>
        <p>Комп'ютерне програмування є мистецтвом, ремеслом та наукою написання
          програм, що визначають, як комп'ютери будуть поводитись. Ця книга
          навчить вас, як писати комп'ютерні програми з використанням програмної
          мови, розробленої Google, що називається Go.</p>
        <p>Go є мовою програмування загального призначення, з покращеними
          властивостями та чистим синтаксисом. Завдяки її широкій
          розповсюдженості на різноманітних платформах, її міцній, гарно
          документованій бібліотеці, та її фокусуванні на гарних принципах
          розробки програмного забезпечення, Go є ідеальніою мовою для навчання
          в якості вашої першої мови програмування.</p>
        <p>Процес, що ми використовуємо при написанні програм з використанням Go
          (та більшості інших мов програмування) є досить прямолінійним: </p>
        <ul>
          <li>
            <p>Збираємо запити</p>
          </li>
          <li>
            <p>Шукаємо рішення</p>
          </li>
          <li>
            <p>Пишемо вихідний код, щоб застосувати рішення</p>
          </li>
          <li>
            <p>Компілюємо початковий код в виконавчий код&nbsp;</p>
          </li>
          <li>
            <p>Виконуємо та тестуємо програму, щоб впевнитись, що вона працює</p>
          </li>
        </ul>
        <p>Цей процес ітеративний (що значить, що він виконується декілька
          разів) та зазвичай кроки перетинаються. Але перед тим, як ми напишемо
          наш перший код на Go, є декілька попередніх концепцій, що нам треба
          зрозуміти.</p>
        <h2 id="section1">Файли та теки</h2>
        <p>Файл є набором даних, що зберігається як одне ціле, та має ім'я.
          Сучасні операційні системи (як Windows або Mac OSX) містять мільйони
          файлів, що зберігають велику кількість інформації різного типу –
          будь-що, від текстових документів до виконавчих програм, або файлів
          мультімедіа. </p>
        <p>Всі файли зберігаються в однаковий спосіб на комп'ютері: всі вони
          мають ім'я, визначений розмір (обчислений в байтах) та асоційований
          тип. Типово, тип файла визначається розширенням, тобто символами, що
          слідують за останньою крапкою. Наприклад, файл&nbsp;<code>hello.txt</code>
          має розширення&nbsp; <code>txt</code>, що використовуєтся для
          представлення текстових даних. </p>
        <p>Теки (що також називаються каталогами) використовуєтсья для
          групування файлів. Вони також можуть містити інши каталоги. Під
          Windows файли та теки (розміщення) представлені через зворотню
          косу&nbsp; <code>\</code> (backslash), наприклад: <code>C:\Users\john\example.txt</code>.
          <code>example.txt</code> є іменем файлу , що лежить в папці <code>john</code>,
          що лежить в папці <code>Users</code>, що лежить на диску <code>C</code>
          (що представляє первинний фізичний жорсткий диск в Windows). В OSX (та
          більшості інших операційних систем) файл та тека представлені за
          допомогою символа <code>/</code> (коса), наприклад: <code>/Users/john/example.txt</code>.
          Подібно, це <code>example.txt</code>, що міститься папці <code>john</code>,
          що в папці <code>Users</code>. На відміну від Windows, OSX не задає
          ім'я пристрою, де зберігається файл.</p>
        <em> </em>
        <h3>Windows</h3>
        <p>Під Windows файли та теки можуть бути продивлені з використанням
          Windows Explorer (достпний через “My Computer” або win+e):</p>
        <p><img class="block" src="./1_files/10000201000004B0000003B4415431D2.png"></p>
        <h3>OSX</h3>
        <p>На OSX файли та теки можуть бути продивлені з використанням Finder
          (доступний через відповідну іконку – іконка обличчя на лівій панелі
          знизу):</p>
        <p><img class="block" src="./1_files/10000201000004B0000002A351BA6C59.png"></p>
        <h2 id="section2">Термінал</h2>
        <p>Більшість взаємодії, що ми маємо з комп'ютерами на сьогодні
          відбувається через графічний інтерфейс&nbsp;(GUIs). Ми використовуємо
          клавіатуру, миш та тачскрини для взаємодії з візуальними кнопками або
          іншими типами елементів управління, що відображуються на екрані.</p>
        <p>Це не завжди було так. Перед GUI ми мали термінал – простіший
          текстовий інтерфейс до комп'ютера, де замість маніпуляцій з кнопками
          на екрані ми віддаємо команди та отримуємо відповіді. Ми маємо розмову
          з комп'ютером.&nbsp;</p>
        <p>Та хоча може здаватись, що більшість комп'ютерного світу залишається
          за терміналами, як релікт давнини,&nbsp; правда полягає в тому, що
          термінал залишається фундаментальним користувацьким інтерфейсом, що
          використовується більшістю мов програмування на більшості комп'ютерів.
          Мова програмування Go не є виключенням, так що перед тим, як ми
          напишемо програму на Go, нам треба мати рудиментарне розуміння того,
          як робить термінал.</p>
        <h3>Windows</h3>
        <p>В Windows термінал (також відомий як командний рядок) може бути
          викликаний, натиснувши клавіши Віндовс + r (утримуйте клавішу Віндовс
          та нажміть r), введіть <code>cmd.exe</code> та нажміть ввод. Ви маєте
          побачити чорне вікно, що з'явиться на екрані, на кшталт такого:</p>
        <p><img class="block" src="./1_files/10000201000004B0000002474EAE2B1A.png"><br>
          По замовчанню командний рядок починається в вашому домашньому
          каталозі. (В моєму випадку це <code>C:\Users\caleb</code>). Ви
          віддаєте команди, набираючи іх, та нажимаючи ввод. Спробуйте ввести
          команду <code>dir</code>, що перелічує вміст каталогу. Ви маєте
          побачити щось на кшталт такого:</p>
        <pre>C:\Users\caleb&gt;dir
 Volume in drive C has no label.
 Volume Serial Number is B2F5-F125</pre>
        <p>За цім слідує перелік файлів та каталогів, що містяться в вашому
          домашньому каталозі. Ви можете змінити каталог з використанням
          команди&nbsp;<code>cd</code>. Наприклад, ви, напевне, маєте підкаталог
          з ім'ям&nbsp;<code>Desktop</code>. Ви можете побачити його вміст,
          ввевши&nbsp;<code>cd Desktop</code>, та потім <code>dir</code>. Щоб
          перейти назад до вашого домашнього каталогу, ви можете використати
          спеціальне ім'я каталогу&nbsp;<code>..</code> (дві крапки, одна за
          однією): <code>cd ..</code>. Одна крапка предаставляє поточний
          каталог (також відомий як робочий каталог), так що <code>cd .</code>
          нічого не робить. Є багато інших команд, що ви можете використати, але
          для початку вам цього має бути достатньо.&nbsp;</p>
        <h3>OSX</h3>
        <p>В OSX термінал може бути доступний, переходячи до Finder →
          Applications → Utilities → Terminal. Ви маєте побачити вікно на кшталт
          такого:</p>
        <p><img class="block" src="./1_files/10000201000004B0000002F094337FAB.png"><br>
          По замовчанню тармінал розпочинається в вашому домашньому каталозі. (В
          моєму випадку це <code>/Users/caleb</code>). Ви віддаєте команди,
          набираючи їх та нажимаючи ввод. Спробуйте ввести команду <code>ls</code>,
          що перелічує вміст каталогу. Ви повинні побачити щось подібне до
          наступного:</p>
        <pre>caleb-min:~ caleb$ ls
Desktop      Downloads      Movies     Pictures
Documents    Library        Music      Public</pre>
        <p>Це файли та теки, що містяться в вашому домашньому каталозі (в цьому
          разі файлів немає). Ви можете змінити каталог, використовуючи команду
          <code>cd</code>. Наприклад, ви, можливо маєте каталог з назвою <code>Desktop</code>.
          Ви можете передивитись його вміст, ввевши <code>cd Desktop</code>, та
          потім ввевши&nbsp;<code>ls</code>. Щоб повернутись до вашого
          домашнього каталогу, ви можете використати спеціальне ім'я каталогу <code>..</code>
          (дві крапки, одна за одною): <code>cd ..</code>.Одна крапка
          представляє поточний каталог (відомий як робочий каталог), так що <code>cd
            .</code> нічого не робить . Є значно більше команд, що ми можете
          використовувати, але вам цьго має бути досить для початку.&nbsp;</p>
        <h2 id="section3">Текстові редактори</h2>
        <p>Первинний інструмент, що використовують програмісти для написання
          коду, є текстовий редактор. Тестові редактори подібні до
          програм-текстових процесорів&nbsp; (Microsoft Word, Open Office, …),
          але не відміну від ціх програм, вони не виконують будь-якого
          форматування (немає товщини літер, нахилу, інше…). Замість цього вони
          оперують тільки з текстом. Обоє, OSX та Windows, мають текстові
          редактори, але вони дуже обмежені, та я рекомендую встановити
          кращий.&nbsp;</p>
        <p>Щоб спростити встановлення цього програмного забезпечення, інсталятор
          доступний на сайті книги: <a href="http://www.golang-book.com/" target="_blank">http://www.golang-book.com/</a>.
          Цей інсталятор буде встановлювати сюїту інструментів Go, встановить
          змінні оточення, та встановить текстовий редактор.</p>
        <h3>Windows</h3>
        <p>Для Windows інсталятор встановить текстовий редактор Scite. Ви можете
          відкрити його, переходячи Start → All Programs → Go → Scite. Ви маєте
          побачити щось подібне до наступного:</p>
        <p><img class="block" src="./1_files/10000201000004B00000038773C3C446.png"><br>
          Текстовий редактор містить велике текстове вікно, де ви можете вводити
          текст. Зліва від цієї області ви можете бачити номери рядків. Знизу
          вікна знаходиться рядок стану, що відображує інформацію щодо файлу, та
          вашого поточного розташування в ньому (прямо зараз вона сповіщає, що
          ми на позиції 1 в рядку 1, текст буде зазвичай вставлятись, та ми
          використовуємо нові рядки в стилі Windows).</p>
        <p>Ви можете відкрити файли, переходячи до File → Open та переглядаючи
          файли в пошуку потрібного. Файли можуть бути збережені, переходячи на
          File → Save або File → Save As.</p>
        <p>Коли ви працюєте з текстовим редактором, корисним може вивчити
          скорочені натискання клавіш. Меню містять скорочення зправа. Ось
          декілька найбільш загальні:</p>
        <ul>
          <li>
            <p>Ctrl + S – зберегти поточний файл</p>
          </li>
          <li>
            <p>Ctrl + X – вирізати поточне виділення тексту (видалити його, та
              покласти його в буфер обміну для подальшого вставлення)</p>
          </li>
          <li>
            <p>Ctrl + C – копіювати поточне виділення тексту</p>
          </li>
          <li>
            <p>Ctrl + V – вставити текст з буферу обміну</p>
          </li>
          <li>
            <p>Використовуйте клавіши стрілок для навігації, Home для переходу
              на початок рядка, та End для переходу на кінець рядка</p>
          </li>
          <li>
            <p>Утримуйте шифт при натисканні стрілок (або Home та End) для
              вибору тексту без використання миші</p>
          </li>
          <li>
            <p>Ctrl + F – викликає диалог пошуку в файлі, що можна використати
              для пошуку частини рядка</p>
          </li>
        </ul>
        <h3>OSX</h3>
        <p>Для OSX інсталятор встановить текстовий редактор Text Wrangler:</p>
        <p><img class="block" src="./1_files/10000201000004B000000447FA964939.png"></p>
        <p>Подібно до Scite на Windows, Text Wrangler містить велике біле вікно,
          де має вводитись текст. Файли можуть бути відкриті, переходячи до File
          → Open. Файли можна зберігти, переходячи до File → Save або File →
          Save As. Ось деякі корисні скорочення клавіш: (Command це клавіша з
          символом ⌘)</p>
        <ul>
          <li>
            <p>Command + S – зберігти поточний файл</p>
          </li>
          <li>
            <p>Command + X – вирізати поточне виділення тексту (видалити його,
              та покласти в буфер обміну, так що його потім можна вставити)</p>
          </li>
          <li>
            <p>Command + C – копіювати поточний виділений текст</p>
          </li>
          <li>
            <p>Command + V – вставити текст з буферу обміну</p>
          </li>
          <li>
            <p>Використовуйте клавіши стрілок для навігації</p>
          </li>
          <li>
            <p>Command + F – відкриває диалог пошуку, що можна використати для
              пошуку вмісту в файлі</p>
          </li>
        </ul>
        <h2 id="section4">Інструменти Go</h2>
        <p>Go є компільованою мовою програмування, що означає, що первинний код
          (код, що ви пишете) транслюється в мову, яку може розуміти ваш
          комп'ютер. Таким чином ви хочете написати програму на Go, вам потрібен
          компілятор Go.</p>
        <p>Інсталятор встановить Go автоматично. Ми будемо використовувати
          версію 1 цієї мови. (Більше інформації можна знайти за адресою <a href="http://www.golang.org/"
            target="_blank">http://www.golang.org</a>)</p>
        <p>Давайте перевіримо щ все працює. Відкрийте термінал та наберіть таке:</p>
        <pre>go version</pre>
        <p>Ви маєте побачити наступне:</p>
        <pre>go version go1.0.2</pre>
        <p>Ваш номер версії може бути трохи іншим. Якщо ви отримаєте помилку
          щодо того, що команде не зрозуміла, спробуйте перезавантажити ваш
          комп'ютер.</p>
        <p>Сюїта інструментів Go складається з декількох команд та суб-команд.
          Список ціх команд доступний, коли набрати :</p>
        <pre>go help</pre>
        <p>Ми побачимо, як вони використовуються, в наступних главах.</p>
        <table class="paging">
          <tbody>
            <tr>
              <td class="prev"><br>
              </td>
              <td><a href="http://www.golang-book.com/">Index</a></td>
              <td class="next"><a href="http://www.golang-book.com/2">Next →</a></td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </body>
</html>
